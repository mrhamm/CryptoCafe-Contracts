{
  "abi": [
    {
      "inputs": [],
      "name": "depositFunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "takeAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/CafeEscrow.sol"
  },
  "ast": {
    "absolutePath": "contracts/CafeEscrow.sol",
    "exportedSymbols": {
      "CafeEscrow": [
        62
      ]
    },
    "id": 63,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 62,
        "linearizedBaseContracts": [
          62
        ],
        "name": "CafeEscrow",
        "nameLocation": "34:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "withdrawals",
            "nameLocation": "79:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 62,
            "src": "51:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 4,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "61:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "51:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "72:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "150:110:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "163:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "163:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "174:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "163:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 19,
                    "nodeType": "Block",
                    "src": "217:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 17,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "238:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 9,
                        "id": 18,
                        "nodeType": "Return",
                        "src": "231:12:0"
                      }
                    ]
                  },
                  "id": 20,
                  "nodeType": "IfStatement",
                  "src": "160:94:0",
                  "trueBody": {
                    "id": 16,
                    "nodeType": "Block",
                    "src": "176:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 14,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "197:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 9,
                        "id": 15,
                        "nodeType": "Return",
                        "src": "190:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "e2c41dbc",
            "id": 22,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositFunds",
            "nameLocation": "107:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "119:2:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "145:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "145:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "144:6:0"
            },
            "scope": 62,
            "src": "98:162:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "311:262:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 28,
                            "name": "withdrawals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "329:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 31,
                          "indexExpression": {
                            "expression": {
                              "id": 29,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "341:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 30,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "341:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "329:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "354:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "329:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792c20796f7520616c7265616479207765726520676976656e20616e20616c6c6f77616e6365",
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "360:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e03566b077f4bcb3c6e2ed725d5ad706542a225b1174aee91ca0c0d2a815fd3",
                          "typeString": "literal_string \"Sorry, you already were given an allowance\""
                        },
                        "value": "Sorry, you already were given an allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e03566b077f4bcb3c6e2ed725d5ad706542a225b1174aee91ca0c0d2a815fd3",
                          "typeString": "literal_string \"Sorry, you already were given an allowance\""
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "321:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "321:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "321:84:0"
                },
                {
                  "assignments": [
                    38
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38,
                      "mutability": "mutable",
                      "name": "Address",
                      "nameLocation": "431:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 60,
                      "src": "415:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 37,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "415:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "449:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "449:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "441:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 39,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "441:8:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "441:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "415:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "323030303030303030303030303030303030",
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "487:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "200000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "470:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "470:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "470:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "470:36:0"
                },
                {
                  "expression": {
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 51,
                        "name": "withdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "516:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 54,
                      "indexExpression": {
                        "expression": {
                          "id": 52,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "528:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "528:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "516:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "541:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "516:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "516:29:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "562:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 26,
                  "id": 59,
                  "nodeType": "Return",
                  "src": "555:11:0"
                }
              ]
            },
            "functionSelector": "41ad7a91",
            "id": 61,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "takeAllowance",
            "nameLocation": "275:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "288:2:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "306:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "305:6:0"
            },
            "scope": 62,
            "src": "266:307:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 63,
        "src": "25:556:0"
      }
    ],
    "src": "0:581:0"
  },
  "bytecode": "608060405234801561001057600080fd5b5061017b806100206000396000f3fe6080604052600436106100295760003560e01c806341ad7a911461002e578063e2c41dbc14610057575b600080fd5b34801561003a57600080fd5b5061004361005f565b604051901515815260200160405180910390f35b61004361012d565b3360009081526020819052604081205460ff16156100d65760405162461bcd60e51b815260206004820152602a60248201527f536f7272792c20796f7520616c7265616479207765726520676976656e20616e60448201526920616c6c6f77616e636560b01b606482015260840160405180910390fd5b604051339081906000906702c68af0bb1400009082818181858883f19350505050158015610108573d6000803e3d6000fd5b5050336000908152602081905260409020805460ff1916600190811790915590505b90565b6000341561013d5750600161012a565b50600061012a56fea2646970667358221220e6129c69233582803252b90ac2048035eda301fc352a14c66fe5b9566e92197764736f6c63430008030033",
  "bytecodeSha1": "b90654e6d616d639d764319a524f4bcbd38bfdff",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "CafeEscrow",
  "coverageMap": {
    "branches": {
      "0": {
        "CafeEscrow.depositFunds": {
          "6": [
            163,
            175,
            false
          ]
        },
        "CafeEscrow.takeAllowance": {
          "5": [
            329,
            359,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "CafeEscrow.depositFunds": {
          "3": [
            190,
            201
          ],
          "4": [
            231,
            243
          ]
        },
        "CafeEscrow.takeAllowance": {
          "0": [
            321,
            405
          ],
          "1": [
            470,
            506
          ],
          "2": [
            516,
            545
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100295760003560e01c806341ad7a911461002e578063e2c41dbc14610057575b600080fd5b34801561003a57600080fd5b5061004361005f565b604051901515815260200160405180910390f35b61004361012d565b3360009081526020819052604081205460ff16156100d65760405162461bcd60e51b815260206004820152602a60248201527f536f7272792c20796f7520616c7265616479207765726520676976656e20616e60448201526920616c6c6f77616e636560b01b606482015260840160405180910390fd5b604051339081906000906702c68af0bb1400009082818181858883f19350505050158015610108573d6000803e3d6000fd5b5050336000908152602081905260409020805460ff1916600190811790915590505b90565b6000341561013d5750600161012a565b50600061012a56fea2646970667358221220e6129c69233582803252b90ac2048035eda301fc352a14c66fe5b9566e92197764736f6c63430008030033",
  "deployedSourceMap": "25:556:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;266:307;;;;;;;;;;;;;:::i;:::-;;;179:14:1;;172:22;154:41;;142:2;127:18;266:307:0;;;;;;;98:162;;;:::i;266:307::-;341:10;306:4;329:23;;;;;;;;;;;;;:30;321:84;;;;-1:-1:-1;;;321:84:0;;408:2:1;321:84:0;;;390:21:1;447:2;427:18;;;420:30;486:34;466:18;;;459:62;-1:-1:-1;;;537:18:1;;;530:40;587:19;;321:84:0;;;;;;;;470:36;;449:10;;;;415:23;;487:18;;415:23;470:36;415:23;470:36;487:18;449:10;415:23;470:36;;;;;;;;;;;;;;;;;;;-1:-1:-1;;528:10:0;516:11;:23;;;;;;;;;;:29;;-1:-1:-1;;516:29:0;541:4;516:29;;;;;;541:4;-1:-1:-1;266:307:0;;:::o;98:162::-;145:4;163:9;:12;160:94;;-1:-1:-1;197:4:0;190:11;;160:94;-1:-1:-1;238:5:0;231:12;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    25,
    581
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41AD7A91 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xE2C41DBC EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43 PUSH2 0x5F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43 PUSH2 0x12D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792C20796F7520616C7265616479207765726520676976656E20616E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x20616C6C6F77616E6365 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0x2C68AF0BB140000 SWAP1 DUP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP4 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x108 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLVALUE ISZERO PUSH2 0x13D JUMPI POP PUSH1 0x1 PUSH2 0x12A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x12A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 SLT SWAP13 PUSH10 0x233582803252B90AC204 DUP1 CALLDATALOAD 0xED LOG3 ADD 0xFC CALLDATALOAD 0x2A EQ 0xC6 PUSH16 0xE5B9566E92197764736F6C6343000803 STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        25,
        581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29"
    },
    "12": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x41AD7A91"
    },
    "25": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E"
    },
    "29": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE2C41DBC"
    },
    "36": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57"
    },
    "40": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "44": {
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "DUP1",
      "path": "0"
    },
    "45": {
      "first_revert": true,
      "fn": null,
      "offset": [
        25,
        581
      ],
      "op": "REVERT",
      "path": "0"
    },
    "46": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "47": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "48": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "DUP1",
      "path": "0"
    },
    "49": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "50": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A"
    },
    "53": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "56": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "DUP1",
      "path": "0"
    },
    "57": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "REVERT",
      "path": "0"
    },
    "58": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "59": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "POP",
      "path": "0"
    },
    "60": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43"
    },
    "63": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F"
    },
    "66": {
      "fn": "CafeEscrow.takeAllowance",
      "jump": "i",
      "offset": [
        266,
        573
      ],
      "op": "JUMP",
      "path": "0"
    },
    "67": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "68": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "70": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "71": {
      "op": "SWAP1"
    },
    "72": {
      "op": "ISZERO"
    },
    "73": {
      "op": "ISZERO"
    },
    "74": {
      "op": "DUP2"
    },
    "75": {
      "op": "MSTORE"
    },
    "76": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "78": {
      "op": "ADD"
    },
    "79": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "81": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "82": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "DUP1",
      "path": "0"
    },
    "83": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "84": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "SUB",
      "path": "0"
    },
    "85": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "86": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "RETURN",
      "path": "0"
    },
    "87": {
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        98,
        260
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "88": {
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        98,
        260
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43"
    },
    "91": {
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        98,
        260
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D"
    },
    "94": {
      "fn": "CafeEscrow.depositFunds",
      "jump": "i",
      "offset": [
        98,
        260
      ],
      "op": "JUMP",
      "path": "0"
    },
    "95": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "96": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        341,
        351
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "97": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        306,
        310
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "99": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        329,
        352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "100": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        329,
        352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "101": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        329,
        352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "102": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        329,
        352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "104": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        329,
        352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "105": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        329,
        352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "106": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        329,
        352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "107": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        329,
        352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "109": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        329,
        352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "110": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        329,
        352
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "111": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        329,
        352
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "112": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        329,
        352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "114": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        329,
        352
      ],
      "op": "AND",
      "path": "0"
    },
    "115": {
      "branch": 5,
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        329,
        359
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "116": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6"
    },
    "119": {
      "branch": 5,
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "120": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "122": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "123": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "127": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "129": {
      "op": "SHL"
    },
    "130": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "DUP2",
      "path": "0"
    },
    "131": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "134": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "136": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "DUP3",
      "path": "0"
    },
    "137": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "ADD",
      "path": "0"
    },
    "138": {
      "op": "MSTORE"
    },
    "139": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "141": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "143": {
      "op": "DUP3"
    },
    "144": {
      "op": "ADD"
    },
    "145": {
      "op": "MSTORE"
    },
    "146": {
      "op": "PUSH32",
      "value": "0x536F7272792C20796F7520616C7265616479207765726520676976656E20616E"
    },
    "179": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "181": {
      "op": "DUP3"
    },
    "182": {
      "op": "ADD"
    },
    "183": {
      "op": "MSTORE"
    },
    "184": {
      "op": "PUSH10",
      "value": "0x20616C6C6F77616E6365"
    },
    "195": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "197": {
      "op": "SHL"
    },
    "198": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "200": {
      "op": "DUP3"
    },
    "201": {
      "op": "ADD"
    },
    "202": {
      "op": "MSTORE"
    },
    "203": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "205": {
      "op": "ADD"
    },
    "206": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "208": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "209": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "DUP1",
      "path": "0"
    },
    "210": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "211": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "SUB",
      "path": "0"
    },
    "212": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "213": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "214": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        321,
        405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "215": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x40"
    },
    "217": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "218": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        449,
        459
      ],
      "op": "CALLER",
      "path": "0"
    },
    "219": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        449,
        459
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "220": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        449,
        459
      ],
      "op": "DUP2",
      "path": "0"
    },
    "221": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        449,
        459
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "222": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        415,
        438
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "224": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        415,
        438
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "225": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        487,
        505
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0x2C68AF0BB140000"
    },
    "234": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        487,
        505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "235": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        415,
        438
      ],
      "op": "DUP3",
      "path": "0"
    },
    "236": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "237": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        415,
        438
      ],
      "op": "DUP2",
      "path": "0"
    },
    "238": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "239": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        487,
        505
      ],
      "op": "DUP6",
      "path": "0"
    },
    "240": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        449,
        459
      ],
      "op": "DUP9",
      "path": "0"
    },
    "241": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        415,
        438
      ],
      "op": "DUP4",
      "path": "0"
    },
    "242": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "CALL",
      "path": "0"
    },
    "243": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "244": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "POP",
      "path": "0"
    },
    "245": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "POP",
      "path": "0"
    },
    "246": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "POP",
      "path": "0"
    },
    "247": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "POP",
      "path": "0"
    },
    "248": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "249": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "DUP1",
      "path": "0"
    },
    "250": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "251": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108"
    },
    "254": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "255": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "256": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "258": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "DUP1",
      "path": "0"
    },
    "259": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "260": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "261": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "263": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "REVERT",
      "path": "0"
    },
    "264": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        470,
        506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "265": {
      "op": "POP"
    },
    "266": {
      "op": "POP"
    },
    "267": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        528,
        538
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 2
    },
    "268": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "270": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        539
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "271": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        539
      ],
      "op": "DUP2",
      "path": "0"
    },
    "272": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        539
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "273": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        539
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "275": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        539
      ],
      "op": "DUP2",
      "path": "0"
    },
    "276": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        539
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "277": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        539
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "278": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        539
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "280": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        539
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "281": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        539
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "282": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        545
      ],
      "op": "DUP1",
      "path": "0"
    },
    "283": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        545
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "284": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "286": {
      "op": "NOT"
    },
    "287": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        545
      ],
      "op": "AND",
      "path": "0"
    },
    "288": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        541,
        545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "290": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        545
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "291": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        545
      ],
      "op": "DUP2",
      "path": "0"
    },
    "292": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        545
      ],
      "op": "OR",
      "path": "0"
    },
    "293": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        545
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "294": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        545
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "295": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        516,
        545
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "296": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        541,
        545
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "297": {
      "op": "POP"
    },
    "298": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "299": {
      "fn": "CafeEscrow.takeAllowance",
      "offset": [
        266,
        573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "300": {
      "fn": "CafeEscrow.takeAllowance",
      "jump": "o",
      "offset": [
        266,
        573
      ],
      "op": "JUMP",
      "path": "0"
    },
    "301": {
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        98,
        260
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "302": {
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        145,
        149
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "304": {
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        163,
        172
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "305": {
      "branch": 6,
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        163,
        175
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "306": {
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        160,
        254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D"
    },
    "309": {
      "branch": 6,
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        160,
        254
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "310": {
      "op": "POP"
    },
    "311": {
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        197,
        201
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "313": {
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        190,
        201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A"
    },
    "316": {
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        190,
        201
      ],
      "op": "JUMP",
      "path": "0"
    },
    "317": {
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        160,
        254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "318": {
      "op": "POP"
    },
    "319": {
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        238,
        243
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "321": {
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        231,
        243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A"
    },
    "324": {
      "fn": "CafeEscrow.depositFunds",
      "offset": [
        231,
        243
      ],
      "op": "JUMP",
      "path": "0"
    }
  },
  "sha1": "c83fb3e699756b52f84c788c1c60fd924ac7b9bb",
  "source": "pragma solidity ^0.8.0;\n\ncontract CafeEscrow{\n\n    mapping ( address => bool ) withdrawals;\n\n\n    function depositFunds() public payable returns(bool){\n        if(msg.value!=0){\n            return true;\n        } else{\n            return false;\n        }\n    }\n\n    function takeAllowance() public returns(bool){\n        require(withdrawals[msg.sender]==false,'Sorry, you already were given an allowance');\n        address payable Address = payable(msg.sender);\n        Address.transfer(200000000000000000);\n        withdrawals[msg.sender]= true;\n        return true;\n    }\n\n    \n}",
  "sourceMap": "25:556:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CafeEscrow.sol",
  "type": "contract"
}