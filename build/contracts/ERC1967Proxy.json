{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "119": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
    "70": "contracts/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
    "71": "contracts/openzeppelin-contracts/contracts/proxy/Proxy.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
    "exportedSymbols": {
      "Address": [
        14906
      ],
      "ERC1967Proxy": [
        7231
      ],
      "Proxy": [
        7283
      ]
    },
    "id": 7232,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7126,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:70"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "file": "../Proxy.sol",
        "id": 7127,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7232,
        "sourceUnit": 7284,
        "src": "58:22:70",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 7128,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7232,
        "sourceUnit": 14907,
        "src": "81:33:70",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7130,
              "name": "Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7283,
              "src": "659:5:70"
            },
            "id": 7131,
            "nodeType": "InheritanceSpecifier",
            "src": "659:5:70"
          }
        ],
        "contractDependencies": [
          7283
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7129,
          "nodeType": "StructuredDocumentation",
          "src": "116:517:70",
          "text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy.\n Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\n {TransparentUpgradeableProxy}."
        },
        "fullyImplemented": true,
        "id": 7231,
        "linearizedBaseContracts": [
          7231,
          7283
        ],
        "name": "ERC1967Proxy",
        "nameLocation": "643:12:70",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7172,
              "nodeType": "Block",
              "src": "1067:246:70",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 7152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7140,
                          "name": "_IMPLEMENTATION_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7182,
                          "src": "1084:20:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
                                        "id": 7146,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1134:30:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        },
                                        "value": "eip1967.proxy.implementation"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        }
                                      ],
                                      "id": 7145,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "1124:9:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 7147,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1124:41:70",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 7144,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1116:7:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 7143,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1116:7:70",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1116:50:70",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 7149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1169:1:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1116:54:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1108:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 7141,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1108:7:70",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1108:63:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1084:87:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7139,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1077:6:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1077:95:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7154,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:95:70"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7156,
                        "name": "_logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7134,
                        "src": "1201:6:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7155,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7230,
                      "src": "1182:18:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1182:26:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7158,
                  "nodeType": "ExpressionStatement",
                  "src": "1182:26:70"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 7159,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7136,
                        "src": "1221:5:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1221:12:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1236:1:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1221:16:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7171,
                  "nodeType": "IfStatement",
                  "src": "1218:89:70",
                  "trueBody": {
                    "id": 7170,
                    "nodeType": "Block",
                    "src": "1239:68:70",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7166,
                              "name": "_logic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7134,
                              "src": "1282:6:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7167,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7136,
                              "src": "1290:5:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 7163,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14906,
                              "src": "1253:7:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$14906_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 7165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "functionDelegateCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14840,
                            "src": "1253:28:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) returns (bytes memory)"
                            }
                          },
                          "id": 7168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1253:43:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 7169,
                        "nodeType": "ExpressionStatement",
                        "src": "1253:43:70"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7132,
              "nodeType": "StructuredDocumentation",
              "src": "671:335:70",
              "text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializating the storage of the proxy like a Solidity constructor."
            },
            "id": 7173,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7134,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "1031:6:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 7173,
                  "src": "1023:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7136,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1052:5:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 7173,
                  "src": "1039:18:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7135,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1022:36:70"
            },
            "returnParameters": {
              "id": 7138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:70"
            },
            "scope": 7231,
            "src": "1011:302:70",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7174,
              "nodeType": "StructuredDocumentation",
              "src": "1319:68:70",
              "text": " @dev Emitted when the implementation is upgraded."
            },
            "id": 7178,
            "name": "Upgraded",
            "nameLocation": "1398:8:70",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7176,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "1423:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 7178,
                  "src": "1407:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1406:32:70"
            },
            "src": "1392:47:70"
          },
          {
            "constant": true,
            "documentation": {
              "id": 7179,
              "nodeType": "StructuredDocumentation",
              "src": "1445:214:70",
              "text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
            },
            "id": 7182,
            "mutability": "constant",
            "name": "_IMPLEMENTATION_SLOT",
            "nameLocation": "1689:20:70",
            "nodeType": "VariableDeclaration",
            "scope": 7231,
            "src": "1664:114:70",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 7180,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1664:7:70",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
              "id": 7181,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1712:66:70",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
                "typeString": "int_const 2444...(69 digits omitted)...5612"
              },
              "value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              7248
            ],
            "body": {
              "id": 7194,
              "nodeType": "Block",
              "src": "1938:169:70",
              "statements": [
                {
                  "assignments": [
                    7190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7190,
                      "mutability": "mutable",
                      "name": "slot",
                      "nameLocation": "1956:4:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 7194,
                      "src": "1948:12:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7189,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1948:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7192,
                  "initialValue": {
                    "id": 7191,
                    "name": "_IMPLEMENTATION_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7182,
                    "src": "1963:20:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1948:35:70"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2058:43:70",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2072:19:70",
                        "value": {
                          "arguments": [
                            {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "2086:4:70"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "2080:5:70"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2080:11:70"
                        },
                        "variableNames": [
                          {
                            "name": "impl",
                            "nodeType": "YulIdentifier",
                            "src": "2072:4:70"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 7187,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2072:4:70",
                      "valueSize": 1
                    },
                    {
                      "declaration": 7190,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2086:4:70",
                      "valueSize": 1
                    }
                  ],
                  "id": 7193,
                  "nodeType": "InlineAssembly",
                  "src": "2049:52:70"
                }
              ]
            },
            "documentation": {
              "id": 7183,
              "nodeType": "StructuredDocumentation",
              "src": "1785:67:70",
              "text": " @dev Returns the current implementation address."
            },
            "id": 7195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1866:15:70",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7185,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1906:8:70"
            },
            "parameters": {
              "id": 7184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1881:2:70"
            },
            "returnParameters": {
              "id": 7188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7187,
                  "mutability": "mutable",
                  "name": "impl",
                  "nameLocation": "1932:4:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 7195,
                  "src": "1924:12:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1924:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1923:14:70"
            },
            "scope": 7231,
            "src": "1857:250:70",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7209,
              "nodeType": "Block",
              "src": "2290:96:70",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7202,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7198,
                        "src": "2319:17:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7201,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7230,
                      "src": "2300:18:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2300:37:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7204,
                  "nodeType": "ExpressionStatement",
                  "src": "2300:37:70"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7206,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7198,
                        "src": "2361:17:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7205,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7178,
                      "src": "2352:8:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2352:27:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7208,
                  "nodeType": "EmitStatement",
                  "src": "2347:32:70"
                }
              ]
            },
            "documentation": {
              "id": 7196,
              "nodeType": "StructuredDocumentation",
              "src": "2113:108:70",
              "text": " @dev Upgrades the proxy to a new implementation.\n Emits an {Upgraded} event."
            },
            "id": 7210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_upgradeTo",
            "nameLocation": "2235:10:70",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7198,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "2254:17:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 7210,
                  "src": "2246:25:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2246:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2245:27:70"
            },
            "returnParameters": {
              "id": 7200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2290:0:70"
            },
            "scope": 7231,
            "src": "2226:160:70",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7229,
              "nodeType": "Block",
              "src": "2540:293:70",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7219,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7213,
                            "src": "2577:17:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7217,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14906,
                            "src": "2558:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$14906_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 7218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14630,
                          "src": "2558:18:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 7220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2558:37:70",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433139363750726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                        "id": 7221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2597:52:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0127e2e95465d1d260cbd8407114f4e54c32ab4aabaa34b2f160b8f5c528b108",
                          "typeString": "literal_string \"ERC1967Proxy: new implementation is not a contract\""
                        },
                        "value": "ERC1967Proxy: new implementation is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0127e2e95465d1d260cbd8407114f4e54c32ab4aabaa34b2f160b8f5c528b108",
                          "typeString": "literal_string \"ERC1967Proxy: new implementation is not a contract\""
                        }
                      ],
                      "id": 7216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2550:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2550:100:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7223,
                  "nodeType": "ExpressionStatement",
                  "src": "2550:100:70"
                },
                {
                  "assignments": [
                    7225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7225,
                      "mutability": "mutable",
                      "name": "slot",
                      "nameLocation": "2669:4:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 7229,
                      "src": "2661:12:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7224,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2661:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7227,
                  "initialValue": {
                    "id": 7226,
                    "name": "_IMPLEMENTATION_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7182,
                    "src": "2676:20:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2661:35:70"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2772:55:70",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "2793:4:70"
                            },
                            {
                              "name": "newImplementation",
                              "nodeType": "YulIdentifier",
                              "src": "2799:17:70"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "2786:6:70"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2786:31:70"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2786:31:70"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 7213,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2799:17:70",
                      "valueSize": 1
                    },
                    {
                      "declaration": 7225,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2793:4:70",
                      "valueSize": 1
                    }
                  ],
                  "id": 7228,
                  "nodeType": "InlineAssembly",
                  "src": "2763:64:70"
                }
              ]
            },
            "documentation": {
              "id": 7211,
              "nodeType": "StructuredDocumentation",
              "src": "2392:80:70",
              "text": " @dev Stores a new address in the EIP1967 implementation slot."
            },
            "id": 7230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setImplementation",
            "nameLocation": "2486:18:70",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7213,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "2513:17:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 7230,
                  "src": "2505:25:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2505:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2504:27:70"
            },
            "returnParameters": {
              "id": 7215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2540:0:70"
            },
            "scope": 7231,
            "src": "2477:356:70",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 7232,
        "src": "634:2201:70"
      }
    ],
    "src": "33:2803:70"
  },
  "bytecode": "60806040526040516106d93803806106d983398101604081905261002291610275565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd61038d565b6000805160206106928339815191521461007757634e487b7160e01b600052600160045260246000fd5b610080826100a4565b80511561009d5761009b828261013560201b6100491760201c565b505b50506103f6565b6100b78161016160201b6100751760201c565b6101235760405162461bcd60e51b815260206004820152603260248201527f4552433139363750726f78793a206e657720696d706c656d656e746174696f6e604482015271081a5cc81b9bdd08184818dbdb9d1c9858dd60721b60648201526084015b60405180910390fd5b60008051602061069283398151915255565b606061015a83836040518060600160405280602781526020016106b260279139610167565b9392505050565b3b151590565b6060833b6101c65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161011a565b600080856001600160a01b0316856040516101e1919061033e565b600060405180830381855af49150503d806000811461021c576040519150601f19603f3d011682016040523d82523d6000602084013e610221565b606091505b50909250905061023282828661023c565b9695505050505050565b6060831561024b57508161015a565b82511561025b5782518084602001fd5b8160405162461bcd60e51b815260040161011a919061035a565b60008060408385031215610287578182fd5b82516001600160a01b038116811461029d578283fd5b60208401519092506001600160401b03808211156102b9578283fd5b818501915085601f8301126102cc578283fd5b8151818111156102de576102de6103e0565b604051601f8201601f19908116603f01168101908382118183101715610306576103066103e0565b8160405282815288602084870101111561031e578586fd5b61032f8360208301602088016103b0565b80955050505050509250929050565b600082516103508184602087016103b0565b9190910192915050565b60006020825282518060208401526103798160408501602087016103b0565b601f01601f19169190910160400192915050565b6000828210156103ab57634e487b7160e01b81526011600452602481fd5b500390565b60005b838110156103cb5781810151838201526020016103b3565b838111156103da576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b61028d806104056000396000f3fe60806040523661001357610011610017565b005b6100115b6100476100427f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b61007b565b565b606061006e83836040518060600160405280602781526020016102316027913961009f565b9392505050565b3b151590565b3660008037600080366000845af43d6000803e80801561009a573d6000f35b3d6000fd5b6060833b6101035760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161011e91906101b1565b600060405180830381855af49150503d8060008114610159576040519150601f19603f3d011682016040523d82523d6000602084013e61015e565b606091505b509150915061016e828286610178565b9695505050505050565b6060831561018757508161006e565b8251156101975782518084602001fd5b8160405162461bcd60e51b81526004016100fa91906101cd565b600082516101c3818460208701610200565b9190910192915050565b60006020825282518060208401526101ec816040850160208701610200565b601f01601f19169190910160400192915050565b60005b8381101561021b578181015183820152602001610203565b8381111561022a576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122000b234cf70b5c2227162178da4fda601319a1f0e714638b10388aadb0f50cc5664736f6c63430008030033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "ERC1967Proxy",
  "coverageMap": {
    "branches": {
      "119": {
        "Address._verifyCallResult": {
          "9": [
            7226,
            7233,
            false
          ],
          "10": [
            7367,
            7388,
            false
          ]
        }
      },
      "70": {},
      "71": {}
    },
    "statements": {
      "119": {
        "Address._verifyCallResult": {
          "7": [
            7249,
            7266
          ],
          "8": [
            7757,
            7777
          ]
        },
        "Address.functionDelegateCall": {
          "3": [
            6383,
            6467
          ],
          "5": [
            6795,
            6864
          ],
          "6": [
            7011,
            7070
          ]
        },
        "Address.isContract": {
          "4": [
            1109,
            1124
          ]
        }
      },
      "70": {},
      "71": {
        "Proxy.<fallback>": {
          "1": [
            2611,
            2622
          ]
        },
        "Proxy.<receive>": {
          "0": [
            2835,
            2846
          ]
        },
        "Proxy._fallback": {
          "2": [
            2332,
            2360
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Proxy"
  ],
  "deployedBytecode": "60806040523661001357610011610017565b005b6100115b6100476100427f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b61007b565b565b606061006e83836040518060600160405280602781526020016102316027913961009f565b9392505050565b3b151590565b3660008037600080366000845af43d6000803e80801561009a573d6000f35b3d6000fd5b6060833b6101035760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161011e91906101b1565b600060405180830381855af49150503d8060008114610159576040519150601f19603f3d011682016040523d82523d6000602084013e61015e565b606091505b509150915061016e828286610178565b9695505050505050565b6060831561018757508161006e565b8251156101975782518084602001fd5b8160405162461bcd60e51b81526004016100fa91906101cd565b600082516101c3818460208701610200565b9190910192915050565b60006020825282518060208401526101ec816040850160208701610200565b601f01601f19169190910160400192915050565b60005b8381101561021b578181015183820152602001610203565b8381111561022a576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122000b234cf70b5c2227162178da4fda601319a1f0e714638b10388aadb0f50cc5664736f6c63430008030033",
  "deployedSourceMap": "634:2201:70:-:0;;;;;;2835:11:71;:9;:11::i;:::-;634:2201:70;;2611:11:71;2257:110;2332:28;2342:17;1712:66:70;2080:11;;2058:43;2342:17:71;2332:9;:28::i;:::-;2257:110::o;6276:198:119:-;6359:12;6390:77;6411:6;6419:4;6390:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6383:84;6276:198;-1:-1:-1;;;6276:198:119:o;718:413::-;1078:20;1116:8;;;718:413::o;883:895:71:-;1277:14;1274:1;1271;1258:34;1491:1;1488;1472:14;1469:1;1453:14;1446:5;1433:60;1567:16;1564:1;1561;1546:38;1605:6;1672:38;;;;1743:16;1740:1;1733:27;1672:38;1691:16;1688:1;1681:27;6660:417:119;6771:12;1078:20;;6795:69;;;;-1:-1:-1;;;6795:69:119;;883:2:144;6795:69:119;;;865:21:144;922:2;902:18;;;895:30;961:34;941:18;;;934:62;-1:-1:-1;;;1012:18:144;;;1005:36;1058:19;;6795:69:119;;;;;;;;;6935:12;6949:23;6976:6;-1:-1:-1;;;;;6976:19:119;6996:4;6976:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6934:67;;;;7018:52;7036:7;7045:10;7057:12;7018:17;:52::i;:::-;7011:59;6660:417;-1:-1:-1;;;;;;6660:417:119:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:119;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;-1:-1:-1;;;7757:20:119;;;;;;;;:::i;14:274:144:-;;181:6;175:13;197:53;243:6;238:3;231:4;223:6;219:17;197:53;:::i;:::-;266:16;;;;;151:137;-1:-1:-1;;151:137:144:o;293:383::-;;442:2;431:9;424:21;474:6;468:13;517:6;512:2;501:9;497:18;490:34;533:66;592:6;587:2;576:9;572:18;567:2;559:6;555:15;533:66;:::i;:::-;660:2;639:15;-1:-1:-1;;635:29:144;620:45;;;;667:2;616:54;;414:262;-1:-1:-1;;414:262:144:o;1088:258::-;1160:1;1170:113;1184:6;1181:1;1178:13;1170:113;;;1260:11;;;1254:18;1241:11;;;1234:39;1206:2;1199:10;1170:113;;;1301:6;1298:1;1295:13;1292:2;;;1336:1;1327:6;1322:3;1318:16;1311:27;1292:2;;1141:205;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy. Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see {TransparentUpgradeableProxy}.",
    "events": {
      "Upgraded(address)": {
        "details": "Emitted when the implementation is upgraded."
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor."
      }
    },
    "stateVariables": {
      "_IMPLEMENTATION_SLOT": {
        "details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
      }
    },
    "version": 1
  },
  "offset": [
    634,
    2835
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x47 PUSH2 0x42 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x231 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x9F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x9A JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP4 EXTCODESIZE PUSH2 0x103 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x159 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x16E DUP3 DUP3 DUP7 PUSH2 0x178 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x187 JUMPI POP DUP2 PUSH2 0x6E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x197 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1C3 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x200 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1EC DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x200 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x203 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122000B234 0xCF PUSH17 0xB5C2227162178DA4FDA601319A1F0E7146 CODESIZE 0xB1 SUB DUP9 0xAA 0xDB 0xF POP 0xCC JUMP PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        634,
        2835
      ],
      "op": "PUSH1",
      "path": "70",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        634,
        2835
      ],
      "op": "PUSH1",
      "path": "70",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        634,
        2835
      ],
      "op": "MSTORE",
      "path": "70"
    },
    "5": {
      "fn": null,
      "offset": [
        634,
        2835
      ],
      "op": "CALLDATASIZE",
      "path": "70"
    },
    "6": {
      "fn": null,
      "offset": [
        634,
        2835
      ],
      "op": "PUSH2",
      "path": "70",
      "value": "0x13"
    },
    "9": {
      "fn": null,
      "offset": [
        634,
        2835
      ],
      "op": "JUMPI",
      "path": "70"
    },
    "10": {
      "fn": "Proxy.<receive>",
      "offset": [
        2835,
        2846
      ],
      "op": "PUSH2",
      "path": "71",
      "statement": 0,
      "value": "0x11"
    },
    "13": {
      "fn": "Proxy.<receive>",
      "offset": [
        2835,
        2844
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x17"
    },
    "16": {
      "fn": "Proxy.<receive>",
      "jump": "i",
      "offset": [
        2835,
        2846
      ],
      "op": "JUMP",
      "path": "71"
    },
    "17": {
      "fn": "Proxy.<receive>",
      "offset": [
        2835,
        2846
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "18": {
      "offset": [
        634,
        2835
      ],
      "op": "STOP",
      "path": "70"
    },
    "19": {
      "fn": "Proxy.<receive>",
      "offset": [
        634,
        2835
      ],
      "op": "JUMPDEST",
      "path": "70"
    },
    "20": {
      "fn": "Proxy.<fallback>",
      "offset": [
        2611,
        2622
      ],
      "op": "PUSH2",
      "path": "71",
      "statement": 1,
      "value": "0x11"
    },
    "23": {
      "fn": "Proxy._fallback",
      "offset": [
        2257,
        2367
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "24": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2360
      ],
      "op": "PUSH2",
      "path": "71",
      "statement": 2,
      "value": "0x47"
    },
    "27": {
      "fn": "Proxy._fallback",
      "offset": [
        2342,
        2359
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x42"
    },
    "30": {
      "offset": [
        1712,
        1778
      ],
      "op": "PUSH32",
      "path": "70",
      "value": "0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
    },
    "63": {
      "fn": "ERC1967Proxy._implementation",
      "offset": [
        2080,
        2091
      ],
      "op": "SLOAD",
      "path": "70"
    },
    "64": {
      "fn": "ERC1967Proxy._implementation",
      "offset": [
        2080,
        2091
      ],
      "op": "SWAP1",
      "path": "70"
    },
    "65": {
      "fn": "ERC1967Proxy._implementation",
      "offset": [
        2058,
        2101
      ],
      "op": "JUMP",
      "path": "70"
    },
    "66": {
      "fn": "Proxy._fallback",
      "offset": [
        2342,
        2359
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "67": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2341
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x7B"
    },
    "70": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2332,
        2360
      ],
      "op": "JUMP",
      "path": "71"
    },
    "71": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2360
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "72": {
      "fn": "Proxy._fallback",
      "jump": "o",
      "offset": [
        2257,
        2367
      ],
      "op": "JUMP",
      "path": "71"
    },
    "73": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6276,
        6474
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "74": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6359,
        6371
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x60"
    },
    "76": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "PUSH2",
      "path": "119",
      "statement": 3,
      "value": "0x6E"
    },
    "79": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6411,
        6417
      ],
      "op": "DUP4",
      "path": "119"
    },
    "80": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6419,
        6423
      ],
      "op": "DUP4",
      "path": "119"
    },
    "81": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "83": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "84": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "DUP1",
      "path": "119"
    },
    "85": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x60"
    },
    "87": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "ADD",
      "path": "119"
    },
    "88": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "90": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "91": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "DUP1",
      "path": "119"
    },
    "92": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x27"
    },
    "94": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "DUP2",
      "path": "119"
    },
    "95": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "96": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x20"
    },
    "98": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "ADD",
      "path": "119"
    },
    "99": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x231"
    },
    "102": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x27"
    },
    "104": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "105": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "CODECOPY",
      "path": "119"
    },
    "106": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6410
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x9F"
    },
    "109": {
      "fn": "Address.functionDelegateCall",
      "jump": "i",
      "offset": [
        6390,
        6467
      ],
      "op": "JUMP",
      "path": "119"
    },
    "110": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6390,
        6467
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "111": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6383,
        6467
      ],
      "op": "SWAP4",
      "path": "119"
    },
    "112": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6276,
        6474
      ],
      "op": "SWAP3",
      "path": "119"
    },
    "113": {
      "op": "POP"
    },
    "114": {
      "op": "POP"
    },
    "115": {
      "op": "POP"
    },
    "116": {
      "fn": "Address.functionDelegateCall",
      "jump": "o",
      "offset": [
        6276,
        6474
      ],
      "op": "JUMP",
      "path": "119"
    },
    "117": {
      "fn": "Address.isContract",
      "offset": [
        718,
        1131
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "118": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "119"
    },
    "119": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "119",
      "statement": 4
    },
    "120": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "119"
    },
    "121": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "SWAP1",
      "path": "119"
    },
    "122": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        718,
        1131
      ],
      "op": "JUMP",
      "path": "119"
    },
    "123": {
      "fn": "Proxy._delegate",
      "offset": [
        883,
        1778
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "124": {
      "fn": "Proxy._delegate",
      "offset": [
        1277,
        1291
      ],
      "op": "CALLDATASIZE",
      "path": "71"
    },
    "125": {
      "fn": "Proxy._delegate",
      "offset": [
        1274,
        1275
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x0"
    },
    "127": {
      "fn": "Proxy._delegate",
      "offset": [
        1271,
        1272
      ],
      "op": "DUP1",
      "path": "71"
    },
    "128": {
      "fn": "Proxy._delegate",
      "offset": [
        1258,
        1292
      ],
      "op": "CALLDATACOPY",
      "path": "71"
    },
    "129": {
      "fn": "Proxy._delegate",
      "offset": [
        1491,
        1492
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x0"
    },
    "131": {
      "fn": "Proxy._delegate",
      "offset": [
        1488,
        1489
      ],
      "op": "DUP1",
      "path": "71"
    },
    "132": {
      "fn": "Proxy._delegate",
      "offset": [
        1472,
        1486
      ],
      "op": "CALLDATASIZE",
      "path": "71"
    },
    "133": {
      "fn": "Proxy._delegate",
      "offset": [
        1469,
        1470
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x0"
    },
    "135": {
      "fn": "Proxy._delegate",
      "offset": [
        1453,
        1467
      ],
      "op": "DUP5",
      "path": "71"
    },
    "136": {
      "fn": "Proxy._delegate",
      "offset": [
        1446,
        1451
      ],
      "op": "GAS",
      "path": "71"
    },
    "137": {
      "fn": "Proxy._delegate",
      "offset": [
        1433,
        1493
      ],
      "op": "DELEGATECALL",
      "path": "71"
    },
    "138": {
      "fn": "Proxy._delegate",
      "offset": [
        1567,
        1583
      ],
      "op": "RETURNDATASIZE",
      "path": "71"
    },
    "139": {
      "fn": "Proxy._delegate",
      "offset": [
        1564,
        1565
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x0"
    },
    "141": {
      "fn": "Proxy._delegate",
      "offset": [
        1561,
        1562
      ],
      "op": "DUP1",
      "path": "71"
    },
    "142": {
      "fn": "Proxy._delegate",
      "offset": [
        1546,
        1584
      ],
      "op": "RETURNDATACOPY",
      "path": "71"
    },
    "143": {
      "fn": "Proxy._delegate",
      "offset": [
        1605,
        1611
      ],
      "op": "DUP1",
      "path": "71"
    },
    "144": {
      "fn": "Proxy._delegate",
      "offset": [
        1672,
        1710
      ],
      "op": "DUP1",
      "path": "71"
    },
    "145": {
      "fn": "Proxy._delegate",
      "offset": [
        1672,
        1710
      ],
      "op": "ISZERO",
      "path": "71"
    },
    "146": {
      "fn": "Proxy._delegate",
      "offset": [
        1672,
        1710
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x9A"
    },
    "149": {
      "fn": "Proxy._delegate",
      "offset": [
        1672,
        1710
      ],
      "op": "JUMPI",
      "path": "71"
    },
    "150": {
      "fn": "Proxy._delegate",
      "offset": [
        1743,
        1759
      ],
      "op": "RETURNDATASIZE",
      "path": "71"
    },
    "151": {
      "fn": "Proxy._delegate",
      "offset": [
        1740,
        1741
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x0"
    },
    "153": {
      "fn": "Proxy._delegate",
      "offset": [
        1733,
        1760
      ],
      "op": "RETURN",
      "path": "71"
    },
    "154": {
      "fn": "Proxy._delegate",
      "offset": [
        1672,
        1710
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "155": {
      "fn": "Proxy._delegate",
      "offset": [
        1691,
        1707
      ],
      "op": "RETURNDATASIZE",
      "path": "71"
    },
    "156": {
      "fn": "Proxy._delegate",
      "offset": [
        1688,
        1689
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x0"
    },
    "158": {
      "fn": "Proxy._delegate",
      "offset": [
        1681,
        1708
      ],
      "op": "REVERT",
      "path": "71"
    },
    "159": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6660,
        7077
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "160": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6771,
        6783
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x60"
    },
    "162": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "DUP4",
      "path": "119"
    },
    "163": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "119"
    },
    "164": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "PUSH2",
      "path": "119",
      "statement": 5,
      "value": "0x103"
    },
    "167": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "168": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "170": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "171": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "175": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "177": {
      "op": "SHL"
    },
    "178": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "DUP2",
      "path": "119"
    },
    "179": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "182": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x4"
    },
    "184": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "DUP3",
      "path": "119"
    },
    "185": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "ADD",
      "path": "119"
    },
    "186": {
      "op": "MSTORE"
    },
    "187": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "191": {
      "op": "DUP3"
    },
    "192": {
      "op": "ADD"
    },
    "193": {
      "op": "MSTORE"
    },
    "194": {
      "op": "PUSH32",
      "value": "0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
    },
    "227": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "229": {
      "op": "DUP3"
    },
    "230": {
      "op": "ADD"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH6",
      "value": "0x1B9D1C9858DD"
    },
    "239": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "241": {
      "op": "SHL"
    },
    "242": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "244": {
      "op": "DUP3"
    },
    "245": {
      "op": "ADD"
    },
    "246": {
      "op": "MSTORE"
    },
    "247": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "249": {
      "op": "ADD"
    },
    "250": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "251": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "253": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "254": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "DUP1",
      "path": "119"
    },
    "255": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "256": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "SUB",
      "path": "119"
    },
    "257": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "SWAP1",
      "path": "119"
    },
    "258": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "119"
    },
    "259": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "260": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6935,
        6947
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "262": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6949,
        6972
      ],
      "op": "DUP1",
      "path": "119"
    },
    "263": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        6982
      ],
      "op": "DUP6",
      "path": "119"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "270": {
      "op": "SHL"
    },
    "271": {
      "op": "SUB"
    },
    "272": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        6995
      ],
      "op": "AND",
      "path": "119"
    },
    "273": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6996,
        7000
      ],
      "op": "DUP6",
      "path": "119"
    },
    "274": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "276": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "277": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x11E"
    },
    "280": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "281": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "SWAP1",
      "path": "119"
    },
    "282": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x1B1"
    },
    "285": {
      "fn": "Address.functionDelegateCall",
      "jump": "i",
      "offset": [
        6976,
        7001
      ],
      "op": "JUMP",
      "path": "119"
    },
    "286": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "287": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "289": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "291": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "292": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP1",
      "path": "119"
    },
    "293": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP4",
      "path": "119"
    },
    "294": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "SUB",
      "path": "119"
    },
    "295": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP2",
      "path": "119"
    },
    "296": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP6",
      "path": "119"
    },
    "297": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "GAS",
      "path": "119"
    },
    "298": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DELEGATECALL",
      "path": "119"
    },
    "299": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "300": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "POP",
      "path": "119"
    },
    "301": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "POP",
      "path": "119"
    },
    "302": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "303": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP1",
      "path": "119"
    },
    "304": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "306": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP2",
      "path": "119"
    },
    "307": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "EQ",
      "path": "119"
    },
    "308": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x159"
    },
    "311": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "312": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "314": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "315": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "316": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "POP",
      "path": "119"
    },
    "317": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x1F"
    },
    "319": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "NOT",
      "path": "119"
    },
    "320": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x3F"
    },
    "322": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "323": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "ADD",
      "path": "119"
    },
    "324": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "AND",
      "path": "119"
    },
    "325": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP3",
      "path": "119"
    },
    "326": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "ADD",
      "path": "119"
    },
    "327": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "329": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "330": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "331": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP3",
      "path": "119"
    },
    "332": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "333": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "334": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "336": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x20"
    },
    "338": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP5",
      "path": "119"
    },
    "339": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "ADD",
      "path": "119"
    },
    "340": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "RETURNDATACOPY",
      "path": "119"
    },
    "341": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x15E"
    },
    "344": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "JUMP",
      "path": "119"
    },
    "345": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "346": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x60"
    },
    "348": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "349": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "POP",
      "path": "119"
    },
    "350": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "351": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "POP",
      "path": "119"
    },
    "352": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6934,
        7001
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "353": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6934,
        7001
      ],
      "op": "POP",
      "path": "119"
    },
    "354": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6934,
        7001
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "355": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6934,
        7001
      ],
      "op": "POP",
      "path": "119"
    },
    "356": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7018,
        7070
      ],
      "op": "PUSH2",
      "path": "119",
      "statement": 6,
      "value": "0x16E"
    },
    "359": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7036,
        7043
      ],
      "op": "DUP3",
      "path": "119"
    },
    "360": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7045,
        7055
      ],
      "op": "DUP3",
      "path": "119"
    },
    "361": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7057,
        7069
      ],
      "op": "DUP7",
      "path": "119"
    },
    "362": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7018,
        7035
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x178"
    },
    "365": {
      "fn": "Address.functionDelegateCall",
      "jump": "i",
      "offset": [
        7018,
        7070
      ],
      "op": "JUMP",
      "path": "119"
    },
    "366": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7018,
        7070
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "367": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7011,
        7070
      ],
      "op": "SWAP7",
      "path": "119"
    },
    "368": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6660,
        7077
      ],
      "op": "SWAP6",
      "path": "119"
    },
    "369": {
      "op": "POP"
    },
    "370": {
      "op": "POP"
    },
    "371": {
      "op": "POP"
    },
    "372": {
      "op": "POP"
    },
    "373": {
      "op": "POP"
    },
    "374": {
      "op": "POP"
    },
    "375": {
      "fn": "Address.functionDelegateCall",
      "jump": "o",
      "offset": [
        6660,
        7077
      ],
      "op": "JUMP",
      "path": "119"
    },
    "376": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7083,
        7808
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "377": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7198,
        7210
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x60"
    },
    "379": {
      "branch": 9,
      "fn": "Address._verifyCallResult",
      "offset": [
        7226,
        7233
      ],
      "op": "DUP4",
      "path": "119"
    },
    "380": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "ISZERO",
      "path": "119"
    },
    "381": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x187"
    },
    "384": {
      "branch": 9,
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "385": {
      "op": "POP"
    },
    "386": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7256,
        7266
      ],
      "op": "DUP2",
      "path": "119",
      "statement": 7
    },
    "387": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x6E"
    },
    "390": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "JUMP",
      "path": "119"
    },
    "391": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "392": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "DUP3",
      "path": "119"
    },
    "393": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "394": {
      "branch": 10,
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7388
      ],
      "op": "ISZERO",
      "path": "119"
    },
    "395": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x197"
    },
    "398": {
      "branch": 10,
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "399": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7625,
        7635
      ],
      "op": "DUP3",
      "path": "119"
    },
    "400": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7619,
        7636
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "401": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7685,
        7700
      ],
      "op": "DUP1",
      "path": "119"
    },
    "402": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7682
      ],
      "op": "DUP5",
      "path": "119"
    },
    "403": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7668,
        7670
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x20"
    },
    "405": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7664,
        7683
      ],
      "op": "ADD",
      "path": "119"
    },
    "406": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7657,
        7701
      ],
      "op": "REVERT",
      "path": "119"
    },
    "407": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7574,
        7719
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "408": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7764,
        7776
      ],
      "op": "DUP2",
      "path": "119",
      "statement": 8
    },
    "409": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "411": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "412": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "416": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "418": {
      "op": "SHL"
    },
    "419": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "DUP2",
      "path": "119"
    },
    "420": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "421": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x4"
    },
    "423": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "ADD",
      "path": "119"
    },
    "424": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0xFA"
    },
    "427": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "428": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP1",
      "path": "119"
    },
    "429": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x1CD"
    },
    "432": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7757,
        7777
      ],
      "op": "JUMP",
      "path": "119"
    },
    "433": {
      "op": "JUMPDEST"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "436": {
      "op": "DUP3"
    },
    "437": {
      "op": "MLOAD"
    },
    "438": {
      "op": "PUSH2",
      "value": "0x1C3"
    },
    "441": {
      "op": "DUP2"
    },
    "442": {
      "op": "DUP5"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "445": {
      "op": "DUP8"
    },
    "446": {
      "op": "ADD"
    },
    "447": {
      "op": "PUSH2",
      "value": "0x200"
    },
    "450": {
      "jump": "i",
      "op": "JUMP"
    },
    "451": {
      "op": "JUMPDEST"
    },
    "452": {
      "op": "SWAP2"
    },
    "453": {
      "op": "SWAP1"
    },
    "454": {
      "op": "SWAP2"
    },
    "455": {
      "op": "ADD"
    },
    "456": {
      "op": "SWAP3"
    },
    "457": {
      "op": "SWAP2"
    },
    "458": {
      "op": "POP"
    },
    "459": {
      "op": "POP"
    },
    "460": {
      "jump": "o",
      "op": "JUMP"
    },
    "461": {
      "op": "JUMPDEST"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "466": {
      "op": "DUP3"
    },
    "467": {
      "op": "MSTORE"
    },
    "468": {
      "op": "DUP3"
    },
    "469": {
      "op": "MLOAD"
    },
    "470": {
      "op": "DUP1"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "473": {
      "op": "DUP5"
    },
    "474": {
      "op": "ADD"
    },
    "475": {
      "op": "MSTORE"
    },
    "476": {
      "op": "PUSH2",
      "value": "0x1EC"
    },
    "479": {
      "op": "DUP2"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "482": {
      "op": "DUP6"
    },
    "483": {
      "op": "ADD"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "486": {
      "op": "DUP8"
    },
    "487": {
      "op": "ADD"
    },
    "488": {
      "op": "PUSH2",
      "value": "0x200"
    },
    "491": {
      "jump": "i",
      "op": "JUMP"
    },
    "492": {
      "op": "JUMPDEST"
    },
    "493": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "495": {
      "op": "ADD"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "498": {
      "op": "NOT"
    },
    "499": {
      "op": "AND"
    },
    "500": {
      "op": "SWAP2"
    },
    "501": {
      "op": "SWAP1"
    },
    "502": {
      "op": "SWAP2"
    },
    "503": {
      "op": "ADD"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "506": {
      "op": "ADD"
    },
    "507": {
      "op": "SWAP3"
    },
    "508": {
      "op": "SWAP2"
    },
    "509": {
      "op": "POP"
    },
    "510": {
      "op": "POP"
    },
    "511": {
      "jump": "o",
      "op": "JUMP"
    },
    "512": {
      "op": "JUMPDEST"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "515": {
      "op": "JUMPDEST"
    },
    "516": {
      "op": "DUP4"
    },
    "517": {
      "op": "DUP2"
    },
    "518": {
      "op": "LT"
    },
    "519": {
      "op": "ISZERO"
    },
    "520": {
      "op": "PUSH2",
      "value": "0x21B"
    },
    "523": {
      "op": "JUMPI"
    },
    "524": {
      "op": "DUP2"
    },
    "525": {
      "op": "DUP2"
    },
    "526": {
      "op": "ADD"
    },
    "527": {
      "op": "MLOAD"
    },
    "528": {
      "op": "DUP4"
    },
    "529": {
      "op": "DUP3"
    },
    "530": {
      "op": "ADD"
    },
    "531": {
      "op": "MSTORE"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "534": {
      "op": "ADD"
    },
    "535": {
      "op": "PUSH2",
      "value": "0x203"
    },
    "538": {
      "op": "JUMP"
    },
    "539": {
      "op": "JUMPDEST"
    },
    "540": {
      "op": "DUP4"
    },
    "541": {
      "op": "DUP2"
    },
    "542": {
      "op": "GT"
    },
    "543": {
      "op": "ISZERO"
    },
    "544": {
      "op": "PUSH2",
      "value": "0x22A"
    },
    "547": {
      "op": "JUMPI"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "550": {
      "op": "DUP5"
    },
    "551": {
      "op": "DUP5"
    },
    "552": {
      "op": "ADD"
    },
    "553": {
      "op": "MSTORE"
    },
    "554": {
      "op": "JUMPDEST"
    },
    "555": {
      "op": "POP"
    },
    "556": {
      "op": "POP"
    },
    "557": {
      "op": "POP"
    },
    "558": {
      "op": "POP"
    },
    "559": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "dd99fc5550490ce29928824db37546646100c7c6",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../Proxy.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n *\n * Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\n * {TransparentUpgradeableProxy}.\n */\ncontract ERC1967Proxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        _setImplementation(_logic);\n        if(_data.length > 0) {\n            Address.functionDelegateCall(_logic, _data);\n        }\n    }\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 private constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        bytes32 slot = _IMPLEMENTATION_SLOT;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            impl := sload(slot)\n        }\n    }\n\n    /**\n     * @dev Upgrades the proxy to a new implementation.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal virtual {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967Proxy: new implementation is not a contract\");\n\n        bytes32 slot = _IMPLEMENTATION_SLOT;\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            sstore(slot, newImplementation)\n        }\n    }\n}\n",
  "sourceMap": "634:2201:70:-:0;;;1011:302;;;;;;;;;;;;;;;;;;:::i;:::-;1116:54;1169:1;1124:41;1116:54;:::i;:::-;-1:-1:-1;;;;;;;;;;;1084:87:70;1077:95;;-1:-1:-1;;;1077:95:70;;;;;;;;;1182:26;1201:6;1182:18;:26::i;:::-;1221:12;;:16;1218:89;;1253:43;1282:6;1290:5;1253:28;;;;;:43;;:::i;:::-;;1218:89;1011:302;;634:2201;;2477:356;2558:37;2577:17;2558:18;;;;;:37;;:::i;:::-;2550:100;;;;-1:-1:-1;;;2550:100:70;;1988:2:144;2550:100:70;;;1970:21:144;2027:2;2007:18;;;2000:30;2066:34;2046:18;;;2039:62;-1:-1:-1;;;2117:18:144;;;2110:48;2175:19;;2550:100:70;;;;;;;;;-1:-1:-1;;;;;;;;;;;2786:31:70;2772:55::o;6276:198:119:-;6359:12;6390:77;6411:6;6419:4;6390:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6383:84;6276:198;-1:-1:-1;;;6276:198:119:o;718:413::-;1078:20;1116:8;;;718:413::o;6660:417::-;6771:12;1078:20;;6795:69;;;;-1:-1:-1;;;6795:69:119;;2407:2:144;6795:69:119;;;2389:21:144;2446:2;2426:18;;;2419:30;2485:34;2465:18;;;2458:62;-1:-1:-1;;;2536:18:144;;;2529:36;2582:19;;6795:69:119;2379:228:144;6795:69:119;6935:12;6949:23;6976:6;-1:-1:-1;;;;;6976:19:119;6996:4;6976:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6934:67:119;;-1:-1:-1;6934:67:119;-1:-1:-1;7018:52:119;6934:67;;7057:12;7018:17;:52::i;:::-;7011:59;6660:417;-1:-1:-1;;;;;;6660:417:119:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:119;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;-1:-1:-1;;;7757:20:119;;;;;;;;:::i;14:1100:144:-;;;163:2;151:9;142:7;138:23;134:32;131:2;;;184:6;176;169:22;131:2;215:16;;-1:-1:-1;;;;;260:31:144;;250:42;;240:2;;311:6;303;296:22;240:2;388;373:18;;367:25;339:5;;-1:-1:-1;;;;;;441:14:144;;;438:2;;;473:6;465;458:22;438:2;516:6;505:9;501:22;491:32;;561:7;554:4;550:2;546:13;542:27;532:2;;588:6;580;573:22;532:2;622;616:9;644:2;640;637:10;634:2;;;650:18;;:::i;:::-;725:2;719:9;693:2;779:13;;-1:-1:-1;;775:22:144;;;799:2;771:31;767:40;755:53;;;823:18;;;843:22;;;820:46;817:2;;;869:18;;:::i;:::-;909:10;905:2;898:22;944:2;936:6;929:18;984:7;979:2;974;970;966:11;962:20;959:33;956:2;;;1010:6;1002;995:22;956:2;1028:55;1080:2;1075;1067:6;1063:15;1058:2;1054;1050:11;1028:55;:::i;:::-;1102:6;1092:16;;;;;;;121:993;;;;;:::o;1119:274::-;;1286:6;1280:13;1302:53;1348:6;1343:3;1336:4;1328:6;1324:17;1302:53;:::i;:::-;1371:16;;;;;1256:137;-1:-1:-1;;1256:137:144:o;1398:383::-;;1547:2;1536:9;1529:21;1579:6;1573:13;1622:6;1617:2;1606:9;1602:18;1595:34;1638:66;1697:6;1692:2;1681:9;1677:18;1672:2;1664:6;1660:15;1638:66;:::i;:::-;1765:2;1744:15;-1:-1:-1;;1740:29:144;1725:45;;;;1772:2;1721:54;;1519:262;-1:-1:-1;;1519:262:144:o;2612:228::-;;2680:1;2677;2674:8;2671:2;;;-1:-1:-1;;;2705:34:144;;2762:4;2759:1;2752:15;2793:4;2712;2780:18;2671:2;-1:-1:-1;2825:9:144;;2661:179::o;2845:258::-;2917:1;2927:113;2941:6;2938:1;2935:13;2927:113;;;3017:11;;;3011:18;2998:11;;;2991:39;2963:2;2956:10;2927:113;;;3058:6;3055:1;3052:13;3049:2;;;3093:1;3084:6;3079:3;3075:16;3068:27;3049:2;;2898:205;;;:::o;3108:127::-;3169:10;3164:3;3160:20;3157:1;3150:31;3200:4;3197:1;3190:15;3224:4;3221:1;3214:15;3140:95;634:2201:70;;;;;;",
  "sourcePath": "contracts/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
  "type": "contract"
}