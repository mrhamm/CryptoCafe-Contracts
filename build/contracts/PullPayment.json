{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dest",
          "type": "address"
        }
      ],
      "name": "payments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawPayments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "119": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
    "121": "contracts/openzeppelin-contracts/contracts/utils/Context.sol",
    "129": "contracts/openzeppelin-contracts/contracts/utils/escrow/Escrow.sol",
    "3": "contracts/openzeppelin-contracts/contracts/access/Ownable.sol",
    "79": "contracts/openzeppelin-contracts/contracts/security/PullPayment.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-contracts/contracts/security/PullPayment.sol",
    "exportedSymbols": {
      "Address": [
        14906
      ],
      "Context": [
        15014
      ],
      "Escrow": [
        15869
      ],
      "Ownable": [
        641
      ],
      "PullPayment": [
        8030
      ]
    },
    "id": 8031,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7969,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:79"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/escrow/Escrow.sol",
        "file": "../utils/escrow/Escrow.sol",
        "id": 7970,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8031,
        "sourceUnit": 15870,
        "src": "58:36:79",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [
          15869
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7971,
          "nodeType": "StructuredDocumentation",
          "src": "96:949:79",
          "text": " @dev Simple implementation of a\n https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n strategy, where the paying contract doesn't interact directly with the\n receiver account, which must withdraw its payments itself.\n Pull-payments are often considered the best practice when it comes to sending\n Ether, security-wise. It prevents recipients from blocking execution, and\n eliminates reentrancy concerns.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n instead of Solidity's `transfer` function. Payees can query their due\n payments with {payments}, and retrieve them with {withdrawPayments}."
        },
        "fullyImplemented": true,
        "id": 8030,
        "linearizedBaseContracts": [
          8030
        ],
        "name": "PullPayment",
        "nameLocation": "1064:11:79",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7974,
            "mutability": "immutable",
            "name": "_escrow",
            "nameLocation": "1107:7:79",
            "nodeType": "VariableDeclaration",
            "scope": 8030,
            "src": "1082:32:79",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Escrow_$15869",
              "typeString": "contract Escrow"
            },
            "typeName": {
              "id": 7973,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7972,
                "name": "Escrow",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 15869,
                "src": "1082:6:79"
              },
              "referencedDeclaration": 15869,
              "src": "1082:6:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Escrow_$15869",
                "typeString": "contract Escrow"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7984,
              "nodeType": "Block",
              "src": "1136:39:79",
              "statements": [
                {
                  "expression": {
                    "id": 7982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7977,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7974,
                      "src": "1146:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Escrow_$15869",
                        "typeString": "contract Escrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1156:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Escrow_$15869_$",
                          "typeString": "function () returns (contract Escrow)"
                        },
                        "typeName": {
                          "id": 7979,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 7978,
                            "name": "Escrow",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 15869,
                            "src": "1160:6:79"
                          },
                          "referencedDeclaration": 15869,
                          "src": "1160:6:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$15869",
                            "typeString": "contract Escrow"
                          }
                        }
                      },
                      "id": 7981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1156:12:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Escrow_$15869",
                        "typeString": "contract Escrow"
                      }
                    },
                    "src": "1146:22:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Escrow_$15869",
                      "typeString": "contract Escrow"
                    }
                  },
                  "id": 7983,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:22:79"
                }
              ]
            },
            "id": 7985,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1133:2:79"
            },
            "returnParameters": {
              "id": 7976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1136:0:79"
            },
            "scope": 8030,
            "src": "1121:54:79",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7997,
              "nodeType": "Block",
              "src": "1888:40:79",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7994,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7988,
                        "src": "1915:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 7991,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7974,
                        "src": "1898:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$15869",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 7993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15868,
                      "src": "1898:16:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 7995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:23:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7996,
                  "nodeType": "ExpressionStatement",
                  "src": "1898:23:79"
                }
              ]
            },
            "documentation": {
              "id": 7986,
              "nodeType": "StructuredDocumentation",
              "src": "1181:638:79",
              "text": " @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n Note that _any_ account can call this function, not just the `payee`.\n This means that contracts unaware of the `PullPayment` protocol can still\n receive funds this way, by having a separate account call\n {withdrawPayments}.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n @param payee Whose payments will be withdrawn."
            },
            "functionSelector": "31b3eb94",
            "id": 7998,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPayments",
            "nameLocation": "1833:16:79",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7988,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "1866:5:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 7998,
                  "src": "1850:21:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:15:79",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1849:23:79"
            },
            "returnParameters": {
              "id": 7990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1888:0:79"
            },
            "scope": 8030,
            "src": "1824:104:79",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8011,
              "nodeType": "Block",
              "src": "2108:48:79",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8008,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8001,
                        "src": "2144:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 8006,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7974,
                        "src": "2125:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$15869",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 8007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositsOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15807,
                      "src": "2125:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2125:24:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8005,
                  "id": 8010,
                  "nodeType": "Return",
                  "src": "2118:31:79"
                }
              ]
            },
            "documentation": {
              "id": 7999,
              "nodeType": "StructuredDocumentation",
              "src": "1934:107:79",
              "text": " @dev Returns the payments owed to an address.\n @param dest The creditor's address."
            },
            "functionSelector": "e2982c21",
            "id": 8012,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payments",
            "nameLocation": "2055:8:79",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8001,
                  "mutability": "mutable",
                  "name": "dest",
                  "nameLocation": "2072:4:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 8012,
                  "src": "2064:12:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2064:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2063:14:79"
            },
            "returnParameters": {
              "id": 8005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8004,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8012,
                  "src": "2099:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2099:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2098:9:79"
            },
            "scope": 8030,
            "src": "2046:110:79",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8028,
              "nodeType": "Block",
              "src": "2586:55:79",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8025,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8015,
                        "src": "2629:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 8020,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7974,
                          "src": "2596:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$15869",
                            "typeString": "contract Escrow"
                          }
                        },
                        "id": 8022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15836,
                        "src": "2596:15:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 8024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 8023,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8017,
                          "src": "2620:6:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2596:32:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 8026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2596:38:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8027,
                  "nodeType": "ExpressionStatement",
                  "src": "2596:38:79"
                }
              ]
            },
            "documentation": {
              "id": 8013,
              "nodeType": "StructuredDocumentation",
              "src": "2162:348:79",
              "text": " @dev Called by the payer to store the sent amount as credit to be pulled.\n Funds sent in this way are stored in an intermediate {Escrow} contract, so\n there is no danger of them being spent before withdrawal.\n @param dest The destination address of the funds.\n @param amount The amount to transfer."
            },
            "id": 8029,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asyncTransfer",
            "nameLocation": "2524:14:79",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8015,
                  "mutability": "mutable",
                  "name": "dest",
                  "nameLocation": "2547:4:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 8029,
                  "src": "2539:12:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2539:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8017,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2561:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 8029,
                  "src": "2553:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2553:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2538:30:79"
            },
            "returnParameters": {
              "id": 8019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2586:0:79"
            },
            "scope": 8030,
            "src": "2515:126:79",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 8031,
        "src": "1046:1597:79"
      }
    ],
    "src": "33:2611:79"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "PullPayment",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "Address",
    "Context",
    "Escrow",
    "Ownable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "details": "Simple implementation of a https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment] strategy, where the paying contract doesn't interact directly with the receiver account, which must withdraw its payments itself. Pull-payments are often considered the best practice when it comes to sending Ether, security-wise. It prevents recipients from blocking execution, and eliminates reentrancy concerns. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]. To use, derive from the `PullPayment` contract, and use {_asyncTransfer} instead of Solidity's `transfer` function. Payees can query their due payments with {payments}, and retrieve them with {withdrawPayments}.",
    "kind": "dev",
    "methods": {
      "payments(address)": {
        "details": "Returns the payments owed to an address.",
        "params": {
          "dest": "The creditor's address."
        }
      },
      "withdrawPayments(address)": {
        "details": "Withdraw accumulated payments, forwarding all gas to the recipient. Note that _any_ account can call this function, not just the `payee`. This means that contracts unaware of the `PullPayment` protocol can still receive funds this way, by having a separate account call {withdrawPayments}. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.",
        "params": {
          "payee": "Whose payments will be withdrawn."
        }
      }
    },
    "version": 1
  },
  "offset": [
    1046,
    2643
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "23c8258d7e589826f96aaf5016b86de0d8507c84",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/escrow/Escrow.sol\";\n\n/**\n * @dev Simple implementation of a\n * https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n * strategy, where the paying contract doesn't interact directly with the\n * receiver account, which must withdraw its payments itself.\n *\n * Pull-payments are often considered the best practice when it comes to sending\n * Ether, security-wise. It prevents recipients from blocking execution, and\n * eliminates reentrancy concerns.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n *\n * To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n * instead of Solidity's `transfer` function. Payees can query their due\n * payments with {payments}, and retrieve them with {withdrawPayments}.\n */\nabstract contract PullPayment {\n    Escrow immutable private _escrow;\n\n    constructor () {\n        _escrow = new Escrow();\n    }\n\n    /**\n     * @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n     *\n     * Note that _any_ account can call this function, not just the `payee`.\n     * This means that contracts unaware of the `PullPayment` protocol can still\n     * receive funds this way, by having a separate account call\n     * {withdrawPayments}.\n     *\n     * WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n     * Make sure you trust the recipient, or are either following the\n     * checks-effects-interactions pattern or using {ReentrancyGuard}.\n     *\n     * @param payee Whose payments will be withdrawn.\n     */\n    function withdrawPayments(address payable payee) public virtual {\n        _escrow.withdraw(payee);\n    }\n\n    /**\n     * @dev Returns the payments owed to an address.\n     * @param dest The creditor's address.\n     */\n    function payments(address dest) public view returns (uint256) {\n        return _escrow.depositsOf(dest);\n    }\n\n    /**\n     * @dev Called by the payer to store the sent amount as credit to be pulled.\n     * Funds sent in this way are stored in an intermediate {Escrow} contract, so\n     * there is no danger of them being spent before withdrawal.\n     *\n     * @param dest The destination address of the funds.\n     * @param amount The amount to transfer.\n     */\n    function _asyncTransfer(address dest, uint256 amount) internal virtual {\n        _escrow.deposit{ value: amount }(dest);\n    }\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/openzeppelin-contracts/contracts/security/PullPayment.sol",
  "type": "contract"
}