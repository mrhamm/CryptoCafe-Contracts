{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "103": "contracts/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
    "104": "contracts/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
    "105": "contracts/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
    "111": "contracts/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "119": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
    "121": "contracts/openzeppelin-contracts/contracts/utils/Context.sol",
    "124": "contracts/openzeppelin-contracts/contracts/utils/Strings.sol",
    "131": "contracts/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
    "135": "contracts/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        14906
      ],
      "Context": [
        15014
      ],
      "ERC165": [
        16072
      ],
      "ERC721": [
        12301
      ],
      "IERC165": [
        16398
      ],
      "IERC721": [
        12417
      ],
      "IERC721Metadata": [
        13026
      ],
      "IERC721Receiver": [
        12435
      ],
      "Strings": [
        15389
      ]
    },
    "id": 12302,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11485,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:103"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 11486,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12302,
        "sourceUnit": 12418,
        "src": "58:23:103",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 11487,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12302,
        "sourceUnit": 12436,
        "src": "82:31:103",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 11488,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12302,
        "sourceUnit": 13027,
        "src": "114:42:103",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 11489,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12302,
        "sourceUnit": 14907,
        "src": "157:33:103",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 11490,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12302,
        "sourceUnit": 15015,
        "src": "191:33:103",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 11491,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12302,
        "sourceUnit": 15390,
        "src": "225:33:103",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 11492,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12302,
        "sourceUnit": 16073,
        "src": "259:46:103",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11494,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15014,
              "src": "573:7:103"
            },
            "id": 11495,
            "nodeType": "InheritanceSpecifier",
            "src": "573:7:103"
          },
          {
            "baseName": {
              "id": 11496,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16072,
              "src": "582:6:103"
            },
            "id": 11497,
            "nodeType": "InheritanceSpecifier",
            "src": "582:6:103"
          },
          {
            "baseName": {
              "id": 11498,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12417,
              "src": "590:7:103"
            },
            "id": 11499,
            "nodeType": "InheritanceSpecifier",
            "src": "590:7:103"
          },
          {
            "baseName": {
              "id": 11500,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13026,
              "src": "599:15:103"
            },
            "id": 11501,
            "nodeType": "InheritanceSpecifier",
            "src": "599:15:103"
          }
        ],
        "contractDependencies": [
          12417,
          13026,
          15014,
          16072,
          16398
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 11493,
          "nodeType": "StructuredDocumentation",
          "src": "307:246:103",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 12301,
        "linearizedBaseContracts": [
          12301,
          13026,
          12417,
          16072,
          16398,
          15014
        ],
        "name": "ERC721",
        "nameLocation": "563:6:103",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11504,
            "libraryName": {
              "id": 11502,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14906,
              "src": "627:7:103"
            },
            "nodeType": "UsingForDirective",
            "src": "621:26:103",
            "typeName": {
              "id": 11503,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "639:7:103",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 11507,
            "libraryName": {
              "id": 11505,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15389,
              "src": "658:7:103"
            },
            "nodeType": "UsingForDirective",
            "src": "652:26:103",
            "typeName": {
              "id": 11506,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "670:7:103",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 11509,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "717:5:103",
            "nodeType": "VariableDeclaration",
            "scope": 12301,
            "src": "702:20:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 11508,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "702:6:103",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11511,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "764:7:103",
            "nodeType": "VariableDeclaration",
            "scope": 12301,
            "src": "749:22:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 11510,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "749:6:103",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11515,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "861:7:103",
            "nodeType": "VariableDeclaration",
            "scope": 12301,
            "src": "824:44:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 11514,
              "keyType": {
                "id": 11512,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "833:7:103",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "824:28:103",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 11513,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "844:7:103",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11519,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "956:9:103",
            "nodeType": "VariableDeclaration",
            "scope": 12301,
            "src": "919:46:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 11518,
              "keyType": {
                "id": 11516,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "928:7:103",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "919:28:103",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 11517,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "939:7:103",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11523,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1058:15:103",
            "nodeType": "VariableDeclaration",
            "scope": 12301,
            "src": "1021:52:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 11522,
              "keyType": {
                "id": 11520,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1030:7:103",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1021:28:103",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 11521,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1041:7:103",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11529,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1183:18:103",
            "nodeType": "VariableDeclaration",
            "scope": 12301,
            "src": "1128:73:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 11528,
              "keyType": {
                "id": 11524,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1137:7:103",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1128:46:103",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 11527,
                "keyType": {
                  "id": 11525,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1157:7:103",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1148:25:103",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 11526,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1168:4:103",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 11545,
              "nodeType": "Block",
              "src": "1378:57:103",
              "statements": [
                {
                  "expression": {
                    "id": 11539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11537,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11509,
                      "src": "1388:5:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11538,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11532,
                      "src": "1396:5:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1388:13:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 11540,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:13:103"
                },
                {
                  "expression": {
                    "id": 11543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11541,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11511,
                      "src": "1411:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11542,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11534,
                      "src": "1421:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1411:17:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 11544,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:17:103"
                }
              ]
            },
            "documentation": {
              "id": 11530,
              "nodeType": "StructuredDocumentation",
              "src": "1208:108:103",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 11546,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11532,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1348:5:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11546,
                  "src": "1334:19:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11531,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11534,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1369:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11546,
                  "src": "1355:21:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11533,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1333:44:103"
            },
            "returnParameters": {
              "id": 11536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1378:0:103"
            },
            "scope": 12301,
            "src": "1321:114:103",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16071,
              16397
            ],
            "body": {
              "id": 11576,
              "nodeType": "Block",
              "src": "1610:180:103",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 11574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 11569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 11562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11557,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11549,
                          "src": "1627:11:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 11559,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12417,
                                "src": "1647:7:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$12417_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$12417_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 11558,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1642:4:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 11560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1642:13:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$12417",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 11561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1642:25:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1627:40:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 11568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11563,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11549,
                          "src": "1683:11:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 11565,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13026,
                                "src": "1703:15:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$13026_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$13026_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 11564,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1698:4:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 11566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1698:21:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$13026",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 11567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1698:33:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1683:48:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1627:104:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 11572,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11549,
                          "src": "1771:11:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 11570,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1747:5:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$12301_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 11571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16071,
                        "src": "1747:23:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 11573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1747:36:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1627:156:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11556,
                  "id": 11575,
                  "nodeType": "Return",
                  "src": "1620:163:103"
                }
              ]
            },
            "documentation": {
              "id": 11547,
              "nodeType": "StructuredDocumentation",
              "src": "1441:56:103",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 11577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1511:17:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11553,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 11551,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16072,
                  "src": "1578:6:103"
                },
                {
                  "id": 11552,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16398,
                  "src": "1586:7:103"
                }
              ],
              "src": "1569:25:103"
            },
            "parameters": {
              "id": 11550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11549,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1536:11:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11577,
                  "src": "1529:18:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 11548,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1528:20:103"
            },
            "returnParameters": {
              "id": 11556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11555,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11577,
                  "src": "1604:4:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11554,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1604:4:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1603:6:103"
            },
            "scope": 12301,
            "src": "1502:288:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12342
            ],
            "body": {
              "id": 11600,
              "nodeType": "Block",
              "src": "1930:124:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11587,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11580,
                          "src": "1948:5:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1965:1:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1957:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11588,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1957:7:103",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1957:10:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1948:19:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 11593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1969:44:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 11586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1940:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1940:74:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11595,
                  "nodeType": "ExpressionStatement",
                  "src": "1940:74:103"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 11596,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11519,
                      "src": "2031:9:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 11598,
                    "indexExpression": {
                      "id": 11597,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11580,
                      "src": "2041:5:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2031:16:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11585,
                  "id": 11599,
                  "nodeType": "Return",
                  "src": "2024:23:103"
                }
              ]
            },
            "documentation": {
              "id": 11578,
              "nodeType": "StructuredDocumentation",
              "src": "1796:48:103",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 11601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1858:9:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11582,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1903:8:103"
            },
            "parameters": {
              "id": 11581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11580,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1876:5:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11601,
                  "src": "1868:13:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1867:15:103"
            },
            "returnParameters": {
              "id": 11585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11584,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11601,
                  "src": "1921:7:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1920:9:103"
            },
            "scope": 12301,
            "src": "1849:205:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12350
            ],
            "body": {
              "id": 11628,
              "nodeType": "Block",
              "src": "2192:154:103",
              "statements": [
                {
                  "assignments": [
                    11611
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11611,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2210:5:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 11628,
                      "src": "2202:13:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11610,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2202:7:103",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11615,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11612,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11515,
                      "src": "2218:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 11614,
                    "indexExpression": {
                      "id": 11613,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11604,
                      "src": "2226:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2218:16:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2202:32:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11617,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11611,
                          "src": "2252:5:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2269:1:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2261:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11618,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2261:7:103",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2261:10:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2252:19:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 11623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2273:43:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 11616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2244:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2244:73:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11625,
                  "nodeType": "ExpressionStatement",
                  "src": "2244:73:103"
                },
                {
                  "expression": {
                    "id": 11626,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11611,
                    "src": "2334:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11609,
                  "id": 11627,
                  "nodeType": "Return",
                  "src": "2327:12:103"
                }
              ]
            },
            "documentation": {
              "id": 11602,
              "nodeType": "StructuredDocumentation",
              "src": "2060:46:103",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 11629,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2120:7:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11606,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2165:8:103"
            },
            "parameters": {
              "id": 11605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11604,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2136:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11629,
                  "src": "2128:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:17:103"
            },
            "returnParameters": {
              "id": 11609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11608,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11629,
                  "src": "2183:7:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2183:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2182:9:103"
            },
            "scope": 12301,
            "src": "2111:235:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13011
            ],
            "body": {
              "id": 11638,
              "nodeType": "Block",
              "src": "2477:29:103",
              "statements": [
                {
                  "expression": {
                    "id": 11636,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11509,
                    "src": "2494:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 11635,
                  "id": 11637,
                  "nodeType": "Return",
                  "src": "2487:12:103"
                }
              ]
            },
            "documentation": {
              "id": 11630,
              "nodeType": "StructuredDocumentation",
              "src": "2352:51:103",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 11639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2417:4:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11632,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2444:8:103"
            },
            "parameters": {
              "id": 11631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2421:2:103"
            },
            "returnParameters": {
              "id": 11635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11634,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11639,
                  "src": "2462:13:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11633,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2461:15:103"
            },
            "scope": 12301,
            "src": "2408:98:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13017
            ],
            "body": {
              "id": 11648,
              "nodeType": "Block",
              "src": "2641:31:103",
              "statements": [
                {
                  "expression": {
                    "id": 11646,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11511,
                    "src": "2658:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 11645,
                  "id": 11647,
                  "nodeType": "Return",
                  "src": "2651:14:103"
                }
              ]
            },
            "documentation": {
              "id": 11640,
              "nodeType": "StructuredDocumentation",
              "src": "2512:53:103",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 11649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2579:6:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11642,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2608:8:103"
            },
            "parameters": {
              "id": 11641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2585:2:103"
            },
            "returnParameters": {
              "id": 11645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11644,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11649,
                  "src": "2626:13:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11643,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2626:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2625:15:103"
            },
            "scope": 12301,
            "src": "2570:102:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13025
            ],
            "body": {
              "id": 11690,
              "nodeType": "Block",
              "src": "2826:265:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11660,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11652,
                            "src": "2852:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 11659,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11939,
                          "src": "2844:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 11661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2844:16:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 11662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2862:49:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 11658,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2836:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2836:76:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11664,
                  "nodeType": "ExpressionStatement",
                  "src": "2836:76:103"
                },
                {
                  "assignments": [
                    11666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11666,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "2937:7:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 11690,
                      "src": "2923:21:103",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 11665,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2923:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11669,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11667,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11700,
                      "src": "2947:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 11668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2947:10:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2923:34:103"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11672,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11666,
                              "src": "2980:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 11671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2974:5:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 11670,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2974:5:103",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2974:14:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 11674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2974:21:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 11675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2998:1:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2974:25:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 11687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3082:2:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 11688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2974:110:103",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 11681,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11666,
                              "src": "3038:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 11682,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11652,
                                  "src": "3047:7:103",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 11683,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15271,
                                "src": "3047:16:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 11684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3047:18:103",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 11679,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3021:3:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 11680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3021:16:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 11685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3021:45:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 11678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3014:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 11677,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3014:6:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3014:53:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 11657,
                  "id": 11689,
                  "nodeType": "Return",
                  "src": "2967:117:103"
                }
              ]
            },
            "documentation": {
              "id": 11650,
              "nodeType": "StructuredDocumentation",
              "src": "2678:55:103",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 11691,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2747:8:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11654,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2793:8:103"
            },
            "parameters": {
              "id": 11653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11652,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2764:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11691,
                  "src": "2756:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2756:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2755:17:103"
            },
            "returnParameters": {
              "id": 11657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11656,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11691,
                  "src": "2811:13:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11655,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2811:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2810:15:103"
            },
            "scope": 12301,
            "src": "2738:353:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11699,
              "nodeType": "Block",
              "src": "3288:26:103",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 11697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3305:2:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 11696,
                  "id": 11698,
                  "nodeType": "Return",
                  "src": "3298:9:103"
                }
              ]
            },
            "documentation": {
              "id": 11692,
              "nodeType": "StructuredDocumentation",
              "src": "3097:120:103",
              "text": " @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\n in child contracts."
            },
            "id": 11700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3231:8:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3239:2:103"
            },
            "returnParameters": {
              "id": 11696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11695,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11700,
                  "src": "3273:13:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11694,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3273:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3272:15:103"
            },
            "scope": 12301,
            "src": "3222:92:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              12378
            ],
            "body": {
              "id": 11742,
              "nodeType": "Block",
              "src": "3441:318:103",
              "statements": [
                {
                  "assignments": [
                    11710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11710,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3459:5:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 11742,
                      "src": "3451:13:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11709,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3451:7:103",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11715,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11713,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11705,
                        "src": "3482:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11711,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12301,
                        "src": "3467:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$12301_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 11712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11629,
                      "src": "3467:14:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 11714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3467:23:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3451:39:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11717,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11703,
                          "src": "3508:2:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 11718,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11710,
                          "src": "3514:5:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3508:11:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 11720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3521:35:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 11716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3500:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:57:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11722,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:57:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 11727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11724,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15002,
                              "src": "3576:10:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 11725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3576:12:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 11726,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11710,
                            "src": "3592:5:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3576:21:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 11729,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11710,
                              "src": "3618:5:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 11730,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15002,
                                "src": "3625:10:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 11731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3625:12:103",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11728,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11816,
                            "src": "3601:16:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 11732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3601:37:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3576:62:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 11734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3652:58:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 11723,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3568:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3568:152:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11736,
                  "nodeType": "ExpressionStatement",
                  "src": "3568:152:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11738,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11703,
                        "src": "3740:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11739,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11705,
                        "src": "3744:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11737,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12225,
                      "src": "3731:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3731:21:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11741,
                  "nodeType": "ExpressionStatement",
                  "src": "3731:21:103"
                }
              ]
            },
            "documentation": {
              "id": 11701,
              "nodeType": "StructuredDocumentation",
              "src": "3320:46:103",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 11743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3380:7:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11707,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3432:8:103"
            },
            "parameters": {
              "id": 11706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11703,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3396:2:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11743,
                  "src": "3388:10:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3388:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11705,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3408:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11743,
                  "src": "3400:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3400:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3387:29:103"
            },
            "returnParameters": {
              "id": 11708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3441:0:103"
            },
            "scope": 12301,
            "src": "3371:388:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12386
            ],
            "body": {
              "id": 11763,
              "nodeType": "Block",
              "src": "3905:132:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11754,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11746,
                            "src": "3931:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 11753,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11939,
                          "src": "3923:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 11755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3923:16:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 11756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3941:46:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 11752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3915:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3915:73:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11758,
                  "nodeType": "ExpressionStatement",
                  "src": "3915:73:103"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 11759,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11523,
                      "src": "4006:15:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 11761,
                    "indexExpression": {
                      "id": 11760,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11746,
                      "src": "4022:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4006:24:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11751,
                  "id": 11762,
                  "nodeType": "Return",
                  "src": "3999:31:103"
                }
              ]
            },
            "documentation": {
              "id": 11744,
              "nodeType": "StructuredDocumentation",
              "src": "3765:50:103",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 11764,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3829:11:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11748,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3878:8:103"
            },
            "parameters": {
              "id": 11747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11746,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3849:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11764,
                  "src": "3841:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3841:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3840:17:103"
            },
            "returnParameters": {
              "id": 11751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11750,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11764,
                  "src": "3896:7:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3896:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3895:9:103"
            },
            "scope": 12301,
            "src": "3820:217:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12394
            ],
            "body": {
              "id": 11797,
              "nodeType": "Block",
              "src": "4188:206:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11774,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11767,
                          "src": "4206:8:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11775,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15002,
                            "src": "4218:10:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 11776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4218:12:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4206:24:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 11778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4232:27:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 11773,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4198:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4198:62:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11780,
                  "nodeType": "ExpressionStatement",
                  "src": "4198:62:103"
                },
                {
                  "expression": {
                    "id": 11788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 11781,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11529,
                          "src": "4271:18:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 11785,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11782,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15002,
                            "src": "4290:10:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 11783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4290:12:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4271:32:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11786,
                      "indexExpression": {
                        "id": 11784,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11767,
                        "src": "4304:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4271:42:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11787,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11769,
                      "src": "4316:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4271:53:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11789,
                  "nodeType": "ExpressionStatement",
                  "src": "4271:53:103"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11791,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15002,
                          "src": "4354:10:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 11792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4354:12:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11793,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11767,
                        "src": "4368:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11794,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11769,
                        "src": "4378:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11790,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12334,
                      "src": "4339:14:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 11795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4339:48:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11796,
                  "nodeType": "EmitStatement",
                  "src": "4334:53:103"
                }
              ]
            },
            "documentation": {
              "id": 11765,
              "nodeType": "StructuredDocumentation",
              "src": "4043:56:103",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 11798,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4113:17:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11771,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4179:8:103"
            },
            "parameters": {
              "id": 11770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11767,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4139:8:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11798,
                  "src": "4131:16:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4131:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11769,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4154:8:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11798,
                  "src": "4149:13:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11768,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4149:4:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4130:33:103"
            },
            "returnParameters": {
              "id": 11772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4188:0:103"
            },
            "scope": 12301,
            "src": "4104:290:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12404
            ],
            "body": {
              "id": 11815,
              "nodeType": "Block",
              "src": "4563:59:103",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 11809,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11529,
                        "src": "4580:18:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 11811,
                      "indexExpression": {
                        "id": 11810,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11801,
                        "src": "4599:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4580:25:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 11813,
                    "indexExpression": {
                      "id": 11812,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11803,
                      "src": "4606:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4580:35:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11808,
                  "id": 11814,
                  "nodeType": "Return",
                  "src": "4573:42:103"
                }
              ]
            },
            "documentation": {
              "id": 11799,
              "nodeType": "StructuredDocumentation",
              "src": "4400:55:103",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 11816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4469:16:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11805,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4539:8:103"
            },
            "parameters": {
              "id": 11804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11801,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4494:5:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11816,
                  "src": "4486:13:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4486:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11803,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4509:8:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11816,
                  "src": "4501:16:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4501:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4485:33:103"
            },
            "returnParameters": {
              "id": 11808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11807,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11816,
                  "src": "4557:4:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11806,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4557:4:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4556:6:103"
            },
            "scope": 12301,
            "src": "4460:162:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12370
            ],
            "body": {
              "id": 11842,
              "nodeType": "Block",
              "src": "4773:211:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11829,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15002,
                              "src": "4862:10:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 11830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4862:12:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11831,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11823,
                            "src": "4876:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 11828,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11980,
                          "src": "4843:18:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 11832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4843:41:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 11833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4886:51:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 11827,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4835:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4835:103:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11835,
                  "nodeType": "ExpressionStatement",
                  "src": "4835:103:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11837,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11819,
                        "src": "4959:4:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11838,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11821,
                        "src": "4965:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11839,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11823,
                        "src": "4969:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11836,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12201,
                      "src": "4949:9:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4949:28:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11841,
                  "nodeType": "ExpressionStatement",
                  "src": "4949:28:103"
                }
              ]
            },
            "documentation": {
              "id": 11817,
              "nodeType": "StructuredDocumentation",
              "src": "4628:51:103",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 11843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4693:12:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11825,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4764:8:103"
            },
            "parameters": {
              "id": 11824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11819,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4714:4:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11843,
                  "src": "4706:12:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11821,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4728:2:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11843,
                  "src": "4720:10:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4720:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11823,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4740:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11843,
                  "src": "4732:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4732:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4705:43:103"
            },
            "returnParameters": {
              "id": 11826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4773:0:103"
            },
            "scope": 12301,
            "src": "4684:300:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12360
            ],
            "body": {
              "id": 11861,
              "nodeType": "Block",
              "src": "5143:56:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11855,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11846,
                        "src": "5170:4:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11856,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11848,
                        "src": "5176:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11857,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11850,
                        "src": "5180:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 11858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5189:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 11854,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11862,
                        11892
                      ],
                      "referencedDeclaration": 11892,
                      "src": "5153:16:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 11859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5153:39:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11860,
                  "nodeType": "ExpressionStatement",
                  "src": "5153:39:103"
                }
              ]
            },
            "documentation": {
              "id": 11844,
              "nodeType": "StructuredDocumentation",
              "src": "4990:55:103",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 11862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5059:16:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11852,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5134:8:103"
            },
            "parameters": {
              "id": 11851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11846,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5084:4:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11862,
                  "src": "5076:12:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5076:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11848,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5098:2:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11862,
                  "src": "5090:10:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5090:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11850,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5110:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11862,
                  "src": "5102:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5102:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5075:43:103"
            },
            "returnParameters": {
              "id": 11853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5143:0:103"
            },
            "scope": 12301,
            "src": "5050:149:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12416
            ],
            "body": {
              "id": 11891,
              "nodeType": "Block",
              "src": "5378:169:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11877,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15002,
                              "src": "5415:10:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 11878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5415:12:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11879,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11869,
                            "src": "5429:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 11876,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11980,
                          "src": "5396:18:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 11880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5396:41:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 11881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5439:51:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 11875,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5388:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5388:103:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11883,
                  "nodeType": "ExpressionStatement",
                  "src": "5388:103:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11885,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11865,
                        "src": "5515:4:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11886,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11867,
                        "src": "5521:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11887,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11869,
                        "src": "5525:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 11888,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11871,
                        "src": "5534:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 11884,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11921,
                      "src": "5501:13:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 11889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5501:39:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11890,
                  "nodeType": "ExpressionStatement",
                  "src": "5501:39:103"
                }
              ]
            },
            "documentation": {
              "id": 11863,
              "nodeType": "StructuredDocumentation",
              "src": "5205:55:103",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 11892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5274:16:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11873,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5369:8:103"
            },
            "parameters": {
              "id": 11872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11865,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5299:4:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11892,
                  "src": "5291:12:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5291:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11867,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5313:2:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11892,
                  "src": "5305:10:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5305:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11869,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5325:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11892,
                  "src": "5317:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5317:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11871,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5347:5:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11892,
                  "src": "5334:18:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11870,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5334:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5290:63:103"
            },
            "returnParameters": {
              "id": 11874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5378:0:103"
            },
            "scope": 12301,
            "src": "5265:282:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11920,
              "nodeType": "Block",
              "src": "6512:166:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11905,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11895,
                        "src": "6532:4:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11906,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11897,
                        "src": "6538:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11907,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11899,
                        "src": "6542:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11904,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12201,
                      "src": "6522:9:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6522:28:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11909,
                  "nodeType": "ExpressionStatement",
                  "src": "6522:28:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11912,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11895,
                            "src": "6591:4:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11913,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11897,
                            "src": "6597:2:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11914,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11899,
                            "src": "6601:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 11915,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11901,
                            "src": "6610:5:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 11911,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12289,
                          "src": "6568:22:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 11916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6568:48:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 11917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6618:52:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 11910,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6560:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6560:111:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11919,
                  "nodeType": "ExpressionStatement",
                  "src": "6560:111:103"
                }
              ]
            },
            "documentation": {
              "id": 11893,
              "nodeType": "StructuredDocumentation",
              "src": "5553:851:103",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 11921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6418:13:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11895,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6440:4:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11921,
                  "src": "6432:12:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6432:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11897,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6454:2:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11921,
                  "src": "6446:10:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6446:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11899,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6466:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11921,
                  "src": "6458:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6458:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11901,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6488:5:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11921,
                  "src": "6475:18:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11900,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6475:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6431:63:103"
            },
            "returnParameters": {
              "id": 11903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6512:0:103"
            },
            "scope": 12301,
            "src": "6409:269:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11938,
              "nodeType": "Block",
              "src": "7052:54:103",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 11929,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11515,
                        "src": "7069:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 11931,
                      "indexExpression": {
                        "id": 11930,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11924,
                        "src": "7077:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7069:16:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 11934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7097:1:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 11933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7089:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11932,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7089:7:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7089:10:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7069:30:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11928,
                  "id": 11937,
                  "nodeType": "Return",
                  "src": "7062:37:103"
                }
              ]
            },
            "documentation": {
              "id": 11922,
              "nodeType": "StructuredDocumentation",
              "src": "6684:292:103",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 11939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "6990:7:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11924,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7006:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11939,
                  "src": "6998:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6998:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6997:17:103"
            },
            "returnParameters": {
              "id": 11928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11927,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11939,
                  "src": "7046:4:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11926,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7046:4:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7045:6:103"
            },
            "scope": 12301,
            "src": "6981:125:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11979,
              "nodeType": "Block",
              "src": "7363:245:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11951,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11944,
                            "src": "7389:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 11950,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11939,
                          "src": "7381:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 11952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7381:16:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 11953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7399:46:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 11949,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7373:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7373:73:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11955,
                  "nodeType": "ExpressionStatement",
                  "src": "7373:73:103"
                },
                {
                  "assignments": [
                    11957
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11957,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7464:5:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 11979,
                      "src": "7456:13:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11956,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7456:7:103",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11962,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11960,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11944,
                        "src": "7487:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11958,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12301,
                        "src": "7472:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$12301_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 11959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11629,
                      "src": "7472:14:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 11961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7472:23:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7456:39:103"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 11971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 11965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 11963,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11942,
                              "src": "7513:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 11964,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11957,
                              "src": "7524:5:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7513:16:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 11970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 11967,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11944,
                                  "src": "7545:7:103",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 11966,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11764,
                                "src": "7533:11:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 11968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7533:20:103",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 11969,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11942,
                              "src": "7557:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7533:31:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7513:51:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 11973,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11957,
                              "src": "7585:5:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11974,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11942,
                              "src": "7592:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11972,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11816,
                            "src": "7568:16:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 11975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7568:32:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7513:87:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 11977,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7512:89:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11948,
                  "id": 11978,
                  "nodeType": "Return",
                  "src": "7505:96:103"
                }
              ]
            },
            "documentation": {
              "id": 11940,
              "nodeType": "StructuredDocumentation",
              "src": "7112:147:103",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 11980,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7273:18:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11942,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7300:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11980,
                  "src": "7292:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7292:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11944,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7317:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11980,
                  "src": "7309:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7309:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7291:34:103"
            },
            "returnParameters": {
              "id": 11948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11947,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11980,
                  "src": "7357:4:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11946,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7357:4:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7356:6:103"
            },
            "scope": 12301,
            "src": "7264:344:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11994,
              "nodeType": "Block",
              "src": "8003:43:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11989,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11983,
                        "src": "8023:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11990,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11985,
                        "src": "8027:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 11991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8036:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 11988,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11995,
                        12024
                      ],
                      "referencedDeclaration": 12024,
                      "src": "8013:9:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 11992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8013:26:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11993,
                  "nodeType": "ExpressionStatement",
                  "src": "8013:26:103"
                }
              ]
            },
            "documentation": {
              "id": 11981,
              "nodeType": "StructuredDocumentation",
              "src": "7614:319:103",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 11995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "7947:9:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11983,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7965:2:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11995,
                  "src": "7957:10:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7957:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11985,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7977:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 11995,
                  "src": "7969:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7969:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7956:29:103"
            },
            "returnParameters": {
              "id": 11987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8003:0:103"
            },
            "scope": 12301,
            "src": "7938:108:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12023,
              "nodeType": "Block",
              "src": "8352:162:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12006,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11998,
                        "src": "8368:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12007,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12000,
                        "src": "8372:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12005,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12081,
                      "src": "8362:5:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8362:18:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12009,
                  "nodeType": "ExpressionStatement",
                  "src": "8362:18:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 12014,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8429:1:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 12013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8421:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 12012,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8421:7:103",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8421:10:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 12016,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11998,
                            "src": "8433:2:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 12017,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12000,
                            "src": "8437:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 12018,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12002,
                            "src": "8446:5:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 12011,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12289,
                          "src": "8398:22:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 12019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8398:54:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 12020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8454:52:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 12010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8390:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8390:117:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12022,
                  "nodeType": "ExpressionStatement",
                  "src": "8390:117:103"
                }
              ]
            },
            "documentation": {
              "id": 11996,
              "nodeType": "StructuredDocumentation",
              "src": "8052:210:103",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 12024,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8276:9:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11998,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8294:2:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12024,
                  "src": "8286:10:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8286:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12000,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8306:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12024,
                  "src": "8298:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8298:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12002,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8328:5:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12024,
                  "src": "8315:18:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12001,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8315:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8285:49:103"
            },
            "returnParameters": {
              "id": 12004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8352:0:103"
            },
            "scope": 12301,
            "src": "8267:247:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12080,
              "nodeType": "Block",
              "src": "8897:311:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12033,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12027,
                          "src": "8915:2:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 12036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8929:1:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 12035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8921:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12034,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8921:7:103",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8921:10:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8915:16:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 12039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8933:34:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 12032,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8907:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8907:61:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12041,
                  "nodeType": "ExpressionStatement",
                  "src": "8907:61:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8986:17:103",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 12044,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12029,
                              "src": "8995:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 12043,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11939,
                            "src": "8987:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 12045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8987:16:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 12047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9005:30:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 12042,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8978:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8978:58:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12049,
                  "nodeType": "ExpressionStatement",
                  "src": "8978:58:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 12053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9076:1:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 12052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9068:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12051,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9068:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9068:10:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12055,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12027,
                        "src": "9080:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12056,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12029,
                        "src": "9084:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12050,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12300,
                      "src": "9047:20:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9047:45:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12058,
                  "nodeType": "ExpressionStatement",
                  "src": "9047:45:103"
                },
                {
                  "expression": {
                    "id": 12063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12059,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11519,
                        "src": "9103:9:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 12061,
                      "indexExpression": {
                        "id": 12060,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12027,
                        "src": "9113:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9103:13:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 12062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9120:1:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9103:18:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12064,
                  "nodeType": "ExpressionStatement",
                  "src": "9103:18:103"
                },
                {
                  "expression": {
                    "id": 12069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12065,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11515,
                        "src": "9131:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 12067,
                      "indexExpression": {
                        "id": 12066,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12029,
                        "src": "9139:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9131:16:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12068,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12027,
                      "src": "9150:2:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9131:21:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12070,
                  "nodeType": "ExpressionStatement",
                  "src": "9131:21:103"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 12074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9185:1:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 12073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9177:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12072,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9177:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9177:10:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12076,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12027,
                        "src": "9189:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12077,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12029,
                        "src": "9193:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12071,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12316,
                      "src": "9168:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9168:33:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12079,
                  "nodeType": "EmitStatement",
                  "src": "9163:38:103"
                }
              ]
            },
            "documentation": {
              "id": 12025,
              "nodeType": "StructuredDocumentation",
              "src": "8520:311:103",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 12081,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8845:5:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12027,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8859:2:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12081,
                  "src": "8851:10:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8851:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12029,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8871:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12081,
                  "src": "8863:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8863:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8850:29:103"
            },
            "returnParameters": {
              "id": 12031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8897:0:103"
            },
            "scope": 12301,
            "src": "8836:372:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12131,
              "nodeType": "Block",
              "src": "9474:299:103",
              "statements": [
                {
                  "assignments": [
                    12088
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12088,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9492:5:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 12131,
                      "src": "9484:13:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12087,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9484:7:103",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12093,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12091,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12084,
                        "src": "9515:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12089,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12301,
                        "src": "9500:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$12301_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 12090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11629,
                      "src": "9500:14:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 12092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9500:23:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9484:39:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12095,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12088,
                        "src": "9555:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 12098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9570:1:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 12097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9562:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12096,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9562:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9562:10:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12100,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12084,
                        "src": "9574:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12094,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12300,
                      "src": "9534:20:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9534:48:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12102,
                  "nodeType": "ExpressionStatement",
                  "src": "9534:48:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 12106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9637:1:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 12105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9629:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12104,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9629:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9629:10:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12108,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12084,
                        "src": "9641:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12103,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12225,
                      "src": "9620:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9620:29:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12110,
                  "nodeType": "ExpressionStatement",
                  "src": "9620:29:103"
                },
                {
                  "expression": {
                    "id": 12115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12111,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11519,
                        "src": "9660:9:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 12113,
                      "indexExpression": {
                        "id": 12112,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12088,
                        "src": "9670:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9660:16:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 12114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9680:1:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9660:21:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12116,
                  "nodeType": "ExpressionStatement",
                  "src": "9660:21:103"
                },
                {
                  "expression": {
                    "id": 12120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9691:23:103",
                    "subExpression": {
                      "baseExpression": {
                        "id": 12117,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11515,
                        "src": "9698:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 12119,
                      "indexExpression": {
                        "id": 12118,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12084,
                        "src": "9706:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9698:16:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12121,
                  "nodeType": "ExpressionStatement",
                  "src": "9691:23:103"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12123,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12088,
                        "src": "9739:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 12126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9754:1:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 12125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9746:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12124,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9746:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9746:10:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12128,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12084,
                        "src": "9758:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12122,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12316,
                      "src": "9730:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9730:36:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12130,
                  "nodeType": "EmitStatement",
                  "src": "9725:41:103"
                }
              ]
            },
            "documentation": {
              "id": 12082,
              "nodeType": "StructuredDocumentation",
              "src": "9214:206:103",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 12132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9434:5:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12084,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9448:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12132,
                  "src": "9440:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9440:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9439:17:103"
            },
            "returnParameters": {
              "id": 12086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9474:0:103"
            },
            "scope": 12301,
            "src": "9425:348:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12200,
              "nodeType": "Block",
              "src": "10176:451:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 12145,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12139,
                              "src": "10209:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 12143,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12301,
                              "src": "10194:6:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$12301_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 12144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11629,
                            "src": "10194:14:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 12146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10194:23:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 12147,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12135,
                          "src": "10221:4:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10194:31:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 12149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10227:43:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 12142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10186:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10186:85:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12151,
                  "nodeType": "ExpressionStatement",
                  "src": "10186:85:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12153,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12137,
                          "src": "10289:2:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 12156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10303:1:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 12155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10295:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12154,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10295:7:103",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10295:10:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10289:16:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 12159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10307:38:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 12152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10281:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10281:65:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12161,
                  "nodeType": "ExpressionStatement",
                  "src": "10281:65:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12163,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12135,
                        "src": "10378:4:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12164,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12137,
                        "src": "10384:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12165,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12139,
                        "src": "10388:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12162,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12300,
                      "src": "10357:20:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10357:39:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12167,
                  "nodeType": "ExpressionStatement",
                  "src": "10357:39:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 12171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10475:1:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 12170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10467:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12169,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10467:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10467:10:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12173,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12139,
                        "src": "10479:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12168,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12225,
                      "src": "10458:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10458:29:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12175,
                  "nodeType": "ExpressionStatement",
                  "src": "10458:29:103"
                },
                {
                  "expression": {
                    "id": 12180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12176,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11519,
                        "src": "10498:9:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 12178,
                      "indexExpression": {
                        "id": 12177,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12135,
                        "src": "10508:4:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10498:15:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 12179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10517:1:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10498:20:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12181,
                  "nodeType": "ExpressionStatement",
                  "src": "10498:20:103"
                },
                {
                  "expression": {
                    "id": 12186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12182,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11519,
                        "src": "10528:9:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 12184,
                      "indexExpression": {
                        "id": 12183,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12137,
                        "src": "10538:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10528:13:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 12185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10545:1:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10528:18:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12187,
                  "nodeType": "ExpressionStatement",
                  "src": "10528:18:103"
                },
                {
                  "expression": {
                    "id": 12192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12188,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11515,
                        "src": "10556:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 12190,
                      "indexExpression": {
                        "id": 12189,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12139,
                        "src": "10564:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10556:16:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12191,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12137,
                      "src": "10575:2:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10556:21:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12193,
                  "nodeType": "ExpressionStatement",
                  "src": "10556:21:103"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12195,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12135,
                        "src": "10602:4:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12196,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12137,
                        "src": "10608:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12197,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12139,
                        "src": "10612:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12194,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12316,
                      "src": "10593:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10593:27:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12199,
                  "nodeType": "EmitStatement",
                  "src": "10588:32:103"
                }
              ]
            },
            "documentation": {
              "id": 12133,
              "nodeType": "StructuredDocumentation",
              "src": "9779:313:103",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 12201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10106:9:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12135,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10124:4:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12201,
                  "src": "10116:12:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10116:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12137,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10138:2:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12201,
                  "src": "10130:10:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10130:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12139,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10150:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12201,
                  "src": "10142:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10142:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10115:43:103"
            },
            "returnParameters": {
              "id": 12141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10176:0:103"
            },
            "scope": 12301,
            "src": "10097:530:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12224,
              "nodeType": "Block",
              "src": "10802:107:103",
              "statements": [
                {
                  "expression": {
                    "id": 12213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12209,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11523,
                        "src": "10812:15:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 12211,
                      "indexExpression": {
                        "id": 12210,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12206,
                        "src": "10828:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10812:24:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12212,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12204,
                      "src": "10839:2:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10812:29:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12214,
                  "nodeType": "ExpressionStatement",
                  "src": "10812:29:103"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12218,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12206,
                            "src": "10880:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 12216,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12301,
                            "src": "10865:6:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$12301_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 12217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11629,
                          "src": "10865:14:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 12219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10865:23:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12220,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12204,
                        "src": "10890:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12221,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12206,
                        "src": "10894:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12215,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12325,
                      "src": "10856:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10856:46:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12223,
                  "nodeType": "EmitStatement",
                  "src": "10851:51:103"
                }
              ]
            },
            "documentation": {
              "id": 12202,
              "nodeType": "StructuredDocumentation",
              "src": "10633:100:103",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 12225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10747:8:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12204,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10764:2:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12225,
                  "src": "10756:10:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10756:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12206,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10776:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12225,
                  "src": "10768:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10768:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10755:29:103"
            },
            "returnParameters": {
              "id": 12208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10802:0:103"
            },
            "scope": 12301,
            "src": "10738:171:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12288,
              "nodeType": "Block",
              "src": "11592:694:103",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 12239,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12230,
                        "src": "11606:2:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 12240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14630,
                      "src": "11606:13:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 12241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11606:15:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 12286,
                    "nodeType": "Block",
                    "src": "12244:36:103",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 12284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12265:4:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 12238,
                        "id": 12285,
                        "nodeType": "Return",
                        "src": "12258:11:103"
                      }
                    ]
                  },
                  "id": 12287,
                  "nodeType": "IfStatement",
                  "src": "11602:678:103",
                  "trueBody": {
                    "id": 12283,
                    "nodeType": "Block",
                    "src": "11623:615:103",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 12263,
                              "nodeType": "Block",
                              "src": "11738:95:103",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 12261,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 12255,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12253,
                                      "src": "11763:6:103",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 12257,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12230,
                                              "src": "11789:2:103",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 12256,
                                            "name": "IERC721Receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12435,
                                            "src": "11773:15:103",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$12435_$",
                                              "typeString": "type(contract IERC721Receiver)"
                                            }
                                          },
                                          "id": 12258,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11773:19:103",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC721Receiver_$12435",
                                            "typeString": "contract IERC721Receiver"
                                          }
                                        },
                                        "id": 12259,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 12434,
                                        "src": "11773:36:103",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                        }
                                      },
                                      "id": 12260,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "11773:45:103",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "11763:55:103",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 12238,
                                  "id": 12262,
                                  "nodeType": "Return",
                                  "src": "11756:62:103"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 12264,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 12254,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 12253,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "11730:6:103",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 12264,
                                  "src": "11723:13:103",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 12252,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11723:6:103",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "11722:15:103"
                            },
                            "src": "11714:119:103"
                          },
                          {
                            "block": {
                              "id": 12280,
                              "nodeType": "Block",
                              "src": "11862:366:103",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 12271,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 12268,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12266,
                                        "src": "11884:6:103",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 12269,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "11884:13:103",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 12270,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11901:1:103",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "11884:18:103",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 12278,
                                    "nodeType": "Block",
                                    "src": "12011:203:103",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "12110:86:103",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12147:2:103",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12151:6:103"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12143:3:103"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12143:15:103"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12166:6:103"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12160:5:103"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12160:13:103"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12136:6:103"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12136:38:103"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12136:38:103"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 12266,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12151:6:103",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 12266,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12166:6:103",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 12277,
                                        "nodeType": "InlineAssembly",
                                        "src": "12101:95:103"
                                      }
                                    ]
                                  },
                                  "id": 12279,
                                  "nodeType": "IfStatement",
                                  "src": "11880:334:103",
                                  "trueBody": {
                                    "id": 12276,
                                    "nodeType": "Block",
                                    "src": "11904:101:103",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 12273,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11933:52:103",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 12272,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "11926:6:103",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 12274,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11926:60:103",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 12275,
                                        "nodeType": "ExpressionStatement",
                                        "src": "11926:60:103"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 12281,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 12267,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 12266,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "11854:6:103",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 12281,
                                  "src": "11841:19:103",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 12265,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11841:5:103",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "11840:21:103"
                            },
                            "src": "11834:394:103"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 12246,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15002,
                                "src": "11678:10:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 12247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11678:12:103",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 12248,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12228,
                              "src": "11692:4:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 12249,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12232,
                              "src": "11698:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 12250,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12234,
                              "src": "11707:5:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 12243,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12230,
                                  "src": "11657:2:103",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 12242,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12435,
                                "src": "11641:15:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$12435_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 12244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11641:19:103",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$12435",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 12245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12434,
                            "src": "11641:36:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 12251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11641:72:103",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 12282,
                        "nodeType": "TryStatement",
                        "src": "11637:591:103"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 12226,
              "nodeType": "StructuredDocumentation",
              "src": "10915:542:103",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 12289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "11471:22:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12228,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11502:4:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12289,
                  "src": "11494:12:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11494:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12230,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11516:2:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12289,
                  "src": "11508:10:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11508:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12232,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11528:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12289,
                  "src": "11520:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11520:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12234,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "11550:5:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12289,
                  "src": "11537:18:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12233,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11537:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11493:63:103"
            },
            "returnParameters": {
              "id": 12238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12237,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12289,
                  "src": "11582:4:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12236,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11582:4:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11581:6:103"
            },
            "scope": 12301,
            "src": "11462:824:103",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 12299,
              "nodeType": "Block",
              "src": "12972:3:103",
              "statements": []
            },
            "documentation": {
              "id": 12290,
              "nodeType": "StructuredDocumentation",
              "src": "12292:585:103",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 12300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "12891:20:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12292,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12920:4:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12300,
                  "src": "12912:12:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12912:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12294,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12934:2:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12300,
                  "src": "12926:10:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12926:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12296,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12946:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 12300,
                  "src": "12938:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12938:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12911:43:103"
            },
            "returnParameters": {
              "id": 12298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12972:0:103"
            },
            "scope": 12301,
            "src": "12882:93:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 12302,
        "src": "554:12423:103"
      }
    ],
    "src": "33:12945:103"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620014d2380380620014d28339810160408190526200003491620001c1565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611247806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec576100cf565b80636352211e1461017757806370a082311461018a57806395d89b41146101ab576100cf565b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610f3f565b610228565b60405190151581526020015b60405180910390f35b61010461027c565b6040516100f39190611027565b61012461011f366004610f77565b61030e565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610f16565b6103a8565b005b61014f61015f366004610dcc565b6104be565b61014f610172366004610dcc565b6104ef565b610124610185366004610f77565b61050a565b61019d610198366004610d80565b610581565b6040519081526020016100f3565b610104610608565b61014f6101c1366004610edc565b610617565b61014f6101d4366004610e07565b6106e9565b6101046101e7366004610f77565b610721565b6100e76101fa366004610d9a565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b60606000805461028b9061114c565b80601f01602080910402602001604051908101604052809291908181526020018280546102b79061114c565b80156103045780601f106102d957610100808354040283529160200191610304565b820191906000526020600020905b8154815290600101906020018083116102e757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b38261050a565b9050806001600160a01b0316836001600160a01b031614156104215760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610383565b336001600160a01b038216148061043d575061043d81336101fa565b6104af5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610383565b6104b98383610809565b505050565b6104c83382610877565b6104e45760405162461bcd60e51b81526004016103839061108c565b6104b983838361096e565b6104b9838383604051806020016040528060008152506106e9565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610383565b60006001600160a01b0382166105ec5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610383565b506001600160a01b031660009081526003602052604090205490565b60606001805461028b9061114c565b6001600160a01b0382163314156106705760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610383565b3360008181526005602090815260408083206001600160a01b0387168085529252909120805460ff1916841515179055906001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516106dd911515815260200190565b60405180910390a35050565b6106f33383610877565b61070f5760405162461bcd60e51b81526004016103839061108c565b61071b84848484610b0e565b50505050565b6000818152600260205260409020546060906001600160a01b03166107a05760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610383565b60006107b760408051602081019091526000815290565b905060008151116107d75760405180602001604052806000815250610802565b806107e184610b41565b6040516020016107f2929190610fbb565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061083e8261050a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108f05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610383565b60006108fb8361050a565b9050806001600160a01b0316846001600160a01b031614806109365750836001600160a01b031661092b8461030e565b6001600160a01b0316145b8061096657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166109818261050a565b6001600160a01b0316146109e95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610383565b6001600160a01b038216610a4b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610383565b610a56600082610809565b6001600160a01b0383166000908152600360205260408120805460019290610a7f908490611109565b90915550506001600160a01b0382166000908152600360205260408120805460019290610aad9084906110dd565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b1984848461096e565b610b2584848484610c5c565b61071b5760405162461bcd60e51b81526004016103839061103a565b606081610b6657506040805180820190915260018152600360fc1b6020820152610277565b8160005b8115610b905780610b7a81611187565b9150610b899050600a836110f5565b9150610b6a565b60008167ffffffffffffffff811115610bb957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610be3576020820181803683370190505b5090505b841561096657610bf8600183611109565b9150610c05600a866111a2565b610c109060306110dd565b60f81b818381518110610c3357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610c55600a866110f5565b9450610be7565b60006001600160a01b0384163b15610d5e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ca0903390899088908890600401610fea565b602060405180830381600087803b158015610cba57600080fd5b505af1925050508015610cea575060408051601f3d908101601f19168201909252610ce791810190610f5b565b60015b610d44573d808015610d18576040519150601f19603f3d011682016040523d82523d6000602084013e610d1d565b606091505b508051610d3c5760405162461bcd60e51b81526004016103839061103a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610966565b506001949350505050565b80356001600160a01b038116811461027757600080fd5b600060208284031215610d91578081fd5b61080282610d69565b60008060408385031215610dac578081fd5b610db583610d69565b9150610dc360208401610d69565b90509250929050565b600080600060608486031215610de0578081fd5b610de984610d69565b9250610df760208501610d69565b9150604084013590509250925092565b60008060008060808587031215610e1c578081fd5b610e2585610d69565b9350610e3360208601610d69565b925060408501359150606085013567ffffffffffffffff80821115610e56578283fd5b818701915087601f830112610e69578283fd5b813581811115610e7b57610e7b6111e2565b604051601f8201601f19908116603f01168101908382118183101715610ea357610ea36111e2565b816040528281528a6020848701011115610ebb578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215610eee578182fd5b610ef783610d69565b915060208301358015158114610f0b578182fd5b809150509250929050565b60008060408385031215610f28578182fd5b610f3183610d69565b946020939093013593505050565b600060208284031215610f50578081fd5b8135610802816111f8565b600060208284031215610f6c578081fd5b8151610802816111f8565b600060208284031215610f88578081fd5b5035919050565b60008151808452610fa7816020860160208601611120565b601f01601f19169290920160200192915050565b60008351610fcd818460208801611120565b835190830190610fe1818360208801611120565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061101d90830184610f8f565b9695505050505050565b6000602082526108026020830184610f8f565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156110f0576110f06111b6565b500190565b600082611104576111046111cc565b500490565b60008282101561111b5761111b6111b6565b500390565b60005b8381101561113b578181015183820152602001611123565b8381111561071b5750506000910152565b600181811c9082168061116057607f821691505b6020821081141561118157634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561119b5761119b6111b6565b5060010190565b6000826111b1576111b16111cc565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461120e57600080fd5b5056fea26469706673582212200c03a2aecbaa3c19b7b62d1d27804c8389bb457f56555f0afc5bc5c76a6d24a564736f6c63430008030033",
  "bytecodeSha1": "2e899043b13dd443f7cf259365d7d8ee97e0f574",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "103": {
        "ERC721._safeTransfer": {
          "60": [
            6568,
            6616,
            true
          ]
        },
        "ERC721._transfer": {
          "58": [
            10194,
            10225,
            true
          ],
          "59": [
            10289,
            10305,
            true
          ]
        },
        "ERC721.approve": {
          "49": [
            3508,
            3519,
            true
          ],
          "50": [
            3576,
            3597,
            true
          ],
          "51": [
            3601,
            3638,
            true
          ]
        },
        "ERC721.balanceOf": {
          "54": [
            1948,
            1967,
            true
          ]
        },
        "ERC721.ownerOf": {
          "53": [
            2252,
            2271,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "56": [
            5396,
            5437,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "55": [
            4206,
            4230,
            true
          ]
        },
        "ERC721.tokenURI": {
          "57": [
            2974,
            2999,
            true
          ]
        },
        "ERC721.transferFrom": {
          "52": [
            4843,
            4884,
            true
          ]
        }
      },
      "104": {},
      "105": {},
      "111": {},
      "119": {},
      "121": {},
      "124": {
        "Strings.toString": {
          "61": [
            544,
            554,
            false
          ]
        }
      },
      "131": {},
      "135": {}
    },
    "statements": {
      "103": {
        "ERC721._approve": {
          "26": [
            10812,
            10841
          ],
          "27": [
            10851,
            10902
          ]
        },
        "ERC721._baseURI": {
          "24": [
            3298,
            3307
          ]
        },
        "ERC721._checkOnERC721Received": {
          "46": [
            11926,
            11986
          ],
          "47": [
            11756,
            11818
          ],
          "48": [
            12258,
            12269
          ]
        },
        "ERC721._exists": {
          "4": [
            7062,
            7099
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "28": [
            7373,
            7446
          ],
          "29": [
            7505,
            7601
          ]
        },
        "ERC721._safeTransfer": {
          "37": [
            6522,
            6550
          ],
          "38": [
            6560,
            6671
          ]
        },
        "ERC721._transfer": {
          "30": [
            10186,
            10271
          ],
          "31": [
            10281,
            10346
          ],
          "32": [
            10458,
            10487
          ],
          "33": [
            10498,
            10518
          ],
          "34": [
            10528,
            10546
          ],
          "35": [
            10556,
            10577
          ],
          "36": [
            10588,
            10620
          ]
        },
        "ERC721.approve": {
          "7": [
            3500,
            3557
          ],
          "9": [
            3568,
            3720
          ],
          "10": [
            3731,
            3752
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            1940,
            2014
          ],
          "16": [
            2024,
            2047
          ]
        },
        "ERC721.getApproved": {
          "5": [
            3915,
            3988
          ],
          "6": [
            3999,
            4030
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            4573,
            4615
          ]
        },
        "ERC721.name": {
          "3": [
            2487,
            2499
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            2244,
            2317
          ]
        },
        "ERC721.safeTransferFrom": {
          "13": [
            5153,
            5192
          ],
          "21": [
            5388,
            5491
          ],
          "22": [
            5501,
            5540
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            4198,
            4260
          ],
          "19": [
            4271,
            4324
          ],
          "20": [
            4334,
            4387
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1620,
            1783
          ]
        },
        "ERC721.symbol": {
          "17": [
            2651,
            2665
          ]
        },
        "ERC721.tokenURI": {
          "23": [
            2836,
            2912
          ],
          "25": [
            2967,
            3084
          ]
        },
        "ERC721.transferFrom": {
          "11": [
            4835,
            4938
          ],
          "12": [
            4949,
            4977
          ]
        }
      },
      "104": {},
      "105": {},
      "111": {},
      "119": {
        "Address.isContract": {
          "45": [
            1109,
            1124
          ]
        }
      },
      "121": {
        "Context._msgSender": {
          "8": [
            658,
            675
          ]
        }
      },
      "124": {
        "Strings.toString": {
          "39": [
            570,
            580
          ],
          "40": [
            686,
            694
          ],
          "41": [
            708,
            718
          ],
          "42": [
            820,
            831
          ],
          "43": [
            845,
            901
          ],
          "44": [
            915,
            926
          ]
        }
      },
      "131": {
        "ERC165.supportsInterface": {
          "2": [
            864,
            911
          ]
        }
      },
      "135": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "IERC165",
    "IERC721",
    "IERC721Metadata",
    "IERC721Receiver",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec576100cf565b80636352211e1461017757806370a082311461018a57806395d89b41146101ab576100cf565b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610f3f565b610228565b60405190151581526020015b60405180910390f35b61010461027c565b6040516100f39190611027565b61012461011f366004610f77565b61030e565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610f16565b6103a8565b005b61014f61015f366004610dcc565b6104be565b61014f610172366004610dcc565b6104ef565b610124610185366004610f77565b61050a565b61019d610198366004610d80565b610581565b6040519081526020016100f3565b610104610608565b61014f6101c1366004610edc565b610617565b61014f6101d4366004610e07565b6106e9565b6101046101e7366004610f77565b610721565b6100e76101fa366004610d9a565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b60606000805461028b9061114c565b80601f01602080910402602001604051908101604052809291908181526020018280546102b79061114c565b80156103045780601f106102d957610100808354040283529160200191610304565b820191906000526020600020905b8154815290600101906020018083116102e757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b38261050a565b9050806001600160a01b0316836001600160a01b031614156104215760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610383565b336001600160a01b038216148061043d575061043d81336101fa565b6104af5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610383565b6104b98383610809565b505050565b6104c83382610877565b6104e45760405162461bcd60e51b81526004016103839061108c565b6104b983838361096e565b6104b9838383604051806020016040528060008152506106e9565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610383565b60006001600160a01b0382166105ec5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610383565b506001600160a01b031660009081526003602052604090205490565b60606001805461028b9061114c565b6001600160a01b0382163314156106705760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610383565b3360008181526005602090815260408083206001600160a01b0387168085529252909120805460ff1916841515179055906001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516106dd911515815260200190565b60405180910390a35050565b6106f33383610877565b61070f5760405162461bcd60e51b81526004016103839061108c565b61071b84848484610b0e565b50505050565b6000818152600260205260409020546060906001600160a01b03166107a05760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610383565b60006107b760408051602081019091526000815290565b905060008151116107d75760405180602001604052806000815250610802565b806107e184610b41565b6040516020016107f2929190610fbb565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061083e8261050a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108f05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610383565b60006108fb8361050a565b9050806001600160a01b0316846001600160a01b031614806109365750836001600160a01b031661092b8461030e565b6001600160a01b0316145b8061096657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166109818261050a565b6001600160a01b0316146109e95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610383565b6001600160a01b038216610a4b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610383565b610a56600082610809565b6001600160a01b0383166000908152600360205260408120805460019290610a7f908490611109565b90915550506001600160a01b0382166000908152600360205260408120805460019290610aad9084906110dd565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b1984848461096e565b610b2584848484610c5c565b61071b5760405162461bcd60e51b81526004016103839061103a565b606081610b6657506040805180820190915260018152600360fc1b6020820152610277565b8160005b8115610b905780610b7a81611187565b9150610b899050600a836110f5565b9150610b6a565b60008167ffffffffffffffff811115610bb957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610be3576020820181803683370190505b5090505b841561096657610bf8600183611109565b9150610c05600a866111a2565b610c109060306110dd565b60f81b818381518110610c3357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610c55600a866110f5565b9450610be7565b60006001600160a01b0384163b15610d5e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ca0903390899088908890600401610fea565b602060405180830381600087803b158015610cba57600080fd5b505af1925050508015610cea575060408051601f3d908101601f19168201909252610ce791810190610f5b565b60015b610d44573d808015610d18576040519150601f19603f3d011682016040523d82523d6000602084013e610d1d565b606091505b508051610d3c5760405162461bcd60e51b81526004016103839061103a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610966565b506001949350505050565b80356001600160a01b038116811461027757600080fd5b600060208284031215610d91578081fd5b61080282610d69565b60008060408385031215610dac578081fd5b610db583610d69565b9150610dc360208401610d69565b90509250929050565b600080600060608486031215610de0578081fd5b610de984610d69565b9250610df760208501610d69565b9150604084013590509250925092565b60008060008060808587031215610e1c578081fd5b610e2585610d69565b9350610e3360208601610d69565b925060408501359150606085013567ffffffffffffffff80821115610e56578283fd5b818701915087601f830112610e69578283fd5b813581811115610e7b57610e7b6111e2565b604051601f8201601f19908116603f01168101908382118183101715610ea357610ea36111e2565b816040528281528a6020848701011115610ebb578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215610eee578182fd5b610ef783610d69565b915060208301358015158114610f0b578182fd5b809150509250929050565b60008060408385031215610f28578182fd5b610f3183610d69565b946020939093013593505050565b600060208284031215610f50578081fd5b8135610802816111f8565b600060208284031215610f6c578081fd5b8151610802816111f8565b600060208284031215610f88578081fd5b5035919050565b60008151808452610fa7816020860160208601611120565b601f01601f19169290920160200192915050565b60008351610fcd818460208801611120565b835190830190610fe1818360208801611120565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061101d90830184610f8f565b9695505050505050565b6000602082526108026020830184610f8f565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156110f0576110f06111b6565b500190565b600082611104576111046111cc565b500490565b60008282101561111b5761111b6111b6565b500390565b60005b8381101561113b578181015183820152602001611123565b8381111561071b5750506000910152565b600181811c9082168061116057607f821691505b6020821081141561118157634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561119b5761119b6111b6565b5060010190565b6000826111b1576111b16111cc565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461120e57600080fd5b5056fea26469706673582212200c03a2aecbaa3c19b7b62d1d27804c8389bb457f56555f0afc5bc5c76a6d24a564736f6c63430008030033",
  "deployedSourceMap": "554:12423:103:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1502:288;;;;;;:::i;:::-;;:::i;:::-;;;5162:14:144;;5155:22;5137:41;;5125:2;5110:18;1502:288:103;;;;;;;;2408:98;;;:::i;:::-;;;;;;;:::i;3820:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4460:32:144;;;4442:51;;4430:2;4415:18;3820:217:103;4397:102:144;3371:388:103;;;;;;:::i;:::-;;:::i;:::-;;4684:300;;;;;;:::i;:::-;;:::i;5050:149::-;;;;;;:::i;:::-;;:::i;2111:235::-;;;;;;:::i;:::-;;:::i;1849:205::-;;;;;;:::i;:::-;;:::i;:::-;;;10455:25:144;;;10443:2;10428:18;1849:205:103;10410:76:144;2570:102:103;;;:::i;4104:290::-;;;;;;:::i;:::-;;:::i;5265:282::-;;;;;;:::i;:::-;;:::i;2738:353::-;;;;;;:::i;:::-;;:::i;4460:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4580:25:103;;;4557:4;4580:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4460:162;1502:288;1604:4;-1:-1:-1;;;;;;1627:40:103;;-1:-1:-1;;;1627:40:103;;:104;;-1:-1:-1;;;;;;;1683:48:103;;-1:-1:-1;;;1683:48:103;1627:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:131;;;1747:36:103;1620:163;;1502:288;;;;:::o;2408:98::-;2462:13;2494:5;2487:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2408:98;:::o;3820:217::-;3896:7;7069:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7069:16:103;3915:73;;;;-1:-1:-1;;;3915:73:103;;8452:2:144;3915:73:103;;;8434:21:144;8491:2;8471:18;;;8464:30;8530:34;8510:18;;;8503:62;-1:-1:-1;;;8581:18:144;;;8574:42;8633:19;;3915:73:103;;;;;;;;;-1:-1:-1;4006:24:103;;;;:15;:24;;;;;;-1:-1:-1;;;;;4006:24:103;;3820:217::o;3371:388::-;3451:13;3467:23;3482:7;3467:14;:23::i;:::-;3451:39;;3514:5;-1:-1:-1;;;;;3508:11:103;:2;-1:-1:-1;;;;;3508:11:103;;;3500:57;;;;-1:-1:-1;;;3500:57:103;;9691:2:144;3500:57:103;;;9673:21:144;9730:2;9710:18;;;9703:30;9769:34;9749:18;;;9742:62;-1:-1:-1;;;9820:18:144;;;9813:31;9861:19;;3500:57:103;9663:223:144;3500:57:103;665:10:121;-1:-1:-1;;;;;3576:21:103;;;;:62;;-1:-1:-1;3601:37:103;3618:5;665:10:121;3625:12:103;586:96:121;3601:37:103;3568:152;;;;-1:-1:-1;;;3568:152:103;;7206:2:144;3568:152:103;;;7188:21:144;7245:2;7225:18;;;7218:30;7284:34;7264:18;;;7257:62;7355:26;7335:18;;;7328:54;7399:19;;3568:152:103;7178:246:144;3568:152:103;3731:21;3740:2;3744:7;3731:8;:21::i;:::-;3371:388;;;:::o;4684:300::-;4843:41;665:10:121;4876:7:103;4843:18;:41::i;:::-;4835:103;;;;-1:-1:-1;;;4835:103:103;;;;;;;:::i;:::-;4949:28;4959:4;4965:2;4969:7;4949:9;:28::i;5050:149::-;5153:39;5170:4;5176:2;5180:7;5153:39;;;;;;;;;;;;:16;:39::i;2111:235::-;2183:7;2218:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2218:16:103;2252:19;2244:73;;;;-1:-1:-1;;;2244:73:103;;8042:2:144;2244:73:103;;;8024:21:144;8081:2;8061:18;;;8054:30;8120:34;8100:18;;;8093:62;-1:-1:-1;;;8171:18:144;;;8164:39;8220:19;;2244:73:103;8014:231:144;1849:205:103;1921:7;-1:-1:-1;;;;;1948:19:103;;1940:74;;;;-1:-1:-1;;;1940:74:103;;7631:2:144;1940:74:103;;;7613:21:144;7670:2;7650:18;;;7643:30;7709:34;7689:18;;;7682:62;-1:-1:-1;;;7760:18:144;;;7753:40;7810:19;;1940:74:103;7603:232:144;1940:74:103;-1:-1:-1;;;;;;2031:16:103;;;;;:9;:16;;;;;;;1849:205::o;2570:102::-;2626:13;2658:7;2651:14;;;;;:::i;4104:290::-;-1:-1:-1;;;;;4206:24:103;;665:10:121;4206:24:103;;4198:62;;;;-1:-1:-1;;;4198:62:103;;6439:2:144;4198:62:103;;;6421:21:144;6478:2;6458:18;;;6451:30;6517:27;6497:18;;;6490:55;6562:18;;4198:62:103;6411:175:144;4198:62:103;665:10:121;4271:32:103;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4271:42:103;;;;;;;;;;:53;;-1:-1:-1;;4271:53:103;;;;;;;:42;-1:-1:-1;;;;;4339:48:103;;4378:8;4339:48;;;;5162:14:144;5155:22;5137:41;;5125:2;5110:18;;5092:92;4339:48:103;;;;;;;;4104:290;;:::o;5265:282::-;5396:41;665:10:121;5429:7:103;5396:18;:41::i;:::-;5388:103;;;;-1:-1:-1;;;5388:103:103;;;;;;;:::i;:::-;5501:39;5515:4;5521:2;5525:7;5534:5;5501:13;:39::i;:::-;5265:282;;;;:::o;2738:353::-;7046:4;7069:16;;;:7;:16;;;;;;2811:13;;-1:-1:-1;;;;;7069:16:103;2836:76;;;;-1:-1:-1;;;2836:76:103;;9275:2:144;2836:76:103;;;9257:21:144;9314:2;9294:18;;;9287:30;9353:34;9333:18;;;9326:62;-1:-1:-1;;;9404:18:144;;;9397:45;9459:19;;2836:76:103;9247:237:144;2836:76:103;2923:21;2947:10;3298:9;;;;;;;;;-1:-1:-1;3298:9:103;;3222:92;;2947:10;2923:34;;2998:1;2980:7;2974:21;:25;:110;;;;;;;;;;;;;;;;;3038:7;3047:18;:7;:16;:18::i;:::-;3021:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2974:110;2967:117;2738:353;-1:-1:-1;;;2738:353:103:o;10738:171::-;10812:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;10812:29:103;-1:-1:-1;;;;;10812:29:103;;;;;;;;:24;;10865:23;10812:24;10865:14;:23::i;:::-;-1:-1:-1;;;;;10856:46:103;;;;;;;;;;;10738:171;;:::o;7264:344::-;7357:4;7069:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7069:16:103;7373:73;;;;-1:-1:-1;;;7373:73:103;;6793:2:144;7373:73:103;;;6775:21:144;6832:2;6812:18;;;6805:30;6871:34;6851:18;;;6844:62;-1:-1:-1;;;6922:18:144;;;6915:42;6974:19;;7373:73:103;6765:234:144;7373:73:103;7456:13;7472:23;7487:7;7472:14;:23::i;:::-;7456:39;;7524:5;-1:-1:-1;;;;;7513:16:103;:7;-1:-1:-1;;;;;7513:16:103;;:51;;;;7557:7;-1:-1:-1;;;;;7533:31:103;:20;7545:7;7533:11;:20::i;:::-;-1:-1:-1;;;;;7533:31:103;;7513:51;:87;;;-1:-1:-1;;;;;;4580:25:103;;;4557:4;4580:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7568:32;7505:96;7264:344;-1:-1:-1;;;;7264:344:103:o;10097:530::-;10221:4;-1:-1:-1;;;;;10194:31:103;:23;10209:7;10194:14;:23::i;:::-;-1:-1:-1;;;;;10194:31:103;;10186:85;;;;-1:-1:-1;;;10186:85:103;;8865:2:144;10186:85:103;;;8847:21:144;8904:2;8884:18;;;8877:30;8943:34;8923:18;;;8916:62;-1:-1:-1;;;8994:18:144;;;8987:39;9043:19;;10186:85:103;8837:231:144;10186:85:103;-1:-1:-1;;;;;10289:16:103;;10281:65;;;;-1:-1:-1;;;10281:65:103;;6034:2:144;10281:65:103;;;6016:21:144;6073:2;6053:18;;;6046:30;6112:34;6092:18;;;6085:62;-1:-1:-1;;;6163:18:144;;;6156:34;6207:19;;10281:65:103;6006:226:144;10281:65:103;10458:29;10475:1;10479:7;10458:8;:29::i;:::-;-1:-1:-1;;;;;10498:15:103;;;;;;:9;:15;;;;;:20;;10517:1;;10498:15;:20;;10517:1;;10498:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10528:13:103;;;;;;:9;:13;;;;;:18;;10545:1;;10528:13;:18;;10545:1;;10528:18;:::i;:::-;;;;-1:-1:-1;;10556:16:103;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10556:21:103;-1:-1:-1;;;;;10556:21:103;;;;;;;;;10593:27;;10556:16;;10593:27;;;;;;;10097:530;;;:::o;6409:269::-;6522:28;6532:4;6538:2;6542:7;6522:9;:28::i;:::-;6568:48;6591:4;6597:2;6601:7;6610:5;6568:22;:48::i;:::-;6560:111;;;;-1:-1:-1;;;6560:111:103;;;;;;;:::i;271:703:124:-;327:13;544:10;540:51;;-1:-1:-1;570:10:124;;;;;;;;;;;;-1:-1:-1;;;570:10:124;;;;;;540:51;615:5;600:12;654:75;661:9;;654:75;;686:8;;;;:::i;:::-;;-1:-1:-1;708:10:124;;-1:-1:-1;716:2:124;708:10;;:::i;:::-;;;654:75;;;738:19;770:6;760:17;;;;;;-1:-1:-1;;;760:17:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;760:17:124;;738:39;;787:150;794:10;;787:150;;820:11;830:1;820:11;;:::i;:::-;;-1:-1:-1;888:10:124;896:2;888:5;:10;:::i;:::-;875:24;;:2;:24;:::i;:::-;862:39;;845:6;852;845:14;;;;;;-1:-1:-1;;;845:14:124;;;;;;;;;;;;:56;-1:-1:-1;;;;;845:56:124;;;;;;;;-1:-1:-1;915:11:124;924:2;915:11;;:::i;:::-;;;787:150;;11462:824:103;11582:4;-1:-1:-1;;;;;11606:13:103;;1078:20:119;1116:8;11602:678:103;;11641:72;;-1:-1:-1;;;11641:72:103;;-1:-1:-1;;;;;11641:36:103;;;;;:72;;665:10:121;;11692:4:103;;11698:7;;11707:5;;11641:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11641:72:103;;;;;;;;-1:-1:-1;;11641:72:103;;;;;;;;;;;;:::i;:::-;;;11637:591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11884:13:103;;11880:334;;11926:60;;-1:-1:-1;;;11926:60:103;;;;;;;:::i;11880:334::-;12166:6;12160:13;12151:6;12147:2;12143:15;12136:38;11637:591;-1:-1:-1;;;;;;11763:55:103;-1:-1:-1;;;11763:55:103;;-1:-1:-1;11756:62:103;;11602:678;-1:-1:-1;12265:4:103;11462:824;;;;;;:::o;14:173:144:-;82:20;;-1:-1:-1;;;;;131:31:144;;121:42;;111:2;;177:1;174;167:12;192:196;;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:270::-;;;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;;;;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:1183::-;;;;;1183:3;1171:9;1162:7;1158:23;1154:33;1151:2;;;1205:6;1197;1190:22;1151:2;1233:29;1252:9;1233:29;:::i;:::-;1223:39;;1281:38;1315:2;1304:9;1300:18;1281:38;:::i;:::-;1271:48;;1366:2;1355:9;1351:18;1338:32;1328:42;;1421:2;1410:9;1406:18;1393:32;1444:18;1485:2;1477:6;1474:14;1471:2;;;1506:6;1498;1491:22;1471:2;1549:6;1538:9;1534:22;1524:32;;1594:7;1587:4;1583:2;1579:13;1575:27;1565:2;;1621:6;1613;1606:22;1565:2;1662;1649:16;1684:2;1680;1677:10;1674:2;;;1690:18;;:::i;:::-;1765:2;1759:9;1733:2;1819:13;;-1:-1:-1;;1815:22:144;;;1839:2;1811:31;1807:40;1795:53;;;1863:18;;;1883:22;;;1860:46;1857:2;;;1909:18;;:::i;:::-;1949:10;1945:2;1938:22;1984:2;1976:6;1969:18;2024:7;2019:2;2014;2010;2006:11;2002:20;1999:33;1996:2;;;2050:6;2042;2035:22;1996:2;2111;2106;2102;2098:11;2093:2;2085:6;2081:15;2068:46;2134:15;;;2151:2;2130:24;2123:40;;;;1141:1053;;;;-1:-1:-1;1141:1053:144;;-1:-1:-1;;;;1141:1053:144:o;2199:367::-;;;2325:2;2313:9;2304:7;2300:23;2296:32;2293:2;;;2346:6;2338;2331:22;2293:2;2374:29;2393:9;2374:29;:::i;:::-;2364:39;;2453:2;2442:9;2438:18;2425:32;2500:5;2493:13;2486:21;2479:5;2476:32;2466:2;;2527:6;2519;2512:22;2466:2;2555:5;2545:15;;;2283:283;;;;;:::o;2571:264::-;;;2700:2;2688:9;2679:7;2675:23;2671:32;2668:2;;;2721:6;2713;2706:22;2668:2;2749:29;2768:9;2749:29;:::i;:::-;2739:39;2825:2;2810:18;;;;2797:32;;-1:-1:-1;;;2658:177:144:o;2840:255::-;;2951:2;2939:9;2930:7;2926:23;2922:32;2919:2;;;2972:6;2964;2957:22;2919:2;3016:9;3003:23;3035:30;3059:5;3035:30;:::i;3100:259::-;;3222:2;3210:9;3201:7;3197:23;3193:32;3190:2;;;3243:6;3235;3228:22;3190:2;3280:9;3274:16;3299:30;3323:5;3299:30;:::i;3364:190::-;;3476:2;3464:9;3455:7;3451:23;3447:32;3444:2;;;3497:6;3489;3482:22;3444:2;-1:-1:-1;3525:23:144;;3434:120;-1:-1:-1;3434:120:144:o;3559:257::-;;3638:5;3632:12;3665:6;3660:3;3653:19;3681:63;3737:6;3730:4;3725:3;3721:14;3714:4;3707:5;3703:16;3681:63;:::i;:::-;3798:2;3777:15;-1:-1:-1;;3773:29:144;3764:39;;;;3805:4;3760:50;;3608:208;-1:-1:-1;;3608:208:144:o;3821:470::-;;4038:6;4032:13;4054:53;4100:6;4095:3;4088:4;4080:6;4076:17;4054:53;:::i;:::-;4170:13;;4129:16;;;;4192:57;4170:13;4129:16;4226:4;4214:17;;4192:57;:::i;:::-;4265:20;;4008:283;-1:-1:-1;;;;4008:283:144:o;4504:488::-;-1:-1:-1;;;;;4773:15:144;;;4755:34;;4825:15;;4820:2;4805:18;;4798:43;4872:2;4857:18;;4850:34;;;4920:3;4915:2;4900:18;;4893:31;;;4504:488;;4941:45;;4966:19;;4958:6;4941:45;:::i;:::-;4933:53;4707:285;-1:-1:-1;;;;;;4707:285:144:o;5189:219::-;;5338:2;5327:9;5320:21;5358:44;5398:2;5387:9;5383:18;5375:6;5358:44;:::i;5413:414::-;5615:2;5597:21;;;5654:2;5634:18;;;5627:30;5693:34;5688:2;5673:18;;5666:62;-1:-1:-1;;;5759:2:144;5744:18;;5737:48;5817:3;5802:19;;5587:240::o;9891:413::-;10093:2;10075:21;;;10132:2;10112:18;;;10105:30;10171:34;10166:2;10151:18;;10144:62;-1:-1:-1;;;10237:2:144;10222:18;;10215:47;10294:3;10279:19;;10065:239::o;10491:128::-;;10562:1;10558:6;10555:1;10552:13;10549:2;;;10568:18;;:::i;:::-;-1:-1:-1;10604:9:144;;10539:80::o;10624:120::-;;10690:1;10680:2;;10695:18;;:::i;:::-;-1:-1:-1;10729:9:144;;10670:74::o;10749:125::-;;10817:1;10814;10811:8;10808:2;;;10822:18;;:::i;:::-;-1:-1:-1;10859:9:144;;10798:76::o;10879:258::-;10951:1;10961:113;10975:6;10972:1;10969:13;10961:113;;;11051:11;;;11045:18;11032:11;;;11025:39;10997:2;10990:10;10961:113;;;11092:6;11089:1;11086:13;11083:2;;;-1:-1:-1;;11127:1:144;11109:16;;11102:27;10932:205::o;11142:380::-;11221:1;11217:12;;;;11264;;;11285:2;;11339:4;11331:6;11327:17;11317:27;;11285:2;11392;11384:6;11381:14;11361:18;11358:38;11355:2;;;11438:10;11433:3;11429:20;11426:1;11419:31;11473:4;11470:1;11463:15;11501:4;11498:1;11491:15;11355:2;;11197:325;;;:::o;11527:135::-;;-1:-1:-1;;11587:17:144;;11584:2;;;11607:18;;:::i;:::-;-1:-1:-1;11654:1:144;11643:13;;11574:88::o;11667:112::-;;11725:1;11715:2;;11730:18;;:::i;:::-;-1:-1:-1;11764:9:144;;11705:74::o;11784:127::-;11845:10;11840:3;11836:20;11833:1;11826:31;11876:4;11873:1;11866:15;11900:4;11897:1;11890:15;11916:127;11977:10;11972:3;11968:20;11965:1;11958:31;12008:4;12005:1;11998:15;12032:4;12029:1;12022:15;12048:127;12109:10;12104:3;12100:20;12097:1;12090:31;12140:4;12137:1;12130:15;12164:4;12161:1;12154:15;12180:131;-1:-1:-1;;;;;;12254:32:144;;12244:43;;12234:2;;12301:1;12298;12291:12;12234:2;12224:87;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    554,
    12977
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3F JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD80 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x608 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xEDC JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x28B SWAP1 PUSH2 0x114C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B7 SWAP1 PUSH2 0x114C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x304 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x304 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 DUP3 PUSH2 0x50A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x421 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x383 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43D JUMPI POP PUSH2 0x43D DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x383 JUMP JUMPDEST PUSH2 0x4B9 DUP4 DUP4 PUSH2 0x809 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C8 CALLER DUP3 PUSH2 0x877 JUMP JUMPDEST PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x383 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH2 0x4B9 DUP4 DUP4 DUP4 PUSH2 0x96E JUMP JUMPDEST PUSH2 0x4B9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x383 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x383 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x28B SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x383 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 ISZERO ISZERO OR SWAP1 SSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6DD SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6F3 CALLER DUP4 PUSH2 0x877 JUMP JUMPDEST PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x383 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH2 0x71B DUP5 DUP5 DUP5 DUP5 PUSH2 0xB0E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x383 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x802 JUMP JUMPDEST DUP1 PUSH2 0x7E1 DUP5 PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7F2 SWAP3 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x83E DUP3 PUSH2 0x50A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x383 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FB DUP4 PUSH2 0x50A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x936 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x92B DUP5 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x966 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x981 DUP3 PUSH2 0x50A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x383 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x383 JUMP JUMPDEST PUSH2 0xA56 PUSH1 0x0 DUP3 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA7F SWAP1 DUP5 SWAP1 PUSH2 0x1109 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xAAD SWAP1 DUP5 SWAP1 PUSH2 0x10DD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xB19 DUP5 DUP5 DUP5 PUSH2 0x96E JUMP JUMPDEST PUSH2 0xB25 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC5C JUMP JUMPDEST PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x383 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB66 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x277 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB90 JUMPI DUP1 PUSH2 0xB7A DUP2 PUSH2 0x1187 JUMP JUMPDEST SWAP2 POP PUSH2 0xB89 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x10F5 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBE3 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x966 JUMPI PUSH2 0xBF8 PUSH1 0x1 DUP4 PUSH2 0x1109 JUMP JUMPDEST SWAP2 POP PUSH2 0xC05 PUSH1 0xA DUP7 PUSH2 0x11A2 JUMP JUMPDEST PUSH2 0xC10 SWAP1 PUSH1 0x30 PUSH2 0x10DD JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC33 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC55 PUSH1 0xA DUP7 PUSH2 0x10F5 JUMP JUMPDEST SWAP5 POP PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD5E JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xCA0 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCEA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCE7 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD44 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xD18 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x383 SWAP1 PUSH2 0x103A JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x966 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD91 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x802 DUP3 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDAC JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xDB5 DUP4 PUSH2 0xD69 JUMP JUMPDEST SWAP2 POP PUSH2 0xDC3 PUSH1 0x20 DUP5 ADD PUSH2 0xD69 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDE0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xDE9 DUP5 PUSH2 0xD69 JUMP JUMPDEST SWAP3 POP PUSH2 0xDF7 PUSH1 0x20 DUP6 ADD PUSH2 0xD69 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE1C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE25 DUP6 PUSH2 0xD69 JUMP JUMPDEST SWAP4 POP PUSH2 0xE33 PUSH1 0x20 DUP7 ADD PUSH2 0xD69 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE56 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE69 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE7B JUMPI PUSH2 0xE7B PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEA3 JUMPI PUSH2 0xEA3 PUSH2 0x11E2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEBB JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP2 DUP3 ADD PUSH1 0x20 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEEE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xEF7 DUP4 PUSH2 0xD69 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF0B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF28 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xF31 DUP4 PUSH2 0xD69 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF50 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x802 DUP2 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF6C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x802 DUP2 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF88 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xFA7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFCD DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1120 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFE1 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1120 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x101D SWAP1 DUP4 ADD DUP5 PUSH2 0xF8F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x802 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F0 JUMPI PUSH2 0x10F0 PUSH2 0x11B6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1104 JUMPI PUSH2 0x1104 PUSH2 0x11CC JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x111B JUMPI PUSH2 0x111B PUSH2 0x11B6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x113B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1123 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x71B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1160 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1181 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x119B JUMPI PUSH2 0x119B PUSH2 0x11B6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11B1 JUMPI PUSH2 0x11B1 PUSH2 0x11CC JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x120E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC SUB LOG2 0xAE 0xCB 0xAA EXTCODECOPY NOT 0xB7 0xB6 0x2D SAR 0x27 DUP1 0x4C DUP4 DUP10 0xBB GASLIMIT PUSH32 0x56555F0AFC5BC5C76A6D24A564736F6C63430008030033000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "5": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "CALLVALUE",
      "path": "103"
    },
    "6": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "7": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "ISZERO",
      "path": "103"
    },
    "8": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "12": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "REVERT",
      "path": "103"
    },
    "16": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "17": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "POP",
      "path": "103"
    },
    "18": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "CALLDATASIZE",
      "path": "103"
    },
    "21": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "LT",
      "path": "103"
    },
    "22": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "26": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "CALLDATALOAD",
      "path": "103"
    },
    "29": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "SHR",
      "path": "103"
    },
    "32": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "33": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "GT",
      "path": "103"
    },
    "39": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "43": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "44": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "GT",
      "path": "103"
    },
    "50": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "54": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "55": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "103"
    },
    "61": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "65": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "66": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "103"
    },
    "72": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "76": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "77": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "103"
    },
    "83": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "87": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "88": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "103"
    },
    "94": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "98": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xCF"
    },
    "101": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMP",
      "path": "103"
    },
    "102": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "103": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "104": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "103"
    },
    "110": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "114": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "115": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "103"
    },
    "121": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "125": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "126": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "103"
    },
    "132": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "136": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xCF"
    },
    "139": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMP",
      "path": "103"
    },
    "140": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "141": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "142": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "103"
    },
    "148": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "152": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "153": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "103"
    },
    "159": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "163": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "164": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "103"
    },
    "170": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "174": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "175": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "103"
    },
    "181": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "185": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "186": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "103"
    },
    "192": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "196": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "197": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "103"
    },
    "203": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "207": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "208": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "103"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "REVERT",
      "path": "103"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "CALLDATASIZE",
      "path": "103"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xF3F"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMP",
      "path": "103"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMP",
      "path": "103"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "DUP1",
      "path": "103"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "SUB",
      "path": "103"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "RETURN",
      "path": "103"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x27C"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMP",
      "path": "103"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x1027"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMP",
      "path": "103"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "CALLDATASIZE",
      "path": "103"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xF77"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMP",
      "path": "103"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x30E"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMP",
      "path": "103"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "CALLDATASIZE",
      "path": "103"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xF16"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMP",
      "path": "103"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x3A8"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMP",
      "path": "103"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "STOP",
      "path": "103"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "CALLDATASIZE",
      "path": "103"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xDCC"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMP",
      "path": "103"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x4BE"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMP",
      "path": "103"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "CALLDATASIZE",
      "path": "103"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xDCC"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMP",
      "path": "103"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x4EF"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMP",
      "path": "103"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "CALLDATASIZE",
      "path": "103"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xF77"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMP",
      "path": "103"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x50A"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMP",
      "path": "103"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "CALLDATASIZE",
      "path": "103"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xD80"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMP",
      "path": "103"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x581"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMP",
      "path": "103"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2570,
        2672
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2570,
        2672
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2570,
        2672
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x608"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2570,
        2672
      ],
      "op": "JUMP",
      "path": "103"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "CALLDATASIZE",
      "path": "103"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xEDC"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMP",
      "path": "103"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x617"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMP",
      "path": "103"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "CALLDATASIZE",
      "path": "103"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xE07"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMP",
      "path": "103"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x6E9"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMP",
      "path": "103"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "CALLDATASIZE",
      "path": "103"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xF77"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMP",
      "path": "103"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x721"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMP",
      "path": "103"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "CALLDATASIZE",
      "path": "103"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xD9A"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMP",
      "path": "103"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP2",
      "path": "103",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP3",
      "path": "103"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "AND",
      "path": "103"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4557,
        4561
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP2",
      "path": "103"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4598
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP2",
      "path": "103"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP1",
      "path": "103"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP4",
      "path": "103"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP4",
      "path": "103"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP5",
      "path": "103"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "AND",
      "path": "103"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "DUP3",
      "path": "103"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "AND",
      "path": "103"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMP",
      "path": "103"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1604,
        1608
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1667
      ],
      "op": "DUP3",
      "path": "103",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1667
      ],
      "op": "AND",
      "path": "103"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1667
      ],
      "op": "EQ",
      "path": "103"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1667
      ],
      "op": "DUP1",
      "path": "103"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1731
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1731
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1683,
        1731
      ],
      "op": "DUP3",
      "path": "103"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1683,
        1731
      ],
      "op": "AND",
      "path": "103"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1683,
        1731
      ],
      "op": "EQ",
      "path": "103"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1731
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1783
      ],
      "op": "DUP1",
      "path": "103"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1783
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1783
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "131",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "131"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "131"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1747,
        1783
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1620,
        1783
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1620,
        1783
      ],
      "op": "POP",
      "path": "103"
    },
    "631": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "632": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "634": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "POP",
      "path": "103"
    },
    "635": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMP",
      "path": "103"
    },
    "636": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2462,
        2475
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x60"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2494,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "statement": 3,
      "value": "0x0"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "103"
    },
    "642": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "643": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x28B"
    },
    "646": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "647": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x114C"
    },
    "650": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMP",
      "path": "103"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "652": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "103"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x1F"
    },
    "655": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "103"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "103"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DIV",
      "path": "103"
    },
    "661": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MUL",
      "path": "103"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "664": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "103"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "103"
    },
    "670": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "103"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "103"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP3",
      "path": "103"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "103"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "103"
    },
    "680": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "103"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP3",
      "path": "103"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "103"
    },
    "686": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "687": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x2B7"
    },
    "690": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "691": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x114C"
    },
    "694": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMP",
      "path": "103"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "103"
    },
    "697": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ISZERO",
      "path": "103"
    },
    "698": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x304"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "702": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "103"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x1F"
    },
    "705": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "LT",
      "path": "103"
    },
    "706": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x2D9"
    },
    "709": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "710": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x100"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "103"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP4",
      "path": "103"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DIV",
      "path": "103"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MUL",
      "path": "103"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP4",
      "path": "103"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "720": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "103"
    },
    "724": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "725": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x304"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMP",
      "path": "103"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP3",
      "path": "103"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "103"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "733": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "736": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "103"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "103"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "748": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x1"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "103"
    },
    "752": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "103"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "103"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP4",
      "path": "103"
    },
    "758": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "GT",
      "path": "103"
    },
    "759": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x2E7"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP3",
      "path": "103"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "765": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SUB",
      "path": "103"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x1F"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "AND",
      "path": "103"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP3",
      "path": "103"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "103"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "103"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "103"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "103"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "103"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "103"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "779": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "103"
    },
    "780": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "781": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMP",
      "path": "103"
    },
    "782": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "783": {
      "fn": "ERC721.getApproved",
      "offset": [
        3896,
        3903
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "785": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "103",
      "statement": 4
    },
    "786": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "103"
    },
    "787": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "788": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7076
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x2"
    },
    "790": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "792": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "793": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "795": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "103"
    },
    "796": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "797": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "op": "SUB"
    },
    "806": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "AND",
      "path": "103"
    },
    "807": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "PUSH2",
      "path": "103",
      "statement": 5,
      "value": "0x38C"
    },
    "810": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "811": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "813": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "814": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "818": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "DUP2",
      "path": "103"
    },
    "822": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "825": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "827": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "DUP3",
      "path": "103"
    },
    "828": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "ADD",
      "path": "103"
    },
    "829": {
      "op": "MSTORE"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "834": {
      "op": "DUP3"
    },
    "835": {
      "op": "ADD"
    },
    "836": {
      "op": "MSTORE"
    },
    "837": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "872": {
      "op": "DUP3"
    },
    "873": {
      "op": "ADD"
    },
    "874": {
      "op": "MSTORE"
    },
    "875": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "888": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "890": {
      "op": "SHL"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "893": {
      "op": "DUP3"
    },
    "894": {
      "op": "ADD"
    },
    "895": {
      "op": "MSTORE"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "898": {
      "op": "ADD"
    },
    "899": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "900": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "902": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "903": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "DUP1",
      "path": "103"
    },
    "904": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "905": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "SUB",
      "path": "103"
    },
    "906": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "907": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "103"
    },
    "908": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "909": {
      "op": "POP"
    },
    "910": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "PUSH1",
      "path": "103",
      "statement": 6,
      "value": "0x0"
    },
    "912": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "913": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "DUP2",
      "path": "103"
    },
    "914": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "915": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4021
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "917": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "919": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "920": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "923": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "924": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "931": {
      "op": "SHL"
    },
    "932": {
      "op": "SUB"
    },
    "933": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "AND",
      "path": "103"
    },
    "934": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "935": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMP",
      "path": "103"
    },
    "936": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "937": {
      "fn": "ERC721.approve",
      "offset": [
        3451,
        3464
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "939": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3490
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x3B3"
    },
    "942": {
      "fn": "ERC721.approve",
      "offset": [
        3482,
        3489
      ],
      "op": "DUP3",
      "path": "103"
    },
    "943": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3481
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x50A"
    },
    "946": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3467,
        3490
      ],
      "op": "JUMP",
      "path": "103"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3490
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        3451,
        3490
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "949": {
      "fn": "ERC721.approve",
      "offset": [
        3451,
        3490
      ],
      "op": "POP",
      "path": "103"
    },
    "950": {
      "fn": "ERC721.approve",
      "offset": [
        3514,
        3519
      ],
      "op": "DUP1",
      "path": "103",
      "statement": 7
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "op": "SUB"
    },
    "959": {
      "fn": "ERC721.approve",
      "offset": [
        3508,
        3519
      ],
      "op": "AND",
      "path": "103"
    },
    "960": {
      "fn": "ERC721.approve",
      "offset": [
        3508,
        3510
      ],
      "op": "DUP4",
      "path": "103"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "967": {
      "op": "SHL"
    },
    "968": {
      "op": "SUB"
    },
    "969": {
      "fn": "ERC721.approve",
      "offset": [
        3508,
        3519
      ],
      "op": "AND",
      "path": "103"
    },
    "970": {
      "fn": "ERC721.approve",
      "offset": [
        3508,
        3519
      ],
      "op": "EQ",
      "path": "103"
    },
    "971": {
      "branch": 49,
      "fn": "ERC721.approve",
      "offset": [
        3508,
        3519
      ],
      "op": "ISZERO",
      "path": "103"
    },
    "972": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x421"
    },
    "975": {
      "branch": 49,
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "976": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "978": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "979": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "983": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "985": {
      "op": "SHL"
    },
    "986": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "DUP2",
      "path": "103"
    },
    "987": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "990": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "992": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "DUP3",
      "path": "103"
    },
    "993": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "ADD",
      "path": "103"
    },
    "994": {
      "op": "MSTORE"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "999": {
      "op": "DUP3"
    },
    "1000": {
      "op": "ADD"
    },
    "1001": {
      "op": "MSTORE"
    },
    "1002": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1037": {
      "op": "DUP3"
    },
    "1038": {
      "op": "ADD"
    },
    "1039": {
      "op": "MSTORE"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1044": {
      "op": "SHL"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1047": {
      "op": "DUP3"
    },
    "1048": {
      "op": "ADD"
    },
    "1049": {
      "op": "MSTORE"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1052": {
      "op": "ADD"
    },
    "1053": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x383"
    },
    "1056": {
      "op": "JUMP"
    },
    "1057": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1058": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121",
      "statement": 8
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1065": {
      "op": "SHL"
    },
    "1066": {
      "op": "SUB"
    },
    "1067": {
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3597
      ],
      "op": "DUP3",
      "path": "103",
      "statement": 9
    },
    "1068": {
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3597
      ],
      "op": "AND",
      "path": "103"
    },
    "1069": {
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3597
      ],
      "op": "EQ",
      "path": "103"
    },
    "1070": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3597
      ],
      "op": "DUP1",
      "path": "103"
    },
    "1071": {
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3638
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x43D"
    },
    "1074": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3638
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "1075": {
      "op": "POP"
    },
    "1076": {
      "fn": "ERC721.approve",
      "offset": [
        3601,
        3638
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x43D"
    },
    "1079": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3623
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1080": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "1081": {
      "fn": "ERC721.approve",
      "offset": [
        3625,
        3637
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x1FA"
    },
    "1084": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "121"
    },
    "1085": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3601,
        3638
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1086": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x4AF"
    },
    "1089": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "1090": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1092": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "1093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1099": {
      "op": "SHL"
    },
    "1100": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1101": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "1106": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "DUP3",
      "path": "103"
    },
    "1107": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "ADD",
      "path": "103"
    },
    "1108": {
      "op": "MSTORE"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1151": {
      "op": "DUP3"
    },
    "1152": {
      "op": "ADD"
    },
    "1153": {
      "op": "MSTORE"
    },
    "1154": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1189": {
      "op": "DUP3"
    },
    "1190": {
      "op": "ADD"
    },
    "1191": {
      "op": "MSTORE"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1194": {
      "op": "ADD"
    },
    "1195": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x383"
    },
    "1198": {
      "op": "JUMP"
    },
    "1199": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1200": {
      "fn": "ERC721.approve",
      "offset": [
        3731,
        3752
      ],
      "op": "PUSH2",
      "path": "103",
      "statement": 10,
      "value": "0x4B9"
    },
    "1203": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3742
      ],
      "op": "DUP4",
      "path": "103"
    },
    "1204": {
      "fn": "ERC721.approve",
      "offset": [
        3744,
        3751
      ],
      "op": "DUP4",
      "path": "103"
    },
    "1205": {
      "fn": "ERC721.approve",
      "offset": [
        3731,
        3739
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x809"
    },
    "1208": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3731,
        3752
      ],
      "op": "JUMP",
      "path": "103"
    },
    "1209": {
      "fn": "ERC721.approve",
      "offset": [
        3731,
        3752
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1210": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "POP",
      "path": "103"
    },
    "1211": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "POP",
      "path": "103"
    },
    "1212": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "POP",
      "path": "103"
    },
    "1213": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMP",
      "path": "103"
    },
    "1214": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1215": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4843,
        4884
      ],
      "op": "PUSH2",
      "path": "103",
      "statement": 11,
      "value": "0x4C8"
    },
    "1218": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "1219": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4876,
        4883
      ],
      "op": "DUP3",
      "path": "103"
    },
    "1220": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4843,
        4861
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x877"
    },
    "1223": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4843,
        4884
      ],
      "op": "JUMP",
      "path": "103"
    },
    "1224": {
      "branch": 52,
      "fn": "ERC721.transferFrom",
      "offset": [
        4843,
        4884
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1225": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x4E4"
    },
    "1228": {
      "branch": 52,
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "1229": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1231": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "1232": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1238": {
      "op": "SHL"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1240": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "1243": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "ADD",
      "path": "103"
    },
    "1244": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x383"
    },
    "1247": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1248": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x108C"
    },
    "1251": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4835,
        4938
      ],
      "op": "JUMP",
      "path": "103"
    },
    "1252": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1253": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4949,
        4977
      ],
      "op": "PUSH2",
      "path": "103",
      "statement": 12,
      "value": "0x4B9"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4959,
        4963
      ],
      "op": "DUP4",
      "path": "103"
    },
    "1257": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4965,
        4967
      ],
      "op": "DUP4",
      "path": "103"
    },
    "1258": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4969,
        4976
      ],
      "op": "DUP4",
      "path": "103"
    },
    "1259": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4949,
        4958
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x96E"
    },
    "1262": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4949,
        4977
      ],
      "op": "JUMP",
      "path": "103"
    },
    "1263": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1264": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH2",
      "path": "103",
      "statement": 13,
      "value": "0x4B9"
    },
    "1267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5170,
        5174
      ],
      "op": "DUP4",
      "path": "103"
    },
    "1268": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5176,
        5178
      ],
      "op": "DUP4",
      "path": "103"
    },
    "1269": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5180,
        5187
      ],
      "op": "DUP4",
      "path": "103"
    },
    "1270": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1272": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "1273": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "DUP1",
      "path": "103"
    },
    "1274": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "1276": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "ADD",
      "path": "103"
    },
    "1277": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1279": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1280": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "DUP1",
      "path": "103"
    },
    "1281": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "1283": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1284": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1285": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "POP",
      "path": "103"
    },
    "1286": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5169
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x6E9"
    },
    "1289": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5153,
        5192
      ],
      "op": "JUMP",
      "path": "103"
    },
    "1290": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1291": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2183,
        2190
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1294": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1295": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1296": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2225
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x2"
    },
    "1298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "1300": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1301": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1303": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1304": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "1305": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1312": {
      "op": "SHL"
    },
    "1313": {
      "op": "SUB"
    },
    "1314": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "AND",
      "path": "103"
    },
    "1315": {
      "branch": 53,
      "fn": "ERC721.ownerOf",
      "offset": [
        2252,
        2271
      ],
      "op": "DUP1",
      "path": "103",
      "statement": 14
    },
    "1316": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x274"
    },
    "1319": {
      "branch": 53,
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "1320": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1322": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "1323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1329": {
      "op": "SHL"
    },
    "1330": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1331": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1334": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "1336": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "DUP3",
      "path": "103"
    },
    "1337": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "ADD",
      "path": "103"
    },
    "1338": {
      "op": "MSTORE"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1343": {
      "op": "DUP3"
    },
    "1344": {
      "op": "ADD"
    },
    "1345": {
      "op": "MSTORE"
    },
    "1346": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1381": {
      "op": "DUP3"
    },
    "1382": {
      "op": "ADD"
    },
    "1383": {
      "op": "MSTORE"
    },
    "1384": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1396": {
      "op": "SHL"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1399": {
      "op": "DUP3"
    },
    "1400": {
      "op": "ADD"
    },
    "1401": {
      "op": "MSTORE"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1404": {
      "op": "ADD"
    },
    "1405": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x383"
    },
    "1408": {
      "op": "JUMP"
    },
    "1409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1410": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1921,
        1928
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1418": {
      "op": "SHL"
    },
    "1419": {
      "op": "SUB"
    },
    "1420": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1948,
        1967
      ],
      "op": "DUP3",
      "path": "103",
      "statement": 15
    },
    "1421": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        1948,
        1967
      ],
      "op": "AND",
      "path": "103"
    },
    "1422": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x5EC"
    },
    "1425": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "1426": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1428": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "1429": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1435": {
      "op": "SHL"
    },
    "1436": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1437": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1440": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "1442": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "DUP3",
      "path": "103"
    },
    "1443": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "ADD",
      "path": "103"
    },
    "1444": {
      "op": "MSTORE"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1449": {
      "op": "DUP3"
    },
    "1450": {
      "op": "ADD"
    },
    "1451": {
      "op": "MSTORE"
    },
    "1452": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1487": {
      "op": "DUP3"
    },
    "1488": {
      "op": "ADD"
    },
    "1489": {
      "op": "MSTORE"
    },
    "1490": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1503": {
      "op": "SHL"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1506": {
      "op": "DUP3"
    },
    "1507": {
      "op": "ADD"
    },
    "1508": {
      "op": "MSTORE"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1511": {
      "op": "ADD"
    },
    "1512": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x383"
    },
    "1515": {
      "op": "JUMP"
    },
    "1516": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1517": {
      "op": "POP"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1524": {
      "op": "SHL"
    },
    "1525": {
      "op": "SUB"
    },
    "1526": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "AND",
      "path": "103",
      "statement": 16
    },
    "1527": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "1529": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1530": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1531": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1532": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2040
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x3"
    },
    "1534": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "1536": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1537": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1539": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1540": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "1541": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "1542": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1543": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMP",
      "path": "103"
    },
    "1544": {
      "fn": "ERC721.symbol",
      "offset": [
        2570,
        2672
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1545": {
      "fn": "ERC721.symbol",
      "offset": [
        2626,
        2639
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x60"
    },
    "1547": {
      "fn": "ERC721.symbol",
      "offset": [
        2658,
        2665
      ],
      "op": "PUSH1",
      "path": "103",
      "statement": 17,
      "value": "0x1"
    },
    "1549": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "DUP1",
      "path": "103"
    },
    "1550": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "1551": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x28B"
    },
    "1554": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1555": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x114C"
    },
    "1558": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2651,
        2665
      ],
      "op": "JUMP",
      "path": "103"
    },
    "1559": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1566": {
      "op": "SHL"
    },
    "1567": {
      "op": "SUB"
    },
    "1568": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4206,
        4230
      ],
      "op": "DUP3",
      "path": "103",
      "statement": 18
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4206,
        4230
      ],
      "op": "AND",
      "path": "103"
    },
    "1570": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "1571": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4206,
        4230
      ],
      "op": "EQ",
      "path": "103"
    },
    "1572": {
      "branch": 55,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4206,
        4230
      ],
      "op": "ISZERO",
      "path": "103"
    },
    "1573": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x670"
    },
    "1576": {
      "branch": 55,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "1577": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1579": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "1580": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1586": {
      "op": "SHL"
    },
    "1587": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1588": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1591": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "1593": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "DUP3",
      "path": "103"
    },
    "1594": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "ADD",
      "path": "103"
    },
    "1595": {
      "op": "MSTORE"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1600": {
      "op": "DUP3"
    },
    "1601": {
      "op": "ADD"
    },
    "1602": {
      "op": "MSTORE"
    },
    "1603": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1638": {
      "op": "DUP3"
    },
    "1639": {
      "op": "ADD"
    },
    "1640": {
      "op": "MSTORE"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1643": {
      "op": "ADD"
    },
    "1644": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x383"
    },
    "1647": {
      "op": "JUMP"
    },
    "1648": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1649": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "1650": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "PUSH1",
      "path": "103",
      "statement": 19,
      "value": "0x0"
    },
    "1652": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1653": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1654": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1655": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4289
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x5"
    },
    "1657": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "1659": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1660": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1661": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1662": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1664": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP1",
      "path": "103"
    },
    "1665": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP4",
      "path": "103"
    },
    "1666": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1673": {
      "op": "SHL"
    },
    "1674": {
      "op": "SUB"
    },
    "1675": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "DUP8",
      "path": "103"
    },
    "1676": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "AND",
      "path": "103"
    },
    "1677": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "DUP1",
      "path": "103"
    },
    "1678": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "DUP6",
      "path": "103"
    },
    "1679": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1680": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "SWAP3",
      "path": "103"
    },
    "1681": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1682": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1683": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "1684": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "1685": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "DUP1",
      "path": "103"
    },
    "1686": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1689": {
      "op": "NOT"
    },
    "1690": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "AND",
      "path": "103"
    },
    "1691": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "DUP5",
      "path": "103"
    },
    "1692": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "ISZERO",
      "path": "103"
    },
    "1693": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "ISZERO",
      "path": "103"
    },
    "1694": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "OR",
      "path": "103"
    },
    "1695": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1696": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "SSTORE",
      "path": "103"
    },
    "1697": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "op": "SUB"
    },
    "1706": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "AND",
      "path": "103",
      "statement": 20
    },
    "1707": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "PUSH32",
      "path": "103",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "1740": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4378,
        4386
      ],
      "op": "DUP4",
      "path": "103"
    },
    "1741": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1743": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "1744": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x6DD"
    },
    "1747": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "1748": {
      "op": "ISZERO"
    },
    "1749": {
      "op": "ISZERO"
    },
    "1750": {
      "op": "DUP2"
    },
    "1751": {
      "op": "MSTORE"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1754": {
      "op": "ADD"
    },
    "1755": {
      "op": "SWAP1"
    },
    "1756": {
      "op": "JUMP"
    },
    "1757": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1758": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1760": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "1761": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "DUP1",
      "path": "103"
    },
    "1762": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "1763": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "SUB",
      "path": "103"
    },
    "1764": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1765": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "LOG3",
      "path": "103"
    },
    "1766": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "POP",
      "path": "103"
    },
    "1767": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "POP",
      "path": "103"
    },
    "1768": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMP",
      "path": "103"
    },
    "1769": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1770": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5396,
        5437
      ],
      "op": "PUSH2",
      "path": "103",
      "statement": 21,
      "value": "0x6F3"
    },
    "1773": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "1774": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5429,
        5436
      ],
      "op": "DUP4",
      "path": "103"
    },
    "1775": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5396,
        5414
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x877"
    },
    "1778": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5396,
        5437
      ],
      "op": "JUMP",
      "path": "103"
    },
    "1779": {
      "branch": 56,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5396,
        5437
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1780": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x70F"
    },
    "1783": {
      "branch": 56,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "1784": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1786": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "1787": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1793": {
      "op": "SHL"
    },
    "1794": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1795": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1796": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "1798": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "ADD",
      "path": "103"
    },
    "1799": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x383"
    },
    "1802": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1803": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x108C"
    },
    "1806": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5388,
        5491
      ],
      "op": "JUMP",
      "path": "103"
    },
    "1807": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1808": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5501,
        5540
      ],
      "op": "PUSH2",
      "path": "103",
      "statement": 22,
      "value": "0x71B"
    },
    "1811": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5515,
        5519
      ],
      "op": "DUP5",
      "path": "103"
    },
    "1812": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5523
      ],
      "op": "DUP5",
      "path": "103"
    },
    "1813": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5525,
        5532
      ],
      "op": "DUP5",
      "path": "103"
    },
    "1814": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5534,
        5539
      ],
      "op": "DUP5",
      "path": "103"
    },
    "1815": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5501,
        5514
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xB0E"
    },
    "1818": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5501,
        5540
      ],
      "op": "JUMP",
      "path": "103"
    },
    "1819": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5501,
        5540
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1820": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "POP",
      "path": "103"
    },
    "1821": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "POP",
      "path": "103"
    },
    "1822": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "POP",
      "path": "103"
    },
    "1823": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "POP",
      "path": "103"
    },
    "1824": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMP",
      "path": "103"
    },
    "1825": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1826": {
      "fn": "ERC721._exists",
      "offset": [
        7046,
        7050
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "1828": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1829": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1830": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1831": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7076
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x2"
    },
    "1833": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "1835": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1836": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1838": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1839": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "1840": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "1841": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2811,
        2824
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x60"
    },
    "1843": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2811,
        2824
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1850": {
      "op": "SHL"
    },
    "1851": {
      "op": "SUB"
    },
    "1852": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "AND",
      "path": "103"
    },
    "1853": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "PUSH2",
      "path": "103",
      "statement": 23,
      "value": "0x7A0"
    },
    "1856": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "1857": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1859": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "1860": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1866": {
      "op": "SHL"
    },
    "1867": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1868": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1871": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "1873": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "DUP3",
      "path": "103"
    },
    "1874": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "ADD",
      "path": "103"
    },
    "1875": {
      "op": "MSTORE"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1880": {
      "op": "DUP3"
    },
    "1881": {
      "op": "ADD"
    },
    "1882": {
      "op": "MSTORE"
    },
    "1883": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1918": {
      "op": "DUP3"
    },
    "1919": {
      "op": "ADD"
    },
    "1920": {
      "op": "MSTORE"
    },
    "1921": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1939": {
      "op": "SHL"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1942": {
      "op": "DUP3"
    },
    "1943": {
      "op": "ADD"
    },
    "1944": {
      "op": "MSTORE"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1947": {
      "op": "ADD"
    },
    "1948": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x383"
    },
    "1951": {
      "op": "JUMP"
    },
    "1952": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1953": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2923,
        2944
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "1955": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2947,
        2957
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x7B7"
    },
    "1958": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "PUSH1",
      "path": "103",
      "statement": 24,
      "value": "0x40"
    },
    "1960": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "DUP1",
      "path": "103"
    },
    "1961": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "1962": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "1964": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1965": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "ADD",
      "path": "103"
    },
    "1966": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1967": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "1968": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1971": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1972": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1973": {
      "fn": "ERC721._baseURI",
      "offset": [
        3222,
        3314
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1974": {
      "fn": "ERC721._baseURI",
      "offset": [
        3222,
        3314
      ],
      "op": "JUMP",
      "path": "103"
    },
    "1975": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2947,
        2957
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "1976": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2923,
        2957
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "1977": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2923,
        2957
      ],
      "op": "POP",
      "path": "103"
    },
    "1978": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2998,
        2999
      ],
      "op": "PUSH1",
      "path": "103",
      "statement": 25,
      "value": "0x0"
    },
    "1980": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        2987
      ],
      "op": "DUP2",
      "path": "103"
    },
    "1981": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        2995
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "1982": {
      "branch": 57,
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        2999
      ],
      "op": "GT",
      "path": "103"
    },
    "1983": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x7D7"
    },
    "1986": {
      "branch": 57,
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "1987": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1989": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "1990": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "DUP1",
      "path": "103"
    },
    "1991": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "1993": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "ADD",
      "path": "103"
    },
    "1994": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "1996": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "1997": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "DUP1",
      "path": "103"
    },
    "1998": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "2000": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2001": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2002": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "POP",
      "path": "103"
    },
    "2003": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x802"
    },
    "2006": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2007": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2008": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3038,
        3045
      ],
      "op": "DUP1",
      "path": "103"
    },
    "2009": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3065
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x7E1"
    },
    "2012": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3054
      ],
      "op": "DUP5",
      "path": "103"
    },
    "2013": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3063
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xB41"
    },
    "2016": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3047,
        3065
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2017": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3065
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2018": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2020": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "2021": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "2023": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "ADD",
      "path": "103"
    },
    "2024": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x7F2"
    },
    "2027": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SWAP3",
      "path": "103"
    },
    "2028": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "2029": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2030": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xFBB"
    },
    "2033": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3021,
        3066
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2034": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2035": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2037": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "2038": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "2040": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2041": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "DUP4",
      "path": "103"
    },
    "2042": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SUB",
      "path": "103"
    },
    "2043": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SUB",
      "path": "103"
    },
    "2044": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2045": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2046": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2047": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2049": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2050": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2051": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2967,
        3084
      ],
      "op": "SWAP4",
      "path": "103"
    },
    "2052": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "SWAP3",
      "path": "103"
    },
    "2053": {
      "op": "POP"
    },
    "2054": {
      "op": "POP"
    },
    "2055": {
      "op": "POP"
    },
    "2056": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2057": {
      "fn": "ERC721._approve",
      "offset": [
        10738,
        10909
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2058": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "PUSH1",
      "path": "103",
      "statement": 26,
      "value": "0x0"
    },
    "2060": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2061": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2062": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2063": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10827
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "2065": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "2067": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2068": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2070": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2071": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "2072": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "DUP1",
      "path": "103"
    },
    "2073": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2080": {
      "op": "SHL"
    },
    "2081": {
      "op": "SUB"
    },
    "2082": {
      "op": "NOT"
    },
    "2083": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "AND",
      "path": "103"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2090": {
      "op": "SHL"
    },
    "2091": {
      "op": "SUB"
    },
    "2092": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "DUP5",
      "path": "103"
    },
    "2093": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "AND",
      "path": "103"
    },
    "2094": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2095": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2096": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "OR",
      "path": "103"
    },
    "2097": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2098": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "2099": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SSTORE",
      "path": "103"
    },
    "2100": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2101": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2102": {
      "fn": "ERC721._approve",
      "offset": [
        10865,
        10888
      ],
      "op": "PUSH2",
      "path": "103",
      "statement": 27,
      "value": "0x83E"
    },
    "2105": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "DUP3",
      "path": "103"
    },
    "2106": {
      "fn": "ERC721._approve",
      "offset": [
        10865,
        10879
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x50A"
    },
    "2109": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        10865,
        10888
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2110": {
      "fn": "ERC721._approve",
      "offset": [
        10865,
        10888
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2117": {
      "op": "SHL"
    },
    "2118": {
      "op": "SUB"
    },
    "2119": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "AND",
      "path": "103"
    },
    "2120": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "PUSH32",
      "path": "103",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2153": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2155": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "2156": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2158": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "2159": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "DUP1",
      "path": "103"
    },
    "2160": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "2161": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "SUB",
      "path": "103"
    },
    "2162": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2163": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "LOG4",
      "path": "103"
    },
    "2164": {
      "fn": "ERC721._approve",
      "offset": [
        10738,
        10909
      ],
      "op": "POP",
      "path": "103"
    },
    "2165": {
      "fn": "ERC721._approve",
      "offset": [
        10738,
        10909
      ],
      "op": "POP",
      "path": "103"
    },
    "2166": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10738,
        10909
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2167": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7264,
        7608
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2168": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7357,
        7361
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "2170": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2171": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2172": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2173": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7076
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x2"
    },
    "2175": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "2177": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2178": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2180": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2181": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "2182": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2189": {
      "op": "SHL"
    },
    "2190": {
      "op": "SUB"
    },
    "2191": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "AND",
      "path": "103"
    },
    "2192": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "PUSH2",
      "path": "103",
      "statement": 28,
      "value": "0x8F0"
    },
    "2195": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "2196": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2198": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "2199": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2205": {
      "op": "SHL"
    },
    "2206": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2207": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2210": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "2212": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "DUP3",
      "path": "103"
    },
    "2213": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "ADD",
      "path": "103"
    },
    "2214": {
      "op": "MSTORE"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2219": {
      "op": "DUP3"
    },
    "2220": {
      "op": "ADD"
    },
    "2221": {
      "op": "MSTORE"
    },
    "2222": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2257": {
      "op": "DUP3"
    },
    "2258": {
      "op": "ADD"
    },
    "2259": {
      "op": "MSTORE"
    },
    "2260": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2275": {
      "op": "SHL"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2278": {
      "op": "DUP3"
    },
    "2279": {
      "op": "ADD"
    },
    "2280": {
      "op": "MSTORE"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2283": {
      "op": "ADD"
    },
    "2284": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x383"
    },
    "2287": {
      "op": "JUMP"
    },
    "2288": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2289": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7456,
        7469
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "2291": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7472,
        7495
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x8FB"
    },
    "2294": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7487,
        7494
      ],
      "op": "DUP4",
      "path": "103"
    },
    "2295": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7472,
        7486
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x50A"
    },
    "2298": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7472,
        7495
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2299": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7472,
        7495
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2300": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7456,
        7495
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2301": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7456,
        7495
      ],
      "op": "POP",
      "path": "103"
    },
    "2302": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7524,
        7529
      ],
      "op": "DUP1",
      "path": "103",
      "statement": 29
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2309": {
      "op": "SHL"
    },
    "2310": {
      "op": "SUB"
    },
    "2311": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7529
      ],
      "op": "AND",
      "path": "103"
    },
    "2312": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7520
      ],
      "op": "DUP5",
      "path": "103"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2319": {
      "op": "SHL"
    },
    "2320": {
      "op": "SUB"
    },
    "2321": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7529
      ],
      "op": "AND",
      "path": "103"
    },
    "2322": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7529
      ],
      "op": "EQ",
      "path": "103"
    },
    "2323": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "DUP1",
      "path": "103"
    },
    "2324": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x936"
    },
    "2327": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "2328": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "POP",
      "path": "103"
    },
    "2329": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7557,
        7564
      ],
      "op": "DUP4",
      "path": "103"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2336": {
      "op": "SHL"
    },
    "2337": {
      "op": "SUB"
    },
    "2338": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7564
      ],
      "op": "AND",
      "path": "103"
    },
    "2339": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7553
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x92B"
    },
    "2342": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7545,
        7552
      ],
      "op": "DUP5",
      "path": "103"
    },
    "2343": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7544
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x30E"
    },
    "2346": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7533,
        7553
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2347": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7553
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2354": {
      "op": "SHL"
    },
    "2355": {
      "op": "SUB"
    },
    "2356": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7564
      ],
      "op": "AND",
      "path": "103"
    },
    "2357": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7564
      ],
      "op": "EQ",
      "path": "103"
    },
    "2358": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2359": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7600
      ],
      "op": "DUP1",
      "path": "103"
    },
    "2360": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7600
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x966"
    },
    "2363": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7600
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "2364": {
      "op": "POP"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2371": {
      "op": "SHL"
    },
    "2372": {
      "op": "SUB"
    },
    "2373": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP1",
      "path": "103"
    },
    "2374": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP3",
      "path": "103"
    },
    "2375": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "AND",
      "path": "103"
    },
    "2376": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4557,
        4561
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "2378": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2379": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2380": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2381": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4598
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x5"
    },
    "2383": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "2385": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2386": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2387": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2388": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2390": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP1",
      "path": "103"
    },
    "2391": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP4",
      "path": "103"
    },
    "2392": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "2393": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP4",
      "path": "103"
    },
    "2394": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "DUP9",
      "path": "103"
    },
    "2395": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "AND",
      "path": "103"
    },
    "2396": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "DUP4",
      "path": "103"
    },
    "2397": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2398": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP3",
      "path": "103"
    },
    "2399": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2400": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2401": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "2402": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "2403": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0xFF"
    },
    "2405": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "AND",
      "path": "103"
    },
    "2406": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7568,
        7600
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2407": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7505,
        7601
      ],
      "op": "SWAP5",
      "path": "103"
    },
    "2408": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7264,
        7608
      ],
      "op": "SWAP4",
      "path": "103"
    },
    "2409": {
      "op": "POP"
    },
    "2410": {
      "op": "POP"
    },
    "2411": {
      "op": "POP"
    },
    "2412": {
      "op": "POP"
    },
    "2413": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7264,
        7608
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2414": {
      "fn": "ERC721._transfer",
      "offset": [
        10097,
        10627
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2415": {
      "fn": "ERC721._transfer",
      "offset": [
        10221,
        10225
      ],
      "op": "DUP3",
      "path": "103",
      "statement": 30
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2422": {
      "op": "SHL"
    },
    "2423": {
      "op": "SUB"
    },
    "2424": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10225
      ],
      "op": "AND",
      "path": "103"
    },
    "2425": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10217
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x981"
    },
    "2428": {
      "fn": "ERC721._transfer",
      "offset": [
        10209,
        10216
      ],
      "op": "DUP3",
      "path": "103"
    },
    "2429": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10208
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x50A"
    },
    "2432": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10194,
        10217
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2433": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10217
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2440": {
      "op": "SHL"
    },
    "2441": {
      "op": "SUB"
    },
    "2442": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10225
      ],
      "op": "AND",
      "path": "103"
    },
    "2443": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10225
      ],
      "op": "EQ",
      "path": "103"
    },
    "2444": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x9E9"
    },
    "2447": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "2448": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2450": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "2451": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2457": {
      "op": "SHL"
    },
    "2458": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2459": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2462": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "2464": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "DUP3",
      "path": "103"
    },
    "2465": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "ADD",
      "path": "103"
    },
    "2466": {
      "op": "MSTORE"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2471": {
      "op": "DUP3"
    },
    "2472": {
      "op": "ADD"
    },
    "2473": {
      "op": "MSTORE"
    },
    "2474": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2509": {
      "op": "DUP3"
    },
    "2510": {
      "op": "ADD"
    },
    "2511": {
      "op": "MSTORE"
    },
    "2512": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2524": {
      "op": "SHL"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2527": {
      "op": "DUP3"
    },
    "2528": {
      "op": "ADD"
    },
    "2529": {
      "op": "MSTORE"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x383"
    },
    "2536": {
      "op": "JUMP"
    },
    "2537": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2544": {
      "op": "SHL"
    },
    "2545": {
      "op": "SUB"
    },
    "2546": {
      "fn": "ERC721._transfer",
      "offset": [
        10289,
        10305
      ],
      "op": "DUP3",
      "path": "103",
      "statement": 31
    },
    "2547": {
      "branch": 59,
      "fn": "ERC721._transfer",
      "offset": [
        10289,
        10305
      ],
      "op": "AND",
      "path": "103"
    },
    "2548": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xA4B"
    },
    "2551": {
      "branch": 59,
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "2552": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2554": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "2555": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2561": {
      "op": "SHL"
    },
    "2562": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2563": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2566": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "2568": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "DUP3",
      "path": "103"
    },
    "2569": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "ADD",
      "path": "103"
    },
    "2570": {
      "op": "MSTORE"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2573": {
      "op": "DUP1"
    },
    "2574": {
      "op": "DUP3"
    },
    "2575": {
      "op": "ADD"
    },
    "2576": {
      "op": "MSTORE"
    },
    "2577": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2612": {
      "op": "DUP3"
    },
    "2613": {
      "op": "ADD"
    },
    "2614": {
      "op": "MSTORE"
    },
    "2615": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2622": {
      "op": "SHL"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2625": {
      "op": "DUP3"
    },
    "2626": {
      "op": "ADD"
    },
    "2627": {
      "op": "MSTORE"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2630": {
      "op": "ADD"
    },
    "2631": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x383"
    },
    "2634": {
      "op": "JUMP"
    },
    "2635": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2636": {
      "fn": "ERC721._transfer",
      "offset": [
        10458,
        10487
      ],
      "op": "PUSH2",
      "path": "103",
      "statement": 32,
      "value": "0xA56"
    },
    "2639": {
      "fn": "ERC721._transfer",
      "offset": [
        10475,
        10476
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "2641": {
      "fn": "ERC721._transfer",
      "offset": [
        10479,
        10486
      ],
      "op": "DUP3",
      "path": "103"
    },
    "2642": {
      "fn": "ERC721._transfer",
      "offset": [
        10458,
        10466
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x809"
    },
    "2645": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10458,
        10487
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2646": {
      "fn": "ERC721._transfer",
      "offset": [
        10458,
        10487
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2653": {
      "op": "SHL"
    },
    "2654": {
      "op": "SUB"
    },
    "2655": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "DUP4",
      "path": "103",
      "statement": 33
    },
    "2656": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "AND",
      "path": "103"
    },
    "2657": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "2659": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2660": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2661": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2662": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10507
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x3"
    },
    "2664": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "2666": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2667": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2669": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2670": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "2671": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "DUP1",
      "path": "103"
    },
    "2672": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "2673": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10518
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x1"
    },
    "2675": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10518
      ],
      "op": "SWAP3",
      "path": "103"
    },
    "2676": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2677": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xA7F"
    },
    "2680": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2681": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10518
      ],
      "op": "DUP5",
      "path": "103"
    },
    "2682": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10518
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2683": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x1109"
    },
    "2686": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10498,
        10518
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2687": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2688": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2689": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "2690": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SSTORE",
      "path": "103"
    },
    "2691": {
      "op": "POP"
    },
    "2692": {
      "op": "POP"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2699": {
      "op": "SHL"
    },
    "2700": {
      "op": "SUB"
    },
    "2701": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "DUP3",
      "path": "103",
      "statement": 34
    },
    "2702": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "AND",
      "path": "103"
    },
    "2703": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "2705": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2706": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2707": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2708": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10537
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x3"
    },
    "2710": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "2712": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2713": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2715": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2716": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "2717": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "DUP1",
      "path": "103"
    },
    "2718": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "2719": {
      "fn": "ERC721._transfer",
      "offset": [
        10545,
        10546
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x1"
    },
    "2721": {
      "fn": "ERC721._transfer",
      "offset": [
        10545,
        10546
      ],
      "op": "SWAP3",
      "path": "103"
    },
    "2722": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2723": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xAAD"
    },
    "2726": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2727": {
      "fn": "ERC721._transfer",
      "offset": [
        10545,
        10546
      ],
      "op": "DUP5",
      "path": "103"
    },
    "2728": {
      "fn": "ERC721._transfer",
      "offset": [
        10545,
        10546
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2729": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x10DD"
    },
    "2732": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10528,
        10546
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2733": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2734": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2735": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "2736": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SSTORE",
      "path": "103"
    },
    "2737": {
      "op": "POP"
    },
    "2738": {
      "op": "POP"
    },
    "2739": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "PUSH1",
      "path": "103",
      "statement": 35,
      "value": "0x0"
    },
    "2741": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2742": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2743": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2744": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10563
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x2"
    },
    "2746": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "2748": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2749": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2751": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP1",
      "path": "103"
    },
    "2752": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP3",
      "path": "103"
    },
    "2753": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "KECCAK256",
      "path": "103"
    },
    "2754": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "DUP1",
      "path": "103"
    },
    "2755": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SLOAD",
      "path": "103"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2762": {
      "op": "SHL"
    },
    "2763": {
      "op": "SUB"
    },
    "2764": {
      "op": "NOT"
    },
    "2765": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "AND",
      "path": "103"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2772": {
      "op": "SHL"
    },
    "2773": {
      "op": "SUB"
    },
    "2774": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "DUP7",
      "path": "103"
    },
    "2775": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2776": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "AND",
      "path": "103"
    },
    "2777": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "2778": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "DUP3",
      "path": "103"
    },
    "2779": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "OR",
      "path": "103"
    },
    "2780": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2781": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SWAP3",
      "path": "103"
    },
    "2782": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SSTORE",
      "path": "103"
    },
    "2783": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "SWAP2",
      "path": "103",
      "statement": 36
    },
    "2784": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "2785": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP5",
      "path": "103"
    },
    "2786": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "SWAP4",
      "path": "103"
    },
    "2787": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "2788": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "DUP8",
      "path": "103"
    },
    "2789": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "AND",
      "path": "103"
    },
    "2790": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "2791": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "PUSH32",
      "path": "103",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2824": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "2825": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "LOG4",
      "path": "103"
    },
    "2826": {
      "fn": "ERC721._transfer",
      "offset": [
        10097,
        10627
      ],
      "op": "POP",
      "path": "103"
    },
    "2827": {
      "fn": "ERC721._transfer",
      "offset": [
        10097,
        10627
      ],
      "op": "POP",
      "path": "103"
    },
    "2828": {
      "fn": "ERC721._transfer",
      "offset": [
        10097,
        10627
      ],
      "op": "POP",
      "path": "103"
    },
    "2829": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10097,
        10627
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2830": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6409,
        6678
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2831": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6522,
        6550
      ],
      "op": "PUSH2",
      "path": "103",
      "statement": 37,
      "value": "0xB19"
    },
    "2834": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6532,
        6536
      ],
      "op": "DUP5",
      "path": "103"
    },
    "2835": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6538,
        6540
      ],
      "op": "DUP5",
      "path": "103"
    },
    "2836": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6542,
        6549
      ],
      "op": "DUP5",
      "path": "103"
    },
    "2837": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6522,
        6531
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x96E"
    },
    "2840": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6522,
        6550
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2841": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6522,
        6550
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2842": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6568,
        6616
      ],
      "op": "PUSH2",
      "path": "103",
      "statement": 38,
      "value": "0xB25"
    },
    "2845": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6591,
        6595
      ],
      "op": "DUP5",
      "path": "103"
    },
    "2846": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6597,
        6599
      ],
      "op": "DUP5",
      "path": "103"
    },
    "2847": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6601,
        6608
      ],
      "op": "DUP5",
      "path": "103"
    },
    "2848": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6610,
        6615
      ],
      "op": "DUP5",
      "path": "103"
    },
    "2849": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6568,
        6590
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xC5C"
    },
    "2852": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6568,
        6616
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2853": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6568,
        6616
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "2854": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x71B"
    },
    "2857": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "2858": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "2860": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "2861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2867": {
      "op": "SHL"
    },
    "2868": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "DUP2",
      "path": "103"
    },
    "2869": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "2870": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "2872": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "ADD",
      "path": "103"
    },
    "2873": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x383"
    },
    "2876": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "2877": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x103A"
    },
    "2880": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6560,
        6671
      ],
      "op": "JUMP",
      "path": "103"
    },
    "2881": {
      "fn": "Strings.toString",
      "offset": [
        271,
        974
      ],
      "op": "JUMPDEST",
      "path": "124"
    },
    "2882": {
      "fn": "Strings.toString",
      "offset": [
        327,
        340
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x60"
    },
    "2884": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        544,
        554
      ],
      "op": "DUP2",
      "path": "124"
    },
    "2885": {
      "fn": "Strings.toString",
      "offset": [
        540,
        591
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0xB66"
    },
    "2888": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        540,
        591
      ],
      "op": "JUMPI",
      "path": "124"
    },
    "2889": {
      "op": "POP"
    },
    "2890": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "PUSH1",
      "path": "124",
      "statement": 39,
      "value": "0x40"
    },
    "2892": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP1",
      "path": "124"
    },
    "2893": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MLOAD",
      "path": "124"
    },
    "2894": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP1",
      "path": "124"
    },
    "2895": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP3",
      "path": "124"
    },
    "2896": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "ADD",
      "path": "124"
    },
    "2897": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "SWAP1",
      "path": "124"
    },
    "2898": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "SWAP2",
      "path": "124"
    },
    "2899": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MSTORE",
      "path": "124"
    },
    "2900": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x1"
    },
    "2902": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP2",
      "path": "124"
    },
    "2903": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MSTORE",
      "path": "124"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2908": {
      "op": "SHL"
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x20"
    },
    "2911": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP3",
      "path": "124"
    },
    "2912": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "ADD",
      "path": "124"
    },
    "2913": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MSTORE",
      "path": "124"
    },
    "2914": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0x277"
    },
    "2917": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "JUMP",
      "path": "124"
    },
    "2918": {
      "fn": "Strings.toString",
      "offset": [
        540,
        591
      ],
      "op": "JUMPDEST",
      "path": "124"
    },
    "2919": {
      "fn": "Strings.toString",
      "offset": [
        615,
        620
      ],
      "op": "DUP2",
      "path": "124"
    },
    "2920": {
      "fn": "Strings.toString",
      "offset": [
        600,
        612
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x0"
    },
    "2922": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMPDEST",
      "path": "124"
    },
    "2923": {
      "fn": "Strings.toString",
      "offset": [
        661,
        670
      ],
      "op": "DUP2",
      "path": "124"
    },
    "2924": {
      "fn": "Strings.toString",
      "offset": [
        661,
        670
      ],
      "op": "ISZERO",
      "path": "124"
    },
    "2925": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0xB90"
    },
    "2928": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMPI",
      "path": "124"
    },
    "2929": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "DUP1",
      "path": "124",
      "statement": 40
    },
    "2930": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0xB7A"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "DUP2",
      "path": "124"
    },
    "2934": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0x1187"
    },
    "2937": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        686,
        694
      ],
      "op": "JUMP",
      "path": "124"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "JUMPDEST",
      "path": "124"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "SWAP2",
      "path": "124"
    },
    "2940": {
      "op": "POP"
    },
    "2941": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "PUSH2",
      "path": "124",
      "statement": 41,
      "value": "0xB89"
    },
    "2944": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "SWAP1",
      "path": "124"
    },
    "2945": {
      "op": "POP"
    },
    "2946": {
      "fn": "Strings.toString",
      "offset": [
        716,
        718
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0xA"
    },
    "2948": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "DUP4",
      "path": "124"
    },
    "2949": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0x10F5"
    },
    "2952": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        708,
        718
      ],
      "op": "JUMP",
      "path": "124"
    },
    "2953": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "JUMPDEST",
      "path": "124"
    },
    "2954": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "SWAP2",
      "path": "124"
    },
    "2955": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "POP",
      "path": "124"
    },
    "2956": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0xB6A"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMP",
      "path": "124"
    },
    "2960": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMPDEST",
      "path": "124"
    },
    "2961": {
      "fn": "Strings.toString",
      "offset": [
        738,
        757
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x0"
    },
    "2963": {
      "fn": "Strings.toString",
      "offset": [
        770,
        776
      ],
      "op": "DUP2",
      "path": "124"
    },
    "2964": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH8",
      "path": "124",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2973": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP2",
      "path": "124"
    },
    "2974": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "GT",
      "path": "124"
    },
    "2975": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ISZERO",
      "path": "124"
    },
    "2976": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0xBB9"
    },
    "2979": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPI",
      "path": "124"
    },
    "2980": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2987": {
      "op": "SHL"
    },
    "2988": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x0"
    },
    "2990": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "MSTORE",
      "path": "124"
    },
    "2991": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x41"
    },
    "2993": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x4"
    },
    "2995": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "MSTORE",
      "path": "124"
    },
    "2996": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x24"
    },
    "2998": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x0"
    },
    "3000": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "REVERT",
      "path": "124"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPDEST",
      "path": "124"
    },
    "3002": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x40"
    },
    "3004": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "MLOAD",
      "path": "124"
    },
    "3005": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "SWAP1",
      "path": "124"
    },
    "3006": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "124"
    },
    "3007": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP3",
      "path": "124"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "MSTORE",
      "path": "124"
    },
    "3009": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "124"
    },
    "3010": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x1F"
    },
    "3012": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "124"
    },
    "3013": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x1F"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "NOT",
      "path": "124"
    },
    "3016": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "AND",
      "path": "124"
    },
    "3017": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x20"
    },
    "3019": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "124"
    },
    "3020": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP3",
      "path": "124"
    },
    "3021": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "124"
    },
    "3022": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x40"
    },
    "3024": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "MSTORE",
      "path": "124"
    },
    "3025": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "124"
    },
    "3026": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ISZERO",
      "path": "124"
    },
    "3027": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0xBE3"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPI",
      "path": "124"
    },
    "3031": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x20"
    },
    "3033": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP3",
      "path": "124"
    },
    "3034": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "124"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP2",
      "path": "124"
    },
    "3036": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "124"
    },
    "3037": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "CALLDATASIZE",
      "path": "124"
    },
    "3038": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP4",
      "path": "124"
    },
    "3039": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "CALLDATACOPY",
      "path": "124"
    },
    "3040": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "124"
    },
    "3041": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "SWAP1",
      "path": "124"
    },
    "3042": {
      "op": "POP"
    },
    "3043": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPDEST",
      "path": "124"
    },
    "3044": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "POP",
      "path": "124"
    },
    "3045": {
      "fn": "Strings.toString",
      "offset": [
        738,
        777
      ],
      "op": "SWAP1",
      "path": "124"
    },
    "3046": {
      "fn": "Strings.toString",
      "offset": [
        738,
        777
      ],
      "op": "POP",
      "path": "124"
    },
    "3047": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "JUMPDEST",
      "path": "124"
    },
    "3048": {
      "fn": "Strings.toString",
      "offset": [
        794,
        804
      ],
      "op": "DUP5",
      "path": "124"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        794,
        804
      ],
      "op": "ISZERO",
      "path": "124"
    },
    "3050": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0x966"
    },
    "3053": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "JUMPI",
      "path": "124"
    },
    "3054": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "PUSH2",
      "path": "124",
      "statement": 42,
      "value": "0xBF8"
    },
    "3057": {
      "fn": "Strings.toString",
      "offset": [
        830,
        831
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x1"
    },
    "3059": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "DUP4",
      "path": "124"
    },
    "3060": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0x1109"
    },
    "3063": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        820,
        831
      ],
      "op": "JUMP",
      "path": "124"
    },
    "3064": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "JUMPDEST",
      "path": "124"
    },
    "3065": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "SWAP2",
      "path": "124"
    },
    "3066": {
      "op": "POP"
    },
    "3067": {
      "fn": "Strings.toString",
      "offset": [
        888,
        898
      ],
      "op": "PUSH2",
      "path": "124",
      "statement": 43,
      "value": "0xC05"
    },
    "3070": {
      "fn": "Strings.toString",
      "offset": [
        896,
        898
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0xA"
    },
    "3072": {
      "fn": "Strings.toString",
      "offset": [
        888,
        893
      ],
      "op": "DUP7",
      "path": "124"
    },
    "3073": {
      "fn": "Strings.toString",
      "offset": [
        888,
        898
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0x11A2"
    },
    "3076": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        888,
        898
      ],
      "op": "JUMP",
      "path": "124"
    },
    "3077": {
      "fn": "Strings.toString",
      "offset": [
        888,
        898
      ],
      "op": "JUMPDEST",
      "path": "124"
    },
    "3078": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0xC10"
    },
    "3081": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "SWAP1",
      "path": "124"
    },
    "3082": {
      "fn": "Strings.toString",
      "offset": [
        875,
        877
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x30"
    },
    "3084": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0x10DD"
    },
    "3087": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        875,
        899
      ],
      "op": "JUMP",
      "path": "124"
    },
    "3088": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "JUMPDEST",
      "path": "124"
    },
    "3089": {
      "fn": "Strings.toString",
      "offset": [
        862,
        901
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0xF8"
    },
    "3091": {
      "fn": "Strings.toString",
      "offset": [
        862,
        901
      ],
      "op": "SHL",
      "path": "124"
    },
    "3092": {
      "fn": "Strings.toString",
      "offset": [
        845,
        851
      ],
      "op": "DUP2",
      "path": "124"
    },
    "3093": {
      "fn": "Strings.toString",
      "offset": [
        852,
        858
      ],
      "op": "DUP4",
      "path": "124"
    },
    "3094": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "DUP2",
      "path": "124"
    },
    "3095": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "MLOAD",
      "path": "124"
    },
    "3096": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "DUP2",
      "path": "124"
    },
    "3097": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "LT",
      "path": "124"
    },
    "3098": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0xC33"
    },
    "3101": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "JUMPI",
      "path": "124"
    },
    "3102": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3109": {
      "op": "SHL"
    },
    "3110": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x0"
    },
    "3112": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "MSTORE",
      "path": "124"
    },
    "3113": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x32"
    },
    "3115": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x4"
    },
    "3117": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "MSTORE",
      "path": "124"
    },
    "3118": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x24"
    },
    "3120": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x0"
    },
    "3122": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "REVERT",
      "path": "124"
    },
    "3123": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "JUMPDEST",
      "path": "124"
    },
    "3124": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x20"
    },
    "3126": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "ADD",
      "path": "124"
    },
    "3127": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "ADD",
      "path": "124"
    },
    "3128": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "SWAP1",
      "path": "124"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3135": {
      "op": "SHL"
    },
    "3136": {
      "op": "SUB"
    },
    "3137": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "NOT",
      "path": "124"
    },
    "3138": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "AND",
      "path": "124"
    },
    "3139": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "SWAP1",
      "path": "124"
    },
    "3140": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "DUP2",
      "path": "124"
    },
    "3141": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0x0"
    },
    "3143": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "BYTE",
      "path": "124"
    },
    "3144": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "SWAP1",
      "path": "124"
    },
    "3145": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "MSTORE8",
      "path": "124"
    },
    "3146": {
      "op": "POP"
    },
    "3147": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "PUSH2",
      "path": "124",
      "statement": 44,
      "value": "0xC55"
    },
    "3150": {
      "fn": "Strings.toString",
      "offset": [
        924,
        926
      ],
      "op": "PUSH1",
      "path": "124",
      "value": "0xA"
    },
    "3152": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "DUP7",
      "path": "124"
    },
    "3153": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0x10F5"
    },
    "3156": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        915,
        926
      ],
      "op": "JUMP",
      "path": "124"
    },
    "3157": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "JUMPDEST",
      "path": "124"
    },
    "3158": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "SWAP5",
      "path": "124"
    },
    "3159": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "POP",
      "path": "124"
    },
    "3160": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "PUSH2",
      "path": "124",
      "value": "0xBE7"
    },
    "3163": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "JUMP",
      "path": "124"
    },
    "3164": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "3165": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11582,
        11586
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3173": {
      "op": "SHL"
    },
    "3174": {
      "op": "SUB"
    },
    "3175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11606,
        11619
      ],
      "op": "DUP5",
      "path": "103"
    },
    "3176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11606,
        11619
      ],
      "op": "AND",
      "path": "103"
    },
    "3177": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "119"
    },
    "3178": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "119",
      "statement": 45
    },
    "3179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11602,
        12280
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xD5E"
    },
    "3182": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11602,
        12280
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "3183": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "3185": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "3186": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3193": {
      "op": "SHL"
    },
    "3194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP2",
      "path": "103"
    },
    "3195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3202": {
      "op": "SHL"
    },
    "3203": {
      "op": "SUB"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "DUP6",
      "path": "103"
    },
    "3205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "AND",
      "path": "103"
    },
    "3206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "3207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "PUSH4",
      "path": "103",
      "value": "0x150B7A02"
    },
    "3212": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xCA0"
    },
    "3216": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "3217": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "3218": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "121"
    },
    "3219": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11692,
        11696
      ],
      "op": "DUP10",
      "path": "103"
    },
    "3220": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11692,
        11696
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "3221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11698,
        11705
      ],
      "op": "DUP9",
      "path": "103"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11698,
        11705
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11707,
        11712
      ],
      "op": "DUP9",
      "path": "103"
    },
    "3224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11707,
        11712
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "3225": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "3227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ADD",
      "path": "103"
    },
    "3228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xFEA"
    },
    "3231": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMP",
      "path": "103"
    },
    "3232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "3233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "3235": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "3237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP1",
      "path": "103"
    },
    "3239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP4",
      "path": "103"
    },
    "3240": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SUB",
      "path": "103"
    },
    "3241": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP2",
      "path": "103"
    },
    "3242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "3244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP8",
      "path": "103"
    },
    "3245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP1",
      "path": "103"
    },
    "3246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "EXTCODESIZE",
      "path": "103"
    },
    "3247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ISZERO",
      "path": "103"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP1",
      "path": "103"
    },
    "3249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ISZERO",
      "path": "103"
    },
    "3250": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xCBA"
    },
    "3253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "3256": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP1",
      "path": "103"
    },
    "3257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "REVERT",
      "path": "103"
    },
    "3258": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "3259": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "POP",
      "path": "103"
    },
    "3260": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "GAS",
      "path": "103"
    },
    "3261": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "CALL",
      "path": "103"
    },
    "3262": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP3",
      "path": "103"
    },
    "3263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "POP",
      "path": "103"
    },
    "3264": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "POP",
      "path": "103"
    },
    "3265": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "POP",
      "path": "103"
    },
    "3266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP1",
      "path": "103"
    },
    "3267": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ISZERO",
      "path": "103"
    },
    "3268": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xCEA"
    },
    "3271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "3272": {
      "op": "POP"
    },
    "3273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "3275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP1",
      "path": "103"
    },
    "3276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "3277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x1F"
    },
    "3279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "RETURNDATASIZE",
      "path": "103"
    },
    "3280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "3281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP2",
      "path": "103"
    },
    "3282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ADD",
      "path": "103"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3285": {
      "op": "NOT"
    },
    "3286": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "AND",
      "path": "103"
    },
    "3287": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP3",
      "path": "103"
    },
    "3288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ADD",
      "path": "103"
    },
    "3289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "3290": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP3",
      "path": "103"
    },
    "3291": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "3292": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xCE7"
    },
    "3295": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "3296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP2",
      "path": "103"
    },
    "3297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ADD",
      "path": "103"
    },
    "3298": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "3299": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xF5B"
    },
    "3302": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMP",
      "path": "103"
    },
    "3303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "3304": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x1"
    },
    "3306": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "3307": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xD44"
    },
    "3310": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "3311": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATASIZE",
      "path": "103"
    },
    "3312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP1",
      "path": "103"
    },
    "3313": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP1",
      "path": "103"
    },
    "3314": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "ISZERO",
      "path": "103"
    },
    "3315": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xD18"
    },
    "3318": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "3319": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "3321": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "3322": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "3323": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "POP",
      "path": "103"
    },
    "3324": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x1F"
    },
    "3326": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "NOT",
      "path": "103"
    },
    "3327": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x3F"
    },
    "3329": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATASIZE",
      "path": "103"
    },
    "3330": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "ADD",
      "path": "103"
    },
    "3331": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "AND",
      "path": "103"
    },
    "3332": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP3",
      "path": "103"
    },
    "3333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "ADD",
      "path": "103"
    },
    "3334": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x40"
    },
    "3336": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "3337": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATASIZE",
      "path": "103"
    },
    "3338": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP3",
      "path": "103"
    },
    "3339": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "3340": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATASIZE",
      "path": "103"
    },
    "3341": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x0"
    },
    "3343": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "3345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP5",
      "path": "103"
    },
    "3346": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "ADD",
      "path": "103"
    },
    "3347": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATACOPY",
      "path": "103"
    },
    "3348": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xD1D"
    },
    "3351": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMP",
      "path": "103"
    },
    "3352": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "3353": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x60"
    },
    "3355": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "SWAP2",
      "path": "103"
    },
    "3356": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "POP",
      "path": "103"
    },
    "3357": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "3358": {
      "op": "POP"
    },
    "3359": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11884,
        11897
      ],
      "op": "DUP1",
      "path": "103"
    },
    "3360": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11884,
        11897
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "3361": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11880,
        12214
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0xD3C"
    },
    "3364": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11880,
        12214
      ],
      "op": "JUMPI",
      "path": "103"
    },
    "3365": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "PUSH1",
      "path": "103",
      "statement": 46,
      "value": "0x40"
    },
    "3367": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "3368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3374": {
      "op": "SHL"
    },
    "3375": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "DUP2",
      "path": "103"
    },
    "3376": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "MSTORE",
      "path": "103"
    },
    "3377": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x4"
    },
    "3379": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "ADD",
      "path": "103"
    },
    "3380": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x383"
    },
    "3383": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "3384": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x103A"
    },
    "3387": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        11926,
        11986
      ],
      "op": "JUMP",
      "path": "103"
    },
    "3388": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11880,
        12214
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "3389": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12166,
        12172
      ],
      "op": "DUP1",
      "path": "103"
    },
    "3390": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12160,
        12173
      ],
      "op": "MLOAD",
      "path": "103"
    },
    "3391": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12151,
        12157
      ],
      "op": "DUP2",
      "path": "103"
    },
    "3392": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12147,
        12149
      ],
      "op": "PUSH1",
      "path": "103",
      "value": "0x20"
    },
    "3394": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12143,
        12158
      ],
      "op": "ADD",
      "path": "103"
    },
    "3395": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12136,
        12174
      ],
      "op": "REVERT",
      "path": "103"
    },
    "3396": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3403": {
      "op": "SHL"
    },
    "3404": {
      "op": "SUB"
    },
    "3405": {
      "op": "NOT"
    },
    "3406": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11763,
        11818
      ],
      "op": "AND",
      "path": "103",
      "statement": 47
    },
    "3407": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3414": {
      "op": "SHL"
    },
    "3415": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11763,
        11818
      ],
      "op": "EQ",
      "path": "103"
    },
    "3416": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11763,
        11818
      ],
      "op": "SWAP1",
      "path": "103"
    },
    "3417": {
      "op": "POP"
    },
    "3418": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11756,
        11818
      ],
      "op": "PUSH2",
      "path": "103",
      "value": "0x966"
    },
    "3421": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11756,
        11818
      ],
      "op": "JUMP",
      "path": "103"
    },
    "3422": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11602,
        12280
      ],
      "op": "JUMPDEST",
      "path": "103"
    },
    "3423": {
      "op": "POP"
    },
    "3424": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12265,
        12269
      ],
      "op": "PUSH1",
      "path": "103",
      "statement": 48,
      "value": "0x1"
    },
    "3426": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "SWAP5",
      "path": "103"
    },
    "3427": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "SWAP4",
      "path": "103"
    },
    "3428": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "POP",
      "path": "103"
    },
    "3429": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "POP",
      "path": "103"
    },
    "3430": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "POP",
      "path": "103"
    },
    "3431": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "POP",
      "path": "103"
    },
    "3432": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        11462,
        12286
      ],
      "op": "JUMP",
      "path": "103"
    },
    "3433": {
      "op": "JUMPDEST"
    },
    "3434": {
      "op": "DUP1"
    },
    "3435": {
      "op": "CALLDATALOAD"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3442": {
      "op": "SHL"
    },
    "3443": {
      "op": "SUB"
    },
    "3444": {
      "op": "DUP2"
    },
    "3445": {
      "op": "AND"
    },
    "3446": {
      "op": "DUP2"
    },
    "3447": {
      "op": "EQ"
    },
    "3448": {
      "op": "PUSH2",
      "value": "0x277"
    },
    "3451": {
      "op": "JUMPI"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3454": {
      "op": "DUP1"
    },
    "3455": {
      "op": "REVERT"
    },
    "3456": {
      "op": "JUMPDEST"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3461": {
      "op": "DUP3"
    },
    "3462": {
      "op": "DUP5"
    },
    "3463": {
      "op": "SUB"
    },
    "3464": {
      "op": "SLT"
    },
    "3465": {
      "op": "ISZERO"
    },
    "3466": {
      "op": "PUSH2",
      "value": "0xD91"
    },
    "3469": {
      "op": "JUMPI"
    },
    "3470": {
      "op": "DUP1"
    },
    "3471": {
      "op": "DUP2"
    },
    "3472": {
      "op": "REVERT"
    },
    "3473": {
      "op": "JUMPDEST"
    },
    "3474": {
      "op": "PUSH2",
      "value": "0x802"
    },
    "3477": {
      "op": "DUP3"
    },
    "3478": {
      "op": "PUSH2",
      "value": "0xD69"
    },
    "3481": {
      "jump": "i",
      "op": "JUMP"
    },
    "3482": {
      "op": "JUMPDEST"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3485": {
      "op": "DUP1"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3488": {
      "op": "DUP4"
    },
    "3489": {
      "op": "DUP6"
    },
    "3490": {
      "op": "SUB"
    },
    "3491": {
      "op": "SLT"
    },
    "3492": {
      "op": "ISZERO"
    },
    "3493": {
      "op": "PUSH2",
      "value": "0xDAC"
    },
    "3496": {
      "op": "JUMPI"
    },
    "3497": {
      "op": "DUP1"
    },
    "3498": {
      "op": "DUP2"
    },
    "3499": {
      "op": "REVERT"
    },
    "3500": {
      "op": "JUMPDEST"
    },
    "3501": {
      "op": "PUSH2",
      "value": "0xDB5"
    },
    "3504": {
      "op": "DUP4"
    },
    "3505": {
      "op": "PUSH2",
      "value": "0xD69"
    },
    "3508": {
      "jump": "i",
      "op": "JUMP"
    },
    "3509": {
      "op": "JUMPDEST"
    },
    "3510": {
      "op": "SWAP2"
    },
    "3511": {
      "op": "POP"
    },
    "3512": {
      "op": "PUSH2",
      "value": "0xDC3"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3517": {
      "op": "DUP5"
    },
    "3518": {
      "op": "ADD"
    },
    "3519": {
      "op": "PUSH2",
      "value": "0xD69"
    },
    "3522": {
      "jump": "i",
      "op": "JUMP"
    },
    "3523": {
      "op": "JUMPDEST"
    },
    "3524": {
      "op": "SWAP1"
    },
    "3525": {
      "op": "POP"
    },
    "3526": {
      "op": "SWAP3"
    },
    "3527": {
      "op": "POP"
    },
    "3528": {
      "op": "SWAP3"
    },
    "3529": {
      "op": "SWAP1"
    },
    "3530": {
      "op": "POP"
    },
    "3531": {
      "jump": "o",
      "op": "JUMP"
    },
    "3532": {
      "op": "JUMPDEST"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3535": {
      "op": "DUP1"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3540": {
      "op": "DUP5"
    },
    "3541": {
      "op": "DUP7"
    },
    "3542": {
      "op": "SUB"
    },
    "3543": {
      "op": "SLT"
    },
    "3544": {
      "op": "ISZERO"
    },
    "3545": {
      "op": "PUSH2",
      "value": "0xDE0"
    },
    "3548": {
      "op": "JUMPI"
    },
    "3549": {
      "op": "DUP1"
    },
    "3550": {
      "op": "DUP2"
    },
    "3551": {
      "op": "REVERT"
    },
    "3552": {
      "op": "JUMPDEST"
    },
    "3553": {
      "op": "PUSH2",
      "value": "0xDE9"
    },
    "3556": {
      "op": "DUP5"
    },
    "3557": {
      "op": "PUSH2",
      "value": "0xD69"
    },
    "3560": {
      "jump": "i",
      "op": "JUMP"
    },
    "3561": {
      "op": "JUMPDEST"
    },
    "3562": {
      "op": "SWAP3"
    },
    "3563": {
      "op": "POP"
    },
    "3564": {
      "op": "PUSH2",
      "value": "0xDF7"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3569": {
      "op": "DUP6"
    },
    "3570": {
      "op": "ADD"
    },
    "3571": {
      "op": "PUSH2",
      "value": "0xD69"
    },
    "3574": {
      "jump": "i",
      "op": "JUMP"
    },
    "3575": {
      "op": "JUMPDEST"
    },
    "3576": {
      "op": "SWAP2"
    },
    "3577": {
      "op": "POP"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3580": {
      "op": "DUP5"
    },
    "3581": {
      "op": "ADD"
    },
    "3582": {
      "op": "CALLDATALOAD"
    },
    "3583": {
      "op": "SWAP1"
    },
    "3584": {
      "op": "POP"
    },
    "3585": {
      "op": "SWAP3"
    },
    "3586": {
      "op": "POP"
    },
    "3587": {
      "op": "SWAP3"
    },
    "3588": {
      "op": "POP"
    },
    "3589": {
      "op": "SWAP3"
    },
    "3590": {
      "jump": "o",
      "op": "JUMP"
    },
    "3591": {
      "op": "JUMPDEST"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3594": {
      "op": "DUP1"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3597": {
      "op": "DUP1"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3600": {
      "op": "DUP6"
    },
    "3601": {
      "op": "DUP8"
    },
    "3602": {
      "op": "SUB"
    },
    "3603": {
      "op": "SLT"
    },
    "3604": {
      "op": "ISZERO"
    },
    "3605": {
      "op": "PUSH2",
      "value": "0xE1C"
    },
    "3608": {
      "op": "JUMPI"
    },
    "3609": {
      "op": "DUP1"
    },
    "3610": {
      "op": "DUP2"
    },
    "3611": {
      "op": "REVERT"
    },
    "3612": {
      "op": "JUMPDEST"
    },
    "3613": {
      "op": "PUSH2",
      "value": "0xE25"
    },
    "3616": {
      "op": "DUP6"
    },
    "3617": {
      "op": "PUSH2",
      "value": "0xD69"
    },
    "3620": {
      "jump": "i",
      "op": "JUMP"
    },
    "3621": {
      "op": "JUMPDEST"
    },
    "3622": {
      "op": "SWAP4"
    },
    "3623": {
      "op": "POP"
    },
    "3624": {
      "op": "PUSH2",
      "value": "0xE33"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3629": {
      "op": "DUP7"
    },
    "3630": {
      "op": "ADD"
    },
    "3631": {
      "op": "PUSH2",
      "value": "0xD69"
    },
    "3634": {
      "jump": "i",
      "op": "JUMP"
    },
    "3635": {
      "op": "JUMPDEST"
    },
    "3636": {
      "op": "SWAP3"
    },
    "3637": {
      "op": "POP"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3640": {
      "op": "DUP6"
    },
    "3641": {
      "op": "ADD"
    },
    "3642": {
      "op": "CALLDATALOAD"
    },
    "3643": {
      "op": "SWAP2"
    },
    "3644": {
      "op": "POP"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3647": {
      "op": "DUP6"
    },
    "3648": {
      "op": "ADD"
    },
    "3649": {
      "op": "CALLDATALOAD"
    },
    "3650": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3659": {
      "op": "DUP1"
    },
    "3660": {
      "op": "DUP3"
    },
    "3661": {
      "op": "GT"
    },
    "3662": {
      "op": "ISZERO"
    },
    "3663": {
      "op": "PUSH2",
      "value": "0xE56"
    },
    "3666": {
      "op": "JUMPI"
    },
    "3667": {
      "op": "DUP3"
    },
    "3668": {
      "op": "DUP4"
    },
    "3669": {
      "op": "REVERT"
    },
    "3670": {
      "op": "JUMPDEST"
    },
    "3671": {
      "op": "DUP2"
    },
    "3672": {
      "op": "DUP8"
    },
    "3673": {
      "op": "ADD"
    },
    "3674": {
      "op": "SWAP2"
    },
    "3675": {
      "op": "POP"
    },
    "3676": {
      "op": "DUP8"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3679": {
      "op": "DUP4"
    },
    "3680": {
      "op": "ADD"
    },
    "3681": {
      "op": "SLT"
    },
    "3682": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "3685": {
      "op": "JUMPI"
    },
    "3686": {
      "op": "DUP3"
    },
    "3687": {
      "op": "DUP4"
    },
    "3688": {
      "op": "REVERT"
    },
    "3689": {
      "op": "JUMPDEST"
    },
    "3690": {
      "op": "DUP2"
    },
    "3691": {
      "op": "CALLDATALOAD"
    },
    "3692": {
      "op": "DUP2"
    },
    "3693": {
      "op": "DUP2"
    },
    "3694": {
      "op": "GT"
    },
    "3695": {
      "op": "ISZERO"
    },
    "3696": {
      "op": "PUSH2",
      "value": "0xE7B"
    },
    "3699": {
      "op": "JUMPI"
    },
    "3700": {
      "op": "PUSH2",
      "value": "0xE7B"
    },
    "3703": {
      "op": "PUSH2",
      "value": "0x11E2"
    },
    "3706": {
      "jump": "i",
      "op": "JUMP"
    },
    "3707": {
      "op": "JUMPDEST"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3710": {
      "op": "MLOAD"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3713": {
      "op": "DUP3"
    },
    "3714": {
      "op": "ADD"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3717": {
      "op": "NOT"
    },
    "3718": {
      "op": "SWAP1"
    },
    "3719": {
      "op": "DUP2"
    },
    "3720": {
      "op": "AND"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3723": {
      "op": "ADD"
    },
    "3724": {
      "op": "AND"
    },
    "3725": {
      "op": "DUP2"
    },
    "3726": {
      "op": "ADD"
    },
    "3727": {
      "op": "SWAP1"
    },
    "3728": {
      "op": "DUP4"
    },
    "3729": {
      "op": "DUP3"
    },
    "3730": {
      "op": "GT"
    },
    "3731": {
      "op": "DUP2"
    },
    "3732": {
      "op": "DUP4"
    },
    "3733": {
      "op": "LT"
    },
    "3734": {
      "op": "OR"
    },
    "3735": {
      "op": "ISZERO"
    },
    "3736": {
      "op": "PUSH2",
      "value": "0xEA3"
    },
    "3739": {
      "op": "JUMPI"
    },
    "3740": {
      "op": "PUSH2",
      "value": "0xEA3"
    },
    "3743": {
      "op": "PUSH2",
      "value": "0x11E2"
    },
    "3746": {
      "jump": "i",
      "op": "JUMP"
    },
    "3747": {
      "op": "JUMPDEST"
    },
    "3748": {
      "op": "DUP2"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3751": {
      "op": "MSTORE"
    },
    "3752": {
      "op": "DUP3"
    },
    "3753": {
      "op": "DUP2"
    },
    "3754": {
      "op": "MSTORE"
    },
    "3755": {
      "op": "DUP11"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3758": {
      "op": "DUP5"
    },
    "3759": {
      "op": "DUP8"
    },
    "3760": {
      "op": "ADD"
    },
    "3761": {
      "op": "ADD"
    },
    "3762": {
      "op": "GT"
    },
    "3763": {
      "op": "ISZERO"
    },
    "3764": {
      "op": "PUSH2",
      "value": "0xEBB"
    },
    "3767": {
      "op": "JUMPI"
    },
    "3768": {
      "op": "DUP6"
    },
    "3769": {
      "op": "DUP7"
    },
    "3770": {
      "op": "REVERT"
    },
    "3771": {
      "op": "JUMPDEST"
    },
    "3772": {
      "op": "DUP3"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3775": {
      "op": "DUP7"
    },
    "3776": {
      "op": "ADD"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3779": {
      "op": "DUP4"
    },
    "3780": {
      "op": "ADD"
    },
    "3781": {
      "op": "CALLDATACOPY"
    },
    "3782": {
      "op": "SWAP2"
    },
    "3783": {
      "op": "DUP3"
    },
    "3784": {
      "op": "ADD"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3787": {
      "op": "ADD"
    },
    "3788": {
      "op": "SWAP5"
    },
    "3789": {
      "op": "SWAP1"
    },
    "3790": {
      "op": "SWAP5"
    },
    "3791": {
      "op": "MSTORE"
    },
    "3792": {
      "op": "SWAP6"
    },
    "3793": {
      "op": "SWAP9"
    },
    "3794": {
      "op": "SWAP5"
    },
    "3795": {
      "op": "SWAP8"
    },
    "3796": {
      "op": "POP"
    },
    "3797": {
      "op": "SWAP3"
    },
    "3798": {
      "op": "SWAP6"
    },
    "3799": {
      "op": "POP"
    },
    "3800": {
      "op": "POP"
    },
    "3801": {
      "op": "POP"
    },
    "3802": {
      "op": "POP"
    },
    "3803": {
      "jump": "o",
      "op": "JUMP"
    },
    "3804": {
      "op": "JUMPDEST"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3807": {
      "op": "DUP1"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3810": {
      "op": "DUP4"
    },
    "3811": {
      "op": "DUP6"
    },
    "3812": {
      "op": "SUB"
    },
    "3813": {
      "op": "SLT"
    },
    "3814": {
      "op": "ISZERO"
    },
    "3815": {
      "op": "PUSH2",
      "value": "0xEEE"
    },
    "3818": {
      "op": "JUMPI"
    },
    "3819": {
      "op": "DUP2"
    },
    "3820": {
      "op": "DUP3"
    },
    "3821": {
      "op": "REVERT"
    },
    "3822": {
      "op": "JUMPDEST"
    },
    "3823": {
      "op": "PUSH2",
      "value": "0xEF7"
    },
    "3826": {
      "op": "DUP4"
    },
    "3827": {
      "op": "PUSH2",
      "value": "0xD69"
    },
    "3830": {
      "jump": "i",
      "op": "JUMP"
    },
    "3831": {
      "op": "JUMPDEST"
    },
    "3832": {
      "op": "SWAP2"
    },
    "3833": {
      "op": "POP"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3836": {
      "op": "DUP4"
    },
    "3837": {
      "op": "ADD"
    },
    "3838": {
      "op": "CALLDATALOAD"
    },
    "3839": {
      "op": "DUP1"
    },
    "3840": {
      "op": "ISZERO"
    },
    "3841": {
      "op": "ISZERO"
    },
    "3842": {
      "op": "DUP2"
    },
    "3843": {
      "op": "EQ"
    },
    "3844": {
      "op": "PUSH2",
      "value": "0xF0B"
    },
    "3847": {
      "op": "JUMPI"
    },
    "3848": {
      "op": "DUP2"
    },
    "3849": {
      "op": "DUP3"
    },
    "3850": {
      "op": "REVERT"
    },
    "3851": {
      "op": "JUMPDEST"
    },
    "3852": {
      "op": "DUP1"
    },
    "3853": {
      "op": "SWAP2"
    },
    "3854": {
      "op": "POP"
    },
    "3855": {
      "op": "POP"
    },
    "3856": {
      "op": "SWAP3"
    },
    "3857": {
      "op": "POP"
    },
    "3858": {
      "op": "SWAP3"
    },
    "3859": {
      "op": "SWAP1"
    },
    "3860": {
      "op": "POP"
    },
    "3861": {
      "jump": "o",
      "op": "JUMP"
    },
    "3862": {
      "op": "JUMPDEST"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3865": {
      "op": "DUP1"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3868": {
      "op": "DUP4"
    },
    "3869": {
      "op": "DUP6"
    },
    "3870": {
      "op": "SUB"
    },
    "3871": {
      "op": "SLT"
    },
    "3872": {
      "op": "ISZERO"
    },
    "3873": {
      "op": "PUSH2",
      "value": "0xF28"
    },
    "3876": {
      "op": "JUMPI"
    },
    "3877": {
      "op": "DUP2"
    },
    "3878": {
      "op": "DUP3"
    },
    "3879": {
      "op": "REVERT"
    },
    "3880": {
      "op": "JUMPDEST"
    },
    "3881": {
      "op": "PUSH2",
      "value": "0xF31"
    },
    "3884": {
      "op": "DUP4"
    },
    "3885": {
      "op": "PUSH2",
      "value": "0xD69"
    },
    "3888": {
      "jump": "i",
      "op": "JUMP"
    },
    "3889": {
      "op": "JUMPDEST"
    },
    "3890": {
      "op": "SWAP5"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3893": {
      "op": "SWAP4"
    },
    "3894": {
      "op": "SWAP1"
    },
    "3895": {
      "op": "SWAP4"
    },
    "3896": {
      "op": "ADD"
    },
    "3897": {
      "op": "CALLDATALOAD"
    },
    "3898": {
      "op": "SWAP4"
    },
    "3899": {
      "op": "POP"
    },
    "3900": {
      "op": "POP"
    },
    "3901": {
      "op": "POP"
    },
    "3902": {
      "jump": "o",
      "op": "JUMP"
    },
    "3903": {
      "op": "JUMPDEST"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3908": {
      "op": "DUP3"
    },
    "3909": {
      "op": "DUP5"
    },
    "3910": {
      "op": "SUB"
    },
    "3911": {
      "op": "SLT"
    },
    "3912": {
      "op": "ISZERO"
    },
    "3913": {
      "op": "PUSH2",
      "value": "0xF50"
    },
    "3916": {
      "op": "JUMPI"
    },
    "3917": {
      "op": "DUP1"
    },
    "3918": {
      "op": "DUP2"
    },
    "3919": {
      "op": "REVERT"
    },
    "3920": {
      "op": "JUMPDEST"
    },
    "3921": {
      "op": "DUP2"
    },
    "3922": {
      "op": "CALLDATALOAD"
    },
    "3923": {
      "op": "PUSH2",
      "value": "0x802"
    },
    "3926": {
      "op": "DUP2"
    },
    "3927": {
      "op": "PUSH2",
      "value": "0x11F8"
    },
    "3930": {
      "jump": "i",
      "op": "JUMP"
    },
    "3931": {
      "op": "JUMPDEST"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3936": {
      "op": "DUP3"
    },
    "3937": {
      "op": "DUP5"
    },
    "3938": {
      "op": "SUB"
    },
    "3939": {
      "op": "SLT"
    },
    "3940": {
      "op": "ISZERO"
    },
    "3941": {
      "op": "PUSH2",
      "value": "0xF6C"
    },
    "3944": {
      "op": "JUMPI"
    },
    "3945": {
      "op": "DUP1"
    },
    "3946": {
      "op": "DUP2"
    },
    "3947": {
      "op": "REVERT"
    },
    "3948": {
      "op": "JUMPDEST"
    },
    "3949": {
      "op": "DUP2"
    },
    "3950": {
      "op": "MLOAD"
    },
    "3951": {
      "op": "PUSH2",
      "value": "0x802"
    },
    "3954": {
      "op": "DUP2"
    },
    "3955": {
      "op": "PUSH2",
      "value": "0x11F8"
    },
    "3958": {
      "jump": "i",
      "op": "JUMP"
    },
    "3959": {
      "op": "JUMPDEST"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3964": {
      "op": "DUP3"
    },
    "3965": {
      "op": "DUP5"
    },
    "3966": {
      "op": "SUB"
    },
    "3967": {
      "op": "SLT"
    },
    "3968": {
      "op": "ISZERO"
    },
    "3969": {
      "op": "PUSH2",
      "value": "0xF88"
    },
    "3972": {
      "op": "JUMPI"
    },
    "3973": {
      "op": "DUP1"
    },
    "3974": {
      "op": "DUP2"
    },
    "3975": {
      "op": "REVERT"
    },
    "3976": {
      "op": "JUMPDEST"
    },
    "3977": {
      "op": "POP"
    },
    "3978": {
      "op": "CALLDATALOAD"
    },
    "3979": {
      "op": "SWAP2"
    },
    "3980": {
      "op": "SWAP1"
    },
    "3981": {
      "op": "POP"
    },
    "3982": {
      "jump": "o",
      "op": "JUMP"
    },
    "3983": {
      "op": "JUMPDEST"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3986": {
      "op": "DUP2"
    },
    "3987": {
      "op": "MLOAD"
    },
    "3988": {
      "op": "DUP1"
    },
    "3989": {
      "op": "DUP5"
    },
    "3990": {
      "op": "MSTORE"
    },
    "3991": {
      "op": "PUSH2",
      "value": "0xFA7"
    },
    "3994": {
      "op": "DUP2"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3997": {
      "op": "DUP7"
    },
    "3998": {
      "op": "ADD"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4001": {
      "op": "DUP7"
    },
    "4002": {
      "op": "ADD"
    },
    "4003": {
      "op": "PUSH2",
      "value": "0x1120"
    },
    "4006": {
      "jump": "i",
      "op": "JUMP"
    },
    "4007": {
      "op": "JUMPDEST"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4010": {
      "op": "ADD"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4013": {
      "op": "NOT"
    },
    "4014": {
      "op": "AND"
    },
    "4015": {
      "op": "SWAP3"
    },
    "4016": {
      "op": "SWAP1"
    },
    "4017": {
      "op": "SWAP3"
    },
    "4018": {
      "op": "ADD"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "SWAP3"
    },
    "4023": {
      "op": "SWAP2"
    },
    "4024": {
      "op": "POP"
    },
    "4025": {
      "op": "POP"
    },
    "4026": {
      "jump": "o",
      "op": "JUMP"
    },
    "4027": {
      "op": "JUMPDEST"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4030": {
      "op": "DUP4"
    },
    "4031": {
      "op": "MLOAD"
    },
    "4032": {
      "op": "PUSH2",
      "value": "0xFCD"
    },
    "4035": {
      "op": "DUP2"
    },
    "4036": {
      "op": "DUP5"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4039": {
      "op": "DUP9"
    },
    "4040": {
      "op": "ADD"
    },
    "4041": {
      "op": "PUSH2",
      "value": "0x1120"
    },
    "4044": {
      "jump": "i",
      "op": "JUMP"
    },
    "4045": {
      "op": "JUMPDEST"
    },
    "4046": {
      "op": "DUP4"
    },
    "4047": {
      "op": "MLOAD"
    },
    "4048": {
      "op": "SWAP1"
    },
    "4049": {
      "op": "DUP4"
    },
    "4050": {
      "op": "ADD"
    },
    "4051": {
      "op": "SWAP1"
    },
    "4052": {
      "op": "PUSH2",
      "value": "0xFE1"
    },
    "4055": {
      "op": "DUP2"
    },
    "4056": {
      "op": "DUP4"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4059": {
      "op": "DUP9"
    },
    "4060": {
      "op": "ADD"
    },
    "4061": {
      "op": "PUSH2",
      "value": "0x1120"
    },
    "4064": {
      "jump": "i",
      "op": "JUMP"
    },
    "4065": {
      "op": "JUMPDEST"
    },
    "4066": {
      "op": "ADD"
    },
    "4067": {
      "op": "SWAP5"
    },
    "4068": {
      "op": "SWAP4"
    },
    "4069": {
      "op": "POP"
    },
    "4070": {
      "op": "POP"
    },
    "4071": {
      "op": "POP"
    },
    "4072": {
      "op": "POP"
    },
    "4073": {
      "jump": "o",
      "op": "JUMP"
    },
    "4074": {
      "op": "JUMPDEST"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4081": {
      "op": "SHL"
    },
    "4082": {
      "op": "SUB"
    },
    "4083": {
      "op": "DUP6"
    },
    "4084": {
      "op": "DUP2"
    },
    "4085": {
      "op": "AND"
    },
    "4086": {
      "op": "DUP3"
    },
    "4087": {
      "op": "MSTORE"
    },
    "4088": {
      "op": "DUP5"
    },
    "4089": {
      "op": "AND"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4092": {
      "op": "DUP3"
    },
    "4093": {
      "op": "ADD"
    },
    "4094": {
      "op": "MSTORE"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4097": {
      "op": "DUP2"
    },
    "4098": {
      "op": "ADD"
    },
    "4099": {
      "op": "DUP4"
    },
    "4100": {
      "op": "SWAP1"
    },
    "4101": {
      "op": "MSTORE"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4106": {
      "op": "DUP3"
    },
    "4107": {
      "op": "ADD"
    },
    "4108": {
      "op": "DUP2"
    },
    "4109": {
      "op": "SWAP1"
    },
    "4110": {
      "op": "MSTORE"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4113": {
      "op": "SWAP1"
    },
    "4114": {
      "op": "PUSH2",
      "value": "0x101D"
    },
    "4117": {
      "op": "SWAP1"
    },
    "4118": {
      "op": "DUP4"
    },
    "4119": {
      "op": "ADD"
    },
    "4120": {
      "op": "DUP5"
    },
    "4121": {
      "op": "PUSH2",
      "value": "0xF8F"
    },
    "4124": {
      "jump": "i",
      "op": "JUMP"
    },
    "4125": {
      "op": "JUMPDEST"
    },
    "4126": {
      "op": "SWAP7"
    },
    "4127": {
      "op": "SWAP6"
    },
    "4128": {
      "op": "POP"
    },
    "4129": {
      "op": "POP"
    },
    "4130": {
      "op": "POP"
    },
    "4131": {
      "op": "POP"
    },
    "4132": {
      "op": "POP"
    },
    "4133": {
      "op": "POP"
    },
    "4134": {
      "jump": "o",
      "op": "JUMP"
    },
    "4135": {
      "op": "JUMPDEST"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4140": {
      "op": "DUP3"
    },
    "4141": {
      "op": "MSTORE"
    },
    "4142": {
      "op": "PUSH2",
      "value": "0x802"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4147": {
      "op": "DUP4"
    },
    "4148": {
      "op": "ADD"
    },
    "4149": {
      "op": "DUP5"
    },
    "4150": {
      "op": "PUSH2",
      "value": "0xF8F"
    },
    "4153": {
      "jump": "i",
      "op": "JUMP"
    },
    "4154": {
      "op": "JUMPDEST"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4157": {
      "op": "DUP1"
    },
    "4158": {
      "op": "DUP3"
    },
    "4159": {
      "op": "MSTORE"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4162": {
      "op": "SWAP1"
    },
    "4163": {
      "op": "DUP3"
    },
    "4164": {
      "op": "ADD"
    },
    "4165": {
      "op": "MSTORE"
    },
    "4166": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4201": {
      "op": "DUP3"
    },
    "4202": {
      "op": "ADD"
    },
    "4203": {
      "op": "MSTORE"
    },
    "4204": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4225": {
      "op": "SHL"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4228": {
      "op": "DUP3"
    },
    "4229": {
      "op": "ADD"
    },
    "4230": {
      "op": "MSTORE"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4233": {
      "op": "ADD"
    },
    "4234": {
      "op": "SWAP1"
    },
    "4235": {
      "jump": "o",
      "op": "JUMP"
    },
    "4236": {
      "op": "JUMPDEST"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4239": {
      "op": "DUP1"
    },
    "4240": {
      "op": "DUP3"
    },
    "4241": {
      "op": "MSTORE"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4244": {
      "op": "SWAP1"
    },
    "4245": {
      "op": "DUP3"
    },
    "4246": {
      "op": "ADD"
    },
    "4247": {
      "op": "MSTORE"
    },
    "4248": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4283": {
      "op": "DUP3"
    },
    "4284": {
      "op": "ADD"
    },
    "4285": {
      "op": "MSTORE"
    },
    "4286": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4306": {
      "op": "SHL"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4309": {
      "op": "DUP3"
    },
    "4310": {
      "op": "ADD"
    },
    "4311": {
      "op": "MSTORE"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4314": {
      "op": "ADD"
    },
    "4315": {
      "op": "SWAP1"
    },
    "4316": {
      "jump": "o",
      "op": "JUMP"
    },
    "4317": {
      "op": "JUMPDEST"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4320": {
      "op": "DUP3"
    },
    "4321": {
      "op": "NOT"
    },
    "4322": {
      "op": "DUP3"
    },
    "4323": {
      "op": "GT"
    },
    "4324": {
      "op": "ISZERO"
    },
    "4325": {
      "op": "PUSH2",
      "value": "0x10F0"
    },
    "4328": {
      "op": "JUMPI"
    },
    "4329": {
      "op": "PUSH2",
      "value": "0x10F0"
    },
    "4332": {
      "op": "PUSH2",
      "value": "0x11B6"
    },
    "4335": {
      "jump": "i",
      "op": "JUMP"
    },
    "4336": {
      "op": "JUMPDEST"
    },
    "4337": {
      "op": "POP"
    },
    "4338": {
      "op": "ADD"
    },
    "4339": {
      "op": "SWAP1"
    },
    "4340": {
      "jump": "o",
      "op": "JUMP"
    },
    "4341": {
      "op": "JUMPDEST"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4344": {
      "op": "DUP3"
    },
    "4345": {
      "op": "PUSH2",
      "value": "0x1104"
    },
    "4348": {
      "op": "JUMPI"
    },
    "4349": {
      "op": "PUSH2",
      "value": "0x1104"
    },
    "4352": {
      "op": "PUSH2",
      "value": "0x11CC"
    },
    "4355": {
      "jump": "i",
      "op": "JUMP"
    },
    "4356": {
      "op": "JUMPDEST"
    },
    "4357": {
      "op": "POP"
    },
    "4358": {
      "op": "DIV"
    },
    "4359": {
      "op": "SWAP1"
    },
    "4360": {
      "jump": "o",
      "op": "JUMP"
    },
    "4361": {
      "op": "JUMPDEST"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4364": {
      "op": "DUP3"
    },
    "4365": {
      "op": "DUP3"
    },
    "4366": {
      "op": "LT"
    },
    "4367": {
      "op": "ISZERO"
    },
    "4368": {
      "op": "PUSH2",
      "value": "0x111B"
    },
    "4371": {
      "op": "JUMPI"
    },
    "4372": {
      "op": "PUSH2",
      "value": "0x111B"
    },
    "4375": {
      "op": "PUSH2",
      "value": "0x11B6"
    },
    "4378": {
      "jump": "i",
      "op": "JUMP"
    },
    "4379": {
      "op": "JUMPDEST"
    },
    "4380": {
      "op": "POP"
    },
    "4381": {
      "op": "SUB"
    },
    "4382": {
      "op": "SWAP1"
    },
    "4383": {
      "jump": "o",
      "op": "JUMP"
    },
    "4384": {
      "op": "JUMPDEST"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4387": {
      "op": "JUMPDEST"
    },
    "4388": {
      "op": "DUP4"
    },
    "4389": {
      "op": "DUP2"
    },
    "4390": {
      "op": "LT"
    },
    "4391": {
      "op": "ISZERO"
    },
    "4392": {
      "op": "PUSH2",
      "value": "0x113B"
    },
    "4395": {
      "op": "JUMPI"
    },
    "4396": {
      "op": "DUP2"
    },
    "4397": {
      "op": "DUP2"
    },
    "4398": {
      "op": "ADD"
    },
    "4399": {
      "op": "MLOAD"
    },
    "4400": {
      "op": "DUP4"
    },
    "4401": {
      "op": "DUP3"
    },
    "4402": {
      "op": "ADD"
    },
    "4403": {
      "op": "MSTORE"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4406": {
      "op": "ADD"
    },
    "4407": {
      "op": "PUSH2",
      "value": "0x1123"
    },
    "4410": {
      "op": "JUMP"
    },
    "4411": {
      "op": "JUMPDEST"
    },
    "4412": {
      "op": "DUP4"
    },
    "4413": {
      "op": "DUP2"
    },
    "4414": {
      "op": "GT"
    },
    "4415": {
      "op": "ISZERO"
    },
    "4416": {
      "op": "PUSH2",
      "value": "0x71B"
    },
    "4419": {
      "op": "JUMPI"
    },
    "4420": {
      "op": "POP"
    },
    "4421": {
      "op": "POP"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4424": {
      "op": "SWAP2"
    },
    "4425": {
      "op": "ADD"
    },
    "4426": {
      "op": "MSTORE"
    },
    "4427": {
      "jump": "o",
      "op": "JUMP"
    },
    "4428": {
      "op": "JUMPDEST"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4431": {
      "op": "DUP2"
    },
    "4432": {
      "op": "DUP2"
    },
    "4433": {
      "op": "SHR"
    },
    "4434": {
      "op": "SWAP1"
    },
    "4435": {
      "op": "DUP3"
    },
    "4436": {
      "op": "AND"
    },
    "4437": {
      "op": "DUP1"
    },
    "4438": {
      "op": "PUSH2",
      "value": "0x1160"
    },
    "4441": {
      "op": "JUMPI"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4444": {
      "op": "DUP3"
    },
    "4445": {
      "op": "AND"
    },
    "4446": {
      "op": "SWAP2"
    },
    "4447": {
      "op": "POP"
    },
    "4448": {
      "op": "JUMPDEST"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4451": {
      "op": "DUP3"
    },
    "4452": {
      "op": "LT"
    },
    "4453": {
      "op": "DUP2"
    },
    "4454": {
      "op": "EQ"
    },
    "4455": {
      "op": "ISZERO"
    },
    "4456": {
      "op": "PUSH2",
      "value": "0x1181"
    },
    "4459": {
      "op": "JUMPI"
    },
    "4460": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4467": {
      "op": "SHL"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4470": {
      "op": "MSTORE"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4475": {
      "op": "MSTORE"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4480": {
      "op": "REVERT"
    },
    "4481": {
      "op": "JUMPDEST"
    },
    "4482": {
      "op": "POP"
    },
    "4483": {
      "op": "SWAP2"
    },
    "4484": {
      "op": "SWAP1"
    },
    "4485": {
      "op": "POP"
    },
    "4486": {
      "jump": "o",
      "op": "JUMP"
    },
    "4487": {
      "op": "JUMPDEST"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4492": {
      "op": "NOT"
    },
    "4493": {
      "op": "DUP3"
    },
    "4494": {
      "op": "EQ"
    },
    "4495": {
      "op": "ISZERO"
    },
    "4496": {
      "op": "PUSH2",
      "value": "0x119B"
    },
    "4499": {
      "op": "JUMPI"
    },
    "4500": {
      "op": "PUSH2",
      "value": "0x119B"
    },
    "4503": {
      "op": "PUSH2",
      "value": "0x11B6"
    },
    "4506": {
      "jump": "i",
      "op": "JUMP"
    },
    "4507": {
      "op": "JUMPDEST"
    },
    "4508": {
      "op": "POP"
    },
    "4509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4511": {
      "op": "ADD"
    },
    "4512": {
      "op": "SWAP1"
    },
    "4513": {
      "jump": "o",
      "op": "JUMP"
    },
    "4514": {
      "op": "JUMPDEST"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4517": {
      "op": "DUP3"
    },
    "4518": {
      "op": "PUSH2",
      "value": "0x11B1"
    },
    "4521": {
      "op": "JUMPI"
    },
    "4522": {
      "op": "PUSH2",
      "value": "0x11B1"
    },
    "4525": {
      "op": "PUSH2",
      "value": "0x11CC"
    },
    "4528": {
      "jump": "i",
      "op": "JUMP"
    },
    "4529": {
      "op": "JUMPDEST"
    },
    "4530": {
      "op": "POP"
    },
    "4531": {
      "op": "MOD"
    },
    "4532": {
      "op": "SWAP1"
    },
    "4533": {
      "jump": "o",
      "op": "JUMP"
    },
    "4534": {
      "op": "JUMPDEST"
    },
    "4535": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4542": {
      "op": "SHL"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4545": {
      "op": "MSTORE"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4550": {
      "op": "MSTORE"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4555": {
      "op": "REVERT"
    },
    "4556": {
      "op": "JUMPDEST"
    },
    "4557": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4564": {
      "op": "SHL"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4567": {
      "op": "MSTORE"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4572": {
      "op": "MSTORE"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4577": {
      "op": "REVERT"
    },
    "4578": {
      "op": "JUMPDEST"
    },
    "4579": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4586": {
      "op": "SHL"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4589": {
      "op": "MSTORE"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4594": {
      "op": "MSTORE"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4599": {
      "op": "REVERT"
    },
    "4600": {
      "op": "JUMPDEST"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4607": {
      "op": "SHL"
    },
    "4608": {
      "op": "SUB"
    },
    "4609": {
      "op": "NOT"
    },
    "4610": {
      "op": "DUP2"
    },
    "4611": {
      "op": "AND"
    },
    "4612": {
      "op": "DUP2"
    },
    "4613": {
      "op": "EQ"
    },
    "4614": {
      "op": "PUSH2",
      "value": "0x120E"
    },
    "4617": {
      "op": "JUMPI"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4620": {
      "op": "DUP1"
    },
    "4621": {
      "op": "REVERT"
    },
    "4622": {
      "op": "JUMPDEST"
    },
    "4623": {
      "op": "POP"
    },
    "4624": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "2ef99f377a60dab94be744350d80223746d48b2e",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping (uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping (address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping (uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC721).interfaceId\n            || interfaceId == type(IERC721Metadata).interfaceId\n            || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\n            : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\n     * in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _mint(to, tokenId);\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\n        private returns (bool)\n    {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver(to).onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    // solhint-disable-next-line no-inline-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\n}\n",
  "sourceMap": "554:12423:103:-:0;;;1321:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1388:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1411:17:103;;;;:7;;:17;;;;;:::i;:::-;;1321:114;;554:12423;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;554:12423:103;;;-1:-1:-1;554:12423:103;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:909:144;;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;232:10:144;;;229:2;;;245:18;;:::i;:::-;320:2;314:9;288:2;374:13;;-1:-1:-1;;370:22:144;;;394:2;366:31;362:40;350:53;;;418:18;;;438:22;;;415:46;412:2;;;464:18;;:::i;:::-;504:10;500:2;493:22;539:2;531:6;524:18;561:4;551:14;;606:3;601:2;596;588:6;584:15;580:24;577:33;574:2;;;627:5;620;613:20;574:2;653:5;644:14;;667:133;681:2;678:1;675:9;667:133;;;769:14;;;765:23;;759:30;738:14;;;734:23;;727:63;692:10;;;;667:133;;;818:2;815:1;812:9;809:2;;;877:5;872:2;867;859:6;855:15;851:24;844:39;809:2;911:6;78:845;-1:-1:-1;;;;;;78:845:144:o;928:592::-;;;1088:2;1076:9;1067:7;1063:23;1059:32;1056:2;;;1109:6;1101;1094:22;1056:2;1141:16;;-1:-1:-1;;;;;1206:14:144;;;1203:2;;;1238:6;1230;1223:22;1203:2;1266:61;1319:7;1310:6;1299:9;1295:22;1266:61;:::i;:::-;1256:71;;1373:2;1362:9;1358:18;1352:25;1336:41;;1402:2;1392:8;1389:16;1386:2;;;1423:6;1415;1408:22;1386:2;;1451:63;1506:7;1495:8;1484:9;1480:24;1451:63;:::i;:::-;1441:73;;;1046:474;;;;;:::o;1525:380::-;1604:1;1600:12;;;;1647;;;1668:2;;1722:4;1714:6;1710:17;1700:27;;1668:2;1775;1767:6;1764:14;1744:18;1741:38;1738:2;;;1821:10;1816:3;1812:20;1809:1;1802:31;1856:4;1853:1;1846:15;1884:4;1881:1;1874:15;1738:2;;1580:325;;;:::o;1910:127::-;1971:10;1966:3;1962:20;1959:1;1952:31;2002:4;1999:1;1992:15;2026:4;2023:1;2016:15;1942:95;554:12423:103;;;;;;",
  "sourcePath": "contracts/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}