{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "119": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
    "71": "contracts/openzeppelin-contracts/contracts/proxy/Proxy.sol",
    "72": "contracts/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol",
    "73": "contracts/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol",
    "exportedSymbols": {
      "Address": [
        14906
      ],
      "BeaconProxy": [
        7402
      ],
      "IBeacon": [
        7412
      ],
      "Proxy": [
        7283
      ]
    },
    "id": 7403,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7285,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:72"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 7286,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7403,
        "sourceUnit": 7413,
        "src": "58:23:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "file": "../Proxy.sol",
        "id": 7287,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7403,
        "sourceUnit": 7284,
        "src": "82:22:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 7288,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7403,
        "sourceUnit": 14907,
        "src": "105:33:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7290,
              "name": "Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7283,
              "src": "518:5:72"
            },
            "id": 7291,
            "nodeType": "InheritanceSpecifier",
            "src": "518:5:72"
          }
        ],
        "contractDependencies": [
          7283
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7289,
          "nodeType": "StructuredDocumentation",
          "src": "140:353:72",
          "text": " @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\n The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n conflict with the storage layout of the implementation behind the proxy.\n _Available since v3.4._"
        },
        "fullyImplemented": true,
        "id": 7402,
        "linearizedBaseContracts": [
          7402,
          7283
        ],
        "name": "BeaconProxy",
        "nameLocation": "503:11:72",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "documentation": {
              "id": 7292,
              "nodeType": "StructuredDocumentation",
              "src": "530:232:72",
              "text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
            },
            "id": 7295,
            "mutability": "constant",
            "name": "_BEACON_SLOT",
            "nameLocation": "792:12:72",
            "nodeType": "VariableDeclaration",
            "scope": 7402,
            "src": "767:106:72",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 7293,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "767:7:72",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
              "id": 7294,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "807:66:72",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
                "typeString": "int_const 7415...(69 digits omitted)...4704"
              },
              "value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7324,
              "nodeType": "Block",
              "src": "1365:130:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 7316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7304,
                          "name": "_BEACON_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7295,
                          "src": "1382:12:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e626561636f6e",
                                        "id": 7310,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1424:22:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        },
                                        "value": "eip1967.proxy.beacon"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        }
                                      ],
                                      "id": 7309,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "1414:9:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 7311,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1414:33:72",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 7308,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1406:7:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 7307,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1406:7:72",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1406:42:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 7313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1451:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1406:46:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1398:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 7305,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1398:7:72",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1398:55:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1382:71:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7303,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1375:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1375:79:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7318,
                  "nodeType": "ExpressionStatement",
                  "src": "1375:79:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7320,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7298,
                        "src": "1475:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7321,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7300,
                        "src": "1483:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7319,
                      "name": "_setBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7401,
                      "src": "1464:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 7322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:24:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7323,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:24:72"
                }
              ]
            },
            "documentation": {
              "id": 7296,
              "nodeType": "StructuredDocumentation",
              "src": "880:425:72",
              "text": " @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}."
            },
            "id": 7325,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7298,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "1330:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 7325,
                  "src": "1322:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1322:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7300,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1351:4:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 7325,
                  "src": "1338:17:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7299,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:5:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1321:35:72"
            },
            "returnParameters": {
              "id": 7302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1365:0:72"
            },
            "scope": 7402,
            "src": "1310:185:72",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7336,
              "nodeType": "Block",
              "src": "1631:163:72",
              "statements": [
                {
                  "assignments": [
                    7332
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7332,
                      "mutability": "mutable",
                      "name": "slot",
                      "nameLocation": "1649:4:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 7336,
                      "src": "1641:12:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7331,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1641:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7334,
                  "initialValue": {
                    "id": 7333,
                    "name": "_BEACON_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7295,
                    "src": "1656:12:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1641:27:72"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1743:45:72",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1757:21:72",
                        "value": {
                          "arguments": [
                            {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "1773:4:72"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "1767:5:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1767:11:72"
                        },
                        "variableNames": [
                          {
                            "name": "beacon",
                            "nodeType": "YulIdentifier",
                            "src": "1757:6:72"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 7329,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1757:6:72",
                      "valueSize": 1
                    },
                    {
                      "declaration": 7332,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1773:4:72",
                      "valueSize": 1
                    }
                  ],
                  "id": 7335,
                  "nodeType": "InlineAssembly",
                  "src": "1734:54:72"
                }
              ]
            },
            "documentation": {
              "id": 7326,
              "nodeType": "StructuredDocumentation",
              "src": "1501:59:72",
              "text": " @dev Returns the current beacon address."
            },
            "id": 7337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beacon",
            "nameLocation": "1574:7:72",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1581:2:72"
            },
            "returnParameters": {
              "id": 7330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7329,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "1623:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 7337,
                  "src": "1615:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1614:16:72"
            },
            "scope": 7402,
            "src": "1565:229:72",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              7248
            ],
            "body": {
              "id": 7351,
              "nodeType": "Block",
              "src": "1973:59:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 7345,
                              "name": "_beacon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7337,
                              "src": "1998:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 7346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1998:9:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7344,
                          "name": "IBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7412,
                          "src": "1990:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBeacon_$7412_$",
                            "typeString": "type(contract IBeacon)"
                          }
                        },
                        "id": 7347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1990:18:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeacon_$7412",
                          "typeString": "contract IBeacon"
                        }
                      },
                      "id": 7348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "implementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7411,
                      "src": "1990:33:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 7349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1990:35:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7343,
                  "id": 7350,
                  "nodeType": "Return",
                  "src": "1983:42:72"
                }
              ]
            },
            "documentation": {
              "id": 7338,
              "nodeType": "StructuredDocumentation",
              "src": "1800:92:72",
              "text": " @dev Returns the current implementation address of the associated beacon."
            },
            "id": 7352,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1906:15:72",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7340,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1946:8:72"
            },
            "parameters": {
              "id": 7339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1921:2:72"
            },
            "returnParameters": {
              "id": 7343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7342,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7352,
                  "src": "1964:7:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1963:9:72"
            },
            "scope": 7402,
            "src": "1897:135:72",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7400,
              "nodeType": "Block",
              "src": "2439:590:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7363,
                            "name": "beacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7355,
                            "src": "2489:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7361,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14906,
                            "src": "2470:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$14906_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 7362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14630,
                          "src": "2470:18:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 7364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2470:26:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426561636f6e50726f78793a20626561636f6e206973206e6f74206120636f6e7472616374",
                        "id": 7365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2510:39:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53daaee6c8f15e50eac8695a66c34c0f6ccc33039991062daa2b1d74b5bd10c9",
                          "typeString": "literal_string \"BeaconProxy: beacon is not a contract\""
                        },
                        "value": "BeaconProxy: beacon is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53daaee6c8f15e50eac8695a66c34c0f6ccc33039991062daa2b1d74b5bd10c9",
                          "typeString": "literal_string \"BeaconProxy: beacon is not a contract\""
                        }
                      ],
                      "id": 7360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2449:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2449:110:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7367,
                  "nodeType": "ExpressionStatement",
                  "src": "2449:110:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 7372,
                                    "name": "beacon",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7355,
                                    "src": "2617:6:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7371,
                                  "name": "IBeacon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7412,
                                  "src": "2609:7:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IBeacon_$7412_$",
                                    "typeString": "type(contract IBeacon)"
                                  }
                                },
                                "id": 7373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2609:15:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBeacon_$7412",
                                  "typeString": "contract IBeacon"
                                }
                              },
                              "id": 7374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "implementation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7411,
                              "src": "2609:30:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 7375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2609:32:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7369,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14906,
                            "src": "2590:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$14906_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 7370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14630,
                          "src": "2590:18:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 7376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2590:52:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426561636f6e50726f78793a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                        "id": 7377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2656:54:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff1f719f4da241d3b1e9f94c58b47fc2f722d5e8ebf2cdf3bf4ddc03bf3fd226",
                          "typeString": "literal_string \"BeaconProxy: beacon implementation is not a contract\""
                        },
                        "value": "BeaconProxy: beacon implementation is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff1f719f4da241d3b1e9f94c58b47fc2f722d5e8ebf2cdf3bf4ddc03bf3fd226",
                          "typeString": "literal_string \"BeaconProxy: beacon implementation is not a contract\""
                        }
                      ],
                      "id": 7368,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2569:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2569:151:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7379,
                  "nodeType": "ExpressionStatement",
                  "src": "2569:151:72"
                },
                {
                  "assignments": [
                    7381
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7381,
                      "mutability": "mutable",
                      "name": "slot",
                      "nameLocation": "2738:4:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 7400,
                      "src": "2730:12:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7380,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2730:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7383,
                  "initialValue": {
                    "id": 7382,
                    "name": "_BEACON_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7295,
                    "src": "2745:12:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2730:27:72"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2833:44:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "2854:4:72"
                            },
                            {
                              "name": "beacon",
                              "nodeType": "YulIdentifier",
                              "src": "2860:6:72"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "2847:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2847:20:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2847:20:72"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 7355,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2860:6:72",
                      "valueSize": 1
                    },
                    {
                      "declaration": 7381,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2854:4:72",
                      "valueSize": 1
                    }
                  ],
                  "id": 7384,
                  "nodeType": "InlineAssembly",
                  "src": "2824:53:72"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 7385,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7357,
                        "src": "2891:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2891:11:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2905:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2891:15:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7399,
                  "nodeType": "IfStatement",
                  "src": "2887:136:72",
                  "trueBody": {
                    "id": 7398,
                    "nodeType": "Block",
                    "src": "2908:115:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 7392,
                                "name": "_implementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  7352
                                ],
                                "referencedDeclaration": 7352,
                                "src": "2951:15:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 7393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2951:17:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7394,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7357,
                              "src": "2970:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "426561636f6e50726f78793a2066756e6374696f6e2063616c6c206661696c6564",
                              "id": 7395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2976:35:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4b9118f6e611fdd8fc95671ccbd662d4523f4260d53b96e250349693c7d23726",
                                "typeString": "literal_string \"BeaconProxy: function call failed\""
                              },
                              "value": "BeaconProxy: function call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4b9118f6e611fdd8fc95671ccbd662d4523f4260d53b96e250349693c7d23726",
                                "typeString": "literal_string \"BeaconProxy: function call failed\""
                              }
                            ],
                            "expression": {
                              "id": 7389,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14906,
                              "src": "2922:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$14906_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 7391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "functionDelegateCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14875,
                            "src": "2922:28:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 7396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2922:90:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 7397,
                        "nodeType": "ExpressionStatement",
                        "src": "2922:90:72"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7353,
              "nodeType": "StructuredDocumentation",
              "src": "2038:324:72",
              "text": " @dev Changes the proxy to use a new beacon.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n Requirements:\n - `beacon` must be a contract.\n - The implementation returned by `beacon` must be a contract."
            },
            "id": 7401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBeacon",
            "nameLocation": "2376:10:72",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7355,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "2395:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 7401,
                  "src": "2387:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7357,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2416:4:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 7401,
                  "src": "2403:17:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7356,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:5:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2386:35:72"
            },
            "returnParameters": {
              "id": 7359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2439:0:72"
            },
            "scope": 7402,
            "src": "2367:662:72",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 7403,
        "src": "494:2537:72"
      }
    ],
    "src": "33:2999:72"
  },
  "bytecode": "60806040526040516108c43803806108c483398101604081905261002291610422565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5161052d565b6000805160206108838339815191521461007757634e487b7160e01b600052600160045260246000fd5b6100818282610088565b5050610592565b61009b8261024360201b6100291760201c565b6100fa5760405162461bcd60e51b815260206004820152602560248201527f426561636f6e50726f78793a20626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61017d826001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561013657600080fd5b505afa15801561014a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016e9190610408565b61024360201b6100291760201c565b6101ef5760405162461bcd60e51b815260206004820152603460248201527f426561636f6e50726f78793a20626561636f6e20696d706c656d656e7461746960448201527f6f6e206973206e6f74206120636f6e747261637400000000000000000000000060648201526084016100f1565b60008051602061088383398151915282815581511561023e5761023c61021361024d565b836040518060600160405280602181526020016108a3602191396102da60201b61002f1760201c565b505b505050565b803b15155b919050565b60006102656000805160206108838339815191525490565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561029d57600080fd5b505afa1580156102b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d59190610408565b905090565b60606102e584610243565b6103405760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016100f1565b600080856001600160a01b03168560405161035b91906104de565b600060405180830381855af49150503d8060008114610396576040519150601f19603f3d011682016040523d82523d6000602084013e61039b565b606091505b5090925090506103ac8282866103b8565b925050505b9392505050565b606083156103c75750816103b1565b8251156103d75782518084602001fd5b8160405162461bcd60e51b81526004016100f191906104fa565b80516001600160a01b038116811461024857600080fd5b600060208284031215610419578081fd5b6103b1826103f1565b60008060408385031215610434578081fd5b61043d836103f1565b60208401519092506001600160401b0380821115610459578283fd5b818501915085601f83011261046c578283fd5b81518181111561047e5761047e61057c565b604051601f8201601f19908116603f011681019083821181831017156104a6576104a661057c565b816040528281528860208487010111156104be578586fd5b6104cf836020830160208801610550565b80955050505050509250929050565b600082516104f0818460208701610550565b9190910192915050565b6000602082528251806020840152610519816040850160208701610550565b601f01601f19169190910160400192915050565b60008282101561054b57634e487b7160e01b81526011600452602481fd5b500390565b60005b8381101561056b578181015183820152602001610553565b8381111561023c5750506000910152565b634e487b7160e01b600052604160045260246000fd5b6102e2806105a16000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261010a565b6101a9565b565b3b151590565b6060833b6100935760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516100ae919061022d565b600060405180830381855af49150503d80600081146100e9576040519150601f19603f3d011682016040523d82523d6000602084013e6100ee565b606091505b50915091506100fe8282866101cd565b925050505b9392505050565b60006101347fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505490565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561016c57600080fd5b505afa158015610180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a49190610206565b905090565b3660008037600080366000845af43d6000803e8080156101c8573d6000f35b3d6000fd5b606083156101dc575081610103565b8251156101ec5782518084602001fd5b8160405162461bcd60e51b815260040161008a9190610249565b600060208284031215610217578081fd5b81516001600160a01b0381168114610103578182fd5b6000825161023f81846020870161027c565b9190910192915050565b600060208252825180602084015261026881604085016020870161027c565b601f01601f19169190910160400192915050565b60005b8381101561029757818101518382015260200161027f565b838111156102a6576000848401525b5050505056fea2646970667358221220dd915c66c795463ee50bc631192b887774e85276ba8e492398f49a178553efba64736f6c63430008030033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50426561636f6e50726f78793a2066756e6374696f6e2063616c6c206661696c6564",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "BeaconProxy",
  "coverageMap": {
    "branches": {
      "119": {
        "Address._verifyCallResult": {
          "9": [
            7226,
            7233,
            false
          ],
          "10": [
            7367,
            7388,
            false
          ]
        }
      },
      "71": {},
      "72": {},
      "73": {}
    },
    "statements": {
      "119": {
        "Address._verifyCallResult": {
          "7": [
            7249,
            7266
          ],
          "8": [
            7757,
            7777
          ]
        },
        "Address.functionDelegateCall": {
          "4": [
            6795,
            6864
          ],
          "5": [
            7011,
            7070
          ]
        },
        "Address.isContract": {
          "3": [
            1109,
            1124
          ]
        }
      },
      "71": {
        "Proxy.<fallback>": {
          "1": [
            2611,
            2622
          ]
        },
        "Proxy.<receive>": {
          "0": [
            2835,
            2846
          ]
        },
        "Proxy._fallback": {
          "2": [
            2332,
            2360
          ]
        }
      },
      "72": {
        "BeaconProxy._implementation": {
          "6": [
            1983,
            2025
          ]
        }
      },
      "73": {}
    }
  },
  "dependencies": [
    "Address",
    "IBeacon",
    "Proxy"
  ],
  "deployedBytecode": "60806040523661001357610011610017565b005b6100115b61002761002261010a565b6101a9565b565b3b151590565b6060833b6100935760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516100ae919061022d565b600060405180830381855af49150503d80600081146100e9576040519150601f19603f3d011682016040523d82523d6000602084013e6100ee565b606091505b50915091506100fe8282866101cd565b925050505b9392505050565b60006101347fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505490565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561016c57600080fd5b505afa158015610180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a49190610206565b905090565b3660008037600080366000845af43d6000803e8080156101c8573d6000f35b3d6000fd5b606083156101dc575081610103565b8251156101ec5782518084602001fd5b8160405162461bcd60e51b815260040161008a9190610249565b600060208284031215610217578081fd5b81516001600160a01b0381168114610103578182fd5b6000825161023f81846020870161027c565b9190910192915050565b600060208252825180602084015261026881604085016020870161027c565b601f01601f19169190910160400192915050565b60005b8381101561029757818101518382015260200161027f565b838111156102a6576000848401525b5050505056fea2646970667358221220dd915c66c795463ee50bc631192b887774e85276ba8e492398f49a178553efba64736f6c63430008030033",
  "deployedSourceMap": "494:2537:72:-:0;;;;;;2835:11:71;:9;:11::i;:::-;494:2537:72;;2611:11:71;2257:110;2332:28;2342:17;:15;:17::i;:::-;2332:9;:28::i;:::-;2257:110::o;718:413:119:-;1078:20;1116:8;;;718:413::o;6660:417::-;6771:12;1078:20;;6795:69;;;;-1:-1:-1;;;6795:69:119;;1198:2:144;6795:69:119;;;1180:21:144;1237:2;1217:18;;;1210:30;1276:34;1256:18;;;1249:62;-1:-1:-1;;;1327:18:144;;;1320:36;1373:19;;6795:69:119;;;;;;;;;6935:12;6949:23;6976:6;-1:-1:-1;;;;;6976:19:119;6996:4;6976:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6934:67;;;;7018:52;7036:7;7045:10;7057:12;7018:17;:52::i;:::-;7011:59;;;;6660:417;;;;;;:::o;1897:135:72:-;1964:7;1998:9;807:66;1767:11;;1743:45;1998:9;-1:-1:-1;;;;;1990:33:72;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1983:42;;1897:135;:::o;883:895:71:-;1277:14;1274:1;1271;1258:34;1491:1;1488;1472:14;1469:1;1453:14;1446:5;1433:60;1567:16;1564:1;1561;1546:38;1605:6;1672:38;;;;1743:16;1740:1;1733:27;1672:38;1691:16;1688:1;1681:27;7083:725:119;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:119;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;-1:-1:-1;;;7757:20:119;;;;;;;;:::i;14:310:144:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:144;;224:42;;214:2;;285:6;277;270:22;329:274;;496:6;490:13;512:53;558:6;553:3;546:4;538:6;534:17;512:53;:::i;:::-;581:16;;;;;466:137;-1:-1:-1;;466:137:144:o;608:383::-;;757:2;746:9;739:21;789:6;783:13;832:6;827:2;816:9;812:18;805:34;848:66;907:6;902:2;891:9;887:18;882:2;874:6;870:15;848:66;:::i;:::-;975:2;954:15;-1:-1:-1;;950:29:144;935:45;;;;982:2;931:54;;729:262;-1:-1:-1;;729:262:144:o;1403:258::-;1475:1;1485:113;1499:6;1496:1;1493:13;1485:113;;;1575:11;;;1569:18;1556:11;;;1549:39;1521:2;1514:10;1485:113;;;1616:6;1613:1;1610:13;1607:2;;;1651:1;1642:6;1637:3;1633:16;1626:27;1607:2;;1456:205;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}."
      }
    },
    "stateVariables": {
      "_BEACON_SLOT": {
        "details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
      }
    },
    "version": 1
  },
  "offset": [
    494,
    3031
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x10A JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 EXTCODESIZE PUSH2 0x93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x22D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xFE DUP3 DUP3 DUP7 PUSH2 0x1CD JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x180 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x206 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x1C8 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1DC JUMPI POP DUP2 PUSH2 0x103 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1EC JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x249 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x217 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x103 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x23F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x27C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x268 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x27C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x297 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x27F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD SWAP2 0x5C PUSH7 0xC795463EE50BC6 BALANCE NOT 0x2B DUP9 PUSH24 0x74E85276BA8E492398F49A178553EFBA64736F6C63430008 SUB STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        494,
        3031
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        494,
        3031
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        494,
        3031
      ],
      "op": "MSTORE",
      "path": "72"
    },
    "5": {
      "fn": null,
      "offset": [
        494,
        3031
      ],
      "op": "CALLDATASIZE",
      "path": "72"
    },
    "6": {
      "fn": null,
      "offset": [
        494,
        3031
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x13"
    },
    "9": {
      "fn": null,
      "offset": [
        494,
        3031
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "10": {
      "fn": "Proxy.<receive>",
      "offset": [
        2835,
        2846
      ],
      "op": "PUSH2",
      "path": "71",
      "statement": 0,
      "value": "0x11"
    },
    "13": {
      "fn": "Proxy.<receive>",
      "offset": [
        2835,
        2844
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x17"
    },
    "16": {
      "fn": "Proxy.<receive>",
      "jump": "i",
      "offset": [
        2835,
        2846
      ],
      "op": "JUMP",
      "path": "71"
    },
    "17": {
      "fn": "Proxy.<receive>",
      "offset": [
        2835,
        2846
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "18": {
      "offset": [
        494,
        3031
      ],
      "op": "STOP",
      "path": "72"
    },
    "19": {
      "fn": "Proxy.<receive>",
      "offset": [
        494,
        3031
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "20": {
      "fn": "Proxy.<fallback>",
      "offset": [
        2611,
        2622
      ],
      "op": "PUSH2",
      "path": "71",
      "statement": 1,
      "value": "0x11"
    },
    "23": {
      "fn": "Proxy._fallback",
      "offset": [
        2257,
        2367
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "24": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2360
      ],
      "op": "PUSH2",
      "path": "71",
      "statement": 2,
      "value": "0x27"
    },
    "27": {
      "fn": "Proxy._fallback",
      "offset": [
        2342,
        2359
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x22"
    },
    "30": {
      "fn": "Proxy._fallback",
      "offset": [
        2342,
        2357
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x10A"
    },
    "33": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2342,
        2359
      ],
      "op": "JUMP",
      "path": "71"
    },
    "34": {
      "fn": "Proxy._fallback",
      "offset": [
        2342,
        2359
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "35": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2341
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x1A9"
    },
    "38": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2332,
        2360
      ],
      "op": "JUMP",
      "path": "71"
    },
    "39": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2360
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "40": {
      "fn": "Proxy._fallback",
      "jump": "o",
      "offset": [
        2257,
        2367
      ],
      "op": "JUMP",
      "path": "71"
    },
    "41": {
      "fn": "Address.isContract",
      "offset": [
        718,
        1131
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "42": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "119"
    },
    "43": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "119",
      "statement": 3
    },
    "44": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "119"
    },
    "45": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "SWAP1",
      "path": "119"
    },
    "46": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        718,
        1131
      ],
      "op": "JUMP",
      "path": "119"
    },
    "47": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6660,
        7077
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "48": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6771,
        6783
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x60"
    },
    "50": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "DUP4",
      "path": "119"
    },
    "51": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "119"
    },
    "52": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "PUSH2",
      "path": "119",
      "statement": 4,
      "value": "0x93"
    },
    "55": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "56": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "58": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "59": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "63": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "65": {
      "op": "SHL"
    },
    "66": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "DUP2",
      "path": "119"
    },
    "67": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "68": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "70": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x4"
    },
    "72": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "DUP3",
      "path": "119"
    },
    "73": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "ADD",
      "path": "119"
    },
    "74": {
      "op": "MSTORE"
    },
    "75": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "77": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "79": {
      "op": "DUP3"
    },
    "80": {
      "op": "ADD"
    },
    "81": {
      "op": "MSTORE"
    },
    "82": {
      "op": "PUSH32",
      "value": "0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
    },
    "115": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "117": {
      "op": "DUP3"
    },
    "118": {
      "op": "ADD"
    },
    "119": {
      "op": "MSTORE"
    },
    "120": {
      "op": "PUSH6",
      "value": "0x1B9D1C9858DD"
    },
    "127": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "129": {
      "op": "SHL"
    },
    "130": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "132": {
      "op": "DUP3"
    },
    "133": {
      "op": "ADD"
    },
    "134": {
      "op": "MSTORE"
    },
    "135": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "137": {
      "op": "ADD"
    },
    "138": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "139": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "141": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "142": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "DUP1",
      "path": "119"
    },
    "143": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "144": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "SUB",
      "path": "119"
    },
    "145": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "SWAP1",
      "path": "119"
    },
    "146": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "119"
    },
    "147": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6795,
        6864
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "148": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6935,
        6947
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "150": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6949,
        6972
      ],
      "op": "DUP1",
      "path": "119"
    },
    "151": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        6982
      ],
      "op": "DUP6",
      "path": "119"
    },
    "152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "158": {
      "op": "SHL"
    },
    "159": {
      "op": "SUB"
    },
    "160": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        6995
      ],
      "op": "AND",
      "path": "119"
    },
    "161": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6996,
        7000
      ],
      "op": "DUP6",
      "path": "119"
    },
    "162": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "164": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "165": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0xAE"
    },
    "168": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "169": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "SWAP1",
      "path": "119"
    },
    "170": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x22D"
    },
    "173": {
      "fn": "Address.functionDelegateCall",
      "jump": "i",
      "offset": [
        6976,
        7001
      ],
      "op": "JUMP",
      "path": "119"
    },
    "174": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "175": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "177": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "179": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "180": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP1",
      "path": "119"
    },
    "181": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP4",
      "path": "119"
    },
    "182": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "SUB",
      "path": "119"
    },
    "183": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP2",
      "path": "119"
    },
    "184": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP6",
      "path": "119"
    },
    "185": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "GAS",
      "path": "119"
    },
    "186": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DELEGATECALL",
      "path": "119"
    },
    "187": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "188": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "POP",
      "path": "119"
    },
    "189": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "POP",
      "path": "119"
    },
    "190": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "191": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP1",
      "path": "119"
    },
    "192": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "194": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP2",
      "path": "119"
    },
    "195": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "EQ",
      "path": "119"
    },
    "196": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0xE9"
    },
    "199": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "200": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "202": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "203": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "204": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "POP",
      "path": "119"
    },
    "205": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x1F"
    },
    "207": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "NOT",
      "path": "119"
    },
    "208": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x3F"
    },
    "210": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "211": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "ADD",
      "path": "119"
    },
    "212": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "AND",
      "path": "119"
    },
    "213": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP3",
      "path": "119"
    },
    "214": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "ADD",
      "path": "119"
    },
    "215": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "217": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "218": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "219": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP3",
      "path": "119"
    },
    "220": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "221": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "222": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "224": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x20"
    },
    "226": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "DUP5",
      "path": "119"
    },
    "227": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "ADD",
      "path": "119"
    },
    "228": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "RETURNDATACOPY",
      "path": "119"
    },
    "229": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0xEE"
    },
    "232": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "JUMP",
      "path": "119"
    },
    "233": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "234": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x60"
    },
    "236": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "237": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "POP",
      "path": "119"
    },
    "238": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "239": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6976,
        7001
      ],
      "op": "POP",
      "path": "119"
    },
    "240": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6934,
        7001
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "241": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6934,
        7001
      ],
      "op": "POP",
      "path": "119"
    },
    "242": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6934,
        7001
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "243": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6934,
        7001
      ],
      "op": "POP",
      "path": "119"
    },
    "244": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7018,
        7070
      ],
      "op": "PUSH2",
      "path": "119",
      "statement": 5,
      "value": "0xFE"
    },
    "247": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7036,
        7043
      ],
      "op": "DUP3",
      "path": "119"
    },
    "248": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7045,
        7055
      ],
      "op": "DUP3",
      "path": "119"
    },
    "249": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7057,
        7069
      ],
      "op": "DUP7",
      "path": "119"
    },
    "250": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7018,
        7035
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x1CD"
    },
    "253": {
      "fn": "Address.functionDelegateCall",
      "jump": "i",
      "offset": [
        7018,
        7070
      ],
      "op": "JUMP",
      "path": "119"
    },
    "254": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7018,
        7070
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "255": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7011,
        7070
      ],
      "op": "SWAP3",
      "path": "119"
    },
    "256": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7011,
        7070
      ],
      "op": "POP",
      "path": "119"
    },
    "257": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7011,
        7070
      ],
      "op": "POP",
      "path": "119"
    },
    "258": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7011,
        7070
      ],
      "op": "POP",
      "path": "119"
    },
    "259": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6660,
        7077
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "260": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6660,
        7077
      ],
      "op": "SWAP4",
      "path": "119"
    },
    "261": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6660,
        7077
      ],
      "op": "SWAP3",
      "path": "119"
    },
    "262": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6660,
        7077
      ],
      "op": "POP",
      "path": "119"
    },
    "263": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6660,
        7077
      ],
      "op": "POP",
      "path": "119"
    },
    "264": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6660,
        7077
      ],
      "op": "POP",
      "path": "119"
    },
    "265": {
      "fn": "Address.functionDelegateCall",
      "jump": "o",
      "offset": [
        6660,
        7077
      ],
      "op": "JUMP",
      "path": "119"
    },
    "266": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1897,
        2032
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "267": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1964,
        1971
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x0"
    },
    "269": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1998,
        2007
      ],
      "op": "PUSH2",
      "path": "72",
      "statement": 6,
      "value": "0x134"
    },
    "272": {
      "offset": [
        807,
        873
      ],
      "op": "PUSH32",
      "path": "72",
      "value": "0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50"
    },
    "305": {
      "fn": "BeaconProxy._beacon",
      "offset": [
        1767,
        1778
      ],
      "op": "SLOAD",
      "path": "72"
    },
    "306": {
      "fn": "BeaconProxy._beacon",
      "offset": [
        1767,
        1778
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "307": {
      "fn": "BeaconProxy._beacon",
      "offset": [
        1743,
        1788
      ],
      "op": "JUMP",
      "path": "72"
    },
    "308": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1998,
        2007
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "315": {
      "op": "SHL"
    },
    "316": {
      "op": "SUB"
    },
    "317": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2023
      ],
      "op": "AND",
      "path": "72"
    },
    "318": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2023
      ],
      "op": "PUSH4",
      "path": "72",
      "value": "0x5C60DA1B"
    },
    "323": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x40"
    },
    "325": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "326": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP2",
      "path": "72"
    },
    "327": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH4",
      "path": "72",
      "value": "0xFFFFFFFF"
    },
    "332": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "AND",
      "path": "72"
    },
    "333": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0xE0"
    },
    "335": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "SHL",
      "path": "72"
    },
    "336": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP2",
      "path": "72"
    },
    "337": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "MSTORE",
      "path": "72"
    },
    "338": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x4"
    },
    "340": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "ADD",
      "path": "72"
    },
    "341": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x20"
    },
    "343": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x40"
    },
    "345": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "346": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP1",
      "path": "72"
    },
    "347": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP4",
      "path": "72"
    },
    "348": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "SUB",
      "path": "72"
    },
    "349": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP2",
      "path": "72"
    },
    "350": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP7",
      "path": "72"
    },
    "351": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP1",
      "path": "72"
    },
    "352": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "EXTCODESIZE",
      "path": "72"
    },
    "353": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "ISZERO",
      "path": "72"
    },
    "354": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP1",
      "path": "72"
    },
    "355": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "ISZERO",
      "path": "72"
    },
    "356": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x16C"
    },
    "359": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "360": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x0"
    },
    "362": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP1",
      "path": "72"
    },
    "363": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "REVERT",
      "path": "72"
    },
    "364": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "365": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "POP",
      "path": "72"
    },
    "366": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "GAS",
      "path": "72"
    },
    "367": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "STATICCALL",
      "path": "72"
    },
    "368": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "ISZERO",
      "path": "72"
    },
    "369": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP1",
      "path": "72"
    },
    "370": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "ISZERO",
      "path": "72"
    },
    "371": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x180"
    },
    "374": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "375": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "RETURNDATASIZE",
      "path": "72"
    },
    "376": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x0"
    },
    "378": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP1",
      "path": "72"
    },
    "379": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "RETURNDATACOPY",
      "path": "72"
    },
    "380": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "RETURNDATASIZE",
      "path": "72"
    },
    "381": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x0"
    },
    "383": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "REVERT",
      "path": "72"
    },
    "384": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "385": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "POP",
      "path": "72"
    },
    "386": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "POP",
      "path": "72"
    },
    "387": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "POP",
      "path": "72"
    },
    "388": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "POP",
      "path": "72"
    },
    "389": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x40"
    },
    "391": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "392": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "RETURNDATASIZE",
      "path": "72"
    },
    "393": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x1F"
    },
    "395": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "NOT",
      "path": "72"
    },
    "396": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x1F"
    },
    "398": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP3",
      "path": "72"
    },
    "399": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "ADD",
      "path": "72"
    },
    "400": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "AND",
      "path": "72"
    },
    "401": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP3",
      "path": "72"
    },
    "402": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "ADD",
      "path": "72"
    },
    "403": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP1",
      "path": "72"
    },
    "404": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x40"
    },
    "406": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "MSTORE",
      "path": "72"
    },
    "407": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "POP",
      "path": "72"
    },
    "408": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "DUP2",
      "path": "72"
    },
    "409": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "ADD",
      "path": "72"
    },
    "410": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "411": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x1A4"
    },
    "414": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "415": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "416": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x206"
    },
    "419": {
      "fn": "BeaconProxy._implementation",
      "jump": "i",
      "offset": [
        1990,
        2025
      ],
      "op": "JUMP",
      "path": "72"
    },
    "420": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1990,
        2025
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "421": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1983,
        2025
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "422": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1983,
        2025
      ],
      "op": "POP",
      "path": "72"
    },
    "423": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1897,
        2032
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "424": {
      "fn": "BeaconProxy._implementation",
      "jump": "o",
      "offset": [
        1897,
        2032
      ],
      "op": "JUMP",
      "path": "72"
    },
    "425": {
      "fn": "Proxy._delegate",
      "offset": [
        883,
        1778
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "426": {
      "fn": "Proxy._delegate",
      "offset": [
        1277,
        1291
      ],
      "op": "CALLDATASIZE",
      "path": "71"
    },
    "427": {
      "fn": "Proxy._delegate",
      "offset": [
        1274,
        1275
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x0"
    },
    "429": {
      "fn": "Proxy._delegate",
      "offset": [
        1271,
        1272
      ],
      "op": "DUP1",
      "path": "71"
    },
    "430": {
      "fn": "Proxy._delegate",
      "offset": [
        1258,
        1292
      ],
      "op": "CALLDATACOPY",
      "path": "71"
    },
    "431": {
      "fn": "Proxy._delegate",
      "offset": [
        1491,
        1492
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x0"
    },
    "433": {
      "fn": "Proxy._delegate",
      "offset": [
        1488,
        1489
      ],
      "op": "DUP1",
      "path": "71"
    },
    "434": {
      "fn": "Proxy._delegate",
      "offset": [
        1472,
        1486
      ],
      "op": "CALLDATASIZE",
      "path": "71"
    },
    "435": {
      "fn": "Proxy._delegate",
      "offset": [
        1469,
        1470
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x0"
    },
    "437": {
      "fn": "Proxy._delegate",
      "offset": [
        1453,
        1467
      ],
      "op": "DUP5",
      "path": "71"
    },
    "438": {
      "fn": "Proxy._delegate",
      "offset": [
        1446,
        1451
      ],
      "op": "GAS",
      "path": "71"
    },
    "439": {
      "fn": "Proxy._delegate",
      "offset": [
        1433,
        1493
      ],
      "op": "DELEGATECALL",
      "path": "71"
    },
    "440": {
      "fn": "Proxy._delegate",
      "offset": [
        1567,
        1583
      ],
      "op": "RETURNDATASIZE",
      "path": "71"
    },
    "441": {
      "fn": "Proxy._delegate",
      "offset": [
        1564,
        1565
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x0"
    },
    "443": {
      "fn": "Proxy._delegate",
      "offset": [
        1561,
        1562
      ],
      "op": "DUP1",
      "path": "71"
    },
    "444": {
      "fn": "Proxy._delegate",
      "offset": [
        1546,
        1584
      ],
      "op": "RETURNDATACOPY",
      "path": "71"
    },
    "445": {
      "fn": "Proxy._delegate",
      "offset": [
        1605,
        1611
      ],
      "op": "DUP1",
      "path": "71"
    },
    "446": {
      "fn": "Proxy._delegate",
      "offset": [
        1672,
        1710
      ],
      "op": "DUP1",
      "path": "71"
    },
    "447": {
      "fn": "Proxy._delegate",
      "offset": [
        1672,
        1710
      ],
      "op": "ISZERO",
      "path": "71"
    },
    "448": {
      "fn": "Proxy._delegate",
      "offset": [
        1672,
        1710
      ],
      "op": "PUSH2",
      "path": "71",
      "value": "0x1C8"
    },
    "451": {
      "fn": "Proxy._delegate",
      "offset": [
        1672,
        1710
      ],
      "op": "JUMPI",
      "path": "71"
    },
    "452": {
      "fn": "Proxy._delegate",
      "offset": [
        1743,
        1759
      ],
      "op": "RETURNDATASIZE",
      "path": "71"
    },
    "453": {
      "fn": "Proxy._delegate",
      "offset": [
        1740,
        1741
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x0"
    },
    "455": {
      "fn": "Proxy._delegate",
      "offset": [
        1733,
        1760
      ],
      "op": "RETURN",
      "path": "71"
    },
    "456": {
      "fn": "Proxy._delegate",
      "offset": [
        1672,
        1710
      ],
      "op": "JUMPDEST",
      "path": "71"
    },
    "457": {
      "fn": "Proxy._delegate",
      "offset": [
        1691,
        1707
      ],
      "op": "RETURNDATASIZE",
      "path": "71"
    },
    "458": {
      "fn": "Proxy._delegate",
      "offset": [
        1688,
        1689
      ],
      "op": "PUSH1",
      "path": "71",
      "value": "0x0"
    },
    "460": {
      "fn": "Proxy._delegate",
      "offset": [
        1681,
        1708
      ],
      "op": "REVERT",
      "path": "71"
    },
    "461": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7083,
        7808
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "462": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7198,
        7210
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x60"
    },
    "464": {
      "branch": 9,
      "fn": "Address._verifyCallResult",
      "offset": [
        7226,
        7233
      ],
      "op": "DUP4",
      "path": "119"
    },
    "465": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "ISZERO",
      "path": "119"
    },
    "466": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x1DC"
    },
    "469": {
      "branch": 9,
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "470": {
      "op": "POP"
    },
    "471": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7256,
        7266
      ],
      "op": "DUP2",
      "path": "119",
      "statement": 7
    },
    "472": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x103"
    },
    "475": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "JUMP",
      "path": "119"
    },
    "476": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "477": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "DUP3",
      "path": "119"
    },
    "478": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "479": {
      "branch": 10,
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7388
      ],
      "op": "ISZERO",
      "path": "119"
    },
    "480": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x1EC"
    },
    "483": {
      "branch": 10,
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "484": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7625,
        7635
      ],
      "op": "DUP3",
      "path": "119"
    },
    "485": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7619,
        7636
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "486": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7685,
        7700
      ],
      "op": "DUP1",
      "path": "119"
    },
    "487": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7682
      ],
      "op": "DUP5",
      "path": "119"
    },
    "488": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7668,
        7670
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x20"
    },
    "490": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7664,
        7683
      ],
      "op": "ADD",
      "path": "119"
    },
    "491": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7657,
        7701
      ],
      "op": "REVERT",
      "path": "119"
    },
    "492": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7574,
        7719
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "493": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7764,
        7776
      ],
      "op": "DUP2",
      "path": "119",
      "statement": 8
    },
    "494": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "496": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "497": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "501": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "503": {
      "op": "SHL"
    },
    "504": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "DUP2",
      "path": "119"
    },
    "505": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "506": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x4"
    },
    "508": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "ADD",
      "path": "119"
    },
    "509": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x8A"
    },
    "512": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "513": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP1",
      "path": "119"
    },
    "514": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x249"
    },
    "517": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7757,
        7777
      ],
      "op": "JUMP",
      "path": "119"
    },
    "518": {
      "op": "JUMPDEST"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "523": {
      "op": "DUP3"
    },
    "524": {
      "op": "DUP5"
    },
    "525": {
      "op": "SUB"
    },
    "526": {
      "op": "SLT"
    },
    "527": {
      "op": "ISZERO"
    },
    "528": {
      "op": "PUSH2",
      "value": "0x217"
    },
    "531": {
      "op": "JUMPI"
    },
    "532": {
      "op": "DUP1"
    },
    "533": {
      "op": "DUP2"
    },
    "534": {
      "op": "REVERT"
    },
    "535": {
      "op": "JUMPDEST"
    },
    "536": {
      "op": "DUP2"
    },
    "537": {
      "op": "MLOAD"
    },
    "538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "544": {
      "op": "SHL"
    },
    "545": {
      "op": "SUB"
    },
    "546": {
      "op": "DUP2"
    },
    "547": {
      "op": "AND"
    },
    "548": {
      "op": "DUP2"
    },
    "549": {
      "op": "EQ"
    },
    "550": {
      "op": "PUSH2",
      "value": "0x103"
    },
    "553": {
      "op": "JUMPI"
    },
    "554": {
      "op": "DUP2"
    },
    "555": {
      "op": "DUP3"
    },
    "556": {
      "op": "REVERT"
    },
    "557": {
      "op": "JUMPDEST"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "560": {
      "op": "DUP3"
    },
    "561": {
      "op": "MLOAD"
    },
    "562": {
      "op": "PUSH2",
      "value": "0x23F"
    },
    "565": {
      "op": "DUP2"
    },
    "566": {
      "op": "DUP5"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "569": {
      "op": "DUP8"
    },
    "570": {
      "op": "ADD"
    },
    "571": {
      "op": "PUSH2",
      "value": "0x27C"
    },
    "574": {
      "jump": "i",
      "op": "JUMP"
    },
    "575": {
      "op": "JUMPDEST"
    },
    "576": {
      "op": "SWAP2"
    },
    "577": {
      "op": "SWAP1"
    },
    "578": {
      "op": "SWAP2"
    },
    "579": {
      "op": "ADD"
    },
    "580": {
      "op": "SWAP3"
    },
    "581": {
      "op": "SWAP2"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "jump": "o",
      "op": "JUMP"
    },
    "585": {
      "op": "JUMPDEST"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "590": {
      "op": "DUP3"
    },
    "591": {
      "op": "MSTORE"
    },
    "592": {
      "op": "DUP3"
    },
    "593": {
      "op": "MLOAD"
    },
    "594": {
      "op": "DUP1"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "597": {
      "op": "DUP5"
    },
    "598": {
      "op": "ADD"
    },
    "599": {
      "op": "MSTORE"
    },
    "600": {
      "op": "PUSH2",
      "value": "0x268"
    },
    "603": {
      "op": "DUP2"
    },
    "604": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "606": {
      "op": "DUP6"
    },
    "607": {
      "op": "ADD"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "610": {
      "op": "DUP8"
    },
    "611": {
      "op": "ADD"
    },
    "612": {
      "op": "PUSH2",
      "value": "0x27C"
    },
    "615": {
      "jump": "i",
      "op": "JUMP"
    },
    "616": {
      "op": "JUMPDEST"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "619": {
      "op": "ADD"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "622": {
      "op": "NOT"
    },
    "623": {
      "op": "AND"
    },
    "624": {
      "op": "SWAP2"
    },
    "625": {
      "op": "SWAP1"
    },
    "626": {
      "op": "SWAP2"
    },
    "627": {
      "op": "ADD"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "630": {
      "op": "ADD"
    },
    "631": {
      "op": "SWAP3"
    },
    "632": {
      "op": "SWAP2"
    },
    "633": {
      "op": "POP"
    },
    "634": {
      "op": "POP"
    },
    "635": {
      "jump": "o",
      "op": "JUMP"
    },
    "636": {
      "op": "JUMPDEST"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "639": {
      "op": "JUMPDEST"
    },
    "640": {
      "op": "DUP4"
    },
    "641": {
      "op": "DUP2"
    },
    "642": {
      "op": "LT"
    },
    "643": {
      "op": "ISZERO"
    },
    "644": {
      "op": "PUSH2",
      "value": "0x297"
    },
    "647": {
      "op": "JUMPI"
    },
    "648": {
      "op": "DUP2"
    },
    "649": {
      "op": "DUP2"
    },
    "650": {
      "op": "ADD"
    },
    "651": {
      "op": "MLOAD"
    },
    "652": {
      "op": "DUP4"
    },
    "653": {
      "op": "DUP3"
    },
    "654": {
      "op": "ADD"
    },
    "655": {
      "op": "MSTORE"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "658": {
      "op": "ADD"
    },
    "659": {
      "op": "PUSH2",
      "value": "0x27F"
    },
    "662": {
      "op": "JUMP"
    },
    "663": {
      "op": "JUMPDEST"
    },
    "664": {
      "op": "DUP4"
    },
    "665": {
      "op": "DUP2"
    },
    "666": {
      "op": "GT"
    },
    "667": {
      "op": "ISZERO"
    },
    "668": {
      "op": "PUSH2",
      "value": "0x2A6"
    },
    "671": {
      "op": "JUMPI"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "674": {
      "op": "DUP5"
    },
    "675": {
      "op": "DUP5"
    },
    "676": {
      "op": "ADD"
    },
    "677": {
      "op": "MSTORE"
    },
    "678": {
      "op": "JUMPDEST"
    },
    "679": {
      "op": "POP"
    },
    "680": {
      "op": "POP"
    },
    "681": {
      "op": "POP"
    },
    "682": {
      "op": "POP"
    },
    "683": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "7a10826646a756710b38ca8834344183847ba888",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../Proxy.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\n *\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n * conflict with the storage layout of the implementation behind the proxy.\n *\n * _Available since v3.4._\n */\ncontract BeaconProxy is Proxy {\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 private constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Initializes the proxy with `beacon`.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n     * will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\n     * constructor.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract with the interface {IBeacon}.\n     */\n    constructor(address beacon, bytes memory data) payable {\n        assert(_BEACON_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.beacon\")) - 1));\n        _setBeacon(beacon, data);\n    }\n\n    /**\n     * @dev Returns the current beacon address.\n     */\n    function _beacon() internal view virtual returns (address beacon) {\n        bytes32 slot = _BEACON_SLOT;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            beacon := sload(slot)\n        }\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_beacon()).implementation();\n    }\n\n    /**\n     * @dev Changes the proxy to use a new beacon.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract.\n     * - The implementation returned by `beacon` must be a contract.\n     */\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\n        require(\n            Address.isContract(beacon),\n            \"BeaconProxy: beacon is not a contract\"\n        );\n        require(\n            Address.isContract(IBeacon(beacon).implementation()),\n            \"BeaconProxy: beacon implementation is not a contract\"\n        );\n        bytes32 slot = _BEACON_SLOT;\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            sstore(slot, beacon)\n        }\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(_implementation(), data, \"BeaconProxy: function call failed\");\n        }\n    }\n}\n",
  "sourceMap": "494:2537:72:-:0;;;1310:185;;;;;;;;;;;;;;;;;;:::i;:::-;1406:46;1451:1;1414:33;1406:46;:::i;:::-;-1:-1:-1;;;;;;;;;;;1382:71:72;1375:79;;-1:-1:-1;;;1375:79:72;;;;;;;;;1464:24;1475:6;1483:4;1464:10;:24::i;:::-;1310:185;;494:2537;;2367:662;2470:26;2489:6;2470:18;;;;;:26;;:::i;:::-;2449:110;;;;-1:-1:-1;;;2449:110:72;;2301:2:144;2449:110:72;;;2283:21:144;2340:2;2320:18;;;2313:30;2379:34;2359:18;;;2352:62;-1:-1:-1;;;2430:18:144;;;2423:35;2475:19;;2449:110:72;;;;;;;;;2590:52;2617:6;-1:-1:-1;;;;;2609:30:72;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2590:18;;;;;:52;;:::i;:::-;2569:151;;;;-1:-1:-1;;;2569:151:72;;3114:2:144;2569:151:72;;;3096:21:144;3153:2;3133:18;;;3126:30;3192:34;3172:18;;;3165:62;3263:22;3243:18;;;3236:50;3303:19;;2569:151:72;3086:242:144;2569:151:72;-1:-1:-1;;;;;;;;;;;2847:20:72;;;2891:11;;:15;2887:136;;2922:90;2951:17;:15;:17::i;:::-;2970:4;2922:90;;;;;;;;;;;;;;;;;:28;;;;;:90;;:::i;:::-;;2887:136;2367:662;;;:::o;718:413:119:-;1078:20;;1116:8;;718:413;;;;:::o;1897:135:72:-;1964:7;1998:9;-1:-1:-1;;;;;;;;;;;1767:11:72;;1743:45;1998:9;-1:-1:-1;;;;;1990:33:72;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1983:42;;1897:135;:::o;6660:417:119:-;6771:12;6803:18;6814:6;6803:10;:18::i;:::-;6795:69;;;;-1:-1:-1;;;6795:69:119;;2707:2:144;6795:69:119;;;2689:21:144;2746:2;2726:18;;;2719:30;2785:34;2765:18;;;2758:62;-1:-1:-1;;;2836:18:144;;;2829:36;2882:19;;6795:69:119;2679:228:144;6795:69:119;6935:12;6949:23;6976:6;-1:-1:-1;;;;;6976:19:119;6996:4;6976:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6934:67:119;;-1:-1:-1;6934:67:119;-1:-1:-1;7018:52:119;6934:67;;7057:12;7018:17;:52::i;:::-;7011:59;;;;6660:417;;;;;;:::o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:119;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;-1:-1:-1;;;7757:20:119;;;;;;;;:::i;14:177:144:-;93:13;;-1:-1:-1;;;;;135:31:144;;125:42;;115:2;;181:1;178;171:12;196:218;;319:2;307:9;298:7;294:23;290:32;287:2;;;340:6;332;325:22;287:2;368:40;398:9;368:40;:::i;419:1008::-;;;568:2;556:9;547:7;543:23;539:32;536:2;;;589:6;581;574:22;536:2;617:40;647:9;617:40;:::i;:::-;701:2;686:18;;680:25;607:50;;-1:-1:-1;;;;;;754:14:144;;;751:2;;;786:6;778;771:22;751:2;829:6;818:9;814:22;804:32;;874:7;867:4;863:2;859:13;855:27;845:2;;901:6;893;886:22;845:2;935;929:9;957:2;953;950:10;947:2;;;963:18;;:::i;:::-;1038:2;1032:9;1006:2;1092:13;;-1:-1:-1;;1088:22:144;;;1112:2;1084:31;1080:40;1068:53;;;1136:18;;;1156:22;;;1133:46;1130:2;;;1182:18;;:::i;:::-;1222:10;1218:2;1211:22;1257:2;1249:6;1242:18;1297:7;1292:2;1287;1283;1279:11;1275:20;1272:33;1269:2;;;1323:6;1315;1308:22;1269:2;1341:55;1393:2;1388;1380:6;1376:15;1371:2;1367;1363:11;1341:55;:::i;:::-;1415:6;1405:16;;;;;;;526:901;;;;;:::o;1432:274::-;;1599:6;1593:13;1615:53;1661:6;1656:3;1649:4;1641:6;1637:17;1615:53;:::i;:::-;1684:16;;;;;1569:137;-1:-1:-1;;1569:137:144:o;1711:383::-;;1860:2;1849:9;1842:21;1892:6;1886:13;1935:6;1930:2;1919:9;1915:18;1908:34;1951:66;2010:6;2005:2;1994:9;1990:18;1985:2;1977:6;1973:15;1951:66;:::i;:::-;2078:2;2057:15;-1:-1:-1;;2053:29:144;2038:45;;;;2085:2;2034:54;;1832:262;-1:-1:-1;;1832:262:144:o;3333:228::-;;3401:1;3398;3395:8;3392:2;;;-1:-1:-1;;;3426:34:144;;3483:4;3480:1;3473:15;3514:4;3433;3501:18;3392:2;-1:-1:-1;3546:9:144;;3382:179::o;3566:258::-;3638:1;3648:113;3662:6;3659:1;3656:13;3648:113;;;3738:11;;;3732:18;3719:11;;;3712:39;3684:2;3677:10;3648:113;;;3779:6;3776:1;3773:13;3770:2;;;-1:-1:-1;;3814:1:144;3796:16;;3789:27;3619:205::o;3829:127::-;3890:10;3885:3;3881:20;3878:1;3871:31;3921:4;3918:1;3911:15;3945:4;3942:1;3935:15;3861:95;494:2537:72;;;;;;",
  "sourcePath": "contracts/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol",
  "type": "contract"
}