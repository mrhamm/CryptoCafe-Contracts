{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "payees",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares_",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "PayeeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentReleased",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "payee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "released",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalReleased",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "119": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
    "121": "contracts/openzeppelin-contracts/contracts/utils/Context.sol",
    "4": "contracts/openzeppelin-contracts/contracts/finance/PaymentSplitter.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-contracts/contracts/finance/PaymentSplitter.sol",
    "exportedSymbols": {
      "Address": [
        14906
      ],
      "Context": [
        15014
      ],
      "PaymentSplitter": [
        935
      ],
      "SafeMath": [
        17200
      ]
    },
    "id": 936,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 643,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:4"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "../utils/Address.sol",
        "id": 644,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 936,
        "sourceUnit": 14907,
        "src": "58:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/Context.sol",
        "file": "../utils/Context.sol",
        "id": 645,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 936,
        "sourceUnit": 15015,
        "src": "89:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
        "file": "../utils/math/SafeMath.sol",
        "id": 646,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 936,
        "sourceUnit": 17201,
        "src": "120:36:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 648,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15014,
              "src": "1009:7:4"
            },
            "id": 649,
            "nodeType": "InheritanceSpecifier",
            "src": "1009:7:4"
          }
        ],
        "contractDependencies": [
          15014
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 647,
          "nodeType": "StructuredDocumentation",
          "src": "158:822:4",
          "text": " @title PaymentSplitter\n @dev This contract allows to split Ether payments among a group of accounts. The sender does not need to be aware\n that the Ether will be split in this way, since it is handled transparently by the contract.\n The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each\n account to a number of shares. Of all the Ether that this contract receives, each account will then be able to claim\n an amount proportional to the percentage of total shares they were assigned.\n `PaymentSplitter` follows a _pull payment_ model. This means that payments are not automatically forwarded to the\n accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the {release}\n function."
        },
        "fullyImplemented": true,
        "id": 935,
        "linearizedBaseContracts": [
          935,
          15014
        ],
        "name": "PaymentSplitter",
        "nameLocation": "990:15:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 655,
            "name": "PayeeAdded",
            "nameLocation": "1029:10:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1048:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1040:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 653,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1065:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1057:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1039:33:4"
            },
            "src": "1023:50:4"
          },
          {
            "anonymous": false,
            "id": 661,
            "name": "PaymentReleased",
            "nameLocation": "1084:15:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1108:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1100:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 659,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1120:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1112:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1099:28:4"
            },
            "src": "1078:50:4"
          },
          {
            "anonymous": false,
            "id": 667,
            "name": "PaymentReceived",
            "nameLocation": "1139:15:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1163:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "1155:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 665,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1177:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "1169:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1154:30:4"
            },
            "src": "1133:52:4"
          },
          {
            "constant": false,
            "id": 669,
            "mutability": "mutable",
            "name": "_totalShares",
            "nameLocation": "1207:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 935,
            "src": "1191:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 668,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1191:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 671,
            "mutability": "mutable",
            "name": "_totalReleased",
            "nameLocation": "1241:14:4",
            "nodeType": "VariableDeclaration",
            "scope": 935,
            "src": "1225:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 670,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1225:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 675,
            "mutability": "mutable",
            "name": "_shares",
            "nameLocation": "1298:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 935,
            "src": "1262:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 674,
              "keyType": {
                "id": 672,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1270:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1262:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 673,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1281:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 679,
            "mutability": "mutable",
            "name": "_released",
            "nameLocation": "1347:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 935,
            "src": "1311:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 678,
              "keyType": {
                "id": 676,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1319:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1311:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 677,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1330:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 682,
            "mutability": "mutable",
            "name": "_payees",
            "nameLocation": "1380:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 935,
            "src": "1362:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 680,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1362:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 681,
              "nodeType": "ArrayTypeName",
              "src": "1362:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 731,
              "nodeType": "Block",
              "src": "1812:341:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 693,
                            "name": "payees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "1883:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1883:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 695,
                            "name": "shares_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 689,
                            "src": "1900:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1900:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1883:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a2070617965657320616e6420736861726573206c656e677468206d69736d61746368",
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1916:52:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5e39d6690ea50b22e040fe9ba22acf868e3d7f78e6ca8dc7ae3224a0aade89f",
                          "typeString": "literal_string \"PaymentSplitter: payees and shares length mismatch\""
                        },
                        "value": "PaymentSplitter: payees and shares length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5e39d6690ea50b22e040fe9ba22acf868e3d7f78e6ca8dc7ae3224a0aade89f",
                          "typeString": "literal_string \"PaymentSplitter: payees and shares length mismatch\""
                        }
                      ],
                      "id": 692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1875:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1875:94:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "1875:94:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 702,
                            "name": "payees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "1987:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1987:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2003:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1987:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206e6f20706179656573",
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2006:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1437b0f4053e38629626a98d8100226576b62fcebc211e7a49225bd05994643",
                          "typeString": "literal_string \"PaymentSplitter: no payees\""
                        },
                        "value": "PaymentSplitter: no payees"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1437b0f4053e38629626a98d8100226576b62fcebc211e7a49225bd05994643",
                          "typeString": "literal_string \"PaymentSplitter: no payees\""
                        }
                      ],
                      "id": 701,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1979:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1979:56:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "1979:56:4"
                },
                {
                  "body": {
                    "id": 729,
                    "nodeType": "Block",
                    "src": "2090:57:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 721,
                                "name": "payees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 686,
                                "src": "2114:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 723,
                              "indexExpression": {
                                "id": 722,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 710,
                                "src": "2121:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2114:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 724,
                                "name": "shares_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 689,
                                "src": "2125:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 726,
                              "indexExpression": {
                                "id": 725,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 710,
                                "src": "2133:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2125:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 720,
                            "name": "_addPayee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 934,
                            "src": "2104:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2104:32:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 728,
                        "nodeType": "ExpressionStatement",
                        "src": "2104:32:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 713,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 710,
                      "src": "2066:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 714,
                        "name": "payees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "2070:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2070:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2066:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 730,
                  "initializationExpression": {
                    "assignments": [
                      710
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 710,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2059:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 730,
                        "src": "2051:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2051:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 712,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2063:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2051:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2085:3:4",
                      "subExpression": {
                        "id": 717,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "2085:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 719,
                    "nodeType": "ExpressionStatement",
                    "src": "2085:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "2046:101:4"
                }
              ]
            },
            "documentation": {
              "id": 683,
              "nodeType": "StructuredDocumentation",
              "src": "1394:341:4",
              "text": " @dev Creates an instance of `PaymentSplitter` where each account in `payees` is assigned the number of shares at\n the matching position in the `shares` array.\n All addresses in `payees` must be non-zero. Both arrays must have the same non-zero length, and there must be no\n duplicates in `payees`."
            },
            "id": 732,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "payees",
                  "nameLocation": "1770:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "1753:23:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 684,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1753:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 685,
                    "nodeType": "ArrayTypeName",
                    "src": "1753:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 689,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "1795:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "1778:24:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 687,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1778:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 688,
                    "nodeType": "ArrayTypeName",
                    "src": "1778:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1752:51:4"
            },
            "returnParameters": {
              "id": 691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1812:0:4"
            },
            "scope": 935,
            "src": "1740:413:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 743,
              "nodeType": "Block",
              "src": "2701:62:4",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 737,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15002,
                          "src": "2732:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2732:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 739,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2746:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2746:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 736,
                      "name": "PaymentReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 667,
                      "src": "2716:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2716:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 742,
                  "nodeType": "EmitStatement",
                  "src": "2711:45:4"
                }
              ]
            },
            "documentation": {
              "id": 733,
              "nodeType": "StructuredDocumentation",
              "src": "2159:501:4",
              "text": " @dev The Ether received will be logged with {PaymentReceived} events. Note that these events are not fully\n reliable: it's possible for a contract to receive Ether without triggering this function. This only affects the\n reliability of the events, and not the actual splitting of Ether.\n To learn more about this see the Solidity documentation for\n https://solidity.readthedocs.io/en/latest/contracts.html#fallback-function[fallback\n functions]."
            },
            "id": 744,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2673:2:4"
            },
            "returnParameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2701:0:4"
            },
            "scope": 935,
            "src": "2665:98:4",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "2894:36:4",
              "statements": [
                {
                  "expression": {
                    "id": 750,
                    "name": "_totalShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 669,
                    "src": "2911:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 749,
                  "id": 751,
                  "nodeType": "Return",
                  "src": "2904:19:4"
                }
              ]
            },
            "documentation": {
              "id": 745,
              "nodeType": "StructuredDocumentation",
              "src": "2769:67:4",
              "text": " @dev Getter for the total shares held by payees."
            },
            "functionSelector": "3a98ef39",
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalShares",
            "nameLocation": "2850:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2861:2:4"
            },
            "returnParameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "2885:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2885:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2884:9:4"
            },
            "scope": 935,
            "src": "2841:89:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 761,
              "nodeType": "Block",
              "src": "3074:38:4",
              "statements": [
                {
                  "expression": {
                    "id": 759,
                    "name": "_totalReleased",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 671,
                    "src": "3091:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 758,
                  "id": 760,
                  "nodeType": "Return",
                  "src": "3084:21:4"
                }
              ]
            },
            "documentation": {
              "id": 754,
              "nodeType": "StructuredDocumentation",
              "src": "2936:78:4",
              "text": " @dev Getter for the total amount of Ether already released."
            },
            "functionSelector": "e33b7de3",
            "id": 762,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalReleased",
            "nameLocation": "3028:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3041:2:4"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 762,
                  "src": "3065:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3065:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3064:9:4"
            },
            "scope": 935,
            "src": "3019:93:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 774,
              "nodeType": "Block",
              "src": "3261:40:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 770,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "3278:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 772,
                    "indexExpression": {
                      "id": 771,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "3286:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3278:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 769,
                  "id": 773,
                  "nodeType": "Return",
                  "src": "3271:23:4"
                }
              ]
            },
            "documentation": {
              "id": 763,
              "nodeType": "StructuredDocumentation",
              "src": "3118:75:4",
              "text": " @dev Getter for the amount of shares held by an account."
            },
            "functionSelector": "ce7c2ac2",
            "id": 775,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "shares",
            "nameLocation": "3207:6:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3222:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 775,
                  "src": "3214:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3214:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3213:17:4"
            },
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 775,
                  "src": "3252:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3252:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3251:9:4"
            },
            "scope": 935,
            "src": "3198:103:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 787,
              "nodeType": "Block",
              "src": "3460:42:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 783,
                      "name": "_released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "3477:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 785,
                    "indexExpression": {
                      "id": 784,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "3487:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3477:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 782,
                  "id": 786,
                  "nodeType": "Return",
                  "src": "3470:25:4"
                }
              ]
            },
            "documentation": {
              "id": 776,
              "nodeType": "StructuredDocumentation",
              "src": "3307:83:4",
              "text": " @dev Getter for the amount of Ether already released to a payee."
            },
            "functionSelector": "9852595c",
            "id": 788,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "released",
            "nameLocation": "3404:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3421:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "3413:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3413:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3412:17:4"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "3451:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3451:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3450:9:4"
            },
            "scope": 935,
            "src": "3395:107:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 800,
              "nodeType": "Block",
              "src": "3648:38:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 796,
                      "name": "_payees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "3665:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 798,
                    "indexExpression": {
                      "id": 797,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "3673:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3665:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 795,
                  "id": 799,
                  "nodeType": "Return",
                  "src": "3658:21:4"
                }
              ]
            },
            "documentation": {
              "id": 789,
              "nodeType": "StructuredDocumentation",
              "src": "3508:75:4",
              "text": " @dev Getter for the address of the payee number `index`."
            },
            "functionSelector": "8b83209b",
            "id": 801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payee",
            "nameLocation": "3597:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "3611:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "3603:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3602:15:4"
            },
            "returnParameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "3639:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3639:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3638:9:4"
            },
            "scope": 935,
            "src": "3588:98:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 875,
              "nodeType": "Block",
              "src": "3937:541:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 808,
                            "name": "_shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 675,
                            "src": "3955:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 810,
                          "indexExpression": {
                            "id": 809,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 804,
                            "src": "3963:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3955:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3974:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3955:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e7420686173206e6f20736861726573",
                        "id": 813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3977:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41702911e7fdf9741c61509216c070cb4be5837176954fb37acaf958eaff82dd",
                          "typeString": "literal_string \"PaymentSplitter: account has no shares\""
                        },
                        "value": "PaymentSplitter: account has no shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41702911e7fdf9741c61509216c070cb4be5837176954fb37acaf958eaff82dd",
                          "typeString": "literal_string \"PaymentSplitter: account has no shares\""
                        }
                      ],
                      "id": 807,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3947:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3947:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "3947:71:4"
                },
                {
                  "assignments": [
                    817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 817,
                      "mutability": "mutable",
                      "name": "totalReceived",
                      "nameLocation": "4037:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 875,
                      "src": "4029:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 816,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4029:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 825,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 820,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4061:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PaymentSplitter_$935",
                              "typeString": "contract PaymentSplitter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PaymentSplitter_$935",
                              "typeString": "contract PaymentSplitter"
                            }
                          ],
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4053:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 818,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4053:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4053:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "4053:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 823,
                      "name": "_totalReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "4077:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4053:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4029:62:4"
                },
                {
                  "assignments": [
                    827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 827,
                      "mutability": "mutable",
                      "name": "payment",
                      "nameLocation": "4109:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 875,
                      "src": "4101:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 826,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4101:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 839,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 828,
                          "name": "totalReceived",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 817,
                          "src": "4119:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 829,
                            "name": "_shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 675,
                            "src": "4135:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 831,
                          "indexExpression": {
                            "id": 830,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 804,
                            "src": "4143:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4135:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4119:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 833,
                        "name": "_totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "4154:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4119:47:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 835,
                        "name": "_released",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "4169:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 837,
                      "indexExpression": {
                        "id": 836,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "4179:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4169:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4119:68:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4101:86:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 841,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 827,
                          "src": "4206:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4217:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4206:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e74206973206e6f7420647565207061796d656e74",
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4220:45:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57f87f0ebf27afe0d68884e28202f547fd6c4ce1b7243f1356690df65e0fa2e4",
                          "typeString": "literal_string \"PaymentSplitter: account is not due payment\""
                        },
                        "value": "PaymentSplitter: account is not due payment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57f87f0ebf27afe0d68884e28202f547fd6c4ce1b7243f1356690df65e0fa2e4",
                          "typeString": "literal_string \"PaymentSplitter: account is not due payment\""
                        }
                      ],
                      "id": 840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4198:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4198:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 846,
                  "nodeType": "ExpressionStatement",
                  "src": "4198:68:4"
                },
                {
                  "expression": {
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 847,
                        "name": "_released",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "4277:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 849,
                      "indexExpression": {
                        "id": 848,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "4287:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4277:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 850,
                          "name": "_released",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 679,
                          "src": "4298:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 852,
                        "indexExpression": {
                          "id": 851,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "4308:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4298:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 853,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 827,
                        "src": "4319:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4298:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4277:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "4277:49:4"
                },
                {
                  "expression": {
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 857,
                      "name": "_totalReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "4336:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 858,
                        "name": "_totalReleased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "4353:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 859,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 827,
                        "src": "4370:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4353:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4336:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 862,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:41:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 866,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "4406:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 867,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 827,
                        "src": "4415:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 863,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14906,
                        "src": "4388:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$14906_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14664,
                      "src": "4388:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4388:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 869,
                  "nodeType": "ExpressionStatement",
                  "src": "4388:35:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 871,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "4454:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 872,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 827,
                        "src": "4463:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 870,
                      "name": "PaymentReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "4438:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4438:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 874,
                  "nodeType": "EmitStatement",
                  "src": "4433:38:4"
                }
              ]
            },
            "documentation": {
              "id": 802,
              "nodeType": "StructuredDocumentation",
              "src": "3692:183:4",
              "text": " @dev Triggers a transfer to `account` of the amount of Ether they are owed, according to their percentage of the\n total shares and their previous withdrawals."
            },
            "functionSelector": "19165587",
            "id": 876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nameLocation": "3889:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3913:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "3897:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3897:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3896:25:4"
            },
            "returnParameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3937:0:4"
            },
            "scope": 935,
            "src": "3880:598:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 933,
              "nodeType": "Block",
              "src": "4724:403:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 885,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 879,
                          "src": "4742:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4761:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4753:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 886,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4753:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4753:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4742:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e7420697320746865207a65726f2061646472657373",
                        "id": 891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4765:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22db6c622fd62a15ab5fca8fc78156905c4f1b5914d7d1db97b192b87e8c816b",
                          "typeString": "literal_string \"PaymentSplitter: account is the zero address\""
                        },
                        "value": "PaymentSplitter: account is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22db6c622fd62a15ab5fca8fc78156905c4f1b5914d7d1db97b192b87e8c816b",
                          "typeString": "literal_string \"PaymentSplitter: account is the zero address\""
                        }
                      ],
                      "id": 884,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4734:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4734:78:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 893,
                  "nodeType": "ExpressionStatement",
                  "src": "4734:78:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 895,
                          "name": "shares_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 881,
                          "src": "4830:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4840:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4830:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a20736861726573206172652030",
                        "id": 898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4843:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9c1be4d5245e2b1590d7367c9c09f1ac5365954d05fed4172915681bdc80ed4",
                          "typeString": "literal_string \"PaymentSplitter: shares are 0\""
                        },
                        "value": "PaymentSplitter: shares are 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9c1be4d5245e2b1590d7367c9c09f1ac5365954d05fed4172915681bdc80ed4",
                          "typeString": "literal_string \"PaymentSplitter: shares are 0\""
                        }
                      ],
                      "id": 894,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4822:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4822:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 900,
                  "nodeType": "ExpressionStatement",
                  "src": "4822:53:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 902,
                            "name": "_shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 675,
                            "src": "4893:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 904,
                          "indexExpression": {
                            "id": 903,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 879,
                            "src": "4901:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4893:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4913:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4893:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e7420616c72656164792068617320736861726573",
                        "id": 907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4916:45:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df40dd957dfb1d655a61a3d20a7083773a63031454719eb1eb83074b56cf5635",
                          "typeString": "literal_string \"PaymentSplitter: account already has shares\""
                        },
                        "value": "PaymentSplitter: account already has shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df40dd957dfb1d655a61a3d20a7083773a63031454719eb1eb83074b56cf5635",
                          "typeString": "literal_string \"PaymentSplitter: account already has shares\""
                        }
                      ],
                      "id": 901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4885:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:77:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 909,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:77:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 913,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "4986:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 910,
                        "name": "_payees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "4973:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4973:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4973:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 915,
                  "nodeType": "ExpressionStatement",
                  "src": "4973:21:4"
                },
                {
                  "expression": {
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 916,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "5004:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 918,
                      "indexExpression": {
                        "id": 917,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "5012:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5004:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 919,
                      "name": "shares_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 881,
                      "src": "5023:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5004:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 921,
                  "nodeType": "ExpressionStatement",
                  "src": "5004:26:4"
                },
                {
                  "expression": {
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 922,
                      "name": "_totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "5040:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 923,
                        "name": "_totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "5055:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 924,
                        "name": "shares_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "5070:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5055:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5040:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 927,
                  "nodeType": "ExpressionStatement",
                  "src": "5040:37:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 929,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "5103:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 930,
                        "name": "shares_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "5112:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 928,
                      "name": "PayeeAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "5092:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5092:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 932,
                  "nodeType": "EmitStatement",
                  "src": "5087:33:4"
                }
              ]
            },
            "documentation": {
              "id": 877,
              "nodeType": "StructuredDocumentation",
              "src": "4484:174:4",
              "text": " @dev Add a new payee to the contract.\n @param account The address of the payee to add.\n @param shares_ The number of shares owned by the payee."
            },
            "id": 934,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addPayee",
            "nameLocation": "4672:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4690:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "4682:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4682:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "4707:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "4699:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4699:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4681:34:4"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4724:0:4"
            },
            "scope": 935,
            "src": "4663:464:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 936,
        "src": "981:4148:4"
      }
    ],
    "src": "33:5097:4"
  },
  "bytecode": "608060405260405162000b6a38038062000b6a8339810160408190526200002691620003db565b8051825114620000985760405162461bcd60e51b815260206004820152603260248201527f5061796d656e7453706c69747465723a2070617965657320616e6420736861726044820152710cae640d8cadccee8d040dad2e6dac2e8c6d60731b60648201526084015b60405180910390fd5b6000825111620000eb5760405162461bcd60e51b815260206004820152601a60248201527f5061796d656e7453706c69747465723a206e6f2070617965657300000000000060448201526064016200008f565b60005b82518110156200016f576200015a8382815181106200011d57634e487b7160e01b600052603260045260246000fd5b60200260200101518383815181106200014657634e487b7160e01b600052603260045260246000fd5b60200260200101516200017860201b60201c565b8062000166816200052c565b915050620000ee565b50505062000576565b6001600160a01b038216620001e55760405162461bcd60e51b815260206004820152602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201526b7a65726f206164647265737360a01b60648201526084016200008f565b60008111620002375760405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7453706c69747465723a2073686172657320617265203000000060448201526064016200008f565b6001600160a01b03821660009081526002602052604090205415620002b35760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201526a206861732073686172657360a81b60648201526084016200008f565b60048054600181019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0384169081179091556000908152600260205260408120829055546200031b90829062000511565b600055604080516001600160a01b0384168152602081018390527f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac910160405180910390a15050565b600082601f83011262000375578081fd5b815160206200038e6200038883620004eb565b620004b8565b80838252828201915082860187848660051b8901011115620003ae578586fd5b855b85811015620003ce57815184529284019290840190600101620003b0565b5090979650505050505050565b60008060408385031215620003ee578182fd5b82516001600160401b038082111562000405578384fd5b818501915085601f83011262000419578384fd5b815160206200042c6200038883620004eb565b8083825282820191508286018a848660051b89010111156200044c578889fd5b8896505b84871015620004855780516001600160a01b03811681146200047057898afd5b83526001969096019591830191830162000450565b50918801519196509093505050808211156200049f578283fd5b50620004ae8582860162000364565b9150509250929050565b604051601f8201601f191681016001600160401b0381118282101715620004e357620004e362000560565b604052919050565b60006001600160401b0382111562000507576200050762000560565b5060051b60200190565b600082198211156200052757620005276200054a565b500190565b60006000198214156200054357620005436200054a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6105e480620005866000396000f3fe6080604052600436106100595760003560e01c806319165587146100a75780633a98ef39146100c95780638b83209b146100ed5780639852595c14610125578063ce7c2ac21461015b578063e33b7de314610191576100a2565b366100a2577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77033604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b3480156100b357600080fd5b506100c76100c23660046104d7565b6101a6565b005b3480156100d557600080fd5b506000545b6040519081526020015b60405180910390f35b3480156100f957600080fd5b5061010d6101083660046104fa565b61037b565b6040516001600160a01b0390911681526020016100e4565b34801561013157600080fd5b506100da6101403660046104d7565b6001600160a01b031660009081526003602052604090205490565b34801561016757600080fd5b506100da6101763660046104d7565b6001600160a01b031660009081526002602052604090205490565b34801561019d57600080fd5b506001546100da565b6001600160a01b03811660009081526002602052604090205461021f5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b60648201526084015b60405180910390fd5b60006001544761022f9190610512565b6001600160a01b03831660009081526003602090815260408083205483546002909352908320549394509192610265908561054a565b61026f919061052a565b6102799190610569565b9050806102dc5760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b6064820152608401610216565b6001600160a01b038316600090815260036020526040902054610300908290610512565b6001600160a01b038416600090815260036020526040902055600154610327908290610512565b60015561033483826103b9565b604080516001600160a01b0385168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a1505050565b60006004828154811061039e57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031692915050565b804710156104095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610216565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610456576040519150601f19603f3d011682016040523d82523d6000602084013e61045b565b606091505b50509050806104d25760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610216565b505050565b6000602082840312156104e8578081fd5b81356104f381610596565b9392505050565b60006020828403121561050b578081fd5b5035919050565b6000821982111561052557610525610580565b500190565b60008261054557634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561056457610564610580565b500290565b60008282101561057b5761057b610580565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146105ab57600080fd5b5056fea2646970667358221220a74127aea74e769e313c0091231421a3e78041eb55bd16292529f8bcc409516164736f6c63430008030033",
  "bytecodeSha1": "851465ad03e11f1cf1fc1fd353e5d4a21011a21d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "PaymentSplitter",
  "coverageMap": {
    "branches": {
      "119": {
        "Address.sendValue": {
          "16": [
            2137,
            2168,
            true
          ],
          "17": [
            2362,
            2369,
            true
          ]
        }
      },
      "121": {},
      "4": {
        "PaymentSplitter.release": {
          "15": [
            4206,
            4218,
            true
          ]
        }
      }
    },
    "statements": {
      "119": {
        "Address.sendValue": {
          "13": [
            2129,
            2202
          ],
          "14": [
            2354,
            2432
          ]
        }
      },
      "121": {
        "Context._msgSender": {
          "1": [
            658,
            675
          ]
        }
      },
      "4": {
        "PaymentSplitter.<receive>": {
          "0": [
            2711,
            2756
          ]
        },
        "PaymentSplitter.payee": {
          "12": [
            3658,
            3679
          ]
        },
        "PaymentSplitter.release": {
          "6": [
            3947,
            4018
          ],
          "7": [
            4198,
            4266
          ],
          "8": [
            4277,
            4326
          ],
          "9": [
            4336,
            4377
          ],
          "10": [
            4388,
            4423
          ],
          "11": [
            4433,
            4471
          ]
        },
        "PaymentSplitter.released": {
          "3": [
            3470,
            3495
          ]
        },
        "PaymentSplitter.shares": {
          "4": [
            3271,
            3294
          ]
        },
        "PaymentSplitter.totalReleased": {
          "5": [
            3084,
            3105
          ]
        },
        "PaymentSplitter.totalShares": {
          "2": [
            2904,
            2923
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context"
  ],
  "deployedBytecode": "6080604052600436106100595760003560e01c806319165587146100a75780633a98ef39146100c95780638b83209b146100ed5780639852595c14610125578063ce7c2ac21461015b578063e33b7de314610191576100a2565b366100a2577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77033604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b3480156100b357600080fd5b506100c76100c23660046104d7565b6101a6565b005b3480156100d557600080fd5b506000545b6040519081526020015b60405180910390f35b3480156100f957600080fd5b5061010d6101083660046104fa565b61037b565b6040516001600160a01b0390911681526020016100e4565b34801561013157600080fd5b506100da6101403660046104d7565b6001600160a01b031660009081526003602052604090205490565b34801561016757600080fd5b506100da6101763660046104d7565b6001600160a01b031660009081526002602052604090205490565b34801561019d57600080fd5b506001546100da565b6001600160a01b03811660009081526002602052604090205461021f5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b60648201526084015b60405180910390fd5b60006001544761022f9190610512565b6001600160a01b03831660009081526003602090815260408083205483546002909352908320549394509192610265908561054a565b61026f919061052a565b6102799190610569565b9050806102dc5760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b6064820152608401610216565b6001600160a01b038316600090815260036020526040902054610300908290610512565b6001600160a01b038416600090815260036020526040902055600154610327908290610512565b60015561033483826103b9565b604080516001600160a01b0385168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a1505050565b60006004828154811061039e57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031692915050565b804710156104095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610216565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610456576040519150601f19603f3d011682016040523d82523d6000602084013e61045b565b606091505b50509050806104d25760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610216565b505050565b6000602082840312156104e8578081fd5b81356104f381610596565b9392505050565b60006020828403121561050b578081fd5b5035919050565b6000821982111561052557610525610580565b500190565b60008261054557634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561056457610564610580565b500290565b60008282101561057b5761057b610580565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146105ab57600080fd5b5056fea2646970667358221220a74127aea74e769e313c0091231421a3e78041eb55bd16292529f8bcc409516164736f6c63430008030033",
  "deployedSourceMap": "981:4148:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:40;665:10:121;2716:40:4;;;-1:-1:-1;;;;;1359:32:144;;;1341:51;;2746:9:4;1423:2:144;1408:18;;1401:34;1314:18;2716:40:4;;;;;;;981:4148;;;;;3880:598;;;;;;;;;;-1:-1:-1;3880:598:4;;;;;:::i;:::-;;:::i;:::-;;2841:89;;;;;;;;;;-1:-1:-1;2885:7:4;2911:12;2841:89;;;3475:25:144;;;3463:2;3448:18;2841:89:4;;;;;;;;3588:98;;;;;;;;;;-1:-1:-1;3588:98:4;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1115:32:144;;;1097:51;;1085:2;1070:18;3588:98:4;1052:102:144;3395:107:4;;;;;;;;;;-1:-1:-1;3395:107:4;;;;;:::i;:::-;-1:-1:-1;;;;;3477:18:4;3451:7;3477:18;;;:9;:18;;;;;;;3395:107;3198:103;;;;;;;;;;-1:-1:-1;3198:103:4;;;;;:::i;:::-;-1:-1:-1;;;;;3278:16:4;3252:7;3278:16;;;:7;:16;;;;;;;3198:103;3019:93;;;;;;;;;;-1:-1:-1;3091:14:4;;3019:93;;3880:598;-1:-1:-1;;;;;3955:16:4;;3974:1;3955:16;;;:7;:16;;;;;;3947:71;;;;-1:-1:-1;;;3947:71:4;;1927:2:144;3947:71:4;;;1909:21:144;1966:2;1946:18;;;1939:30;2005:34;1985:18;;;1978:62;-1:-1:-1;;;2056:18:144;;;2049:36;2102:19;;3947:71:4;;;;;;;;;4029:21;4077:14;;4053:21;:38;;;;:::i;:::-;-1:-1:-1;;;;;4169:18:4;;4101:15;4169:18;;;:9;:18;;;;;;;;;4154:12;;4135:7;:16;;;;;;;4029:62;;-1:-1:-1;4101:15:4;;4119:32;;4029:62;4119:32;:::i;:::-;:47;;;;:::i;:::-;:68;;;;:::i;:::-;4101:86;-1:-1:-1;4206:12:4;4198:68;;;;-1:-1:-1;;;4198:68:4;;3119:2:144;4198:68:4;;;3101:21:144;3158:2;3138:18;;;3131:30;3197:34;3177:18;;;3170:62;-1:-1:-1;;;3248:18:144;;;3241:41;3299:19;;4198:68:4;3091:233:144;4198:68:4;-1:-1:-1;;;;;4298:18:4;;;;;;:9;:18;;;;;;:28;;4319:7;;4298:28;:::i;:::-;-1:-1:-1;;;;;4277:18:4;;;;;;:9;:18;;;;;:49;4353:14;;:24;;4370:7;;4353:24;:::i;:::-;4336:14;:41;4388:35;4406:7;4415;4388:17;:35::i;:::-;4438:33;;;-1:-1:-1;;;;;1359:32:144;;1341:51;;1423:2;1408:18;;1401:34;;;4438:33:4;;1314:18:144;4438:33:4;;;;;;;3880:598;;;:::o;3588:98::-;3639:7;3665;3673:5;3665:14;;;;;;-1:-1:-1;;;3665:14:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3665:14:4;;3588:98;-1:-1:-1;;3588:98:4:o;2048:391:119:-;2162:6;2137:21;:31;;2129:73;;;;-1:-1:-1;;;2129:73:119;;2761:2:144;2129:73:119;;;2743:21:144;2800:2;2780:18;;;2773:30;2839:31;2819:18;;;2812:59;2888:18;;2129:73:119;2733:179:144;2129:73:119;2291:12;2309:9;-1:-1:-1;;;;;2309:14:119;2332:6;2309:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2290:54;;;2362:7;2354:78;;;;-1:-1:-1;;;2354:78:119;;2334:2:144;2354:78:119;;;2316:21:144;2373:2;2353:18;;;2346:30;2412:34;2392:18;;;2385:62;2483:28;2463:18;;;2456:56;2529:19;;2354:78:119;2306:248:144;2354:78:119;2048:391;;;:::o;14:257:144:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;:::-;260:5;84:187;-1:-1:-1;;;84:187:144:o;546:190::-;;658:2;646:9;637:7;633:23;629:32;626:2;;;679:6;671;664:22;626:2;-1:-1:-1;707:23:144;;616:120;-1:-1:-1;616:120:144:o;3511:128::-;;3582:1;3578:6;3575:1;3572:13;3569:2;;;3588:18;;:::i;:::-;-1:-1:-1;3624:9:144;;3559:80::o;3644:217::-;;3710:1;3700:2;;-1:-1:-1;;;3735:31:144;;3789:4;3786:1;3779:15;3817:4;3742:1;3807:15;3700:2;-1:-1:-1;3846:9:144;;3690:171::o;3866:168::-;;3972:1;3968;3964:6;3960:14;3957:1;3954:21;3949:1;3942:9;3935:17;3931:45;3928:2;;;3979:18;;:::i;:::-;-1:-1:-1;4019:9:144;;3918:116::o;4039:125::-;;4107:1;4104;4101:8;4098:2;;;4112:18;;:::i;:::-;-1:-1:-1;4149:9:144;;4088:76::o;4169:127::-;4230:10;4225:3;4221:20;4218:1;4211:31;4261:4;4258:1;4251:15;4285:4;4282:1;4275:15;4301:131;-1:-1:-1;;;;;4376:31:144;;4366:42;;4356:2;;4422:1;4419;4412:12;4356:2;4346:86;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract allows to split Ether payments among a group of accounts. The sender does not need to be aware that the Ether will be split in this way, since it is handled transparently by the contract. The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each account to a number of shares. Of all the Ether that this contract receives, each account will then be able to claim an amount proportional to the percentage of total shares they were assigned. `PaymentSplitter` follows a _pull payment_ model. This means that payments are not automatically forwarded to the accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the {release} function.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Creates an instance of `PaymentSplitter` where each account in `payees` is assigned the number of shares at the matching position in the `shares` array. All addresses in `payees` must be non-zero. Both arrays must have the same non-zero length, and there must be no duplicates in `payees`."
      },
      "payee(uint256)": {
        "details": "Getter for the address of the payee number `index`."
      },
      "release(address)": {
        "details": "Triggers a transfer to `account` of the amount of Ether they are owed, according to their percentage of the total shares and their previous withdrawals."
      },
      "released(address)": {
        "details": "Getter for the amount of Ether already released to a payee."
      },
      "shares(address)": {
        "details": "Getter for the amount of shares held by an account."
      },
      "totalReleased()": {
        "details": "Getter for the total amount of Ether already released."
      },
      "totalShares()": {
        "details": "Getter for the total shares held by payees."
      }
    },
    "title": "PaymentSplitter",
    "version": 1
  },
  "offset": [
    981,
    5129
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19165587 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8B83209B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xCE7C2AC2 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xE33B7DE3 EQ PUSH2 0x191 JUMPI PUSH2 0xA2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA2 JUMPI PUSH32 0x6EF95F06320E7A25A04A175CA677B7052BDD97131872C2192525A629F51BE770 CALLER PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE CALLVALUE PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xDA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x21F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A206163636F756E7420686173206E6F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x736861726573 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SELFBALANCE PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 SLOAD PUSH1 0x2 SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 SLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 PUSH2 0x265 SWAP1 DUP6 PUSH2 0x54A JUMP JUMPDEST PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x569 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A206163636F756E74206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x191D59481C185E5B595B9D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x216 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x300 SWAP1 DUP3 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SLOAD PUSH2 0x327 SWAP1 DUP3 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0x334 DUP4 DUP3 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xDF20FD1E76BC69D672E4814FAFB2C449BBA3A5369D8359ADF9E05E6FDE87B056 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x39E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x216 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x456 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x45B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x216 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4F3 DUP2 PUSH2 0x596 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x50B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x525 JUMPI PUSH2 0x525 PUSH2 0x580 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x545 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x564 JUMPI PUSH2 0x564 PUSH2 0x580 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x57B JUMPI PUSH2 0x57B PUSH2 0x580 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 COINBASE 0x27 0xAE 0xA7 0x4E PUSH23 0x9E313C0091231421A3E78041EB55BD16292529F8BCC409 MLOAD PUSH2 0x6473 PUSH16 0x6C634300080300330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        981,
        5129
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "LT",
      "path": "4"
    },
    "9": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x59"
    },
    "12": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "13": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "SHR",
      "path": "4"
    },
    "19": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "DUP1",
      "path": "4"
    },
    "20": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x19165587"
    },
    "25": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "EQ",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA7"
    },
    "29": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "30": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "DUP1",
      "path": "4"
    },
    "31": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x3A98EF39"
    },
    "36": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "EQ",
      "path": "4"
    },
    "37": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC9"
    },
    "40": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "41": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "DUP1",
      "path": "4"
    },
    "42": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8B83209B"
    },
    "47": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "EQ",
      "path": "4"
    },
    "48": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xED"
    },
    "51": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "52": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "DUP1",
      "path": "4"
    },
    "53": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x9852595C"
    },
    "58": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "EQ",
      "path": "4"
    },
    "59": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x125"
    },
    "62": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "63": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "DUP1",
      "path": "4"
    },
    "64": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xCE7C2AC2"
    },
    "69": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "EQ",
      "path": "4"
    },
    "70": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15B"
    },
    "73": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "74": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "DUP1",
      "path": "4"
    },
    "75": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE33B7DE3"
    },
    "80": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "EQ",
      "path": "4"
    },
    "81": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x191"
    },
    "84": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "85": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA2"
    },
    "88": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "JUMP",
      "path": "4"
    },
    "89": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "90": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "91": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA2"
    },
    "94": {
      "fn": null,
      "offset": [
        981,
        5129
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "95": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2716,
        2756
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 0,
      "value": "0x6EF95F06320E7A25A04A175CA677B7052BDD97131872C2192525A629F51BE770"
    },
    "128": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121",
      "statement": 1
    },
    "129": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2716,
        2756
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "131": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2716,
        2756
      ],
      "op": "DUP1",
      "path": "4"
    },
    "132": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2716,
        2756
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "139": {
      "op": "SHL"
    },
    "140": {
      "op": "SUB"
    },
    "141": {
      "op": "SWAP1"
    },
    "142": {
      "op": "SWAP3"
    },
    "143": {
      "op": "AND"
    },
    "144": {
      "op": "DUP3"
    },
    "145": {
      "op": "MSTORE"
    },
    "146": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2746,
        2755
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "149": {
      "op": "DUP4"
    },
    "150": {
      "op": "ADD"
    },
    "151": {
      "op": "MSTORE"
    },
    "152": {
      "op": "ADD"
    },
    "153": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2716,
        2756
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "155": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2716,
        2756
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "156": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2716,
        2756
      ],
      "op": "DUP1",
      "path": "4"
    },
    "157": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2716,
        2756
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "158": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2716,
        2756
      ],
      "op": "SUB",
      "path": "4"
    },
    "159": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2716,
        2756
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "160": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2716,
        2756
      ],
      "op": "LOG1",
      "path": "4"
    },
    "161": {
      "offset": [
        981,
        5129
      ],
      "op": "STOP",
      "path": "4"
    },
    "162": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        981,
        5129
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "163": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        981,
        5129
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "165": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        981,
        5129
      ],
      "op": "DUP1",
      "path": "4"
    },
    "166": {
      "first_revert": true,
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        981,
        5129
      ],
      "op": "REVERT",
      "path": "4"
    },
    "167": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "168": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "169": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "DUP1",
      "path": "4"
    },
    "170": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "171": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB3"
    },
    "174": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "175": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "177": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "DUP1",
      "path": "4"
    },
    "178": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "REVERT",
      "path": "4"
    },
    "179": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "180": {
      "op": "POP"
    },
    "181": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7"
    },
    "184": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC2"
    },
    "187": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "188": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "190": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D7"
    },
    "193": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        3880,
        4478
      ],
      "op": "JUMP",
      "path": "4"
    },
    "194": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "195": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A6"
    },
    "198": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        3880,
        4478
      ],
      "op": "JUMP",
      "path": "4"
    },
    "199": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "200": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "STOP",
      "path": "4"
    },
    "201": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "202": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "203": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "DUP1",
      "path": "4"
    },
    "204": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "205": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD5"
    },
    "208": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "209": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "211": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "DUP1",
      "path": "4"
    },
    "212": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "REVERT",
      "path": "4"
    },
    "213": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "214": {
      "op": "POP"
    },
    "215": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2885,
        2892
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "217": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2911,
        2923
      ],
      "op": "SLOAD",
      "path": "4",
      "statement": 2
    },
    "218": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "219": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "221": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "222": {
      "op": "SWAP1"
    },
    "223": {
      "op": "DUP2"
    },
    "224": {
      "op": "MSTORE"
    },
    "225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "227": {
      "op": "ADD"
    },
    "228": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "229": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "231": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "232": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "DUP1",
      "path": "4"
    },
    "233": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "234": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "SUB",
      "path": "4"
    },
    "235": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "236": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2841,
        2930
      ],
      "op": "RETURN",
      "path": "4"
    },
    "237": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "238": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "239": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "DUP1",
      "path": "4"
    },
    "240": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "241": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF9"
    },
    "244": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "245": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "247": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "DUP1",
      "path": "4"
    },
    "248": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "REVERT",
      "path": "4"
    },
    "249": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "250": {
      "op": "POP"
    },
    "251": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10D"
    },
    "254": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x108"
    },
    "257": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "258": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "260": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4FA"
    },
    "263": {
      "fn": "PaymentSplitter.payee",
      "jump": "i",
      "offset": [
        3588,
        3686
      ],
      "op": "JUMP",
      "path": "4"
    },
    "264": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "265": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x37B"
    },
    "268": {
      "fn": "PaymentSplitter.payee",
      "jump": "i",
      "offset": [
        3588,
        3686
      ],
      "op": "JUMP",
      "path": "4"
    },
    "269": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "270": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "272": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "279": {
      "op": "SHL"
    },
    "280": {
      "op": "SUB"
    },
    "281": {
      "op": "SWAP1"
    },
    "282": {
      "op": "SWAP2"
    },
    "283": {
      "op": "AND"
    },
    "284": {
      "op": "DUP2"
    },
    "285": {
      "op": "MSTORE"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "288": {
      "op": "ADD"
    },
    "289": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE4"
    },
    "292": {
      "op": "JUMP"
    },
    "293": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "294": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "295": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "DUP1",
      "path": "4"
    },
    "296": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "297": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x131"
    },
    "300": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "301": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "303": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "DUP1",
      "path": "4"
    },
    "304": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "REVERT",
      "path": "4"
    },
    "305": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "306": {
      "op": "POP"
    },
    "307": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDA"
    },
    "310": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x140"
    },
    "313": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "314": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "316": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D7"
    },
    "319": {
      "fn": "PaymentSplitter.released",
      "jump": "i",
      "offset": [
        3395,
        3502
      ],
      "op": "JUMP",
      "path": "4"
    },
    "320": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "327": {
      "op": "SHL"
    },
    "328": {
      "op": "SUB"
    },
    "329": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3477,
        3495
      ],
      "op": "AND",
      "path": "4",
      "statement": 3
    },
    "330": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3451,
        3458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "332": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3477,
        3495
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "333": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3477,
        3495
      ],
      "op": "DUP2",
      "path": "4"
    },
    "334": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3477,
        3495
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "335": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3477,
        3486
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "337": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3477,
        3495
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "339": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3477,
        3495
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "340": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3477,
        3495
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "342": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3477,
        3495
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "343": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3477,
        3495
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "344": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3477,
        3495
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "345": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3477,
        3495
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "346": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3395,
        3502
      ],
      "op": "JUMP",
      "path": "4"
    },
    "347": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "348": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "349": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "DUP1",
      "path": "4"
    },
    "350": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "351": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x167"
    },
    "354": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "355": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "357": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "DUP1",
      "path": "4"
    },
    "358": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "REVERT",
      "path": "4"
    },
    "359": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "360": {
      "op": "POP"
    },
    "361": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDA"
    },
    "364": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x176"
    },
    "367": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "368": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "370": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D7"
    },
    "373": {
      "fn": "PaymentSplitter.shares",
      "jump": "i",
      "offset": [
        3198,
        3301
      ],
      "op": "JUMP",
      "path": "4"
    },
    "374": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "381": {
      "op": "SHL"
    },
    "382": {
      "op": "SUB"
    },
    "383": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3278,
        3294
      ],
      "op": "AND",
      "path": "4",
      "statement": 4
    },
    "384": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3252,
        3259
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "386": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3278,
        3294
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "387": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3278,
        3294
      ],
      "op": "DUP2",
      "path": "4"
    },
    "388": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3278,
        3294
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "389": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3278,
        3285
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "391": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3278,
        3294
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "393": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3278,
        3294
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "394": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3278,
        3294
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "396": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3278,
        3294
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "397": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3278,
        3294
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "398": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3278,
        3294
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "399": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3278,
        3294
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "400": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3198,
        3301
      ],
      "op": "JUMP",
      "path": "4"
    },
    "401": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3019,
        3112
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "402": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3019,
        3112
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "403": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3019,
        3112
      ],
      "op": "DUP1",
      "path": "4"
    },
    "404": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3019,
        3112
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "405": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3019,
        3112
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x19D"
    },
    "408": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3019,
        3112
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "409": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3019,
        3112
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "411": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3019,
        3112
      ],
      "op": "DUP1",
      "path": "4"
    },
    "412": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3019,
        3112
      ],
      "op": "REVERT",
      "path": "4"
    },
    "413": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3019,
        3112
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "414": {
      "op": "POP"
    },
    "415": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3091,
        3105
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 5,
      "value": "0x1"
    },
    "417": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3091,
        3105
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "418": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3019,
        3112
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDA"
    },
    "421": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3019,
        3112
      ],
      "op": "JUMP",
      "path": "4"
    },
    "422": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "429": {
      "op": "SHL"
    },
    "430": {
      "op": "SUB"
    },
    "431": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3955,
        3971
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 6
    },
    "432": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3955,
        3971
      ],
      "op": "AND",
      "path": "4"
    },
    "433": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3974,
        3975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "435": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3955,
        3971
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "436": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3955,
        3971
      ],
      "op": "DUP2",
      "path": "4"
    },
    "437": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3955,
        3971
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "438": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3955,
        3962
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "440": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3955,
        3971
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "442": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3955,
        3971
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "443": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3955,
        3971
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "445": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3955,
        3971
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "446": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3955,
        3971
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "447": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3955,
        3971
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "448": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21F"
    },
    "451": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "452": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "454": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "455": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "459": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "461": {
      "op": "SHL"
    },
    "462": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "DUP2",
      "path": "4"
    },
    "463": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "466": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "468": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "DUP3",
      "path": "4"
    },
    "469": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "ADD",
      "path": "4"
    },
    "470": {
      "op": "MSTORE"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "475": {
      "op": "DUP3"
    },
    "476": {
      "op": "ADD"
    },
    "477": {
      "op": "MSTORE"
    },
    "478": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A206163636F756E7420686173206E6F20"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "513": {
      "op": "DUP3"
    },
    "514": {
      "op": "ADD"
    },
    "515": {
      "op": "MSTORE"
    },
    "516": {
      "op": "PUSH6",
      "value": "0x736861726573"
    },
    "523": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "525": {
      "op": "SHL"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "528": {
      "op": "DUP3"
    },
    "529": {
      "op": "ADD"
    },
    "530": {
      "op": "MSTORE"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "533": {
      "op": "ADD"
    },
    "534": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "535": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "537": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "538": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "DUP1",
      "path": "4"
    },
    "539": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "540": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "SUB",
      "path": "4"
    },
    "541": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "542": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "543": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3947,
        4018
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "544": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4029,
        4050
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "546": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4077,
        4091
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "548": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4077,
        4091
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "549": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4053,
        4074
      ],
      "op": "SELFBALANCE",
      "path": "4"
    },
    "550": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4053,
        4091
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22F"
    },
    "553": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4053,
        4091
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "554": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4053,
        4091
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "555": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4053,
        4091
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x512"
    },
    "558": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        4053,
        4091
      ],
      "op": "JUMP",
      "path": "4"
    },
    "559": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4053,
        4091
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "566": {
      "op": "SHL"
    },
    "567": {
      "op": "SUB"
    },
    "568": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4187
      ],
      "op": "DUP4",
      "path": "4"
    },
    "569": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4187
      ],
      "op": "AND",
      "path": "4"
    },
    "570": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4101,
        4116
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "572": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4187
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "573": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4187
      ],
      "op": "DUP2",
      "path": "4"
    },
    "574": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4187
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "575": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4178
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "577": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4187
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "579": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4187
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "580": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4187
      ],
      "op": "DUP2",
      "path": "4"
    },
    "581": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4187
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "582": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4187
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "584": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4187
      ],
      "op": "DUP1",
      "path": "4"
    },
    "585": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4187
      ],
      "op": "DUP4",
      "path": "4"
    },
    "586": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4187
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "587": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4169,
        4187
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "588": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4154,
        4166
      ],
      "op": "DUP4",
      "path": "4"
    },
    "589": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4154,
        4166
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "590": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4135,
        4142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "592": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4135,
        4151
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "593": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4135,
        4151
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "594": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4135,
        4151
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "595": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4135,
        4151
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "596": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4135,
        4151
      ],
      "op": "DUP4",
      "path": "4"
    },
    "597": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4135,
        4151
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "598": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4135,
        4151
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "599": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4029,
        4091
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "600": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4029,
        4091
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "601": {
      "op": "POP"
    },
    "602": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4101,
        4116
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "603": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4101,
        4116
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "604": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4119,
        4151
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x265"
    },
    "607": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4119,
        4151
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "608": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4029,
        4091
      ],
      "op": "DUP6",
      "path": "4"
    },
    "609": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4119,
        4151
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x54A"
    },
    "612": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        4119,
        4151
      ],
      "op": "JUMP",
      "path": "4"
    },
    "613": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4119,
        4151
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "614": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4119,
        4166
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x26F"
    },
    "617": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4119,
        4166
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "618": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4119,
        4166
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "619": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4119,
        4166
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x52A"
    },
    "622": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        4119,
        4166
      ],
      "op": "JUMP",
      "path": "4"
    },
    "623": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4119,
        4166
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "624": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4119,
        4187
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x279"
    },
    "627": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4119,
        4187
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "628": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4119,
        4187
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "629": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4119,
        4187
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x569"
    },
    "632": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        4119,
        4187
      ],
      "op": "JUMP",
      "path": "4"
    },
    "633": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4119,
        4187
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "634": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4101,
        4187
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "635": {
      "op": "POP"
    },
    "636": {
      "branch": 15,
      "fn": "PaymentSplitter.release",
      "offset": [
        4206,
        4218
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 7
    },
    "637": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4198,
        4266
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DC"
    },
    "640": {
      "branch": 15,
      "fn": "PaymentSplitter.release",
      "offset": [
        4198,
        4266
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "641": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4198,
        4266
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "643": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4198,
        4266
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "650": {
      "op": "SHL"
    },
    "651": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4198,
        4266
      ],
      "op": "DUP2",
      "path": "4"
    },
    "652": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4198,
        4266
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "655": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4198,
        4266
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "657": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4198,
        4266
      ],
      "op": "DUP3",
      "path": "4"
    },
    "658": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4198,
        4266
      ],
      "op": "ADD",
      "path": "4"
    },
    "659": {
      "op": "MSTORE"
    },
    "660": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "664": {
      "op": "DUP3"
    },
    "665": {
      "op": "ADD"
    },
    "666": {
      "op": "MSTORE"
    },
    "667": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A206163636F756E74206973206E6F7420"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "702": {
      "op": "DUP3"
    },
    "703": {
      "op": "ADD"
    },
    "704": {
      "op": "MSTORE"
    },
    "705": {
      "op": "PUSH11",
      "value": "0x191D59481C185E5B595B9D"
    },
    "717": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "719": {
      "op": "SHL"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "722": {
      "op": "DUP3"
    },
    "723": {
      "op": "ADD"
    },
    "724": {
      "op": "MSTORE"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "727": {
      "op": "ADD"
    },
    "728": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4198,
        4266
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x216"
    },
    "731": {
      "op": "JUMP"
    },
    "732": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4198,
        4266
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "739": {
      "op": "SHL"
    },
    "740": {
      "op": "SUB"
    },
    "741": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4316
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 8
    },
    "742": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4316
      ],
      "op": "AND",
      "path": "4"
    },
    "743": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "745": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4316
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "746": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4316
      ],
      "op": "DUP2",
      "path": "4"
    },
    "747": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4316
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "748": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4307
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "750": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "752": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4316
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "753": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "755": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4316
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "756": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4316
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "757": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4316
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "758": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4326
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x300"
    },
    "761": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4326
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "762": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4319,
        4326
      ],
      "op": "DUP3",
      "path": "4"
    },
    "763": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4319,
        4326
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "764": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4326
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x512"
    },
    "767": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        4298,
        4326
      ],
      "op": "JUMP",
      "path": "4"
    },
    "768": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4298,
        4326
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "775": {
      "op": "SHL"
    },
    "776": {
      "op": "SUB"
    },
    "777": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4277,
        4295
      ],
      "op": "DUP5",
      "path": "4"
    },
    "778": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4277,
        4295
      ],
      "op": "AND",
      "path": "4"
    },
    "779": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4277,
        4295
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "781": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4277,
        4295
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "782": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4277,
        4295
      ],
      "op": "DUP2",
      "path": "4"
    },
    "783": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4277,
        4295
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "784": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4277,
        4286
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "786": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4277,
        4295
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "788": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4277,
        4295
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "789": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4277,
        4295
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "791": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4277,
        4295
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "792": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4277,
        4295
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "793": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4277,
        4326
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "794": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4353,
        4367
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x1"
    },
    "796": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4353,
        4367
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "797": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4353,
        4377
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x327"
    },
    "800": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4353,
        4377
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "801": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4370,
        4377
      ],
      "op": "DUP3",
      "path": "4"
    },
    "802": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4370,
        4377
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "803": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4353,
        4377
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x512"
    },
    "806": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        4353,
        4377
      ],
      "op": "JUMP",
      "path": "4"
    },
    "807": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4353,
        4377
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "808": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4336,
        4350
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "810": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4336,
        4377
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "811": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4388,
        4423
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 10,
      "value": "0x334"
    },
    "814": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4406,
        4413
      ],
      "op": "DUP4",
      "path": "4"
    },
    "815": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4415,
        4422
      ],
      "op": "DUP3",
      "path": "4"
    },
    "816": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4388,
        4405
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3B9"
    },
    "819": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        4388,
        4423
      ],
      "op": "JUMP",
      "path": "4"
    },
    "820": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4388,
        4423
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "821": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4438,
        4471
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 11,
      "value": "0x40"
    },
    "823": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4438,
        4471
      ],
      "op": "DUP1",
      "path": "4"
    },
    "824": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4438,
        4471
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "831": {
      "op": "SHL"
    },
    "832": {
      "op": "SUB"
    },
    "833": {
      "op": "DUP6"
    },
    "834": {
      "op": "AND"
    },
    "835": {
      "op": "DUP2"
    },
    "836": {
      "op": "MSTORE"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "839": {
      "op": "DUP2"
    },
    "840": {
      "op": "ADD"
    },
    "841": {
      "op": "DUP4"
    },
    "842": {
      "op": "SWAP1"
    },
    "843": {
      "op": "MSTORE"
    },
    "844": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4438,
        4471
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDF20FD1E76BC69D672E4814FAFB2C449BBA3A5369D8359ADF9E05E6FDE87B056"
    },
    "877": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4438,
        4471
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "878": {
      "op": "ADD"
    },
    "879": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4438,
        4471
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "881": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4438,
        4471
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "882": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4438,
        4471
      ],
      "op": "DUP1",
      "path": "4"
    },
    "883": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4438,
        4471
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "884": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4438,
        4471
      ],
      "op": "SUB",
      "path": "4"
    },
    "885": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4438,
        4471
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "886": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4438,
        4471
      ],
      "op": "LOG1",
      "path": "4"
    },
    "887": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "POP",
      "path": "4"
    },
    "888": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "POP",
      "path": "4"
    },
    "889": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3880,
        4478
      ],
      "op": "POP",
      "path": "4"
    },
    "890": {
      "fn": "PaymentSplitter.release",
      "jump": "o",
      "offset": [
        3880,
        4478
      ],
      "op": "JUMP",
      "path": "4"
    },
    "891": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "892": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3639,
        3646
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "894": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3672
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 12,
      "value": "0x4"
    },
    "896": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3673,
        3678
      ],
      "op": "DUP3",
      "path": "4"
    },
    "897": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "DUP2",
      "path": "4"
    },
    "898": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "899": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "DUP2",
      "path": "4"
    },
    "900": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "LT",
      "path": "4"
    },
    "901": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x39E"
    },
    "904": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "905": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "910": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "912": {
      "op": "SHL"
    },
    "913": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "915": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "916": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x32"
    },
    "918": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "920": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "921": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "923": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "925": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "REVERT",
      "path": "4"
    },
    "926": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "927": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "929": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "930": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "DUP3",
      "path": "4"
    },
    "931": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "932": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "934": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "935": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "936": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "937": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "ADD",
      "path": "4"
    },
    "938": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "945": {
      "op": "SHL"
    },
    "946": {
      "op": "SUB"
    },
    "947": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "AND",
      "path": "4"
    },
    "948": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3665,
        3679
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "949": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3588,
        3686
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "950": {
      "op": "POP"
    },
    "951": {
      "op": "POP"
    },
    "952": {
      "fn": "PaymentSplitter.payee",
      "jump": "o",
      "offset": [
        3588,
        3686
      ],
      "op": "JUMP",
      "path": "4"
    },
    "953": {
      "fn": "Address.sendValue",
      "offset": [
        2048,
        2439
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "954": {
      "fn": "Address.sendValue",
      "offset": [
        2162,
        2168
      ],
      "op": "DUP1",
      "path": "119",
      "statement": 13
    },
    "955": {
      "fn": "Address.sendValue",
      "offset": [
        2137,
        2158
      ],
      "op": "SELFBALANCE",
      "path": "119"
    },
    "956": {
      "fn": "Address.sendValue",
      "offset": [
        2137,
        2168
      ],
      "op": "LT",
      "path": "119"
    },
    "957": {
      "branch": 16,
      "fn": "Address.sendValue",
      "offset": [
        2137,
        2168
      ],
      "op": "ISZERO",
      "path": "119"
    },
    "958": {
      "fn": "Address.sendValue",
      "offset": [
        2129,
        2202
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x409"
    },
    "961": {
      "branch": 16,
      "fn": "Address.sendValue",
      "offset": [
        2129,
        2202
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "962": {
      "fn": "Address.sendValue",
      "offset": [
        2129,
        2202
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "964": {
      "fn": "Address.sendValue",
      "offset": [
        2129,
        2202
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "965": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "969": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "971": {
      "op": "SHL"
    },
    "972": {
      "fn": "Address.sendValue",
      "offset": [
        2129,
        2202
      ],
      "op": "DUP2",
      "path": "119"
    },
    "973": {
      "fn": "Address.sendValue",
      "offset": [
        2129,
        2202
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "976": {
      "fn": "Address.sendValue",
      "offset": [
        2129,
        2202
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x4"
    },
    "978": {
      "fn": "Address.sendValue",
      "offset": [
        2129,
        2202
      ],
      "op": "DUP3",
      "path": "119"
    },
    "979": {
      "fn": "Address.sendValue",
      "offset": [
        2129,
        2202
      ],
      "op": "ADD",
      "path": "119"
    },
    "980": {
      "op": "MSTORE"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "985": {
      "op": "DUP3"
    },
    "986": {
      "op": "ADD"
    },
    "987": {
      "op": "MSTORE"
    },
    "988": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E6365000000"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1023": {
      "op": "DUP3"
    },
    "1024": {
      "op": "ADD"
    },
    "1025": {
      "op": "MSTORE"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1028": {
      "op": "ADD"
    },
    "1029": {
      "fn": "Address.sendValue",
      "offset": [
        2129,
        2202
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x216"
    },
    "1032": {
      "op": "JUMP"
    },
    "1033": {
      "fn": "Address.sendValue",
      "offset": [
        2129,
        2202
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1034": {
      "fn": "Address.sendValue",
      "offset": [
        2291,
        2303
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "1036": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2318
      ],
      "op": "DUP3",
      "path": "119"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1043": {
      "op": "SHL"
    },
    "1044": {
      "op": "SUB"
    },
    "1045": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2323
      ],
      "op": "AND",
      "path": "119"
    },
    "1046": {
      "fn": "Address.sendValue",
      "offset": [
        2332,
        2338
      ],
      "op": "DUP3",
      "path": "119"
    },
    "1047": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "1049": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "1050": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "1052": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "1054": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "1055": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "DUP1",
      "path": "119"
    },
    "1056": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "DUP4",
      "path": "119"
    },
    "1057": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "SUB",
      "path": "119"
    },
    "1058": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "DUP2",
      "path": "119"
    },
    "1059": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "DUP6",
      "path": "119"
    },
    "1060": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "DUP8",
      "path": "119"
    },
    "1061": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "GAS",
      "path": "119"
    },
    "1062": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "CALL",
      "path": "119"
    },
    "1063": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "SWAP3",
      "path": "119"
    },
    "1064": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "POP",
      "path": "119"
    },
    "1065": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "POP",
      "path": "119"
    },
    "1066": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "POP",
      "path": "119"
    },
    "1067": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "1068": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "DUP1",
      "path": "119"
    },
    "1069": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "1071": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "DUP2",
      "path": "119"
    },
    "1072": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "EQ",
      "path": "119"
    },
    "1073": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x456"
    },
    "1076": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "1077": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "1079": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "1080": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "1081": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "POP",
      "path": "119"
    },
    "1082": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x1F"
    },
    "1084": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "NOT",
      "path": "119"
    },
    "1085": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x3F"
    },
    "1087": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "1088": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "ADD",
      "path": "119"
    },
    "1089": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "AND",
      "path": "119"
    },
    "1090": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "DUP3",
      "path": "119"
    },
    "1091": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "ADD",
      "path": "119"
    },
    "1092": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "1094": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "1095": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "1096": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "DUP3",
      "path": "119"
    },
    "1097": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "1098": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "1099": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "1101": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x20"
    },
    "1103": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "DUP5",
      "path": "119"
    },
    "1104": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "ADD",
      "path": "119"
    },
    "1105": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "RETURNDATACOPY",
      "path": "119"
    },
    "1106": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x45B"
    },
    "1109": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "JUMP",
      "path": "119"
    },
    "1110": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1111": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x60"
    },
    "1113": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "1114": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "POP",
      "path": "119"
    },
    "1115": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1116": {
      "fn": "Address.sendValue",
      "offset": [
        2309,
        2344
      ],
      "op": "POP",
      "path": "119"
    },
    "1117": {
      "fn": "Address.sendValue",
      "offset": [
        2290,
        2344
      ],
      "op": "POP",
      "path": "119"
    },
    "1118": {
      "fn": "Address.sendValue",
      "offset": [
        2290,
        2344
      ],
      "op": "SWAP1",
      "path": "119"
    },
    "1119": {
      "fn": "Address.sendValue",
      "offset": [
        2290,
        2344
      ],
      "op": "POP",
      "path": "119"
    },
    "1120": {
      "branch": 17,
      "fn": "Address.sendValue",
      "offset": [
        2362,
        2369
      ],
      "op": "DUP1",
      "path": "119",
      "statement": 14
    },
    "1121": {
      "fn": "Address.sendValue",
      "offset": [
        2354,
        2432
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x4D2"
    },
    "1124": {
      "branch": 17,
      "fn": "Address.sendValue",
      "offset": [
        2354,
        2432
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "1125": {
      "fn": "Address.sendValue",
      "offset": [
        2354,
        2432
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "1127": {
      "fn": "Address.sendValue",
      "offset": [
        2354,
        2432
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "1128": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1134": {
      "op": "SHL"
    },
    "1135": {
      "fn": "Address.sendValue",
      "offset": [
        2354,
        2432
      ],
      "op": "DUP2",
      "path": "119"
    },
    "1136": {
      "fn": "Address.sendValue",
      "offset": [
        2354,
        2432
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1139": {
      "fn": "Address.sendValue",
      "offset": [
        2354,
        2432
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x4"
    },
    "1141": {
      "fn": "Address.sendValue",
      "offset": [
        2354,
        2432
      ],
      "op": "DUP3",
      "path": "119"
    },
    "1142": {
      "fn": "Address.sendValue",
      "offset": [
        2354,
        2432
      ],
      "op": "ADD",
      "path": "119"
    },
    "1143": {
      "op": "MSTORE"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH32",
      "value": "0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1186": {
      "op": "DUP3"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "op": "MSTORE"
    },
    "1189": {
      "op": "PUSH32",
      "value": "0x6563697069656E74206D61792068617665207265766572746564000000000000"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1224": {
      "op": "DUP3"
    },
    "1225": {
      "op": "ADD"
    },
    "1226": {
      "op": "MSTORE"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1229": {
      "op": "ADD"
    },
    "1230": {
      "fn": "Address.sendValue",
      "offset": [
        2354,
        2432
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x216"
    },
    "1233": {
      "op": "JUMP"
    },
    "1234": {
      "fn": "Address.sendValue",
      "offset": [
        2354,
        2432
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1235": {
      "fn": "Address.sendValue",
      "offset": [
        2048,
        2439
      ],
      "op": "POP",
      "path": "119"
    },
    "1236": {
      "fn": "Address.sendValue",
      "offset": [
        2048,
        2439
      ],
      "op": "POP",
      "path": "119"
    },
    "1237": {
      "fn": "Address.sendValue",
      "offset": [
        2048,
        2439
      ],
      "op": "POP",
      "path": "119"
    },
    "1238": {
      "fn": "Address.sendValue",
      "jump": "o",
      "offset": [
        2048,
        2439
      ],
      "op": "JUMP",
      "path": "119"
    },
    "1239": {
      "op": "JUMPDEST"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1244": {
      "op": "DUP3"
    },
    "1245": {
      "op": "DUP5"
    },
    "1246": {
      "op": "SUB"
    },
    "1247": {
      "op": "SLT"
    },
    "1248": {
      "op": "ISZERO"
    },
    "1249": {
      "op": "PUSH2",
      "value": "0x4E8"
    },
    "1252": {
      "op": "JUMPI"
    },
    "1253": {
      "op": "DUP1"
    },
    "1254": {
      "op": "DUP2"
    },
    "1255": {
      "op": "REVERT"
    },
    "1256": {
      "op": "JUMPDEST"
    },
    "1257": {
      "op": "DUP2"
    },
    "1258": {
      "op": "CALLDATALOAD"
    },
    "1259": {
      "op": "PUSH2",
      "value": "0x4F3"
    },
    "1262": {
      "op": "DUP2"
    },
    "1263": {
      "op": "PUSH2",
      "value": "0x596"
    },
    "1266": {
      "jump": "i",
      "op": "JUMP"
    },
    "1267": {
      "op": "JUMPDEST"
    },
    "1268": {
      "op": "SWAP4"
    },
    "1269": {
      "op": "SWAP3"
    },
    "1270": {
      "op": "POP"
    },
    "1271": {
      "op": "POP"
    },
    "1272": {
      "op": "POP"
    },
    "1273": {
      "jump": "o",
      "op": "JUMP"
    },
    "1274": {
      "op": "JUMPDEST"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1279": {
      "op": "DUP3"
    },
    "1280": {
      "op": "DUP5"
    },
    "1281": {
      "op": "SUB"
    },
    "1282": {
      "op": "SLT"
    },
    "1283": {
      "op": "ISZERO"
    },
    "1284": {
      "op": "PUSH2",
      "value": "0x50B"
    },
    "1287": {
      "op": "JUMPI"
    },
    "1288": {
      "op": "DUP1"
    },
    "1289": {
      "op": "DUP2"
    },
    "1290": {
      "op": "REVERT"
    },
    "1291": {
      "op": "JUMPDEST"
    },
    "1292": {
      "op": "POP"
    },
    "1293": {
      "op": "CALLDATALOAD"
    },
    "1294": {
      "op": "SWAP2"
    },
    "1295": {
      "op": "SWAP1"
    },
    "1296": {
      "op": "POP"
    },
    "1297": {
      "jump": "o",
      "op": "JUMP"
    },
    "1298": {
      "op": "JUMPDEST"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1301": {
      "op": "DUP3"
    },
    "1302": {
      "op": "NOT"
    },
    "1303": {
      "op": "DUP3"
    },
    "1304": {
      "op": "GT"
    },
    "1305": {
      "op": "ISZERO"
    },
    "1306": {
      "op": "PUSH2",
      "value": "0x525"
    },
    "1309": {
      "op": "JUMPI"
    },
    "1310": {
      "op": "PUSH2",
      "value": "0x525"
    },
    "1313": {
      "op": "PUSH2",
      "value": "0x580"
    },
    "1316": {
      "jump": "i",
      "op": "JUMP"
    },
    "1317": {
      "op": "JUMPDEST"
    },
    "1318": {
      "op": "POP"
    },
    "1319": {
      "op": "ADD"
    },
    "1320": {
      "op": "SWAP1"
    },
    "1321": {
      "jump": "o",
      "op": "JUMP"
    },
    "1322": {
      "op": "JUMPDEST"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1325": {
      "op": "DUP3"
    },
    "1326": {
      "op": "PUSH2",
      "value": "0x545"
    },
    "1329": {
      "op": "JUMPI"
    },
    "1330": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1337": {
      "op": "SHL"
    },
    "1338": {
      "op": "DUP2"
    },
    "1339": {
      "op": "MSTORE"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1344": {
      "op": "MSTORE"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1347": {
      "op": "DUP2"
    },
    "1348": {
      "op": "REVERT"
    },
    "1349": {
      "op": "JUMPDEST"
    },
    "1350": {
      "op": "POP"
    },
    "1351": {
      "op": "DIV"
    },
    "1352": {
      "op": "SWAP1"
    },
    "1353": {
      "jump": "o",
      "op": "JUMP"
    },
    "1354": {
      "op": "JUMPDEST"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1357": {
      "op": "DUP2"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1360": {
      "op": "NOT"
    },
    "1361": {
      "op": "DIV"
    },
    "1362": {
      "op": "DUP4"
    },
    "1363": {
      "op": "GT"
    },
    "1364": {
      "op": "DUP3"
    },
    "1365": {
      "op": "ISZERO"
    },
    "1366": {
      "op": "ISZERO"
    },
    "1367": {
      "op": "AND"
    },
    "1368": {
      "op": "ISZERO"
    },
    "1369": {
      "op": "PUSH2",
      "value": "0x564"
    },
    "1372": {
      "op": "JUMPI"
    },
    "1373": {
      "op": "PUSH2",
      "value": "0x564"
    },
    "1376": {
      "op": "PUSH2",
      "value": "0x580"
    },
    "1379": {
      "jump": "i",
      "op": "JUMP"
    },
    "1380": {
      "op": "JUMPDEST"
    },
    "1381": {
      "op": "POP"
    },
    "1382": {
      "op": "MUL"
    },
    "1383": {
      "op": "SWAP1"
    },
    "1384": {
      "jump": "o",
      "op": "JUMP"
    },
    "1385": {
      "op": "JUMPDEST"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1388": {
      "op": "DUP3"
    },
    "1389": {
      "op": "DUP3"
    },
    "1390": {
      "op": "LT"
    },
    "1391": {
      "op": "ISZERO"
    },
    "1392": {
      "op": "PUSH2",
      "value": "0x57B"
    },
    "1395": {
      "op": "JUMPI"
    },
    "1396": {
      "op": "PUSH2",
      "value": "0x57B"
    },
    "1399": {
      "op": "PUSH2",
      "value": "0x580"
    },
    "1402": {
      "jump": "i",
      "op": "JUMP"
    },
    "1403": {
      "op": "JUMPDEST"
    },
    "1404": {
      "op": "POP"
    },
    "1405": {
      "op": "SUB"
    },
    "1406": {
      "op": "SWAP1"
    },
    "1407": {
      "jump": "o",
      "op": "JUMP"
    },
    "1408": {
      "op": "JUMPDEST"
    },
    "1409": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1419": {
      "op": "MSTORE"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1424": {
      "op": "MSTORE"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1429": {
      "op": "REVERT"
    },
    "1430": {
      "op": "JUMPDEST"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1437": {
      "op": "SHL"
    },
    "1438": {
      "op": "SUB"
    },
    "1439": {
      "op": "DUP2"
    },
    "1440": {
      "op": "AND"
    },
    "1441": {
      "op": "DUP2"
    },
    "1442": {
      "op": "EQ"
    },
    "1443": {
      "op": "PUSH2",
      "value": "0x5AB"
    },
    "1446": {
      "op": "JUMPI"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1449": {
      "op": "DUP1"
    },
    "1450": {
      "op": "REVERT"
    },
    "1451": {
      "op": "JUMPDEST"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "28d4a23b778840cf9c6c8009a7e0df1a4a972773",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Address.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/math/SafeMath.sol\";\n\n/**\n * @title PaymentSplitter\n * @dev This contract allows to split Ether payments among a group of accounts. The sender does not need to be aware\n * that the Ether will be split in this way, since it is handled transparently by the contract.\n *\n * The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each\n * account to a number of shares. Of all the Ether that this contract receives, each account will then be able to claim\n * an amount proportional to the percentage of total shares they were assigned.\n *\n * `PaymentSplitter` follows a _pull payment_ model. This means that payments are not automatically forwarded to the\n * accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the {release}\n * function.\n */\ncontract PaymentSplitter is Context {\n    event PayeeAdded(address account, uint256 shares);\n    event PaymentReleased(address to, uint256 amount);\n    event PaymentReceived(address from, uint256 amount);\n\n    uint256 private _totalShares;\n    uint256 private _totalReleased;\n\n    mapping(address => uint256) private _shares;\n    mapping(address => uint256) private _released;\n    address[] private _payees;\n\n    /**\n     * @dev Creates an instance of `PaymentSplitter` where each account in `payees` is assigned the number of shares at\n     * the matching position in the `shares` array.\n     *\n     * All addresses in `payees` must be non-zero. Both arrays must have the same non-zero length, and there must be no\n     * duplicates in `payees`.\n     */\n    constructor (address[] memory payees, uint256[] memory shares_) payable {\n        // solhint-disable-next-line max-line-length\n        require(payees.length == shares_.length, \"PaymentSplitter: payees and shares length mismatch\");\n        require(payees.length > 0, \"PaymentSplitter: no payees\");\n\n        for (uint256 i = 0; i < payees.length; i++) {\n            _addPayee(payees[i], shares_[i]);\n        }\n    }\n\n    /**\n     * @dev The Ether received will be logged with {PaymentReceived} events. Note that these events are not fully\n     * reliable: it's possible for a contract to receive Ether without triggering this function. This only affects the\n     * reliability of the events, and not the actual splitting of Ether.\n     *\n     * To learn more about this see the Solidity documentation for\n     * https://solidity.readthedocs.io/en/latest/contracts.html#fallback-function[fallback\n     * functions].\n     */\n    receive () external payable virtual {\n        emit PaymentReceived(_msgSender(), msg.value);\n    }\n\n    /**\n     * @dev Getter for the total shares held by payees.\n     */\n    function totalShares() public view returns (uint256) {\n        return _totalShares;\n    }\n\n    /**\n     * @dev Getter for the total amount of Ether already released.\n     */\n    function totalReleased() public view returns (uint256) {\n        return _totalReleased;\n    }\n\n    /**\n     * @dev Getter for the amount of shares held by an account.\n     */\n    function shares(address account) public view returns (uint256) {\n        return _shares[account];\n    }\n\n    /**\n     * @dev Getter for the amount of Ether already released to a payee.\n     */\n    function released(address account) public view returns (uint256) {\n        return _released[account];\n    }\n\n    /**\n     * @dev Getter for the address of the payee number `index`.\n     */\n    function payee(uint256 index) public view returns (address) {\n        return _payees[index];\n    }\n\n    /**\n     * @dev Triggers a transfer to `account` of the amount of Ether they are owed, according to their percentage of the\n     * total shares and their previous withdrawals.\n     */\n    function release(address payable account) public virtual {\n        require(_shares[account] > 0, \"PaymentSplitter: account has no shares\");\n\n        uint256 totalReceived = address(this).balance + _totalReleased;\n        uint256 payment = totalReceived * _shares[account] / _totalShares - _released[account];\n\n        require(payment != 0, \"PaymentSplitter: account is not due payment\");\n\n        _released[account] = _released[account] + payment;\n        _totalReleased = _totalReleased + payment;\n\n        Address.sendValue(account, payment);\n        emit PaymentReleased(account, payment);\n    }\n\n    /**\n     * @dev Add a new payee to the contract.\n     * @param account The address of the payee to add.\n     * @param shares_ The number of shares owned by the payee.\n     */\n    function _addPayee(address account, uint256 shares_) private {\n        require(account != address(0), \"PaymentSplitter: account is the zero address\");\n        require(shares_ > 0, \"PaymentSplitter: shares are 0\");\n        require(_shares[account] == 0, \"PaymentSplitter: account already has shares\");\n\n        _payees.push(account);\n        _shares[account] = shares_;\n        _totalShares = _totalShares + shares_;\n        emit PayeeAdded(account, shares_);\n    }\n}\n",
  "sourceMap": "981:4148:4:-:0;;;1740:413;;;;;;;;;;;;;;;;;;:::i;:::-;1900:7;:14;1883:6;:13;:31;1875:94;;;;-1:-1:-1;;;1875:94:4;;2932:2:144;1875:94:4;;;2914:21:144;2971:2;2951:18;;;2944:30;3010:34;2990:18;;;2983:62;-1:-1:-1;;;3061:18:144;;;3054:48;3119:19;;1875:94:4;;;;;;;;;2003:1;1987:6;:13;:17;1979:56;;;;-1:-1:-1;;;1979:56:4;;3763:2:144;1979:56:4;;;3745:21:144;3802:2;3782:18;;;3775:30;3841:28;3821:18;;;3814:56;3887:18;;1979:56:4;3735:176:144;1979:56:4;2051:9;2046:101;2070:6;:13;2066:1;:17;2046:101;;;2104:32;2114:6;2121:1;2114:9;;;;;;-1:-1:-1;;;2114:9:4;;;;;;;;;;;;;;;2125:7;2133:1;2125:10;;;;;;-1:-1:-1;;;2125:10:4;;;;;;;;;;;;;;;2104:9;;;:32;;:::i;:::-;2085:3;;;;:::i;:::-;;;;2046:101;;;;1740:413;;981:4148;;4663:464;-1:-1:-1;;;;;4742:21:4;;4734:78;;;;-1:-1:-1;;;4734:78:4;;2519:2:144;4734:78:4;;;2501:21:144;2558:2;2538:18;;;2531:30;2597:34;2577:18;;;2570:62;-1:-1:-1;;;2648:18:144;;;2641:42;2700:19;;4734:78:4;2491:234:144;4734:78:4;4840:1;4830:7;:11;4822:53;;;;-1:-1:-1;;;4822:53:4;;4118:2:144;4822:53:4;;;4100:21:144;4157:2;4137:18;;;4130:30;4196:31;4176:18;;;4169:59;4245:18;;4822:53:4;4090:179:144;4822:53:4;-1:-1:-1;;;;;4893:16:4;;;;;;:7;:16;;;;;;:21;4885:77;;;;-1:-1:-1;;;4885:77:4;;3351:2:144;4885:77:4;;;3333:21:144;3390:2;3370:18;;;3363:30;3429:34;3409:18;;;3402:62;-1:-1:-1;;;3480:18:144;;;3473:41;3531:19;;4885:77:4;3323:233:144;4885:77:4;4973:7;:21;;;;;;;;;;;;-1:-1:-1;;;;;;4973:21:4;-1:-1:-1;;;;;4973:21:4;;;;;;;;-1:-1:-1;5004:16:4;;;:7;4973:21;5004:16;;;;:26;;;5055:12;:22;;5004:26;;5055:22;:::i;:::-;5040:12;:37;5092:28;;;-1:-1:-1;;;;;2230:32:144;;2212:51;;2294:2;2279:18;;2272:34;;;5092:28:4;;2185:18:144;5092:28:4;;;;;;;4663:464;;:::o;14:690:144:-;;132:3;125:4;117:6;113:17;109:27;99:2;;154:5;147;140:20;99:2;187:6;181:13;213:4;237:60;253:43;293:2;253:43;:::i;:::-;237:60;:::i;:::-;319:3;343:2;338:3;331:15;371:2;366:3;362:12;355:19;;406:2;398:6;394:15;458:3;453:2;447;444:1;440:10;432:6;428:23;424:32;421:41;418:2;;;479:5;472;465:20;418:2;505:5;519:156;533:2;530:1;527:9;519:156;;;590:10;;578:23;;621:12;;;;653;;;;551:1;544:9;519:156;;;-1:-1:-1;693:5:144;;89:615;-1:-1:-1;;;;;;;89:615:144:o;709:1324::-;;;899:2;887:9;878:7;874:23;870:32;867:2;;;920:6;912;905:22;867:2;952:16;;-1:-1:-1;;;;;1017:14:144;;;1014:2;;;1049:6;1041;1034:22;1014:2;1092:6;1081:9;1077:22;1067:32;;1137:7;1130:4;1126:2;1122:13;1118:27;1108:2;;1164:6;1156;1149:22;1108:2;1198;1192:9;1220:4;1244:60;1260:43;1300:2;1260:43;:::i;1244:60::-;1326:3;1350:2;1345:3;1338:15;1378:2;1373:3;1369:12;1362:19;;1409:2;1405;1401:11;1457:7;1452:2;1446;1443:1;1439:10;1435:2;1431:19;1427:28;1424:41;1421:2;;;1483:6;1475;1468:22;1421:2;1510:6;1501:15;;1525:280;1539:2;1536:1;1533:9;1525:280;;;1597:10;;-1:-1:-1;;;;;1640:31:144;;1630:42;;1620:2;;1691:6;1683;1676:22;1620:2;1713:18;;1557:1;1550:9;;;;;1751:12;;;;1783;;1525:280;;;-1:-1:-1;1860:18:144;;;1854:25;1824:5;;-1:-1:-1;1854:25:144;;-1:-1:-1;;;1891:16:144;;;1888:2;;;1925:6;1917;1910:22;1888:2;;1953:74;2019:7;2008:8;1997:9;1993:24;1953:74;:::i;:::-;1943:84;;;857:1176;;;;;:::o;4274:275::-;4345:2;4339:9;4410:2;4391:13;;-1:-1:-1;;4387:27:144;4375:40;;-1:-1:-1;;;;;4430:34:144;;4466:22;;;4427:62;4424:2;;;4492:18;;:::i;:::-;4528:2;4521:22;4319:230;;-1:-1:-1;4319:230:144:o;4554:183::-;;-1:-1:-1;;;;;4636:30:144;;4633:2;;;4669:18;;:::i;:::-;-1:-1:-1;4714:1:144;4710:14;4726:4;4706:25;;4623:114::o;4742:128::-;;4813:1;4809:6;4806:1;4803:13;4800:2;;;4819:18;;:::i;:::-;-1:-1:-1;4855:9:144;;4790:80::o;4875:135::-;;-1:-1:-1;;4935:17:144;;4932:2;;;4955:18;;:::i;:::-;-1:-1:-1;5002:1:144;4991:13;;4922:88::o;5015:127::-;5076:10;5071:3;5067:20;5064:1;5057:31;5107:4;5104:1;5097:15;5131:4;5128:1;5121:15;5147:127;5208:10;5203:3;5199:20;5196:1;5189:31;5239:4;5236:1;5229:15;5263:4;5260:1;5253:15;5179:95;981:4148:4;;;;;;",
  "sourcePath": "contracts/openzeppelin-contracts/contracts/finance/PaymentSplitter.sol",
  "type": "contract"
}