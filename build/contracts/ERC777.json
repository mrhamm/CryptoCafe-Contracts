{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "defaultOperators_",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "114": "contracts/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
    "115": "contracts/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
    "116": "contracts/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
    "117": "contracts/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
    "119": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
    "121": "contracts/openzeppelin-contracts/contracts/utils/Context.sol",
    "137": "contracts/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
    "91": "contracts/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
    "exportedSymbols": {
      "Address": [
        14906
      ],
      "Context": [
        15014
      ],
      "ERC777": [
        14376
      ],
      "IERC1820Registry": [
        16502
      ],
      "IERC20": [
        10266
      ],
      "IERC777": [
        14535
      ],
      "IERC777Recipient": [
        14555
      ],
      "IERC777Sender": [
        14575
      ]
    },
    "id": 14377,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13243,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:114"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "file": "./IERC777.sol",
        "id": 13244,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14377,
        "sourceUnit": 14536,
        "src": "58:23:114",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
        "file": "./IERC777Recipient.sol",
        "id": 13245,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14377,
        "sourceUnit": 14556,
        "src": "82:32:114",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
        "file": "./IERC777Sender.sol",
        "id": 13246,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14377,
        "sourceUnit": 14576,
        "src": "115:29:114",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "../ERC20/IERC20.sol",
        "id": 13247,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14377,
        "sourceUnit": 10267,
        "src": "145:29:114",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 13248,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14377,
        "sourceUnit": 14907,
        "src": "175:33:114",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 13249,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14377,
        "sourceUnit": 15015,
        "src": "209:33:114",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
        "file": "../../utils/introspection/IERC1820Registry.sol",
        "id": 13250,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14377,
        "sourceUnit": 16503,
        "src": "243:56:114",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13252,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15014,
              "src": "1033:7:114"
            },
            "id": 13253,
            "nodeType": "InheritanceSpecifier",
            "src": "1033:7:114"
          },
          {
            "baseName": {
              "id": 13254,
              "name": "IERC777",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14535,
              "src": "1042:7:114"
            },
            "id": 13255,
            "nodeType": "InheritanceSpecifier",
            "src": "1042:7:114"
          },
          {
            "baseName": {
              "id": 13256,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10266,
              "src": "1051:6:114"
            },
            "id": 13257,
            "nodeType": "InheritanceSpecifier",
            "src": "1051:6:114"
          }
        ],
        "contractDependencies": [
          10266,
          14535,
          15014
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 13251,
          "nodeType": "StructuredDocumentation",
          "src": "301:712:114",
          "text": " @dev Implementation of the {IERC777} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n Support for ERC20 is included in this contract, as specified by the EIP: both\n the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n movements.\n Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n are no special restrictions in the amount of tokens that created, moved, or\n destroyed. This makes integration with ERC20 applications seamless."
        },
        "fullyImplemented": true,
        "id": 14376,
        "linearizedBaseContracts": [
          14376,
          10266,
          14535,
          15014
        ],
        "name": "ERC777",
        "nameLocation": "1023:6:114",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13260,
            "libraryName": {
              "id": 13258,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14906,
              "src": "1070:7:114"
            },
            "nodeType": "UsingForDirective",
            "src": "1064:26:114",
            "typeName": {
              "id": 13259,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1082:7:114",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": true,
            "id": 13266,
            "mutability": "constant",
            "name": "_ERC1820_REGISTRY",
            "nameLocation": "1131:17:114",
            "nodeType": "VariableDeclaration",
            "scope": 14376,
            "src": "1096:115:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1820Registry_$16502",
              "typeString": "contract IERC1820Registry"
            },
            "typeName": {
              "id": 13262,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13261,
                "name": "IERC1820Registry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16502,
                "src": "1096:16:114"
              },
              "referencedDeclaration": 16502,
              "src": "1096:16:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$16502",
                "typeString": "contract IERC1820Registry"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
                  "id": 13264,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1168:42:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 13263,
                "name": "IERC1820Registry",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 16502,
                "src": "1151:16:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$16502_$",
                  "typeString": "type(contract IERC1820Registry)"
                }
              },
              "id": 13265,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1151:60:114",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$16502",
                "typeString": "contract IERC1820Registry"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 13270,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1254:9:114",
            "nodeType": "VariableDeclaration",
            "scope": 14376,
            "src": "1218:45:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 13269,
              "keyType": {
                "id": 13267,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1226:7:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1218:27:114",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 13268,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1237:7:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13272,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1286:12:114",
            "nodeType": "VariableDeclaration",
            "scope": 14376,
            "src": "1270:28:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13271,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1270:7:114",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13274,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1320:5:114",
            "nodeType": "VariableDeclaration",
            "scope": 14376,
            "src": "1305:20:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 13273,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1305:6:114",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13276,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1346:7:114",
            "nodeType": "VariableDeclaration",
            "scope": 14376,
            "src": "1331:22:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 13275,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1331:6:114",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 13281,
            "mutability": "constant",
            "name": "_TOKENS_SENDER_INTERFACE_HASH",
            "nameLocation": "1385:29:114",
            "nodeType": "VariableDeclaration",
            "scope": 14376,
            "src": "1360:88:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 13277,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1360:7:114",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243373737546f6b656e7353656e646572",
                  "id": 13279,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1427:20:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  },
                  "value": "ERC777TokensSender"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  }
                ],
                "id": 13278,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1417:9:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 13280,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1417:31:114",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 13286,
            "mutability": "constant",
            "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
            "nameLocation": "1479:32:114",
            "nodeType": "VariableDeclaration",
            "scope": 14376,
            "src": "1454:94:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 13282,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1454:7:114",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243373737546f6b656e73526563697069656e74",
                  "id": 13284,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1524:23:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  },
                  "value": "ERC777TokensRecipient"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  }
                ],
                "id": 13283,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1514:9:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 13285,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1514:34:114",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13289,
            "mutability": "mutable",
            "name": "_defaultOperatorsArray",
            "nameLocation": "1665:22:114",
            "nodeType": "VariableDeclaration",
            "scope": 14376,
            "src": "1647:40:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 13287,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1647:7:114",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 13288,
              "nodeType": "ArrayTypeName",
              "src": "1647:9:114",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13293,
            "mutability": "mutable",
            "name": "_defaultOperators",
            "nameLocation": "1814:17:114",
            "nodeType": "VariableDeclaration",
            "scope": 14376,
            "src": "1781:50:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 13292,
              "keyType": {
                "id": 13290,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1789:7:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1781:24:114",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 13291,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1800:4:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13299,
            "mutability": "mutable",
            "name": "_operators",
            "nameLocation": "1974:10:114",
            "nodeType": "VariableDeclaration",
            "scope": 14376,
            "src": "1921:63:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 13298,
              "keyType": {
                "id": 13294,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1929:7:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1921:44:114",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 13297,
                "keyType": {
                  "id": 13295,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1948:7:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1940:24:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 13296,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1959:4:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13305,
            "mutability": "mutable",
            "name": "_revokedDefaultOperators",
            "nameLocation": "2043:24:114",
            "nodeType": "VariableDeclaration",
            "scope": 14376,
            "src": "1990:77:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 13304,
              "keyType": {
                "id": 13300,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1998:7:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1990:44:114",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 13303,
                "keyType": {
                  "id": 13301,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2017:7:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2009:24:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 13302,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2028:4:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13311,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "2156:11:114",
            "nodeType": "VariableDeclaration",
            "scope": 14376,
            "src": "2098:69:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 13310,
              "keyType": {
                "id": 13306,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2107:7:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2098:49:114",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 13309,
                "keyType": {
                  "id": 13307,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2127:7:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2118:28:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 13308,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2138:7:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 13387,
              "nodeType": "Block",
              "src": "2366:490:114",
              "statements": [
                {
                  "expression": {
                    "id": 13324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13322,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13274,
                      "src": "2376:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13323,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13314,
                      "src": "2384:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2376:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 13325,
                  "nodeType": "ExpressionStatement",
                  "src": "2376:13:114"
                },
                {
                  "expression": {
                    "id": 13328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13326,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13276,
                      "src": "2399:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13327,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13316,
                      "src": "2409:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2399:17:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 13329,
                  "nodeType": "ExpressionStatement",
                  "src": "2399:17:114"
                },
                {
                  "expression": {
                    "id": 13332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13330,
                      "name": "_defaultOperatorsArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13289,
                      "src": "2427:22:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13331,
                      "name": "defaultOperators_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13319,
                      "src": "2452:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2427:42:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 13333,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:42:114"
                },
                {
                  "body": {
                    "id": 13353,
                    "nodeType": "Block",
                    "src": "2534:71:114",
                    "statements": [
                      {
                        "expression": {
                          "id": 13351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 13345,
                              "name": "_defaultOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13293,
                              "src": "2548:17:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 13349,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 13346,
                                "name": "defaultOperators_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13319,
                                "src": "2566:17:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 13348,
                              "indexExpression": {
                                "id": 13347,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13335,
                                "src": "2584:1:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2566:20:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2548:39:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 13350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2590:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2548:46:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 13352,
                        "nodeType": "ExpressionStatement",
                        "src": "2548:46:114"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13338,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13335,
                      "src": "2499:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 13339,
                        "name": "defaultOperators_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13319,
                        "src": "2503:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 13340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2503:24:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2499:28:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13354,
                  "initializationExpression": {
                    "assignments": [
                      13335
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 13335,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2492:1:114",
                        "nodeType": "VariableDeclaration",
                        "scope": 13354,
                        "src": "2484:9:114",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13334,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2484:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 13337,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 13336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2496:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2484:13:114"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 13343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2529:3:114",
                      "subExpression": {
                        "id": 13342,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13335,
                        "src": "2529:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13344,
                    "nodeType": "ExpressionStatement",
                    "src": "2529:3:114"
                  },
                  "nodeType": "ForStatement",
                  "src": "2479:126:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13360,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2696:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$14376",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$14376",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 13359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2688:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13358,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2688:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2688:13:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "455243373737546f6b656e",
                            "id": 13363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2713:13:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                              "typeString": "literal_string \"ERC777Token\""
                            },
                            "value": "ERC777Token"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                              "typeString": "literal_string \"ERC777Token\""
                            }
                          ],
                          "id": 13362,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2703:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 13364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2703:24:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 13367,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2737:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$14376",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$14376",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 13366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2729:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13365,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2729:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2729:13:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13355,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13266,
                        "src": "2646:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$16502",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 13357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16441,
                      "src": "2646:41:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 13369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2646:97:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13370,
                  "nodeType": "ExpressionStatement",
                  "src": "2646:97:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13376,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2803:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$14376",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$14376",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 13375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2795:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13374,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2795:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2795:13:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "4552433230546f6b656e",
                            "id": 13379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2820:12:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                              "typeString": "literal_string \"ERC20Token\""
                            },
                            "value": "ERC20Token"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                              "typeString": "literal_string \"ERC20Token\""
                            }
                          ],
                          "id": 13378,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2810:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 13380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2810:23:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 13383,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2843:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$14376",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$14376",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 13382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2835:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13381,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2835:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2835:13:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13371,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13266,
                        "src": "2753:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$16502",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 13373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16441,
                      "src": "2753:41:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 13385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2753:96:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13386,
                  "nodeType": "ExpressionStatement",
                  "src": "2753:96:114"
                }
              ]
            },
            "documentation": {
              "id": 13312,
              "nodeType": "StructuredDocumentation",
              "src": "2174:65:114",
              "text": " @dev `defaultOperators` may be an empty array."
            },
            "id": 13388,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13314,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2279:5:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13388,
                  "src": "2265:19:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13313,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2265:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13316,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2308:7:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13388,
                  "src": "2294:21:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13315,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2294:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13319,
                  "mutability": "mutable",
                  "name": "defaultOperators_",
                  "nameLocation": "2342:17:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13388,
                  "src": "2325:34:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13317,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2325:7:114",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 13318,
                    "nodeType": "ArrayTypeName",
                    "src": "2325:9:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2255:110:114"
            },
            "returnParameters": {
              "id": 13321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2366:0:114"
            },
            "scope": 14376,
            "src": "2244:612:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14385
            ],
            "body": {
              "id": 13397,
              "nodeType": "Block",
              "src": "2979:29:114",
              "statements": [
                {
                  "expression": {
                    "id": 13395,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13274,
                    "src": "2996:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 13394,
                  "id": 13396,
                  "nodeType": "Return",
                  "src": "2989:12:114"
                }
              ]
            },
            "documentation": {
              "id": 13389,
              "nodeType": "StructuredDocumentation",
              "src": "2862:43:114",
              "text": " @dev See {IERC777-name}."
            },
            "functionSelector": "06fdde03",
            "id": 13398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2919:4:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13391,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2946:8:114"
            },
            "parameters": {
              "id": 13390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2923:2:114"
            },
            "returnParameters": {
              "id": 13394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13393,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13398,
                  "src": "2964:13:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13392,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2964:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2963:15:114"
            },
            "scope": 14376,
            "src": "2910:98:114",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14391
            ],
            "body": {
              "id": 13407,
              "nodeType": "Block",
              "src": "3135:31:114",
              "statements": [
                {
                  "expression": {
                    "id": 13405,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13276,
                    "src": "3152:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 13404,
                  "id": 13406,
                  "nodeType": "Return",
                  "src": "3145:14:114"
                }
              ]
            },
            "documentation": {
              "id": 13399,
              "nodeType": "StructuredDocumentation",
              "src": "3014:45:114",
              "text": " @dev See {IERC777-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 13408,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "3073:6:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13401,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3102:8:114"
            },
            "parameters": {
              "id": 13400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3079:2:114"
            },
            "returnParameters": {
              "id": 13404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13403,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13408,
                  "src": "3120:13:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13402,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3120:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3119:15:114"
            },
            "scope": 14376,
            "src": "3064:102:114",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13416,
              "nodeType": "Block",
              "src": "3406:26:114",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 13414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3423:2:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 13413,
                  "id": 13415,
                  "nodeType": "Return",
                  "src": "3416:9:114"
                }
              ]
            },
            "documentation": {
              "id": 13409,
              "nodeType": "StructuredDocumentation",
              "src": "3172:173:114",
              "text": " @dev See {ERC20-decimals}.\n Always returns 18, as per the\n [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
            },
            "functionSelector": "313ce567",
            "id": 13417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3359:8:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3367:2:114"
            },
            "returnParameters": {
              "id": 13413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13417,
                  "src": "3399:5:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 13411,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3399:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3398:7:114"
            },
            "scope": 14376,
            "src": "3350:82:114",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14397
            ],
            "body": {
              "id": 13426,
              "nodeType": "Block",
              "src": "3617:25:114",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 13424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3634:1:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 13423,
                  "id": 13425,
                  "nodeType": "Return",
                  "src": "3627:8:114"
                }
              ]
            },
            "documentation": {
              "id": 13418,
              "nodeType": "StructuredDocumentation",
              "src": "3438:104:114",
              "text": " @dev See {IERC777-granularity}.\n This implementation always returns `1`."
            },
            "functionSelector": "556f0dc7",
            "id": 13427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "granularity",
            "nameLocation": "3556:11:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13420,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3590:8:114"
            },
            "parameters": {
              "id": 13419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3567:2:114"
            },
            "returnParameters": {
              "id": 13423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13422,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13427,
                  "src": "3608:7:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3608:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3607:9:114"
            },
            "scope": 14376,
            "src": "3547:95:114",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10197,
              14403
            ],
            "body": {
              "id": 13438,
              "nodeType": "Block",
              "src": "3790:36:114",
              "statements": [
                {
                  "expression": {
                    "id": 13436,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13272,
                    "src": "3807:12:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13435,
                  "id": 13437,
                  "nodeType": "Return",
                  "src": "3800:19:114"
                }
              ]
            },
            "documentation": {
              "id": 13428,
              "nodeType": "StructuredDocumentation",
              "src": "3648:50:114",
              "text": " @dev See {IERC777-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 13439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3712:11:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13432,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 13430,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10266,
                  "src": "3755:6:114"
                },
                {
                  "id": 13431,
                  "name": "IERC777",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14535,
                  "src": "3763:7:114"
                }
              ],
              "src": "3746:25:114"
            },
            "parameters": {
              "id": 13429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3723:2:114"
            },
            "returnParameters": {
              "id": 13435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13434,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13439,
                  "src": "3781:7:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3781:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3780:9:114"
            },
            "scope": 14376,
            "src": "3703:123:114",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10205,
              14411
            ],
            "body": {
              "id": 13454,
              "nodeType": "Block",
              "src": "4030:46:114",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 13450,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13270,
                      "src": "4047:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 13452,
                    "indexExpression": {
                      "id": 13451,
                      "name": "tokenHolder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13442,
                      "src": "4057:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4047:22:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13449,
                  "id": 13453,
                  "nodeType": "Return",
                  "src": "4040:29:114"
                }
              ]
            },
            "documentation": {
              "id": 13440,
              "nodeType": "StructuredDocumentation",
              "src": "3832:89:114",
              "text": " @dev Returns the amount of tokens owned by an account (`tokenHolder`)."
            },
            "functionSelector": "70a08231",
            "id": 13455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3935:9:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13446,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 13444,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10266,
                  "src": "3995:6:114"
                },
                {
                  "id": 13445,
                  "name": "IERC777",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14535,
                  "src": "4003:7:114"
                }
              ],
              "src": "3986:25:114"
            },
            "parameters": {
              "id": 13443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13442,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "3953:11:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13455,
                  "src": "3945:19:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3945:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3944:21:114"
            },
            "returnParameters": {
              "id": 13449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13448,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13455,
                  "src": "4021:7:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4021:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4020:9:114"
            },
            "scope": 14376,
            "src": "3926:150:114",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14421
            ],
            "body": {
              "id": 13476,
              "nodeType": "Block",
              "src": "4299:71:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13467,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15002,
                          "src": "4315:10:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4315:12:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13469,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13458,
                        "src": "4329:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13470,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13460,
                        "src": "4340:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13471,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13462,
                        "src": "4348:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 13472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4354:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "74727565",
                        "id": 13473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4358:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13466,
                      "name": "_send",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14057,
                      "src": "4309:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 13474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4309:54:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13475,
                  "nodeType": "ExpressionStatement",
                  "src": "4309:54:114"
                }
              ]
            },
            "documentation": {
              "id": 13456,
              "nodeType": "StructuredDocumentation",
              "src": "4082:119:114",
              "text": " @dev See {IERC777-send}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
            },
            "functionSelector": "9bd9bbc6",
            "id": 13477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "send",
            "nameLocation": "4215:4:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13464,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4289:8:114"
            },
            "parameters": {
              "id": 13463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13458,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4228:9:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13477,
                  "src": "4220:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4220:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13460,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4247:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13477,
                  "src": "4239:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4239:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13462,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4268:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13477,
                  "src": "4255:17:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13461,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4255:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4219:54:114"
            },
            "returnParameters": {
              "id": 13465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4299:0:114"
            },
            "scope": 14376,
            "src": "4206:164:114",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10215
            ],
            "body": {
              "id": 13533,
              "nodeType": "Block",
              "src": "4693:347:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13489,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13480,
                          "src": "4711:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4732:1:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4724:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13490,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4724:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4724:10:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4711:23:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 13495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4736:38:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        },
                        "value": "ERC777: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        }
                      ],
                      "id": 13488,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4703:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4703:72:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13497,
                  "nodeType": "ExpressionStatement",
                  "src": "4703:72:114"
                },
                {
                  "assignments": [
                    13499
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13499,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "4794:4:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 13533,
                      "src": "4786:12:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 13498,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4786:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13502,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13500,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15002,
                      "src": "4801:10:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 13501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4801:12:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4786:27:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13504,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13499,
                        "src": "4842:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13505,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13499,
                        "src": "4848:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13506,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13480,
                        "src": "4854:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13507,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13482,
                        "src": "4865:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 13508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4873:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 13509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4877:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 13503,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14304,
                      "src": "4824:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 13510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4824:56:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13511,
                  "nodeType": "ExpressionStatement",
                  "src": "4824:56:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13513,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13499,
                        "src": "4897:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13514,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13499,
                        "src": "4903:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13515,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13480,
                        "src": "4909:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13516,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13482,
                        "src": "4920:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 13517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4928:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 13518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4932:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 13512,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14214,
                      "src": "4891:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 13519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4891:44:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13520,
                  "nodeType": "ExpressionStatement",
                  "src": "4891:44:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13522,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13499,
                        "src": "4966:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13523,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13499,
                        "src": "4972:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13524,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13480,
                        "src": "4978:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13525,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13482,
                        "src": "4989:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 13526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4997:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 13527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5001:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 13528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5005:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13521,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14362,
                      "src": "4946:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 13529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4946:65:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13530,
                  "nodeType": "ExpressionStatement",
                  "src": "4946:65:114"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 13531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5029:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 13487,
                  "id": 13532,
                  "nodeType": "Return",
                  "src": "5022:11:114"
                }
              ]
            },
            "documentation": {
              "id": 13478,
              "nodeType": "StructuredDocumentation",
              "src": "4376:220:114",
              "text": " @dev See {IERC20-transfer}.\n Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n interface if it is a contract.\n Also emits a {Sent} event."
            },
            "functionSelector": "a9059cbb",
            "id": 13534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "4610:8:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13484,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4669:8:114"
            },
            "parameters": {
              "id": 13483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13480,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4627:9:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13534,
                  "src": "4619:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4619:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13482,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4646:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13534,
                  "src": "4638:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4638:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4618:35:114"
            },
            "returnParameters": {
              "id": 13487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13486,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13534,
                  "src": "4687:4:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13485,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4687:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4686:6:114"
            },
            "scope": 14376,
            "src": "4601:439:114",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14429
            ],
            "body": {
              "id": 13551,
              "nodeType": "Block",
              "src": "5244:54:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13544,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15002,
                          "src": "5260:10:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5260:12:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13546,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13537,
                        "src": "5274:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13547,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13539,
                        "src": "5282:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 13548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5288:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 13543,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14149,
                      "src": "5254:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 13549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5254:37:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13550,
                  "nodeType": "ExpressionStatement",
                  "src": "5254:37:114"
                }
              ]
            },
            "documentation": {
              "id": 13535,
              "nodeType": "StructuredDocumentation",
              "src": "5046:119:114",
              "text": " @dev See {IERC777-burn}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
            },
            "functionSelector": "fe9d9303",
            "id": 13552,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "5179:4:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13541,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5234:8:114"
            },
            "parameters": {
              "id": 13540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13537,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5192:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13552,
                  "src": "5184:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5184:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13539,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5213:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13552,
                  "src": "5200:17:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13538,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5200:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5183:35:114"
            },
            "returnParameters": {
              "id": 13542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5244:0:114"
            },
            "scope": 14376,
            "src": "5170:128:114",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14439
            ],
            "body": {
              "id": 13585,
              "nodeType": "Block",
              "src": "5467:193:114",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 13583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 13577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13563,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13555,
                          "src": "5484:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 13564,
                          "name": "tokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13557,
                          "src": "5496:11:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5484:23:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 13575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 13566,
                                "name": "_defaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13293,
                                "src": "5524:17:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 13568,
                              "indexExpression": {
                                "id": 13567,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13555,
                                "src": "5542:8:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5524:27:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 13574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5555:48:114",
                              "subExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 13569,
                                    "name": "_revokedDefaultOperators",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13305,
                                    "src": "5556:24:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 13571,
                                  "indexExpression": {
                                    "id": 13570,
                                    "name": "tokenHolder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13557,
                                    "src": "5581:11:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5556:37:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 13573,
                                "indexExpression": {
                                  "id": 13572,
                                  "name": "operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13555,
                                  "src": "5594:8:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5556:47:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5524:79:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 13576,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5523:81:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5484:120:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 13578,
                          "name": "_operators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13299,
                          "src": "5620:10:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 13580,
                        "indexExpression": {
                          "id": 13579,
                          "name": "tokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13557,
                          "src": "5631:11:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5620:23:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 13582,
                      "indexExpression": {
                        "id": 13581,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13555,
                        "src": "5644:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5620:33:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5484:169:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13562,
                  "id": 13584,
                  "nodeType": "Return",
                  "src": "5477:176:114"
                }
              ]
            },
            "documentation": {
              "id": 13553,
              "nodeType": "StructuredDocumentation",
              "src": "5304:52:114",
              "text": " @dev See {IERC777-isOperatorFor}."
            },
            "functionSelector": "d95b6371",
            "id": 13586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorFor",
            "nameLocation": "5370:13:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13559,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5443:8:114"
            },
            "parameters": {
              "id": 13558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13555,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5392:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13586,
                  "src": "5384:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5384:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13557,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "5410:11:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13586,
                  "src": "5402:19:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5402:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5383:39:114"
            },
            "returnParameters": {
              "id": 13562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13561,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13586,
                  "src": "5461:4:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13560,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5461:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5460:6:114"
            },
            "scope": 14376,
            "src": "5361:299:114",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14445
            ],
            "body": {
              "id": 13630,
              "nodeType": "Block",
              "src": "5797:343:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 13594,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15002,
                            "src": "5815:10:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 13595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5815:12:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 13596,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13589,
                          "src": "5831:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5815:24:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617574686f72697a696e672073656c66206173206f70657261746f72",
                        "id": 13598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5841:38:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
                          "typeString": "literal_string \"ERC777: authorizing self as operator\""
                        },
                        "value": "ERC777: authorizing self as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
                          "typeString": "literal_string \"ERC777: authorizing self as operator\""
                        }
                      ],
                      "id": 13593,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5807:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5807:73:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13600,
                  "nodeType": "ExpressionStatement",
                  "src": "5807:73:114"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 13601,
                      "name": "_defaultOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13293,
                      "src": "5895:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 13603,
                    "indexExpression": {
                      "id": 13602,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13589,
                      "src": "5913:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5895:27:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 13622,
                    "nodeType": "Block",
                    "src": "6010:66:114",
                    "statements": [
                      {
                        "expression": {
                          "id": 13620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 13613,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13299,
                                "src": "6024:10:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 13617,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 13614,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15002,
                                  "src": "6035:10:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 13615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6035:12:114",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6024:24:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 13618,
                            "indexExpression": {
                              "id": 13616,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13589,
                              "src": "6049:8:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6024:34:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 13619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6061:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6024:41:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 13621,
                        "nodeType": "ExpressionStatement",
                        "src": "6024:41:114"
                      }
                    ]
                  },
                  "id": 13623,
                  "nodeType": "IfStatement",
                  "src": "5891:185:114",
                  "trueBody": {
                    "id": 13612,
                    "nodeType": "Block",
                    "src": "5924:80:114",
                    "statements": [
                      {
                        "expression": {
                          "id": 13610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5938:55:114",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 13604,
                                "name": "_revokedDefaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13305,
                                "src": "5945:24:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 13607,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 13605,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15002,
                                  "src": "5970:10:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 13606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5970:12:114",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5945:38:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 13609,
                            "indexExpression": {
                              "id": 13608,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13589,
                              "src": "5984:8:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5945:48:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13611,
                        "nodeType": "ExpressionStatement",
                        "src": "5938:55:114"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13625,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13589,
                        "src": "6110:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13626,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15002,
                          "src": "6120:10:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6120:12:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13624,
                      "name": "AuthorizedOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14528,
                      "src": "6091:18:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 13628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6091:42:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13629,
                  "nodeType": "EmitStatement",
                  "src": "6086:47:114"
                }
              ]
            },
            "documentation": {
              "id": 13587,
              "nodeType": "StructuredDocumentation",
              "src": "5666:56:114",
              "text": " @dev See {IERC777-authorizeOperator}."
            },
            "functionSelector": "959b8c3f",
            "id": 13631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authorizeOperator",
            "nameLocation": "5736:17:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13591,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5787:8:114"
            },
            "parameters": {
              "id": 13590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13589,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5762:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13631,
                  "src": "5754:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5754:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5753:18:114"
            },
            "returnParameters": {
              "id": 13592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5797:0:114"
            },
            "scope": 14376,
            "src": "5727:413:114",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14451
            ],
            "body": {
              "id": 13675,
              "nodeType": "Block",
              "src": "6271:337:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13639,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13634,
                          "src": "6289:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 13640,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15002,
                            "src": "6301:10:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 13641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6301:12:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6289:24:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207265766f6b696e672073656c66206173206f70657261746f72",
                        "id": 13643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6315:35:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
                          "typeString": "literal_string \"ERC777: revoking self as operator\""
                        },
                        "value": "ERC777: revoking self as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
                          "typeString": "literal_string \"ERC777: revoking self as operator\""
                        }
                      ],
                      "id": 13638,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6281:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6281:70:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13645,
                  "nodeType": "ExpressionStatement",
                  "src": "6281:70:114"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 13646,
                      "name": "_defaultOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13293,
                      "src": "6366:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 13648,
                    "indexExpression": {
                      "id": 13647,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13634,
                      "src": "6384:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6366:27:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 13667,
                    "nodeType": "Block",
                    "src": "6481:66:114",
                    "statements": [
                      {
                        "expression": {
                          "id": 13665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "6495:41:114",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 13659,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13299,
                                "src": "6502:10:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 13662,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 13660,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15002,
                                  "src": "6513:10:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 13661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6513:12:114",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6502:24:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 13664,
                            "indexExpression": {
                              "id": 13663,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13634,
                              "src": "6527:8:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6502:34:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13666,
                        "nodeType": "ExpressionStatement",
                        "src": "6495:41:114"
                      }
                    ]
                  },
                  "id": 13668,
                  "nodeType": "IfStatement",
                  "src": "6362:185:114",
                  "trueBody": {
                    "id": 13658,
                    "nodeType": "Block",
                    "src": "6395:80:114",
                    "statements": [
                      {
                        "expression": {
                          "id": 13656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 13649,
                                "name": "_revokedDefaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13305,
                                "src": "6409:24:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 13653,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 13650,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15002,
                                  "src": "6434:10:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 13651,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6434:12:114",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6409:38:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 13654,
                            "indexExpression": {
                              "id": 13652,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13634,
                              "src": "6448:8:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6409:48:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 13655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6460:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6409:55:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 13657,
                        "nodeType": "ExpressionStatement",
                        "src": "6409:55:114"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13670,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13634,
                        "src": "6578:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13671,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15002,
                          "src": "6588:10:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6588:12:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13669,
                      "name": "RevokedOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14534,
                      "src": "6562:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 13673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6562:39:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13674,
                  "nodeType": "EmitStatement",
                  "src": "6557:44:114"
                }
              ]
            },
            "documentation": {
              "id": 13632,
              "nodeType": "StructuredDocumentation",
              "src": "6146:53:114",
              "text": " @dev See {IERC777-revokeOperator}."
            },
            "functionSelector": "fad8b32a",
            "id": 13676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeOperator",
            "nameLocation": "6213:14:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13636,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6261:8:114"
            },
            "parameters": {
              "id": 13635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13634,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6236:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13676,
                  "src": "6228:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6228:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6227:18:114"
            },
            "returnParameters": {
              "id": 13637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6271:0:114"
            },
            "scope": 14376,
            "src": "6204:404:114",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14458
            ],
            "body": {
              "id": 13686,
              "nodeType": "Block",
              "src": "6758:46:114",
              "statements": [
                {
                  "expression": {
                    "id": 13684,
                    "name": "_defaultOperatorsArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13289,
                    "src": "6775:22:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 13683,
                  "id": 13685,
                  "nodeType": "Return",
                  "src": "6768:29:114"
                }
              ]
            },
            "documentation": {
              "id": 13677,
              "nodeType": "StructuredDocumentation",
              "src": "6614:55:114",
              "text": " @dev See {IERC777-defaultOperators}."
            },
            "functionSelector": "06e48538",
            "id": 13687,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "defaultOperators",
            "nameLocation": "6683:16:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13679,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6722:8:114"
            },
            "parameters": {
              "id": 13678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6699:2:114"
            },
            "returnParameters": {
              "id": 13683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13682,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13687,
                  "src": "6740:16:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13680,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6740:7:114",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 13681,
                    "nodeType": "ArrayTypeName",
                    "src": "6740:9:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6739:18:114"
            },
            "scope": 14376,
            "src": "6674:130:114",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14472
            ],
            "body": {
              "id": 13720,
              "nodeType": "Block",
              "src": "7140:177:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13704,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15002,
                              "src": "7172:10:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7172:12:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 13706,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13690,
                            "src": "7186:6:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13703,
                          "name": "isOperatorFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13586,
                          "src": "7158:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 13707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7158:35:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
                        "id": 13708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7195:46:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        },
                        "value": "ERC777: caller is not an operator for holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        }
                      ],
                      "id": 13702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7150:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7150:92:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13710,
                  "nodeType": "ExpressionStatement",
                  "src": "7150:92:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13712,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13690,
                        "src": "7258:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13713,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13692,
                        "src": "7266:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13714,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13694,
                        "src": "7277:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13715,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13696,
                        "src": "7285:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 13716,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13698,
                        "src": "7291:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 13717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7305:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13711,
                      "name": "_send",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14057,
                      "src": "7252:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 13718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7252:58:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13719,
                  "nodeType": "ExpressionStatement",
                  "src": "7252:58:114"
                }
              ]
            },
            "documentation": {
              "id": 13688,
              "nodeType": "StructuredDocumentation",
              "src": "6810:108:114",
              "text": " @dev See {IERC777-operatorSend}.\n Emits {Sent} and {IERC20-Transfer} events."
            },
            "functionSelector": "62ad1b83",
            "id": 13721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operatorSend",
            "nameLocation": "6932:12:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13700,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7127:8:114"
            },
            "parameters": {
              "id": 13699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13690,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6962:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13721,
                  "src": "6954:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6954:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13692,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6986:9:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13721,
                  "src": "6978:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6978:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13694,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7013:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13721,
                  "src": "7005:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7005:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13696,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7042:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13721,
                  "src": "7029:17:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13695,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7029:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13698,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "7069:12:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13721,
                  "src": "7056:25:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13697,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7056:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6944:143:114"
            },
            "returnParameters": {
              "id": 13701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7140:0:114"
            },
            "scope": 14376,
            "src": "6923:394:114",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14484
            ],
            "body": {
              "id": 13750,
              "nodeType": "Block",
              "src": "7563:162:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13736,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15002,
                              "src": "7595:10:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7595:12:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 13738,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13724,
                            "src": "7609:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13735,
                          "name": "isOperatorFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13586,
                          "src": "7581:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 13739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7581:36:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
                        "id": 13740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7619:46:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        },
                        "value": "ERC777: caller is not an operator for holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        }
                      ],
                      "id": 13734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7573:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7573:93:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13742,
                  "nodeType": "ExpressionStatement",
                  "src": "7573:93:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13744,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13724,
                        "src": "7682:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13745,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13726,
                        "src": "7691:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13746,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13728,
                        "src": "7699:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 13747,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13730,
                        "src": "7705:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 13743,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14149,
                      "src": "7676:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 13748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7676:42:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13749,
                  "nodeType": "ExpressionStatement",
                  "src": "7676:42:114"
                }
              ]
            },
            "documentation": {
              "id": 13722,
              "nodeType": "StructuredDocumentation",
              "src": "7323:110:114",
              "text": " @dev See {IERC777-operatorBurn}.\n Emits {Burned} and {IERC20-Transfer} events."
            },
            "functionSelector": "fc673c4f",
            "id": 13751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operatorBurn",
            "nameLocation": "7447:12:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13732,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7554:8:114"
            },
            "parameters": {
              "id": 13731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13724,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7468:7:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13751,
                  "src": "7460:15:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7460:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13726,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7485:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13751,
                  "src": "7477:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7477:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13728,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7506:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13751,
                  "src": "7493:17:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13727,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7493:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13730,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "7525:12:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13751,
                  "src": "7512:25:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13729,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7512:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7459:79:114"
            },
            "returnParameters": {
              "id": 13733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7563:0:114"
            },
            "scope": 14376,
            "src": "7438:287:114",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10225
            ],
            "body": {
              "id": 13768,
              "nodeType": "Block",
              "src": "8063:52:114",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 13762,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13311,
                        "src": "8080:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 13764,
                      "indexExpression": {
                        "id": 13763,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13754,
                        "src": "8092:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8080:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 13766,
                    "indexExpression": {
                      "id": 13765,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13756,
                      "src": "8100:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8080:28:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13761,
                  "id": 13767,
                  "nodeType": "Return",
                  "src": "8073:35:114"
                }
              ]
            },
            "documentation": {
              "id": 13752,
              "nodeType": "StructuredDocumentation",
              "src": "7731:228:114",
              "text": " @dev See {IERC20-allowance}.\n Note that operator and allowance concepts are orthogonal: operators may\n not have allowance, and accounts with allowance may not be operators\n themselves."
            },
            "functionSelector": "dd62ed3e",
            "id": 13769,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "7973:9:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13758,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8036:8:114"
            },
            "parameters": {
              "id": 13757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13754,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "7991:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13769,
                  "src": "7983:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7983:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13756,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8007:7:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13769,
                  "src": "7999:15:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7999:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7982:33:114"
            },
            "returnParameters": {
              "id": 13761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13760,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13769,
                  "src": "8054:7:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8054:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8053:9:114"
            },
            "scope": 14376,
            "src": "7964:151:114",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10235
            ],
            "body": {
              "id": 13793,
              "nodeType": "Block",
              "src": "8341:109:114",
              "statements": [
                {
                  "assignments": [
                    13781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13781,
                      "mutability": "mutable",
                      "name": "holder",
                      "nameLocation": "8359:6:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 13793,
                      "src": "8351:14:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 13780,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8351:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13784,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13782,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15002,
                      "src": "8368:10:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 13783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8368:12:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8351:29:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13786,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13781,
                        "src": "8399:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13787,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13772,
                        "src": "8407:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13788,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13774,
                        "src": "8416:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13785,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14259,
                      "src": "8390:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8390:32:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13790,
                  "nodeType": "ExpressionStatement",
                  "src": "8390:32:114"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 13791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8439:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 13779,
                  "id": 13792,
                  "nodeType": "Return",
                  "src": "8432:11:114"
                }
              ]
            },
            "documentation": {
              "id": 13770,
              "nodeType": "StructuredDocumentation",
              "src": "8121:127:114",
              "text": " @dev See {IERC20-approve}.\n Note that accounts cannot have allowance issued by their operators."
            },
            "functionSelector": "095ea7b3",
            "id": 13794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "8262:7:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13776,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8317:8:114"
            },
            "parameters": {
              "id": 13775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13772,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8278:7:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13794,
                  "src": "8270:15:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8270:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13774,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "8295:5:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13794,
                  "src": "8287:13:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8287:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8269:32:114"
            },
            "returnParameters": {
              "id": 13779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13778,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13794,
                  "src": "8335:4:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13777,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8335:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8334:6:114"
            },
            "scope": 14376,
            "src": "8253:197:114",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10247
            ],
            "body": {
              "id": 13885,
              "nodeType": "Block",
              "src": "8927:664:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13808,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13799,
                          "src": "8945:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8966:1:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8958:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13809,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8958:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8958:10:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8945:23:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 13814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8970:38:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        },
                        "value": "ERC777: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        }
                      ],
                      "id": 13807,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8937:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8937:72:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13816,
                  "nodeType": "ExpressionStatement",
                  "src": "8937:72:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13818,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13797,
                          "src": "9027:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9045:1:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9037:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13819,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9037:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9037:10:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9027:20:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 13824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9049:40:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
                          "typeString": "literal_string \"ERC777: transfer from the zero address\""
                        },
                        "value": "ERC777: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
                          "typeString": "literal_string \"ERC777: transfer from the zero address\""
                        }
                      ],
                      "id": 13817,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9019:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9019:71:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13826,
                  "nodeType": "ExpressionStatement",
                  "src": "9019:71:114"
                },
                {
                  "assignments": [
                    13828
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13828,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "9109:7:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 13885,
                      "src": "9101:15:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 13827,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9101:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13831,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13829,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15002,
                      "src": "9119:10:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 13830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9119:12:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9101:30:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13833,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13828,
                        "src": "9160:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13834,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13797,
                        "src": "9169:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13835,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13799,
                        "src": "9177:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13836,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13801,
                        "src": "9188:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 13837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9196:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 13838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9200:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 13832,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14304,
                      "src": "9142:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 13839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9142:61:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13840,
                  "nodeType": "ExpressionStatement",
                  "src": "9142:61:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13842,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13828,
                        "src": "9220:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13843,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13797,
                        "src": "9229:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13844,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13799,
                        "src": "9237:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13845,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13801,
                        "src": "9248:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 13846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9256:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 13847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9260:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 13841,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14214,
                      "src": "9214:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 13848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9214:49:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13849,
                  "nodeType": "ExpressionStatement",
                  "src": "9214:49:114"
                },
                {
                  "assignments": [
                    13851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13851,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "9282:16:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 13885,
                      "src": "9274:24:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13850,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9274:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13857,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 13852,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13311,
                        "src": "9301:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 13854,
                      "indexExpression": {
                        "id": 13853,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13797,
                        "src": "9313:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9301:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 13856,
                    "indexExpression": {
                      "id": 13855,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13828,
                      "src": "9321:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9301:28:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9274:55:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13859,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13851,
                          "src": "9347:16:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 13860,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13801,
                          "src": "9367:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9347:26:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 13862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9375:43:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds allowance\""
                        },
                        "value": "ERC777: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 13858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9339:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9339:80:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13864,
                  "nodeType": "ExpressionStatement",
                  "src": "9339:80:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13866,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13797,
                        "src": "9438:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13867,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13828,
                        "src": "9446:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13868,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13851,
                          "src": "9455:16:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 13869,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13801,
                          "src": "9474:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9455:25:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13865,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14259,
                      "src": "9429:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9429:52:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13872,
                  "nodeType": "ExpressionStatement",
                  "src": "9429:52:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13874,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13828,
                        "src": "9512:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13875,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13797,
                        "src": "9521:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13876,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13799,
                        "src": "9529:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13877,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13801,
                        "src": "9540:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 13878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9548:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 13879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9552:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 13880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9556:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13873,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14362,
                      "src": "9492:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 13881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9492:70:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13882,
                  "nodeType": "ExpressionStatement",
                  "src": "9492:70:114"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 13883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9580:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 13806,
                  "id": 13884,
                  "nodeType": "Return",
                  "src": "9573:11:114"
                }
              ]
            },
            "documentation": {
              "id": 13795,
              "nodeType": "StructuredDocumentation",
              "src": "8455:355:114",
              "text": " @dev See {IERC20-transferFrom}.\n Note that operator and allowance concepts are orthogonal: operators cannot\n call `transferFrom` (unless they have allowance), and accounts with\n allowance cannot call `operatorSend` (unless they are operators).\n Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
            },
            "functionSelector": "23b872dd",
            "id": 13886,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "8824:12:114",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13803,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8903:8:114"
            },
            "parameters": {
              "id": 13802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13797,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "8845:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13886,
                  "src": "8837:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8837:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13799,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8861:9:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13886,
                  "src": "8853:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8853:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13801,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8880:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13886,
                  "src": "8872:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8872:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8836:51:114"
            },
            "returnParameters": {
              "id": 13806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13805,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13886,
                  "src": "8921:4:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13804,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8921:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8920:6:114"
            },
            "scope": 14376,
            "src": "8815:776:114",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13906,
              "nodeType": "Block",
              "src": "10334:69:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13899,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13889,
                        "src": "10350:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13900,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13891,
                        "src": "10359:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13901,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13893,
                        "src": "10367:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 13902,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13895,
                        "src": "10377:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 13903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10391:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13898,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13907,
                        13987
                      ],
                      "referencedDeclaration": 13987,
                      "src": "10344:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 13904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10344:52:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13905,
                  "nodeType": "ExpressionStatement",
                  "src": "10344:52:114"
                }
              ]
            },
            "documentation": {
              "id": 13887,
              "nodeType": "StructuredDocumentation",
              "src": "9597:559:114",
              "text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If a send hook is registered for `account`, the corresponding function\n will be called with `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "id": 13907,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "10170:5:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13889,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10193:7:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13907,
                  "src": "10185:15:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10185:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13891,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10218:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13907,
                  "src": "10210:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10210:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13893,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "10247:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13907,
                  "src": "10234:21:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13892,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10234:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13895,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "10278:12:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13907,
                  "src": "10265:25:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13894,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10265:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10175:121:114"
            },
            "returnParameters": {
              "id": 13897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10334:0:114"
            },
            "scope": 14376,
            "src": "10161:242:114",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13986,
              "nodeType": "Block",
              "src": "11232:539:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13922,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13910,
                          "src": "11250:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11269:1:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11261:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13923,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11261:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11261:10:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11250:21:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 13928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11273:34:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
                          "typeString": "literal_string \"ERC777: mint to the zero address\""
                        },
                        "value": "ERC777: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
                          "typeString": "literal_string \"ERC777: mint to the zero address\""
                        }
                      ],
                      "id": 13921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11242:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11242:66:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13930,
                  "nodeType": "ExpressionStatement",
                  "src": "11242:66:114"
                },
                {
                  "assignments": [
                    13932
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13932,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11327:8:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 13986,
                      "src": "11319:16:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 13931,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11319:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13935,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13933,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15002,
                      "src": "11338:10:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 13934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11338:12:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11319:31:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13937,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13932,
                        "src": "11382:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 13940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11400:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 13939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11392:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13938,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11392:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11392:10:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13942,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13910,
                        "src": "11404:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13943,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13912,
                        "src": "11413:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13936,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14375,
                      "src": "11361:20:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 13944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11361:59:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13945,
                  "nodeType": "ExpressionStatement",
                  "src": "11361:59:114"
                },
                {
                  "expression": {
                    "id": 13948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13946,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13272,
                      "src": "11465:12:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 13947,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13912,
                      "src": "11481:6:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11465:22:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13949,
                  "nodeType": "ExpressionStatement",
                  "src": "11465:22:114"
                },
                {
                  "expression": {
                    "id": 13954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13950,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13270,
                        "src": "11497:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 13952,
                      "indexExpression": {
                        "id": 13951,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13910,
                        "src": "11507:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11497:18:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 13953,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13912,
                      "src": "11519:6:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11497:28:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13955,
                  "nodeType": "ExpressionStatement",
                  "src": "11497:28:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13957,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13932,
                        "src": "11556:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 13960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11574:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 13959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11566:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13958,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11566:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11566:10:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13962,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13910,
                        "src": "11578:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13963,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13912,
                        "src": "11587:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13964,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13914,
                        "src": "11595:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 13965,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13916,
                        "src": "11605:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 13966,
                        "name": "requireReceptionAck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13918,
                        "src": "11619:19:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13956,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14362,
                      "src": "11536:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 13967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11536:103:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13968,
                  "nodeType": "ExpressionStatement",
                  "src": "11536:103:114"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13970,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13932,
                        "src": "11662:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13971,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13910,
                        "src": "11672:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13972,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13912,
                        "src": "11681:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13973,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13914,
                        "src": "11689:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 13974,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13916,
                        "src": "11699:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 13969,
                      "name": "Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14510,
                      "src": "11655:6:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 13975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11655:57:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13976,
                  "nodeType": "EmitStatement",
                  "src": "11650:62:114"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 13980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11744:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 13979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11736:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13978,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11736:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11736:10:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13982,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13910,
                        "src": "11748:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13983,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13912,
                        "src": "11757:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13977,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10256,
                      "src": "11727:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11727:37:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13985,
                  "nodeType": "EmitStatement",
                  "src": "11722:42:114"
                }
              ]
            },
            "documentation": {
              "id": 13908,
              "nodeType": "StructuredDocumentation",
              "src": "10409:611:114",
              "text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If `requireReceptionAck` is set to true, and if a send hook is\n registered for `account`, the corresponding function will be called with\n `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "id": 13987,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "11034:5:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13910,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11057:7:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13987,
                  "src": "11049:15:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11049:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13912,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11082:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13987,
                  "src": "11074:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11074:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13914,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "11111:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13987,
                  "src": "11098:21:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13913,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11098:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13916,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "11142:12:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13987,
                  "src": "11129:25:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13915,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11129:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13918,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "11169:19:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13987,
                  "src": "11164:24:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13917,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11164:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11039:155:114"
            },
            "returnParameters": {
              "id": 13920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11232:0:114"
            },
            "scope": 14376,
            "src": "11025:746:114",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14056,
              "nodeType": "Block",
              "src": "12471:446:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14004,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13990,
                          "src": "12489:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12505:1:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12497:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14005,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12497:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12497:10:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12489:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2073656e642066726f6d20746865207a65726f2061646472657373",
                        "id": 14010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12509:36:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401",
                          "typeString": "literal_string \"ERC777: send from the zero address\""
                        },
                        "value": "ERC777: send from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401",
                          "typeString": "literal_string \"ERC777: send from the zero address\""
                        }
                      ],
                      "id": 14003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12481:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12481:65:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14012,
                  "nodeType": "ExpressionStatement",
                  "src": "12481:65:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14014,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13992,
                          "src": "12564:2:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12578:1:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12570:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14015,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12570:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12570:10:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12564:16:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2073656e6420746f20746865207a65726f2061646472657373",
                        "id": 14020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12582:34:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3",
                          "typeString": "literal_string \"ERC777: send to the zero address\""
                        },
                        "value": "ERC777: send to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3",
                          "typeString": "literal_string \"ERC777: send to the zero address\""
                        }
                      ],
                      "id": 14013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12556:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12556:61:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14022,
                  "nodeType": "ExpressionStatement",
                  "src": "12556:61:114"
                },
                {
                  "assignments": [
                    14024
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14024,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "12636:8:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 14056,
                      "src": "12628:16:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 14023,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12628:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14027,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 14025,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15002,
                      "src": "12647:10:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 14026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12647:12:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12628:31:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14029,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14024,
                        "src": "12688:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14030,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13990,
                        "src": "12698:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14031,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13992,
                        "src": "12704:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14032,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13994,
                        "src": "12708:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 14033,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13996,
                        "src": "12716:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 14034,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13998,
                        "src": "12726:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 14028,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14304,
                      "src": "12670:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 14035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12670:69:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14036,
                  "nodeType": "ExpressionStatement",
                  "src": "12670:69:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14038,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14024,
                        "src": "12756:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14039,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13990,
                        "src": "12766:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14040,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13992,
                        "src": "12772:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14041,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13994,
                        "src": "12776:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 14042,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13996,
                        "src": "12784:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 14043,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13998,
                        "src": "12794:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 14037,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14214,
                      "src": "12750:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 14044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12750:57:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14045,
                  "nodeType": "ExpressionStatement",
                  "src": "12750:57:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14047,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14024,
                        "src": "12838:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14048,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13990,
                        "src": "12848:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14049,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13992,
                        "src": "12854:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14050,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13994,
                        "src": "12858:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 14051,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13996,
                        "src": "12866:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 14052,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13998,
                        "src": "12876:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 14053,
                        "name": "requireReceptionAck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14000,
                        "src": "12890:19:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14046,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14362,
                      "src": "12818:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 14054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12818:92:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14055,
                  "nodeType": "ExpressionStatement",
                  "src": "12818:92:114"
                }
              ]
            },
            "documentation": {
              "id": 13988,
              "nodeType": "StructuredDocumentation",
              "src": "11777:465:114",
              "text": " @dev Send tokens\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
            },
            "id": 14057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_send",
            "nameLocation": "12256:5:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13990,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12279:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14057,
                  "src": "12271:12:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12271:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13992,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12301:2:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14057,
                  "src": "12293:10:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12293:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13994,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12321:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14057,
                  "src": "12313:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12313:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13996,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "12350:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14057,
                  "src": "12337:21:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13995,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12337:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13998,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "12381:12:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14057,
                  "src": "12368:25:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13997,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12368:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14000,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "12408:19:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14057,
                  "src": "12403:24:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13999,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12403:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12261:172:114"
            },
            "returnParameters": {
              "id": 14002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12471:0:114"
            },
            "scope": 14376,
            "src": "12247:670:114",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14148,
              "nodeType": "Block",
              "src": "13388:631:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14070,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14060,
                          "src": "13406:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13422:1:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13414:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14071,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13414:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13414:10:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13406:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 14076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13426:36:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
                          "typeString": "literal_string \"ERC777: burn from the zero address\""
                        },
                        "value": "ERC777: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
                          "typeString": "literal_string \"ERC777: burn from the zero address\""
                        }
                      ],
                      "id": 14069,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13398:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13398:65:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14078,
                  "nodeType": "ExpressionStatement",
                  "src": "13398:65:114"
                },
                {
                  "assignments": [
                    14080
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14080,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "13482:8:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 14148,
                      "src": "13474:16:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 14079,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13474:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14083,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 14081,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15002,
                      "src": "13493:10:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 14082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13493:12:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13474:31:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14085,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14080,
                        "src": "13534:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14086,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14060,
                        "src": "13544:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 14089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13558:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 14088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13550:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14087,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13550:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13550:10:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14091,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14062,
                        "src": "13562:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 14092,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14064,
                        "src": "13570:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 14093,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14066,
                        "src": "13576:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 14084,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14304,
                      "src": "13516:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 14094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13516:73:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14095,
                  "nodeType": "ExpressionStatement",
                  "src": "13516:73:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14097,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14080,
                        "src": "13621:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14098,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14060,
                        "src": "13631:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 14101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13645:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 14100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13637:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14099,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13637:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13637:10:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14103,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14062,
                        "src": "13649:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14096,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14375,
                      "src": "13600:20:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 14104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13600:56:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14105,
                  "nodeType": "ExpressionStatement",
                  "src": "13600:56:114"
                },
                {
                  "assignments": [
                    14107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14107,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "13709:11:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 14148,
                      "src": "13701:19:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14106,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13701:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14111,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14108,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13270,
                      "src": "13723:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 14110,
                    "indexExpression": {
                      "id": 14109,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14060,
                      "src": "13733:4:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13723:15:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13701:37:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14113,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14107,
                          "src": "13756:11:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 14114,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14062,
                          "src": "13771:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13756:21:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 14116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13779:37:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
                          "typeString": "literal_string \"ERC777: burn amount exceeds balance\""
                        },
                        "value": "ERC777: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
                          "typeString": "literal_string \"ERC777: burn amount exceeds balance\""
                        }
                      ],
                      "id": 14112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13748:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13748:69:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14118,
                  "nodeType": "ExpressionStatement",
                  "src": "13748:69:114"
                },
                {
                  "expression": {
                    "id": 14125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14119,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13270,
                        "src": "13827:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 14121,
                      "indexExpression": {
                        "id": 14120,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14060,
                        "src": "13837:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13827:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 14124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14122,
                        "name": "fromBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14107,
                        "src": "13845:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 14123,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14062,
                        "src": "13859:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13845:20:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13827:38:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14126,
                  "nodeType": "ExpressionStatement",
                  "src": "13827:38:114"
                },
                {
                  "expression": {
                    "id": 14129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14127,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13272,
                      "src": "13875:12:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 14128,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14062,
                      "src": "13891:6:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13875:22:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14130,
                  "nodeType": "ExpressionStatement",
                  "src": "13875:22:114"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14132,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14080,
                        "src": "13920:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14133,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14060,
                        "src": "13930:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14134,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14062,
                        "src": "13936:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 14135,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14064,
                        "src": "13944:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 14136,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14066,
                        "src": "13950:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 14131,
                      "name": "Burned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14522,
                      "src": "13913:6:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 14137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13913:50:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14138,
                  "nodeType": "EmitStatement",
                  "src": "13908:55:114"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14140,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14060,
                        "src": "13987:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 14143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14001:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 14142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13993:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14141,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13993:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13993:10:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14145,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14062,
                        "src": "14005:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14139,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10256,
                      "src": "13978:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13978:34:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14147,
                  "nodeType": "EmitStatement",
                  "src": "13973:39:114"
                }
              ]
            },
            "documentation": {
              "id": 14058,
              "nodeType": "StructuredDocumentation",
              "src": "12923:294:114",
              "text": " @dev Burn tokens\n @param from address token holder address\n @param amount uint256 amount of tokens to burn\n @param data bytes extra information provided by the token holder\n @param operatorData bytes extra information provided by the operator (if any)"
            },
            "id": 14149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "13231:5:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14060,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13254:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14149,
                  "src": "13246:12:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13246:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14062,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13276:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14149,
                  "src": "13268:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13268:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14064,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13305:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14149,
                  "src": "13292:17:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14063,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13292:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14066,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "13332:12:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14149,
                  "src": "13319:25:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14065,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13319:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13236:114:114"
            },
            "returnParameters": {
              "id": 14068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13388:0:114"
            },
            "scope": 14376,
            "src": "13222:797:114",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14213,
              "nodeType": "Block",
              "src": "14224:390:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14165,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14151,
                        "src": "14255:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14166,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14153,
                        "src": "14265:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14167,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14155,
                        "src": "14271:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14168,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14157,
                        "src": "14275:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14164,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14375,
                      "src": "14234:20:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 14169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14234:48:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14170,
                  "nodeType": "ExpressionStatement",
                  "src": "14234:48:114"
                },
                {
                  "assignments": [
                    14172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14172,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "14301:11:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 14213,
                      "src": "14293:19:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14171,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14293:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14176,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14173,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13270,
                      "src": "14315:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 14175,
                    "indexExpression": {
                      "id": 14174,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14153,
                      "src": "14325:4:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14315:15:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14293:37:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14178,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14172,
                          "src": "14348:11:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 14179,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14157,
                          "src": "14363:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14348:21:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 14181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14371:41:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
                        },
                        "value": "ERC777: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 14177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14340:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14340:73:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14183,
                  "nodeType": "ExpressionStatement",
                  "src": "14340:73:114"
                },
                {
                  "expression": {
                    "id": 14190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14184,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13270,
                        "src": "14423:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 14186,
                      "indexExpression": {
                        "id": 14185,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14153,
                        "src": "14433:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14423:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 14189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14187,
                        "name": "fromBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14172,
                        "src": "14441:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 14188,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14157,
                        "src": "14455:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14441:20:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14423:38:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14191,
                  "nodeType": "ExpressionStatement",
                  "src": "14423:38:114"
                },
                {
                  "expression": {
                    "id": 14196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14192,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13270,
                        "src": "14471:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 14194,
                      "indexExpression": {
                        "id": 14193,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14155,
                        "src": "14481:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14471:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 14195,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14157,
                      "src": "14488:6:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14471:23:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14197,
                  "nodeType": "ExpressionStatement",
                  "src": "14471:23:114"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14199,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14151,
                        "src": "14515:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14200,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14153,
                        "src": "14525:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14201,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14155,
                        "src": "14531:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14202,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14157,
                        "src": "14535:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 14203,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14159,
                        "src": "14543:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 14204,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14161,
                        "src": "14553:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 14198,
                      "name": "Sent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14498,
                      "src": "14510:4:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 14205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14510:56:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14206,
                  "nodeType": "EmitStatement",
                  "src": "14505:61:114"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14208,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14153,
                        "src": "14590:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14209,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14155,
                        "src": "14596:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14210,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14157,
                        "src": "14600:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14207,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10256,
                      "src": "14581:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14581:26:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14212,
                  "nodeType": "EmitStatement",
                  "src": "14576:31:114"
                }
              ]
            },
            "id": 14214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_move",
            "nameLocation": "14034:5:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14151,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "14057:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14214,
                  "src": "14049:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14049:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14153,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14083:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14214,
                  "src": "14075:12:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14075:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14155,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14105:2:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14214,
                  "src": "14097:10:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14097:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14157,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14125:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14214,
                  "src": "14117:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14117:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14159,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "14154:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14214,
                  "src": "14141:21:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14158,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14141:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14161,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "14185:12:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14214,
                  "src": "14172:25:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14160,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14172:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14039:164:114"
            },
            "returnParameters": {
              "id": 14163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14224:0:114"
            },
            "scope": 14376,
            "src": "14025:589:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 14258,
              "nodeType": "Block",
              "src": "14827:260:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14225,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14217,
                          "src": "14845:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14863:1:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14855:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14226,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14855:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14855:10:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14845:20:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 14231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14867:39:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
                          "typeString": "literal_string \"ERC777: approve from the zero address\""
                        },
                        "value": "ERC777: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
                          "typeString": "literal_string \"ERC777: approve from the zero address\""
                        }
                      ],
                      "id": 14224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14837:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14837:70:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14233,
                  "nodeType": "ExpressionStatement",
                  "src": "14837:70:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14235,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14219,
                          "src": "14925:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14944:1:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14936:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14236,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14936:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14936:10:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14925:21:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 14241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14948:37:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
                          "typeString": "literal_string \"ERC777: approve to the zero address\""
                        },
                        "value": "ERC777: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
                          "typeString": "literal_string \"ERC777: approve to the zero address\""
                        }
                      ],
                      "id": 14234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14917:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14917:69:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14243,
                  "nodeType": "ExpressionStatement",
                  "src": "14917:69:114"
                },
                {
                  "expression": {
                    "id": 14250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 14244,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13311,
                          "src": "14997:11:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 14247,
                        "indexExpression": {
                          "id": 14245,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14217,
                          "src": "15009:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14997:19:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 14248,
                      "indexExpression": {
                        "id": 14246,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14219,
                        "src": "15017:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14997:28:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14249,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14221,
                      "src": "15028:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14997:36:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14251,
                  "nodeType": "ExpressionStatement",
                  "src": "14997:36:114"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14253,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14217,
                        "src": "15057:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14254,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14219,
                        "src": "15065:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14255,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14221,
                        "src": "15074:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14252,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10265,
                      "src": "15048:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15048:32:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14257,
                  "nodeType": "EmitStatement",
                  "src": "15043:37:114"
                }
              ]
            },
            "documentation": {
              "id": 14215,
              "nodeType": "StructuredDocumentation",
              "src": "14620:127:114",
              "text": " @dev See {ERC20-_approve}.\n Note that accounts cannot have allowance issued by their operators."
            },
            "id": 14259,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "14761:8:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14217,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "14778:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14259,
                  "src": "14770:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14770:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14219,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "14794:7:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14259,
                  "src": "14786:15:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14786:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14221,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "14811:5:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14259,
                  "src": "14803:13:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14803:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14769:48:114"
            },
            "returnParameters": {
              "id": 14223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14827:0:114"
            },
            "scope": 14376,
            "src": "14752:335:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14303,
              "nodeType": "Block",
              "src": "15771:273:114",
              "statements": [
                {
                  "assignments": [
                    14276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14276,
                      "mutability": "mutable",
                      "name": "implementer",
                      "nameLocation": "15789:11:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 14303,
                      "src": "15781:19:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 14275,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15781:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14282,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14279,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14264,
                        "src": "15845:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14280,
                        "name": "_TOKENS_SENDER_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13281,
                        "src": "15851:29:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 14277,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13266,
                        "src": "15803:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$16502",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 14278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16451,
                      "src": "15803:41:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32) view external returns (address)"
                      }
                    },
                    "id": 14281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15803:78:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15781:100:114"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 14288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14283,
                      "name": "implementer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14276,
                      "src": "15895:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 14286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15918:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 14285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15910:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 14284,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15910:7:114",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 14287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15910:10:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15895:25:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14302,
                  "nodeType": "IfStatement",
                  "src": "15891:147:114",
                  "trueBody": {
                    "id": 14301,
                    "nodeType": "Block",
                    "src": "15922:116:114",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 14293,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14262,
                              "src": "15976:8:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 14294,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14264,
                              "src": "15986:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 14295,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14266,
                              "src": "15992:2:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 14296,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14268,
                              "src": "15996:6:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 14297,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14270,
                              "src": "16004:8:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 14298,
                              "name": "operatorData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14272,
                              "src": "16014:12:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 14290,
                                  "name": "implementer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14276,
                                  "src": "15950:11:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 14289,
                                "name": "IERC777Sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14575,
                                "src": "15936:13:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC777Sender_$14575_$",
                                  "typeString": "type(contract IERC777Sender)"
                                }
                              },
                              "id": 14291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15936:26:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC777Sender_$14575",
                                "typeString": "contract IERC777Sender"
                              }
                            },
                            "id": 14292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokensToSend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14574,
                            "src": "15936:39:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
                            }
                          },
                          "id": 14299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15936:91:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14300,
                        "nodeType": "ExpressionStatement",
                        "src": "15936:91:114"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 14260,
              "nodeType": "StructuredDocumentation",
              "src": "15093:462:114",
              "text": " @dev Call from.tokensToSend() if the interface is registered\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)"
            },
            "id": 14304,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensToSend",
            "nameLocation": "15569:17:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14262,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "15604:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14304,
                  "src": "15596:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15596:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14264,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15630:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14304,
                  "src": "15622:12:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15622:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14266,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15652:2:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14304,
                  "src": "15644:10:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15644:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14268,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15672:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14304,
                  "src": "15664:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15664:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14270,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "15701:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14304,
                  "src": "15688:21:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14269,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15688:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14272,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "15732:12:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14304,
                  "src": "15719:25:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14271,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15719:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15586:164:114"
            },
            "returnParameters": {
              "id": 14274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15771:0:114"
            },
            "scope": 14376,
            "src": "15560:484:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 14361,
              "nodeType": "Block",
              "src": "16980:441:114",
              "statements": [
                {
                  "assignments": [
                    14323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14323,
                      "mutability": "mutable",
                      "name": "implementer",
                      "nameLocation": "16998:11:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 14361,
                      "src": "16990:19:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 14322,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16990:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14329,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14326,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14311,
                        "src": "17054:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14327,
                        "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13286,
                        "src": "17058:32:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 14324,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13266,
                        "src": "17012:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$16502",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 14325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16451,
                      "src": "17012:41:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32) view external returns (address)"
                      }
                    },
                    "id": 14328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17012:79:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16990:101:114"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 14335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14330,
                      "name": "implementer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14323,
                      "src": "17105:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 14333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17128:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 14332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17120:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 14331,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17120:7:114",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 14334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17120:10:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17105:25:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "id": 14349,
                      "name": "requireReceptionAck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14319,
                      "src": "17263:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 14359,
                    "nodeType": "IfStatement",
                    "src": "17259:156:114",
                    "trueBody": {
                      "id": 14358,
                      "nodeType": "Block",
                      "src": "17284:131:114",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 14354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "17306:16:114",
                                "subExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 14351,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14311,
                                      "src": "17307:2:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 14352,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "isContract",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14630,
                                    "src": "17307:13:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                                      "typeString": "function (address) view returns (bool)"
                                    }
                                  },
                                  "id": 14353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17307:15:114",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4552433737373a20746f6b656e20726563697069656e7420636f6e747261637420686173206e6f20696d706c656d656e74657220666f7220455243373737546f6b656e73526563697069656e74",
                                "id": 14355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17324:79:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
                                  "typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
                                },
                                "value": "ERC777: token recipient contract has no implementer for ERC777TokensRecipient"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
                                  "typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
                                }
                              ],
                              "id": 14350,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "17298:7:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 14356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17298:106:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 14357,
                          "nodeType": "ExpressionStatement",
                          "src": "17298:106:114"
                        }
                      ]
                    }
                  },
                  "id": 14360,
                  "nodeType": "IfStatement",
                  "src": "17101:314:114",
                  "trueBody": {
                    "id": 14348,
                    "nodeType": "Block",
                    "src": "17132:121:114",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 14340,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14307,
                              "src": "17191:8:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 14341,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14309,
                              "src": "17201:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 14342,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14311,
                              "src": "17207:2:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 14343,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14313,
                              "src": "17211:6:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 14344,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14315,
                              "src": "17219:8:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 14345,
                              "name": "operatorData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14317,
                              "src": "17229:12:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 14337,
                                  "name": "implementer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14323,
                                  "src": "17163:11:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 14336,
                                "name": "IERC777Recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14555,
                                "src": "17146:16:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC777Recipient_$14555_$",
                                  "typeString": "type(contract IERC777Recipient)"
                                }
                              },
                              "id": 14338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17146:29:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC777Recipient_$14555",
                                "typeString": "contract IERC777Recipient"
                              }
                            },
                            "id": 14339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokensReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14554,
                            "src": "17146:44:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
                            }
                          },
                          "id": 14346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17146:96:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14347,
                        "nodeType": "ExpressionStatement",
                        "src": "17146:96:114"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 14305,
              "nodeType": "StructuredDocumentation",
              "src": "16050:678:114",
              "text": " @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n tokensReceived() was not registered for the recipient\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
            },
            "id": 14362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensReceived",
            "nameLocation": "16742:19:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14307,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "16779:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14362,
                  "src": "16771:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16771:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14309,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16805:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14362,
                  "src": "16797:12:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16797:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14311,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16827:2:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14362,
                  "src": "16819:10:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16819:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14313,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16847:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14362,
                  "src": "16839:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16839:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14315,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "16876:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14362,
                  "src": "16863:21:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14314,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16863:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14317,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "16907:12:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14362,
                  "src": "16894:25:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14316,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16894:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14319,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "16934:19:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14362,
                  "src": "16929:24:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14318,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16929:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16761:198:114"
            },
            "returnParameters": {
              "id": 14321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16980:0:114"
            },
            "scope": 14376,
            "src": "16733:688:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 14374,
              "nodeType": "Block",
              "src": "18156:3:114",
              "statements": []
            },
            "documentation": {
              "id": 14363,
              "nodeType": "StructuredDocumentation",
              "src": "17427:617:114",
              "text": " @dev Hook that is called before any token transfer. This includes\n calls to {send}, {transfer}, {operatorSend}, minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 14375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "18058:20:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14365,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "18087:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14375,
                  "src": "18079:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18079:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14367,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "18105:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14375,
                  "src": "18097:12:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18097:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14369,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "18119:2:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14375,
                  "src": "18111:10:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18111:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14371,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18131:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 14375,
                  "src": "18123:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18123:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18078:60:114"
            },
            "returnParameters": {
              "id": 14373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18156:0:114"
            },
            "scope": 14376,
            "src": "18049:110:114",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 14377,
        "src": "1014:17147:114"
      }
    ],
    "src": "33:18129:114"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001d4d38038062001d4d8339810160408190526200003491620003b0565b82516200004990600290602086019062000221565b5081516200005f90600390602085019062000221565b50805162000075906004906020840190620002b0565b5060005b8151811015620000f157600160056000848481518110620000aa57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000e88162000535565b91505062000079565b506040516329965a1d60e01b815230600482018190527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce217705460248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90606401600060405180830381600087803b1580156200016c57600080fd5b505af115801562000181573d6000803e3d6000fd5b50506040516329965a1d60e01b815230600482018190527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a60248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d9150606401600060405180830381600087803b158015620001ff57600080fd5b505af115801562000214573d6000803e3d6000fd5b5050505050505062000573565b8280546200022f90620004f8565b90600052602060002090601f0160209004810192826200025357600085556200029e565b82601f106200026e57805160ff19168380011785556200029e565b828001600101855582156200029e579182015b828111156200029e57825182559160200191906001019062000281565b50620002ac92915062000308565b5090565b8280548282559060005260206000209081019282156200029e579160200282015b828111156200029e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002d1565b5b80821115620002ac576000815560010162000309565b600082601f83011262000330578081fd5b81516001600160401b038111156200034c576200034c6200055d565b602062000362601f8301601f19168201620004c5565b828152858284870101111562000376578384fd5b835b838110156200039557858101830151828201840152820162000378565b83811115620003a657848385840101525b5095945050505050565b600080600060608486031215620003c5578283fd5b83516001600160401b0380821115620003dc578485fd5b620003ea878388016200031f565b945060209150818601518181111562000401578485fd5b6200040f888289016200031f565b94505060408601518181111562000424578384fd5b8601601f8101881362000435578384fd5b8051828111156200044a576200044a6200055d565b8060051b92506200045d848401620004c5565b8181528481019083860185850187018c101562000478578788fd5b8795505b83861015620004b457805194506001600160a01b03851685146200049e578788fd5b848352600195909501949186019186016200047c565b508096505050505050509250925092565b604051601f8201601f191681016001600160401b0381118282101715620004f057620004f06200055d565b604052919050565b600181811c908216806200050d57607f821691505b602082108114156200052f57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156200055657634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6117ca80620005836000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b63711461022b578063dd62ed3e1461023e578063fad8b32a14610277578063fc673c4f1461028a578063fe9d93031461029d57610116565b8063959b8c3f146101ea57806395d89b41146101fd5780639bd9bbc614610205578063a9059cbb1461021857610116565b806323b872dd116100e957806323b872dd14610183578063313ce56714610196578063556f0dc7146101a557806362ad1b83146101ac57806370a08231146101c157610116565b806306e485381461011b57806306fdde0314610139578063095ea7b31461014e57806318160ddd14610171575b600080fd5b6101236102b0565b60405161013091906115c1565b60405180910390f35b610141610312565b604051610130919061160e565b61016161015c3660046113d8565b61039b565b6040519015158152602001610130565b6001545b604051908152602001610130565b610161610191366004611308565b6103b3565b60405160128152602001610130565b6001610175565b6101bf6101ba366004611348565b61057c565b005b6101756101cf366004611298565b6001600160a01b031660009081526020819052604090205490565b6101bf6101f8366004611298565b6105b8565b6101416106d6565b6101bf610213366004611403565b6106e5565b6101616102263660046113d8565b610708565b6101616102393660046112d0565b6107bb565b61017561024c3660046112d0565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101bf610285366004611298565b61085d565b6101bf61029836600461145a565b610979565b6101bf6102ab3660046114d7565b6109b1565b6060600480548060200260200160405190810160405280929190818152602001828054801561030857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ea575b5050505050905090565b60606002805461032190611715565b80601f016020809104026020016040519081016040528092919081815260200182805461034d90611715565b80156103085780601f1061036f57610100808354040283529160200191610308565b820191906000526020600020905b81548152906001019060200180831161037d57509395945050505050565b6000336103a98185856109d0565b5060019392505050565b60006001600160a01b0383166103e45760405162461bcd60e51b81526004016103db90611621565b60405180910390fd5b6001600160a01b0384166104495760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016103db565b600033905061047a818686866040518060200160405280600081525060405180602001604052806000815250610af7565b6104a6818686866040518060200160405280600081525060405180602001604052806000815250610c2e565b6001600160a01b038086166000908152600860209081526040808320938516835292905220548381101561052e5760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084016103db565b610542868361053d87856116fe565b6109d0565b6105708287878760405180602001604052806000815250604051806020016040528060008152506000610d9d565b50600195945050505050565b61058633866107bb565b6105a25760405162461bcd60e51b81526004016103db90611665565b6105b185858585856001610f71565b5050505050565b336001600160a01b038216141561061d5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff161561066e573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561069d565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b60606003805461032190611715565b61070333848484604051806020016040528060008152506001610f71565b505050565b60006001600160a01b0383166107305760405162461bcd60e51b81526004016103db90611621565b6000339050610761818286866040518060200160405280600081525060405180602001604052806000815250610af7565b61078d818286866040518060200160405280600081525060405180602001604052806000815250610c2e565b6103a98182868660405180602001604052806000815250604051806020016040528060008152506000610d9d565b6000816001600160a01b0316836001600160a01b0316148061082657506001600160a01b03831660009081526005602052604090205460ff16801561082657506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061085657506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b0381163314156108c05760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff1615610914573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610940565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61098333856107bb565b61099f5760405162461bcd60e51b81526004016103db90611665565b6109ab84848484611054565b50505050565b6109cc33838360405180602001604052806000815250611054565b5050565b6001600160a01b038316610a345760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103db565b6001600160a01b038216610a965760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103db565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b158015610b7357600080fd5b505afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab91906112b4565b90506001600160a01b03811615610c2557604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610bf2908a908a908a908a908a908a90600401611567565b600060405180830381600087803b158015610c0c57600080fd5b505af1158015610c20573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610ca75760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b60648201526084016103db565b610cb184826116fe565b6001600160a01b038088166000908152602081905260408082209390935590871681529081208054869290610ce79084906116e6565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610d3f939291906116b1565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610d8c91815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b158015610e1957600080fd5b505afa158015610e2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5191906112b4565b90506001600160a01b03811615610ecd576040516223de2960e01b81526001600160a01b038216906223de2990610e96908b908b908b908b908b908b90600401611567565b600060405180830381600087803b158015610eb057600080fd5b505af1158015610ec4573d6000803e3d6000fd5b50505050610f67565b8115610f67576001600160a01b0386163b15610f675760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a4016103db565b5050505050505050565b6001600160a01b038616610fd25760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b6001600160a01b0385166110285760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f206164647265737360448201526064016103db565b33611037818888888888610af7565b611045818888888888610c2e565b610c2581888888888888610d9d565b6001600160a01b0384166110b55760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b336110c581866000878787610af7565b6001600160a01b0385166000908152602081905260409020548481101561113a5760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016103db565b61114485826116fe565b6001600160a01b038716600090815260208190526040812091909155600180548792906111729084906116fe565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a40988787876040516111c0939291906116b1565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b600082601f830112611221578081fd5b813567ffffffffffffffff8082111561123c5761123c611766565b604051601f8301601f19908116603f0116810190828211818310171561126457611264611766565b8160405283815286602085880101111561127c578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156112a9578081fd5b81356108568161177c565b6000602082840312156112c5578081fd5b81516108568161177c565b600080604083850312156112e2578081fd5b82356112ed8161177c565b915060208301356112fd8161177c565b809150509250929050565b60008060006060848603121561131c578081fd5b83356113278161177c565b925060208401356113378161177c565b929592945050506040919091013590565b600080600080600060a0868803121561135f578081fd5b853561136a8161177c565b9450602086013561137a8161177c565b935060408601359250606086013567ffffffffffffffff8082111561139d578283fd5b6113a989838a01611211565b935060808801359150808211156113be578283fd5b506113cb88828901611211565b9150509295509295909350565b600080604083850312156113ea578182fd5b82356113f58161177c565b946020939093013593505050565b600080600060608486031215611417578283fd5b83356114228161177c565b925060208401359150604084013567ffffffffffffffff811115611444578182fd5b61145086828701611211565b9150509250925092565b6000806000806080858703121561146f578384fd5b843561147a8161177c565b935060208501359250604085013567ffffffffffffffff8082111561149d578384fd5b6114a988838901611211565b935060608701359150808211156114be578283fd5b506114cb87828801611211565b91505092959194509250565b600080604083850312156114e9578182fd5b82359150602083013567ffffffffffffffff811115611506578182fd5b61151285828601611211565b9150509250929050565b60008151808452815b8181101561154157602081850181015186830182015201611525565b818111156115525782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c0608082018190526000906115a29083018561151c565b82810360a08401526115b4818561151c565b9998505050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156116025783516001600160a01b0316835292840192918401916001016115dd565b50909695505050505050565b600060208252610856602083018461151c565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b6000848252606060208301526116ca606083018561151c565b82810360408401526116dc818561151c565b9695505050505050565b600082198211156116f9576116f9611750565b500190565b60008282101561171057611710611750565b500390565b600181811c9082168061172957607f821691505b6020821081141561174a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461179157600080fd5b5056fea26469706673582212209a3ed23d5be312c793060f0643a3f4a6e7ed35572d170a720f27eeb138e1a6b364736f6c63430008030033",
  "bytecodeSha1": "0803b5ff9e62eeea224a1cce35ad4b44e6bb2c8d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "ERC777",
  "coverageMap": {
    "branches": {
      "114": {
        "ERC777._approve": {
          "73": [
            14845,
            14865,
            true
          ],
          "74": [
            14925,
            14946,
            true
          ]
        },
        "ERC777._burn": {
          "81": [
            13406,
            13424,
            true
          ],
          "82": [
            13756,
            13777,
            true
          ]
        },
        "ERC777._callTokensReceived": {
          "77": [
            17105,
            17130,
            false
          ],
          "78": [
            17263,
            17282,
            false
          ]
        },
        "ERC777._callTokensToSend": {
          "75": [
            15895,
            15920,
            false
          ]
        },
        "ERC777._move": {
          "76": [
            14348,
            14369,
            true
          ]
        },
        "ERC777._send": {
          "79": [
            12489,
            12507,
            true
          ],
          "80": [
            12564,
            12580,
            true
          ]
        },
        "ERC777.authorizeOperator": {
          "67": [
            5815,
            5839,
            true
          ],
          "68": [
            5895,
            5922,
            false
          ]
        },
        "ERC777.operatorBurn": {
          "72": [
            7581,
            7617,
            true
          ]
        },
        "ERC777.operatorSend": {
          "66": [
            7158,
            7193,
            true
          ]
        },
        "ERC777.revokeOperator": {
          "70": [
            6289,
            6313,
            true
          ],
          "71": [
            6366,
            6393,
            false
          ]
        },
        "ERC777.transfer": {
          "69": [
            4711,
            4734,
            true
          ]
        },
        "ERC777.transferFrom": {
          "63": [
            8945,
            8968,
            true
          ],
          "64": [
            9027,
            9047,
            true
          ],
          "65": [
            9347,
            9373,
            true
          ]
        }
      },
      "115": {},
      "116": {},
      "117": {},
      "119": {},
      "121": {},
      "137": {},
      "91": {}
    },
    "statements": {
      "114": {
        "ERC777._approve": {
          "38": [
            14837,
            14907
          ],
          "39": [
            14917,
            14986
          ],
          "40": [
            14997,
            15033
          ],
          "41": [
            15043,
            15080
          ]
        },
        "ERC777._burn": {
          "56": [
            13398,
            13463
          ],
          "57": [
            13516,
            13589
          ],
          "58": [
            13748,
            13817
          ],
          "59": [
            13827,
            13865
          ],
          "60": [
            13875,
            13897
          ],
          "61": [
            13908,
            13963
          ],
          "62": [
            13973,
            14012
          ]
        },
        "ERC777._callTokensReceived": {
          "48": [
            17146,
            17242
          ],
          "49": [
            17298,
            17404
          ]
        },
        "ERC777._callTokensToSend": {
          "42": [
            15936,
            16027
          ]
        },
        "ERC777._move": {
          "43": [
            14340,
            14413
          ],
          "44": [
            14423,
            14461
          ],
          "45": [
            14471,
            14494
          ],
          "46": [
            14505,
            14566
          ],
          "47": [
            14576,
            14607
          ]
        },
        "ERC777._send": {
          "51": [
            12481,
            12546
          ],
          "52": [
            12556,
            12617
          ],
          "53": [
            12670,
            12739
          ],
          "54": [
            12750,
            12807
          ],
          "55": [
            12818,
            12910
          ]
        },
        "ERC777.allowance": {
          "4": [
            8073,
            8108
          ]
        },
        "ERC777.approve": {
          "8": [
            8390,
            8422
          ],
          "9": [
            8432,
            8443
          ]
        },
        "ERC777.authorizeOperator": {
          "20": [
            5807,
            5880
          ],
          "21": [
            5938,
            5993
          ],
          "22": [
            6024,
            6065
          ],
          "23": [
            6086,
            6133
          ]
        },
        "ERC777.balanceOf": {
          "3": [
            4040,
            4069
          ]
        },
        "ERC777.burn": {
          "37": [
            5254,
            5291
          ]
        },
        "ERC777.decimals": {
          "1": [
            3416,
            3425
          ]
        },
        "ERC777.defaultOperators": {
          "5": [
            6768,
            6797
          ]
        },
        "ERC777.granularity": {
          "2": [
            3627,
            3635
          ]
        },
        "ERC777.isOperatorFor": {
          "30": [
            5477,
            5653
          ]
        },
        "ERC777.name": {
          "6": [
            2989,
            3001
          ]
        },
        "ERC777.operatorBurn": {
          "35": [
            7573,
            7666
          ],
          "36": [
            7676,
            7718
          ]
        },
        "ERC777.operatorSend": {
          "18": [
            7150,
            7242
          ],
          "19": [
            7252,
            7310
          ]
        },
        "ERC777.revokeOperator": {
          "31": [
            6281,
            6351
          ],
          "32": [
            6409,
            6464
          ],
          "33": [
            6495,
            6536
          ],
          "34": [
            6557,
            6601
          ]
        },
        "ERC777.send": {
          "25": [
            4309,
            4363
          ]
        },
        "ERC777.symbol": {
          "24": [
            3145,
            3159
          ]
        },
        "ERC777.totalSupply": {
          "0": [
            3800,
            3819
          ]
        },
        "ERC777.transfer": {
          "26": [
            4703,
            4775
          ],
          "27": [
            4824,
            4880
          ],
          "28": [
            4891,
            4935
          ],
          "29": [
            4946,
            5011
          ]
        },
        "ERC777.transferFrom": {
          "10": [
            8937,
            9009
          ],
          "11": [
            9019,
            9090
          ],
          "12": [
            9142,
            9203
          ],
          "13": [
            9214,
            9263
          ],
          "14": [
            9339,
            9419
          ],
          "15": [
            9429,
            9481
          ],
          "16": [
            9492,
            9562
          ],
          "17": [
            9573,
            9584
          ]
        }
      },
      "115": {},
      "116": {},
      "117": {},
      "119": {
        "Address.isContract": {
          "50": [
            1109,
            1124
          ]
        }
      },
      "121": {
        "Context._msgSender": {
          "7": [
            658,
            675
          ]
        }
      },
      "137": {},
      "91": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "IERC1820Registry",
    "IERC20",
    "IERC777",
    "IERC777Recipient",
    "IERC777Sender"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b63711461022b578063dd62ed3e1461023e578063fad8b32a14610277578063fc673c4f1461028a578063fe9d93031461029d57610116565b8063959b8c3f146101ea57806395d89b41146101fd5780639bd9bbc614610205578063a9059cbb1461021857610116565b806323b872dd116100e957806323b872dd14610183578063313ce56714610196578063556f0dc7146101a557806362ad1b83146101ac57806370a08231146101c157610116565b806306e485381461011b57806306fdde0314610139578063095ea7b31461014e57806318160ddd14610171575b600080fd5b6101236102b0565b60405161013091906115c1565b60405180910390f35b610141610312565b604051610130919061160e565b61016161015c3660046113d8565b61039b565b6040519015158152602001610130565b6001545b604051908152602001610130565b610161610191366004611308565b6103b3565b60405160128152602001610130565b6001610175565b6101bf6101ba366004611348565b61057c565b005b6101756101cf366004611298565b6001600160a01b031660009081526020819052604090205490565b6101bf6101f8366004611298565b6105b8565b6101416106d6565b6101bf610213366004611403565b6106e5565b6101616102263660046113d8565b610708565b6101616102393660046112d0565b6107bb565b61017561024c3660046112d0565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101bf610285366004611298565b61085d565b6101bf61029836600461145a565b610979565b6101bf6102ab3660046114d7565b6109b1565b6060600480548060200260200160405190810160405280929190818152602001828054801561030857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ea575b5050505050905090565b60606002805461032190611715565b80601f016020809104026020016040519081016040528092919081815260200182805461034d90611715565b80156103085780601f1061036f57610100808354040283529160200191610308565b820191906000526020600020905b81548152906001019060200180831161037d57509395945050505050565b6000336103a98185856109d0565b5060019392505050565b60006001600160a01b0383166103e45760405162461bcd60e51b81526004016103db90611621565b60405180910390fd5b6001600160a01b0384166104495760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016103db565b600033905061047a818686866040518060200160405280600081525060405180602001604052806000815250610af7565b6104a6818686866040518060200160405280600081525060405180602001604052806000815250610c2e565b6001600160a01b038086166000908152600860209081526040808320938516835292905220548381101561052e5760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084016103db565b610542868361053d87856116fe565b6109d0565b6105708287878760405180602001604052806000815250604051806020016040528060008152506000610d9d565b50600195945050505050565b61058633866107bb565b6105a25760405162461bcd60e51b81526004016103db90611665565b6105b185858585856001610f71565b5050505050565b336001600160a01b038216141561061d5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff161561066e573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561069d565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b60606003805461032190611715565b61070333848484604051806020016040528060008152506001610f71565b505050565b60006001600160a01b0383166107305760405162461bcd60e51b81526004016103db90611621565b6000339050610761818286866040518060200160405280600081525060405180602001604052806000815250610af7565b61078d818286866040518060200160405280600081525060405180602001604052806000815250610c2e565b6103a98182868660405180602001604052806000815250604051806020016040528060008152506000610d9d565b6000816001600160a01b0316836001600160a01b0316148061082657506001600160a01b03831660009081526005602052604090205460ff16801561082657506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061085657506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b0381163314156108c05760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff1615610914573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610940565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61098333856107bb565b61099f5760405162461bcd60e51b81526004016103db90611665565b6109ab84848484611054565b50505050565b6109cc33838360405180602001604052806000815250611054565b5050565b6001600160a01b038316610a345760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103db565b6001600160a01b038216610a965760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103db565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b158015610b7357600080fd5b505afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab91906112b4565b90506001600160a01b03811615610c2557604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610bf2908a908a908a908a908a908a90600401611567565b600060405180830381600087803b158015610c0c57600080fd5b505af1158015610c20573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610ca75760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b60648201526084016103db565b610cb184826116fe565b6001600160a01b038088166000908152602081905260408082209390935590871681529081208054869290610ce79084906116e6565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610d3f939291906116b1565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610d8c91815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b158015610e1957600080fd5b505afa158015610e2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5191906112b4565b90506001600160a01b03811615610ecd576040516223de2960e01b81526001600160a01b038216906223de2990610e96908b908b908b908b908b908b90600401611567565b600060405180830381600087803b158015610eb057600080fd5b505af1158015610ec4573d6000803e3d6000fd5b50505050610f67565b8115610f67576001600160a01b0386163b15610f675760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a4016103db565b5050505050505050565b6001600160a01b038616610fd25760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b6001600160a01b0385166110285760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f206164647265737360448201526064016103db565b33611037818888888888610af7565b611045818888888888610c2e565b610c2581888888888888610d9d565b6001600160a01b0384166110b55760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b336110c581866000878787610af7565b6001600160a01b0385166000908152602081905260409020548481101561113a5760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016103db565b61114485826116fe565b6001600160a01b038716600090815260208190526040812091909155600180548792906111729084906116fe565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a40988787876040516111c0939291906116b1565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b600082601f830112611221578081fd5b813567ffffffffffffffff8082111561123c5761123c611766565b604051601f8301601f19908116603f0116810190828211818310171561126457611264611766565b8160405283815286602085880101111561127c578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156112a9578081fd5b81356108568161177c565b6000602082840312156112c5578081fd5b81516108568161177c565b600080604083850312156112e2578081fd5b82356112ed8161177c565b915060208301356112fd8161177c565b809150509250929050565b60008060006060848603121561131c578081fd5b83356113278161177c565b925060208401356113378161177c565b929592945050506040919091013590565b600080600080600060a0868803121561135f578081fd5b853561136a8161177c565b9450602086013561137a8161177c565b935060408601359250606086013567ffffffffffffffff8082111561139d578283fd5b6113a989838a01611211565b935060808801359150808211156113be578283fd5b506113cb88828901611211565b9150509295509295909350565b600080604083850312156113ea578182fd5b82356113f58161177c565b946020939093013593505050565b600080600060608486031215611417578283fd5b83356114228161177c565b925060208401359150604084013567ffffffffffffffff811115611444578182fd5b61145086828701611211565b9150509250925092565b6000806000806080858703121561146f578384fd5b843561147a8161177c565b935060208501359250604085013567ffffffffffffffff8082111561149d578384fd5b6114a988838901611211565b935060608701359150808211156114be578283fd5b506114cb87828801611211565b91505092959194509250565b600080604083850312156114e9578182fd5b82359150602083013567ffffffffffffffff811115611506578182fd5b61151285828601611211565b9150509250929050565b60008151808452815b8181101561154157602081850181015186830182015201611525565b818111156115525782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c0608082018190526000906115a29083018561151c565b82810360a08401526115b4818561151c565b9998505050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156116025783516001600160a01b0316835292840192918401916001016115dd565b50909695505050505050565b600060208252610856602083018461151c565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b6000848252606060208301526116ca606083018561151c565b82810360408401526116dc818561151c565b9695505050505050565b600082198211156116f9576116f9611750565b500190565b60008282101561171057611710611750565b500390565b600181811c9082168061172957607f821691505b6020821081141561174a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461179157600080fd5b5056fea26469706673582212209a3ed23d5be312c793060f0643a3f4a6e7ed35572d170a720f27eeb138e1a6b364736f6c63430008030033",
  "deployedSourceMap": "1014:17147:114:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6674:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2910:98;;;:::i;:::-;;;;;;;:::i;8253:197::-;;;;;;:::i;:::-;;:::i;:::-;;;7473:14:144;;7466:22;7448:41;;7436:2;7421:18;8253:197:114;7403:92:144;3703:123:114;3807:12;;3703:123;;;13587:25:144;;;13575:2;13560:18;3703:123:114;13542:76:144;8815:776:114;;;;;;:::i;:::-;;:::i;3350:82::-;;;3423:2;14218:36:144;;14206:2;14191:18;3350:82:114;14173:87:144;3547:95:114;3634:1;3547:95;;6923:394;;;;;;:::i;:::-;;:::i;:::-;;3926:150;;;;;;:::i;:::-;-1:-1:-1;;;;;4047:22:114;4021:7;4047:22;;;;;;;;;;;;3926:150;5727:413;;;;;;:::i;:::-;;:::i;3064:102::-;;;:::i;4206:164::-;;;;;;:::i;:::-;;:::i;4601:439::-;;;;;;:::i;:::-;;:::i;5361:299::-;;;;;;:::i;:::-;;:::i;7964:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8080:19:114;;;8054:7;8080:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;7964:151;6204:404;;;;;;:::i;:::-;;:::i;7438:287::-;;;;;;:::i;:::-;;:::i;5170:128::-;;;;;;:::i;:::-;;:::i;6674:130::-;6740:16;6775:22;6768:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6768:29:114;;;;;;;;;;;;;;;;;;;;;;;6674:130;:::o;2910:98::-;2964:13;2996:5;2989:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2989:12:114;;2910:98;-1:-1:-1;;;;;2910:98:114:o;8253:197::-;8335:4;665:10:121;8390:32:114;665:10:121;8407:7:114;8416:5;8390:8;:32::i;:::-;-1:-1:-1;8439:4:114;;8253:197;-1:-1:-1;;;8253:197:114:o;8815:776::-;8921:4;-1:-1:-1;;;;;8945:23:114;;8937:72;;;;-1:-1:-1;;;8937:72:114;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;9027:20:114;;9019:71;;;;-1:-1:-1;;;9019:71:114;;12067:2:144;9019:71:114;;;12049:21:144;12106:2;12086:18;;;12079:30;12145:34;12125:18;;;12118:62;-1:-1:-1;;;12196:18:144;;;12189:36;12242:19;;9019:71:114;12039:228:144;9019:71:114;9101:15;665:10:121;9101:30:114;;9142:61;9160:7;9169:6;9177:9;9188:6;9142:61;;;;;;;;;;;;;;;;;;;;;;;;:17;:61::i;:::-;9214:49;9220:7;9229:6;9237:9;9248:6;9214:49;;;;;;;;;;;;;;;;;;;;;;;;:5;:49::i;:::-;-1:-1:-1;;;;;9301:19:114;;;9274:24;9301:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;9347:26;;;;9339:80;;;;-1:-1:-1;;;9339:80:114;;11657:2:144;9339:80:114;;;11639:21:144;11696:2;11676:18;;;11669:30;11735:34;11715:18;;;11708:62;-1:-1:-1;;;11786:18:144;;;11779:39;11835:19;;9339:80:114;11629:231:144;9339:80:114;9429:52;9438:6;9446:7;9455:25;9474:6;9455:16;:25;:::i;:::-;9429:8;:52::i;:::-;9492:70;9512:7;9521:6;9529:9;9540:6;9492:70;;;;;;;;;;;;;;;;;;;;;;;;9556:5;9492:19;:70::i;:::-;-1:-1:-1;9580:4:114;;8815:776;-1:-1:-1;;;;;8815:776:114:o;6923:394::-;7158:35;665:10:121;7186:6:114;7158:13;:35::i;:::-;7150:92;;;;-1:-1:-1;;;7150:92:114;;;;;;;:::i;:::-;7252:58;7258:6;7266:9;7277:6;7285:4;7291:12;7305:4;7252:5;:58::i;:::-;6923:394;;;;;:::o;5727:413::-;665:10:121;-1:-1:-1;;;;;5815:24:114;;;;5807:73;;;;-1:-1:-1;;;5807:73:114;;9546:2:144;5807:73:114;;;9528:21:144;9585:2;9565:18;;;9558:30;9624:34;9604:18;;;9597:62;-1:-1:-1;;;9675:18:144;;;9668:34;9719:19;;5807:73:114;9518:226:144;5807:73:114;-1:-1:-1;;;;;5895:27:114;;;;;;:17;:27;;;;;;;;5891:185;;;665:10:121;5945:38:114;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;5945:48:114;;;;;;;;;5938:55;;-1:-1:-1;;5938:55:114;;;5891:185;;;665:10:121;6024:24:114;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6024:34:114;;;;;;;;;:41;;-1:-1:-1;;6024:41:114;6061:4;6024:41;;;5891:185;6091:42;;665:10:121;;-1:-1:-1;;;;;6091:42:114;;;;;;;;5727:413;:::o;3064:102::-;3120:13;3152:7;3145:14;;;;;:::i;4206:164::-;4309:54;665:10:121;4329:9:114;4340:6;4348:4;4309:54;;;;;;;;;;;;4358:4;4309:5;:54::i;:::-;4206:164;;;:::o;4601:439::-;4687:4;-1:-1:-1;;;;;4711:23:114;;4703:72;;;;-1:-1:-1;;;4703:72:114;;;;;;;:::i;:::-;4786:12;665:10:121;4786:27:114;;4824:56;4842:4;4848;4854:9;4865:6;4824:56;;;;;;;;;;;;;;;;;;;;;;;;:17;:56::i;:::-;4891:44;4897:4;4903;4909:9;4920:6;4891:44;;;;;;;;;;;;;;;;;;;;;;;;:5;:44::i;:::-;4946:65;4966:4;4972;4978:9;4989:6;4946:65;;;;;;;;;;;;;;;;;;;;;;;;5005:5;4946:19;:65::i;5361:299::-;5461:4;5496:11;-1:-1:-1;;;;;5484:23:114;:8;-1:-1:-1;;;;;5484:23:114;;:120;;;-1:-1:-1;;;;;;5524:27:114;;;;;;:17;:27;;;;;;;;:79;;;;-1:-1:-1;;;;;;5556:37:114;;;;;;;:24;:37;;;;;;;;:47;;;;;;;;;;;;5555:48;5524:79;5484:169;;;-1:-1:-1;;;;;;5620:23:114;;;;;;;:10;:23;;;;;;;;:33;;;;;;;;;;;;5484:169;5477:176;5361:299;-1:-1:-1;;;5361:299:114:o;6204:404::-;-1:-1:-1;;;;;6289:24:114;;665:10:121;6289:24:114;;6281:70;;;;-1:-1:-1;;;6281:70:114;;9951:2:144;6281:70:114;;;9933:21:144;9990:2;9970:18;;;9963:30;10029:34;10009:18;;;10002:62;-1:-1:-1;;;10080:18:144;;;10073:31;10121:19;;6281:70:114;9923:223:144;6281:70:114;-1:-1:-1;;;;;6366:27:114;;;;;;:17;:27;;;;;;;;6362:185;;;665:10:121;6409:38:114;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;6409:48:114;;;;;;;;;:55;;-1:-1:-1;;6409:55:114;6460:4;6409:55;;;6362:185;;;665:10:121;6502:24:114;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6502:34:114;;;;;;;;;6495:41;;-1:-1:-1;;6495:41:114;;;6362:185;6562:39;;665:10:121;;-1:-1:-1;;;;;6562:39:114;;;;;;;;6204:404;:::o;7438:287::-;7581:36;665:10:121;7609:7:114;7581:13;:36::i;:::-;7573:93;;;;-1:-1:-1;;;7573:93:114;;;;;;;:::i;:::-;7676:42;7682:7;7691:6;7699:4;7705:12;7676:5;:42::i;:::-;7438:287;;;;:::o;5170:128::-;5254:37;665:10:121;5274:6:114;5282:4;5254:37;;;;;;;;;;;;:5;:37::i;:::-;5170:128;;:::o;14752:335::-;-1:-1:-1;;;;;14845:20:114;;14837:70;;;;-1:-1:-1;;;14837:70:114;;7926:2:144;14837:70:114;;;7908:21:144;7965:2;7945:18;;;7938:30;8004:34;7984:18;;;7977:62;-1:-1:-1;;;8055:18:144;;;8048:35;8100:19;;14837:70:114;7898:227:144;14837:70:114;-1:-1:-1;;;;;14925:21:114;;14917:69;;;;-1:-1:-1;;;14917:69:114;;13239:2:144;14917:69:114;;;13221:21:144;13278:2;13258:18;;;13251:30;13317:34;13297:18;;;13290:62;-1:-1:-1;;;13368:18:144;;;13361:33;13411:19;;14917:69:114;13211:225:144;14917:69:114;-1:-1:-1;;;;;14997:19:114;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:36;;;15048:32;;13587:25:144;;;15048:32:114;;13560:18:144;15048:32:114;;;;;;;14752:335;;;:::o;15560:484::-;15803:78;;-1:-1:-1;;;15803:78:114;;-1:-1:-1;;;;;6555:32:144;;15803:78:114;;;6537:51:144;1417:31:114;6604:18:144;;;6597:34;15781:19:114;;1168:42;;15803:41;;6510:18:144;;15803:78:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15781:100;-1:-1:-1;;;;;;15895:25:114;;;15891:147;;15936:91;;-1:-1:-1;;;15936:91:114;;-1:-1:-1;;;;;15936:39:114;;;;;:91;;15976:8;;15986:4;;15992:2;;15996:6;;16004:8;;16014:12;;15936:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15891:147;15560:484;;;;;;;:::o;14025:589::-;-1:-1:-1;;;;;14315:15:114;;14293:19;14315:15;;;;;;;;;;;14348:21;;;;14340:73;;;;-1:-1:-1;;;14340:73:114;;8735:2:144;14340:73:114;;;8717:21:144;8774:2;8754:18;;;8747:30;8813:34;8793:18;;;8786:62;-1:-1:-1;;;8864:18:144;;;8857:37;8911:19;;14340:73:114;8707:229:144;14340:73:114;14441:20;14455:6;14441:11;:20;:::i;:::-;-1:-1:-1;;;;;14423:15:114;;;:9;:15;;;;;;;;;;;:38;;;;14471:13;;;;;;;;:23;;14488:6;;14423:9;14471:23;;14488:6;;14471:23;:::i;:::-;;;;;;;;14531:2;-1:-1:-1;;;;;14510:56:114;14525:4;-1:-1:-1;;;;;14510:56:114;14515:8;-1:-1:-1;;;;;14510:56:114;;14535:6;14543:8;14553:12;14510:56;;;;;;;;:::i;:::-;;;;;;;;14596:2;-1:-1:-1;;;;;14581:26:114;14590:4;-1:-1:-1;;;;;14581:26:114;;14600:6;14581:26;;;;13587:25:144;;13575:2;13560:18;;13542:76;14581:26:114;;;;;;;;14025:589;;;;;;;:::o;16733:688::-;17012:79;;-1:-1:-1;;;17012:79:114;;-1:-1:-1;;;;;6555:32:144;;17012:79:114;;;6537:51:144;1514:34:114;6604:18:144;;;6597:34;16990:19:114;;1168:42;;17012:41;;6510:18:144;;17012:79:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16990:101;-1:-1:-1;;;;;;17105:25:114;;;17101:314;;17146:96;;-1:-1:-1;;;17146:96:114;;-1:-1:-1;;;;;17146:44:114;;;;;:96;;17191:8;;17201:4;;17207:2;;17211:6;;17219:8;;17229:12;;17146:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17101:314;;;17263:19;17259:156;;;-1:-1:-1;;;;;17307:13:114;;1078:20:119;1116:8;17298:106:114;;;;-1:-1:-1;;;17298:106:114;;10353:2:144;17298:106:114;;;10335:21:144;10392:2;10372:18;;;10365:30;10431:34;10411:18;;;10404:62;10502:34;10482:18;;;10475:62;-1:-1:-1;;;10553:19:144;;;10546:44;10607:19;;17298:106:114;10325:307:144;17298:106:114;16733:688;;;;;;;;:::o;12247:670::-;-1:-1:-1;;;;;12489:18:114;;12481:65;;;;-1:-1:-1;;;12481:65:114;;8332:2:144;12481:65:114;;;8314:21:144;8371:2;8351:18;;;8344:30;8410:34;8390:18;;;8383:62;-1:-1:-1;;;8461:18:144;;;8454:32;8503:19;;12481:65:114;8304:224:144;12481:65:114;-1:-1:-1;;;;;12564:16:114;;12556:61;;;;-1:-1:-1;;;12556:61:114;;12878:2:144;12556:61:114;;;12860:21:144;;;12897:18;;;12890:30;12956:34;12936:18;;;12929:62;13008:18;;12556:61:114;12850:182:144;12556:61:114;665:10:121;12670:69:114;665:10:121;12698:4:114;12704:2;12708:6;12716:8;12726:12;12670:17;:69::i;:::-;12750:57;12756:8;12766:4;12772:2;12776:6;12784:8;12794:12;12750:5;:57::i;:::-;12818:92;12838:8;12848:4;12854:2;12858:6;12866:8;12876:12;12890:19;12818;:92::i;13222:797::-;-1:-1:-1;;;;;13406:18:114;;13398:65;;;;-1:-1:-1;;;13398:65:114;;9143:2:144;13398:65:114;;;9125:21:144;9182:2;9162:18;;;9155:30;9221:34;9201:18;;;9194:62;-1:-1:-1;;;9272:18:144;;;9265:32;9314:19;;13398:65:114;9115:224:144;13398:65:114;665:10:121;13516:73:114;665:10:121;13544:4:114;13474:16;13562:6;13570:4;13576:12;13516:17;:73::i;:::-;-1:-1:-1;;;;;13723:15:114;;13701:19;13723:15;;;;;;;;;;;13756:21;;;;13748:69;;;;-1:-1:-1;;;13748:69:114;;12474:2:144;13748:69:114;;;12456:21:144;12513:2;12493:18;;;12486:30;12552:34;12532:18;;;12525:62;-1:-1:-1;;;12603:18:144;;;12596:33;12646:19;;13748:69:114;12446:225:144;13748:69:114;13845:20;13859:6;13845:11;:20;:::i;:::-;-1:-1:-1;;;;;13827:15:114;;:9;:15;;;;;;;;;;:38;;;;13875:12;:22;;13891:6;;13827:9;13875:22;;13891:6;;13875:22;:::i;:::-;;;;;;;;13930:4;-1:-1:-1;;;;;13913:50:114;13920:8;-1:-1:-1;;;;;13913:50:114;;13936:6;13944:4;13950:12;13913:50;;;;;;;;:::i;:::-;;;;;;;;13978:34;;13587:25:144;;;14001:1:114;;-1:-1:-1;;;;;13978:34:114;;;;;13575:2:144;13560:18;13978:34:114;;;;;;;13222:797;;;;;;:::o;14:738:144:-;;109:3;102:4;94:6;90:17;86:27;76:2;;131:5;124;117:20;76:2;171:6;158:20;197:18;234:2;230;227:10;224:2;;;240:18;;:::i;:::-;315:2;309:9;283:2;369:13;;-1:-1:-1;;365:22:144;;;389:2;361:31;357:40;345:53;;;413:18;;;433:22;;;410:46;407:2;;;459:18;;:::i;:::-;499:10;495:2;488:22;534:2;526:6;519:18;580:3;573:4;568:2;560:6;556:15;552:26;549:35;546:2;;;601:5;594;587:20;546:2;669;662:4;654:6;650:17;643:4;635:6;631:17;618:54;692:15;;;709:4;688:26;681:41;;;;-1:-1:-1;696:6:144;66:686;-1:-1:-1;;;66:686:144:o;757:257::-;;869:2;857:9;848:7;844:23;840:32;837:2;;;890:6;882;875:22;837:2;934:9;921:23;953:31;978:5;953:31;:::i;1019:261::-;;1142:2;1130:9;1121:7;1117:23;1113:32;1110:2;;;1163:6;1155;1148:22;1110:2;1200:9;1194:16;1219:31;1244:5;1219:31;:::i;1285:398::-;;;1414:2;1402:9;1393:7;1389:23;1385:32;1382:2;;;1435:6;1427;1420:22;1382:2;1479:9;1466:23;1498:31;1523:5;1498:31;:::i;:::-;1548:5;-1:-1:-1;1605:2:144;1590:18;;1577:32;1618:33;1577:32;1618:33;:::i;:::-;1670:7;1660:17;;;1372:311;;;;;:::o;1688:466::-;;;;1834:2;1822:9;1813:7;1809:23;1805:32;1802:2;;;1855:6;1847;1840:22;1802:2;1899:9;1886:23;1918:31;1943:5;1918:31;:::i;:::-;1968:5;-1:-1:-1;2025:2:144;2010:18;;1997:32;2038:33;1997:32;2038:33;:::i;:::-;1792:362;;2090:7;;-1:-1:-1;;;2144:2:144;2129:18;;;;2116:32;;1792:362::o;2159:915::-;;;;;;2357:3;2345:9;2336:7;2332:23;2328:33;2325:2;;;2379:6;2371;2364:22;2325:2;2423:9;2410:23;2442:31;2467:5;2442:31;:::i;:::-;2492:5;-1:-1:-1;2549:2:144;2534:18;;2521:32;2562:33;2521:32;2562:33;:::i;:::-;2614:7;-1:-1:-1;2668:2:144;2653:18;;2640:32;;-1:-1:-1;2723:2:144;2708:18;;2695:32;2746:18;2776:14;;;2773:2;;;2808:6;2800;2793:22;2773:2;2836:49;2877:7;2868:6;2857:9;2853:22;2836:49;:::i;:::-;2826:59;;2938:3;2927:9;2923:19;2910:33;2894:49;;2968:2;2958:8;2955:16;2952:2;;;2989:6;2981;2974:22;2952:2;;3017:51;3060:7;3049:8;3038:9;3034:24;3017:51;:::i;:::-;3007:61;;;2315:759;;;;;;;;:::o;3079:325::-;;;3208:2;3196:9;3187:7;3183:23;3179:32;3176:2;;;3229:6;3221;3214:22;3176:2;3273:9;3260:23;3292:31;3317:5;3292:31;:::i;:::-;3342:5;3394:2;3379:18;;;;3366:32;;-1:-1:-1;;;3166:238:144:o;3409:543::-;;;;3564:2;3552:9;3543:7;3539:23;3535:32;3532:2;;;3585:6;3577;3570:22;3532:2;3629:9;3616:23;3648:31;3673:5;3648:31;:::i;:::-;3698:5;-1:-1:-1;3750:2:144;3735:18;;3722:32;;-1:-1:-1;3805:2:144;3790:18;;3777:32;3832:18;3821:30;;3818:2;;;3869:6;3861;3854:22;3818:2;3897:49;3938:7;3929:6;3918:9;3914:22;3897:49;:::i;:::-;3887:59;;;3522:430;;;;;:::o;3957:773::-;;;;;4138:3;4126:9;4117:7;4113:23;4109:33;4106:2;;;4160:6;4152;4145:22;4106:2;4204:9;4191:23;4223:31;4248:5;4223:31;:::i;:::-;4273:5;-1:-1:-1;4325:2:144;4310:18;;4297:32;;-1:-1:-1;4380:2:144;4365:18;;4352:32;4403:18;4433:14;;;4430:2;;;4465:6;4457;4450:22;4430:2;4493:49;4534:7;4525:6;4514:9;4510:22;4493:49;:::i;:::-;4483:59;;4595:2;4584:9;4580:18;4567:32;4551:48;;4624:2;4614:8;4611:16;4608:2;;;4645:6;4637;4630:22;4608:2;;4673:51;4716:7;4705:8;4694:9;4690:24;4673:51;:::i;:::-;4663:61;;;4096:634;;;;;;;:::o;4735:408::-;;;4873:2;4861:9;4852:7;4848:23;4844:32;4841:2;;;4894:6;4886;4879:22;4841:2;4935:9;4922:23;4912:33;;4996:2;4985:9;4981:18;4968:32;5023:18;5015:6;5012:30;5009:2;;;5060:6;5052;5045:22;5009:2;5088:49;5129:7;5120:6;5109:9;5105:22;5088:49;:::i;:::-;5078:59;;;4831:312;;;;;:::o;5148:475::-;;5227:5;5221:12;5254:6;5249:3;5242:19;5279:3;5291:162;5305:6;5302:1;5299:13;5291:162;;;5367:4;5423:13;;;5419:22;;5413:29;5395:11;;;5391:20;;5384:59;5320:12;5291:162;;;5471:6;5468:1;5465:13;5462:2;;;5537:3;5530:4;5521:6;5516:3;5512:16;5508:27;5501:40;5462:2;-1:-1:-1;5605:2:144;5584:15;-1:-1:-1;;5580:29:144;5571:39;;;;5612:4;5567:50;;5197:426;-1:-1:-1;;5197:426:144:o;5628:730::-;-1:-1:-1;;;;;5971:15:144;;;5953:34;;6023:15;;;6018:2;6003:18;;5996:43;6075:15;;6070:2;6055:18;;6048:43;6122:2;6107:18;;6100:34;;;6171:3;6165;6150:19;;6143:32;;;5628:730;;6198:45;;6223:19;;6215:6;6198:45;:::i;:::-;6292:9;6284:6;6280:22;6274:3;6263:9;6259:19;6252:51;6320:32;6345:6;6337;6320:32;:::i;:::-;6312:40;5905:453;-1:-1:-1;;;;;;;;;5905:453:144:o;6642:661::-;6813:2;6865:21;;;6935:13;;6838:18;;;6957:22;;;6642:661;;6813:2;7036:15;;;;7010:2;6995:18;;;6642:661;7082:195;7096:6;7093:1;7090:13;7082:195;;;7161:13;;-1:-1:-1;;;;;7157:39:144;7145:52;;7252:15;;;;7217:12;;;;7193:1;7111:9;7082:195;;;-1:-1:-1;7294:3:144;;6793:510;-1:-1:-1;;;;;;6793:510:144:o;7500:219::-;;7649:2;7638:9;7631:21;7669:44;7709:2;7698:9;7694:18;7686:6;7669:44;:::i;10637:400::-;10839:2;10821:21;;;10878:2;10858:18;;;10851:30;10917:34;10912:2;10897:18;;10890:62;-1:-1:-1;;;10983:2:144;10968:18;;10961:34;11027:3;11012:19;;10811:226::o;11042:408::-;11244:2;11226:21;;;11283:2;11263:18;;;11256:30;11322:34;11317:2;11302:18;;11295:62;-1:-1:-1;;;11388:2:144;11373:18;;11366:42;11440:3;11425:19;;11216:234::o;13623:448::-;;13844:6;13833:9;13826:25;13887:2;13882;13871:9;13867:18;13860:30;13913:44;13953:2;13942:9;13938:18;13930:6;13913:44;:::i;:::-;14005:9;13997:6;13993:22;13988:2;13977:9;13973:18;13966:50;14033:32;14058:6;14050;14033:32;:::i;:::-;14025:40;13816:255;-1:-1:-1;;;;;;13816:255:144:o;14265:128::-;;14336:1;14332:6;14329:1;14326:13;14323:2;;;14342:18;;:::i;:::-;-1:-1:-1;14378:9:144;;14313:80::o;14398:125::-;;14466:1;14463;14460:8;14457:2;;;14471:18;;:::i;:::-;-1:-1:-1;14508:9:144;;14447:76::o;14528:380::-;14607:1;14603:12;;;;14650;;;14671:2;;14725:4;14717:6;14713:17;14703:27;;14671:2;14778;14770:6;14767:14;14747:18;14744:38;14741:2;;;14824:10;14819:3;14815:20;14812:1;14805:31;14859:4;14856:1;14849:15;14887:4;14884:1;14877:15;14741:2;;14583:325;;;:::o;14913:127::-;14974:10;14969:3;14965:20;14962:1;14955:31;15005:4;15002:1;14995:15;15029:4;15026:1;15019:15;15045:127;15106:10;15101:3;15097:20;15094:1;15087:31;15137:4;15134:1;15127:15;15161:4;15158:1;15151:15;15177:131;-1:-1:-1;;;;;15252:31:144;;15242:42;;15232:2;;15298:1;15295;15288:12;15232:2;15222:86;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC777} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. Support for ERC20 is included in this contract, as specified by the EIP: both the ERC777 and ERC20 interfaces can be safely used when interacting with it. Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token movements. Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there are no special restrictions in the amount of tokens that created, moved, or destroyed. This makes integration with ERC20 applications seamless.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Note that accounts cannot have allowance issued by their operators."
      },
      "authorizeOperator(address)": {
        "details": "See {IERC777-authorizeOperator}."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by an account (`tokenHolder`)."
      },
      "burn(uint256,bytes)": {
        "details": "See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
      },
      "constructor": {
        "details": "`defaultOperators` may be an empty array."
      },
      "decimals()": {
        "details": "See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
      },
      "defaultOperators()": {
        "details": "See {IERC777-defaultOperators}."
      },
      "granularity()": {
        "details": "See {IERC777-granularity}. This implementation always returns `1`."
      },
      "isOperatorFor(address,address)": {
        "details": "See {IERC777-isOperatorFor}."
      },
      "name()": {
        "details": "See {IERC777-name}."
      },
      "operatorBurn(address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events."
      },
      "operatorSend(address,address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events."
      },
      "revokeOperator(address)": {
        "details": "See {IERC777-revokeOperator}."
      },
      "send(address,uint256,bytes)": {
        "details": "See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
      },
      "symbol()": {
        "details": "See {IERC777-symbol}."
      },
      "totalSupply()": {
        "details": "See {IERC777-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
      }
    },
    "version": 1
  },
  "offset": [
    1014,
    18161
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x959B8C3F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD95B6371 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x29D JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x218 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C1 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x160E JUMP JUMPDEST PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x1308 JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1298 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x175 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x145A JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x1715 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0x1715 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x308 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x308 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37D JUMPI POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3A9 DUP2 DUP6 DUP6 PUSH2 0x9D0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x1621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x47A DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x4A6 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x616C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH2 0x542 DUP7 DUP4 PUSH2 0x53D DUP8 DUP6 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x570 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD9D JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x586 CALLER DUP7 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0x5B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0xF71 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x66E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x69D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x1715 JUMP JUMPDEST PUSH2 0x703 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0xF71 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x1621 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x761 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x78D DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x3A9 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x826 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x826 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x856 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x914 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x940 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x983 CALLER DUP6 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0x9AB DUP5 DUP5 DUP5 DUP5 PUSH2 0x1054 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9CC CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1054 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AD5CBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x75AB9782 SWAP1 PUSH2 0xBF2 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH2 0xCB1 DUP5 DUP3 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xCE7 SWAP1 DUP5 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD3F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0xD8C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE51 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xECD JUMPI PUSH1 0x40 MLOAD PUSH3 0x23DE29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH3 0x23DE29 SWAP1 PUSH2 0xE96 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xF67 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF67 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EXTCODESIZE ISZERO PUSH2 0xF67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x64 DUP3 ADD MSTORE PUSH13 0x1AD95B9CD49958DA5C1A595B9D PUSH1 0x9A SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x3DB JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0xFD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DB JUMP JUMPDEST CALLER PUSH2 0x1037 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x1045 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xC25 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST CALLER PUSH2 0x10C5 DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH2 0x1144 DUP6 DUP3 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1172 SWAP1 DUP5 SWAP1 PUSH2 0x16FE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11C0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1221 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x123C JUMPI PUSH2 0x123C PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1264 JUMPI PUSH2 0x1264 PUSH2 0x1766 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x127C JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP3 DUP4 ADD PUSH1 0x20 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x856 DUP2 PUSH2 0x177C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x856 DUP2 PUSH2 0x177C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12E2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12ED DUP2 PUSH2 0x177C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x12FD DUP2 PUSH2 0x177C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x131C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1327 DUP2 PUSH2 0x177C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1337 DUP2 PUSH2 0x177C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x135F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x136A DUP2 PUSH2 0x177C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x137A DUP2 PUSH2 0x177C JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x139D JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x13A9 DUP10 DUP4 DUP11 ADD PUSH2 0x1211 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x13BE JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x13CB DUP9 DUP3 DUP10 ADD PUSH2 0x1211 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13EA JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13F5 DUP2 PUSH2 0x177C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1417 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1422 DUP2 PUSH2 0x177C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1444 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1450 DUP7 DUP3 DUP8 ADD PUSH2 0x1211 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x146F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x147A DUP2 PUSH2 0x177C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x149D JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x14A9 DUP9 DUP4 DUP10 ADD PUSH2 0x1211 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x14BE JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x14CB DUP8 DUP3 DUP9 ADD PUSH2 0x1211 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14E9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1506 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1512 DUP6 DUP3 DUP7 ADD PUSH2 0x1211 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1541 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1525 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1552 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x15A2 SWAP1 DUP4 ADD DUP6 PUSH2 0x151C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x15B4 DUP2 DUP6 PUSH2 0x151C JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1602 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x15DD JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x856 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 MSTORE PUSH1 0x60 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x16CA PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x151C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x16DC DUP2 DUP6 PUSH2 0x151C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x16F9 JUMPI PUSH2 0x16F9 PUSH2 0x1750 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1710 JUMPI PUSH2 0x1710 PUSH2 0x1750 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1729 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x174A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 RETURNDATACOPY 0xD2 RETURNDATASIZE JUMPDEST 0xE3 SLT 0xC7 SWAP4 MOD 0xF MOD NUMBER LOG3 DELEGATECALL 0xA6 0xE7 0xED CALLDATALOAD JUMPI 0x2D OR EXP PUSH19 0xF27EEB138E1A6B364736F6C63430008030033 ",
  "pcMap": {
    "0": {
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "5": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "CALLVALUE",
      "path": "114"
    },
    "6": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "7": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "8": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "12": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "REVERT",
      "path": "114"
    },
    "16": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "17": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "POP",
      "path": "114"
    },
    "18": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "21": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "LT",
      "path": "114"
    },
    "22": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "26": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "CALLDATALOAD",
      "path": "114"
    },
    "29": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "SHR",
      "path": "114"
    },
    "32": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "33": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x959B8C3F"
    },
    "38": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "GT",
      "path": "114"
    },
    "39": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "43": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "44": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0xD95B6371"
    },
    "49": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "GT",
      "path": "114"
    },
    "50": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "54": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "55": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0xD95B6371"
    },
    "60": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "61": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x22B"
    },
    "64": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "65": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "66": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "72": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x23E"
    },
    "75": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "76": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "77": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0xFAD8B32A"
    },
    "82": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "83": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x277"
    },
    "86": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "87": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "88": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0xFC673C4F"
    },
    "93": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "94": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x28A"
    },
    "97": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "98": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "99": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0xFE9D9303"
    },
    "104": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "105": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x29D"
    },
    "108": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "109": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x116"
    },
    "112": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMP",
      "path": "114"
    },
    "113": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "114": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "115": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x959B8C3F"
    },
    "120": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "121": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1EA"
    },
    "124": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "125": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "126": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "132": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1FD"
    },
    "135": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "136": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "137": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x9BD9BBC6"
    },
    "142": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "143": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x205"
    },
    "146": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "147": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "148": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0xA9059CBB"
    },
    "153": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "154": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x218"
    },
    "157": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "158": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x116"
    },
    "161": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMP",
      "path": "114"
    },
    "162": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "163": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "164": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x23B872DD"
    },
    "169": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "GT",
      "path": "114"
    },
    "170": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "174": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "175": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "181": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x183"
    },
    "184": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "185": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "186": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x313CE567"
    },
    "191": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "192": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x196"
    },
    "195": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "196": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "197": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x556F0DC7"
    },
    "202": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "203": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1A5"
    },
    "206": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "207": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "208": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x62AD1B83"
    },
    "213": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "214": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1AC"
    },
    "217": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "218": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "219": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x70A08231"
    },
    "224": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "225": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1C1"
    },
    "228": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "229": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x116"
    },
    "232": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMP",
      "path": "114"
    },
    "233": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "234": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "235": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x6E48538"
    },
    "240": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "241": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "245": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "246": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x6FDDE03"
    },
    "251": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "252": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x139"
    },
    "255": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "256": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "257": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x95EA7B3"
    },
    "262": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "263": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x14E"
    },
    "266": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "267": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "268": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x18160DDD"
    },
    "273": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "EQ",
      "path": "114"
    },
    "274": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x171"
    },
    "277": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "278": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "279": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "DUP1",
      "path": "114"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1014,
        18161
      ],
      "op": "REVERT",
      "path": "114"
    },
    "283": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "284": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x123"
    },
    "287": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x2B0"
    },
    "290": {
      "fn": "ERC777.defaultOperators",
      "jump": "i",
      "offset": [
        6674,
        6804
      ],
      "op": "JUMP",
      "path": "114"
    },
    "291": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "292": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "294": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "295": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x130"
    },
    "298": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "299": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "300": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x15C1"
    },
    "303": {
      "fn": "ERC777.defaultOperators",
      "jump": "i",
      "offset": [
        6674,
        6804
      ],
      "op": "JUMP",
      "path": "114"
    },
    "304": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "305": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "307": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "308": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "DUP1",
      "path": "114"
    },
    "309": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "310": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "SUB",
      "path": "114"
    },
    "311": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "312": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "RETURN",
      "path": "114"
    },
    "313": {
      "fn": "ERC777.name",
      "offset": [
        2910,
        3008
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "314": {
      "fn": "ERC777.name",
      "offset": [
        2910,
        3008
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x141"
    },
    "317": {
      "fn": "ERC777.name",
      "offset": [
        2910,
        3008
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x312"
    },
    "320": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2910,
        3008
      ],
      "op": "JUMP",
      "path": "114"
    },
    "321": {
      "fn": "ERC777.name",
      "offset": [
        2910,
        3008
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "322": {
      "fn": "ERC777.name",
      "offset": [
        2910,
        3008
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "324": {
      "fn": "ERC777.name",
      "offset": [
        2910,
        3008
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "325": {
      "fn": "ERC777.name",
      "offset": [
        2910,
        3008
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x130"
    },
    "328": {
      "fn": "ERC777.name",
      "offset": [
        2910,
        3008
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "329": {
      "fn": "ERC777.name",
      "offset": [
        2910,
        3008
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "330": {
      "fn": "ERC777.name",
      "offset": [
        2910,
        3008
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x160E"
    },
    "333": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2910,
        3008
      ],
      "op": "JUMP",
      "path": "114"
    },
    "334": {
      "fn": "ERC777.approve",
      "offset": [
        8253,
        8450
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "335": {
      "fn": "ERC777.approve",
      "offset": [
        8253,
        8450
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x161"
    },
    "338": {
      "fn": "ERC777.approve",
      "offset": [
        8253,
        8450
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x15C"
    },
    "341": {
      "fn": "ERC777.approve",
      "offset": [
        8253,
        8450
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "342": {
      "fn": "ERC777.approve",
      "offset": [
        8253,
        8450
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "344": {
      "fn": "ERC777.approve",
      "offset": [
        8253,
        8450
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x13D8"
    },
    "347": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8253,
        8450
      ],
      "op": "JUMP",
      "path": "114"
    },
    "348": {
      "fn": "ERC777.approve",
      "offset": [
        8253,
        8450
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "349": {
      "fn": "ERC777.approve",
      "offset": [
        8253,
        8450
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x39B"
    },
    "352": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8253,
        8450
      ],
      "op": "JUMP",
      "path": "114"
    },
    "353": {
      "fn": "ERC777.approve",
      "offset": [
        8253,
        8450
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "354": {
      "fn": "ERC777.approve",
      "offset": [
        8253,
        8450
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "356": {
      "fn": "ERC777.approve",
      "offset": [
        8253,
        8450
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "357": {
      "op": "SWAP1"
    },
    "358": {
      "op": "ISZERO"
    },
    "359": {
      "op": "ISZERO"
    },
    "360": {
      "op": "DUP2"
    },
    "361": {
      "op": "MSTORE"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "364": {
      "op": "ADD"
    },
    "365": {
      "fn": "ERC777.approve",
      "offset": [
        8253,
        8450
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x130"
    },
    "368": {
      "op": "JUMP"
    },
    "369": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3703,
        3826
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "370": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3807,
        3819
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 0,
      "value": "0x1"
    },
    "372": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3807,
        3819
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "373": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3703,
        3826
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "374": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3703,
        3826
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "376": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3703,
        3826
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "377": {
      "op": "SWAP1"
    },
    "378": {
      "op": "DUP2"
    },
    "379": {
      "op": "MSTORE"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "382": {
      "op": "ADD"
    },
    "383": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3703,
        3826
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x130"
    },
    "386": {
      "op": "JUMP"
    },
    "387": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8815,
        9591
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "388": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8815,
        9591
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x161"
    },
    "391": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8815,
        9591
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x191"
    },
    "394": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8815,
        9591
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "395": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8815,
        9591
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "397": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8815,
        9591
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1308"
    },
    "400": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        8815,
        9591
      ],
      "op": "JUMP",
      "path": "114"
    },
    "401": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8815,
        9591
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "402": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8815,
        9591
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3B3"
    },
    "405": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        8815,
        9591
      ],
      "op": "JUMP",
      "path": "114"
    },
    "406": {
      "fn": "ERC777.decimals",
      "offset": [
        3350,
        3432
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "407": {
      "fn": "ERC777.decimals",
      "offset": [
        3350,
        3432
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "409": {
      "fn": "ERC777.decimals",
      "offset": [
        3350,
        3432
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "410": {
      "fn": "ERC777.decimals",
      "offset": [
        3423,
        3425
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 1,
      "value": "0x12"
    },
    "412": {
      "op": "DUP2"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "416": {
      "op": "ADD"
    },
    "417": {
      "fn": "ERC777.decimals",
      "offset": [
        3350,
        3432
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x130"
    },
    "420": {
      "op": "JUMP"
    },
    "421": {
      "fn": "ERC777.granularity",
      "offset": [
        3547,
        3642
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "422": {
      "fn": "ERC777.granularity",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 2,
      "value": "0x1"
    },
    "424": {
      "fn": "ERC777.granularity",
      "offset": [
        3547,
        3642
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x175"
    },
    "427": {
      "fn": "ERC777.granularity",
      "offset": [
        3547,
        3642
      ],
      "op": "JUMP",
      "path": "114"
    },
    "428": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "429": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1BF"
    },
    "432": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1BA"
    },
    "435": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "436": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "438": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1348"
    },
    "441": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        6923,
        7317
      ],
      "op": "JUMP",
      "path": "114"
    },
    "442": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "443": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x57C"
    },
    "446": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        6923,
        7317
      ],
      "op": "JUMP",
      "path": "114"
    },
    "447": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "448": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "STOP",
      "path": "114"
    },
    "449": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3926,
        4076
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "450": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3926,
        4076
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x175"
    },
    "453": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3926,
        4076
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1CF"
    },
    "456": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3926,
        4076
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "457": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3926,
        4076
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "459": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3926,
        4076
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1298"
    },
    "462": {
      "fn": "ERC777.balanceOf",
      "jump": "i",
      "offset": [
        3926,
        4076
      ],
      "op": "JUMP",
      "path": "114"
    },
    "463": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3926,
        4076
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "470": {
      "op": "SHL"
    },
    "471": {
      "op": "SUB"
    },
    "472": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4047,
        4069
      ],
      "op": "AND",
      "path": "114",
      "statement": 3
    },
    "473": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4021,
        4028
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "475": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4047,
        4069
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "476": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4047,
        4069
      ],
      "op": "DUP2",
      "path": "114"
    },
    "477": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4047,
        4069
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "478": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4047,
        4069
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "480": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4047,
        4069
      ],
      "op": "DUP2",
      "path": "114"
    },
    "481": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4047,
        4069
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "482": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4047,
        4069
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "483": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4047,
        4069
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "485": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4047,
        4069
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "486": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4047,
        4069
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "487": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4047,
        4069
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "488": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4047,
        4069
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "489": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3926,
        4076
      ],
      "op": "JUMP",
      "path": "114"
    },
    "490": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5727,
        6140
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "491": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5727,
        6140
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1BF"
    },
    "494": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5727,
        6140
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1F8"
    },
    "497": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5727,
        6140
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "498": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5727,
        6140
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "500": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5727,
        6140
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1298"
    },
    "503": {
      "fn": "ERC777.authorizeOperator",
      "jump": "i",
      "offset": [
        5727,
        6140
      ],
      "op": "JUMP",
      "path": "114"
    },
    "504": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5727,
        6140
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "505": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5727,
        6140
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x5B8"
    },
    "508": {
      "fn": "ERC777.authorizeOperator",
      "jump": "i",
      "offset": [
        5727,
        6140
      ],
      "op": "JUMP",
      "path": "114"
    },
    "509": {
      "fn": "ERC777.symbol",
      "offset": [
        3064,
        3166
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "510": {
      "fn": "ERC777.symbol",
      "offset": [
        3064,
        3166
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x141"
    },
    "513": {
      "fn": "ERC777.symbol",
      "offset": [
        3064,
        3166
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x6D6"
    },
    "516": {
      "fn": "ERC777.symbol",
      "jump": "i",
      "offset": [
        3064,
        3166
      ],
      "op": "JUMP",
      "path": "114"
    },
    "517": {
      "fn": "ERC777.send",
      "offset": [
        4206,
        4370
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "518": {
      "fn": "ERC777.send",
      "offset": [
        4206,
        4370
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1BF"
    },
    "521": {
      "fn": "ERC777.send",
      "offset": [
        4206,
        4370
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x213"
    },
    "524": {
      "fn": "ERC777.send",
      "offset": [
        4206,
        4370
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "525": {
      "fn": "ERC777.send",
      "offset": [
        4206,
        4370
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "527": {
      "fn": "ERC777.send",
      "offset": [
        4206,
        4370
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1403"
    },
    "530": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4206,
        4370
      ],
      "op": "JUMP",
      "path": "114"
    },
    "531": {
      "fn": "ERC777.send",
      "offset": [
        4206,
        4370
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "532": {
      "fn": "ERC777.send",
      "offset": [
        4206,
        4370
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x6E5"
    },
    "535": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4206,
        4370
      ],
      "op": "JUMP",
      "path": "114"
    },
    "536": {
      "fn": "ERC777.transfer",
      "offset": [
        4601,
        5040
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "537": {
      "fn": "ERC777.transfer",
      "offset": [
        4601,
        5040
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x161"
    },
    "540": {
      "fn": "ERC777.transfer",
      "offset": [
        4601,
        5040
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x226"
    },
    "543": {
      "fn": "ERC777.transfer",
      "offset": [
        4601,
        5040
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "544": {
      "fn": "ERC777.transfer",
      "offset": [
        4601,
        5040
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "546": {
      "fn": "ERC777.transfer",
      "offset": [
        4601,
        5040
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x13D8"
    },
    "549": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4601,
        5040
      ],
      "op": "JUMP",
      "path": "114"
    },
    "550": {
      "fn": "ERC777.transfer",
      "offset": [
        4601,
        5040
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "551": {
      "fn": "ERC777.transfer",
      "offset": [
        4601,
        5040
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x708"
    },
    "554": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4601,
        5040
      ],
      "op": "JUMP",
      "path": "114"
    },
    "555": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5361,
        5660
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "556": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5361,
        5660
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x161"
    },
    "559": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5361,
        5660
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x239"
    },
    "562": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5361,
        5660
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "563": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5361,
        5660
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "565": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5361,
        5660
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x12D0"
    },
    "568": {
      "fn": "ERC777.isOperatorFor",
      "jump": "i",
      "offset": [
        5361,
        5660
      ],
      "op": "JUMP",
      "path": "114"
    },
    "569": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5361,
        5660
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "570": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5361,
        5660
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x7BB"
    },
    "573": {
      "fn": "ERC777.isOperatorFor",
      "jump": "i",
      "offset": [
        5361,
        5660
      ],
      "op": "JUMP",
      "path": "114"
    },
    "574": {
      "fn": "ERC777.allowance",
      "offset": [
        7964,
        8115
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "575": {
      "fn": "ERC777.allowance",
      "offset": [
        7964,
        8115
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x175"
    },
    "578": {
      "fn": "ERC777.allowance",
      "offset": [
        7964,
        8115
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x24C"
    },
    "581": {
      "fn": "ERC777.allowance",
      "offset": [
        7964,
        8115
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "582": {
      "fn": "ERC777.allowance",
      "offset": [
        7964,
        8115
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "584": {
      "fn": "ERC777.allowance",
      "offset": [
        7964,
        8115
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x12D0"
    },
    "587": {
      "fn": "ERC777.allowance",
      "jump": "i",
      "offset": [
        7964,
        8115
      ],
      "op": "JUMP",
      "path": "114"
    },
    "588": {
      "fn": "ERC777.allowance",
      "offset": [
        7964,
        8115
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "SUB"
    },
    "597": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8099
      ],
      "op": "SWAP2",
      "path": "114",
      "statement": 4
    },
    "598": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8099
      ],
      "op": "DUP3",
      "path": "114"
    },
    "599": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8099
      ],
      "op": "AND",
      "path": "114"
    },
    "600": {
      "fn": "ERC777.allowance",
      "offset": [
        8054,
        8061
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "602": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8099
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "603": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8099
      ],
      "op": "DUP2",
      "path": "114"
    },
    "604": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8099
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "605": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8091
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x8"
    },
    "607": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8099
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "609": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8099
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "610": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8099
      ],
      "op": "DUP2",
      "path": "114"
    },
    "611": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8099
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "612": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8099
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "614": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8099
      ],
      "op": "DUP1",
      "path": "114"
    },
    "615": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8099
      ],
      "op": "DUP4",
      "path": "114"
    },
    "616": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8099
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "617": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8108
      ],
      "op": "SWAP4",
      "path": "114"
    },
    "618": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8108
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "619": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8108
      ],
      "op": "SWAP5",
      "path": "114"
    },
    "620": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8108
      ],
      "op": "AND",
      "path": "114"
    },
    "621": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8108
      ],
      "op": "DUP3",
      "path": "114"
    },
    "622": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8108
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "623": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8108
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "624": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8108
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "625": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8108
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "626": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8108
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "627": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8108
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "628": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8108
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "629": {
      "fn": "ERC777.allowance",
      "offset": [
        8080,
        8108
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "630": {
      "fn": "ERC777.allowance",
      "offset": [
        7964,
        8115
      ],
      "op": "JUMP",
      "path": "114"
    },
    "631": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6204,
        6608
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "632": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6204,
        6608
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1BF"
    },
    "635": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6204,
        6608
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x285"
    },
    "638": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6204,
        6608
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "639": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6204,
        6608
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "641": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6204,
        6608
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1298"
    },
    "644": {
      "fn": "ERC777.revokeOperator",
      "jump": "i",
      "offset": [
        6204,
        6608
      ],
      "op": "JUMP",
      "path": "114"
    },
    "645": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6204,
        6608
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "646": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6204,
        6608
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x85D"
    },
    "649": {
      "fn": "ERC777.revokeOperator",
      "jump": "i",
      "offset": [
        6204,
        6608
      ],
      "op": "JUMP",
      "path": "114"
    },
    "650": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7438,
        7725
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "651": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7438,
        7725
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1BF"
    },
    "654": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7438,
        7725
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x298"
    },
    "657": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7438,
        7725
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "658": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7438,
        7725
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "660": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7438,
        7725
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x145A"
    },
    "663": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7438,
        7725
      ],
      "op": "JUMP",
      "path": "114"
    },
    "664": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7438,
        7725
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "665": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7438,
        7725
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x979"
    },
    "668": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7438,
        7725
      ],
      "op": "JUMP",
      "path": "114"
    },
    "669": {
      "fn": "ERC777.burn",
      "offset": [
        5170,
        5298
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "670": {
      "fn": "ERC777.burn",
      "offset": [
        5170,
        5298
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1BF"
    },
    "673": {
      "fn": "ERC777.burn",
      "offset": [
        5170,
        5298
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x2AB"
    },
    "676": {
      "fn": "ERC777.burn",
      "offset": [
        5170,
        5298
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "677": {
      "fn": "ERC777.burn",
      "offset": [
        5170,
        5298
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "679": {
      "fn": "ERC777.burn",
      "offset": [
        5170,
        5298
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x14D7"
    },
    "682": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5170,
        5298
      ],
      "op": "JUMP",
      "path": "114"
    },
    "683": {
      "fn": "ERC777.burn",
      "offset": [
        5170,
        5298
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "684": {
      "fn": "ERC777.burn",
      "offset": [
        5170,
        5298
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x9B1"
    },
    "687": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5170,
        5298
      ],
      "op": "JUMP",
      "path": "114"
    },
    "688": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "689": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6740,
        6756
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x60"
    },
    "691": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6775,
        6797
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 5,
      "value": "0x4"
    },
    "693": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "DUP1",
      "path": "114"
    },
    "694": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "695": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "DUP1",
      "path": "114"
    },
    "696": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "698": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "MUL",
      "path": "114"
    },
    "699": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "701": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "ADD",
      "path": "114"
    },
    "702": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "704": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "705": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "706": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "DUP2",
      "path": "114"
    },
    "707": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "ADD",
      "path": "114"
    },
    "708": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "710": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "711": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "DUP1",
      "path": "114"
    },
    "712": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "SWAP3",
      "path": "114"
    },
    "713": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "714": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "715": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "DUP2",
      "path": "114"
    },
    "716": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "DUP2",
      "path": "114"
    },
    "717": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "718": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "720": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "ADD",
      "path": "114"
    },
    "721": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "DUP3",
      "path": "114"
    },
    "722": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "DUP1",
      "path": "114"
    },
    "723": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "724": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "DUP1",
      "path": "114"
    },
    "725": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "726": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x308"
    },
    "729": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "730": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "732": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "MUL",
      "path": "114"
    },
    "733": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "DUP3",
      "path": "114"
    },
    "734": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "ADD",
      "path": "114"
    },
    "735": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "736": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "737": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "740": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "742": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "744": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "745": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "746": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "747": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "DUP2",
      "path": "114"
    },
    "748": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "op": "SUB"
    },
    "757": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "AND",
      "path": "114"
    },
    "758": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "DUP2",
      "path": "114"
    },
    "759": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "760": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x1"
    },
    "762": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "763": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "764": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "ADD",
      "path": "114"
    },
    "765": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "766": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "768": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "ADD",
      "path": "114"
    },
    "769": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "DUP1",
      "path": "114"
    },
    "770": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "DUP4",
      "path": "114"
    },
    "771": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "GT",
      "path": "114"
    },
    "772": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x2EA"
    },
    "775": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "776": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "777": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "POP",
      "path": "114"
    },
    "778": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "POP",
      "path": "114"
    },
    "779": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "POP",
      "path": "114"
    },
    "780": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "POP",
      "path": "114"
    },
    "781": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "POP",
      "path": "114"
    },
    "782": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "783": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6768,
        6797
      ],
      "op": "POP",
      "path": "114"
    },
    "784": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6674,
        6804
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "785": {
      "fn": "ERC777.defaultOperators",
      "jump": "o",
      "offset": [
        6674,
        6804
      ],
      "op": "JUMP",
      "path": "114"
    },
    "786": {
      "fn": "ERC777.name",
      "offset": [
        2910,
        3008
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "787": {
      "fn": "ERC777.name",
      "offset": [
        2964,
        2977
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x60"
    },
    "789": {
      "fn": "ERC777.name",
      "offset": [
        2996,
        3001
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 6,
      "value": "0x2"
    },
    "791": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP1",
      "path": "114"
    },
    "792": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "793": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x321"
    },
    "796": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "797": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1715"
    },
    "800": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2989,
        3001
      ],
      "op": "JUMP",
      "path": "114"
    },
    "801": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "802": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP1",
      "path": "114"
    },
    "803": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x1F"
    },
    "805": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "ADD",
      "path": "114"
    },
    "806": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "808": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP1",
      "path": "114"
    },
    "809": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "810": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DIV",
      "path": "114"
    },
    "811": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "MUL",
      "path": "114"
    },
    "812": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "814": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "ADD",
      "path": "114"
    },
    "815": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "817": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "818": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "819": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP2",
      "path": "114"
    },
    "820": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "ADD",
      "path": "114"
    },
    "821": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "823": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "824": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP1",
      "path": "114"
    },
    "825": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP3",
      "path": "114"
    },
    "826": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "827": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "828": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP2",
      "path": "114"
    },
    "829": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP2",
      "path": "114"
    },
    "830": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "831": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "833": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "ADD",
      "path": "114"
    },
    "834": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP3",
      "path": "114"
    },
    "835": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP1",
      "path": "114"
    },
    "836": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "837": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x34D"
    },
    "840": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "841": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1715"
    },
    "844": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2989,
        3001
      ],
      "op": "JUMP",
      "path": "114"
    },
    "845": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "846": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP1",
      "path": "114"
    },
    "847": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "848": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x308"
    },
    "851": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "852": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP1",
      "path": "114"
    },
    "853": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x1F"
    },
    "855": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "LT",
      "path": "114"
    },
    "856": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x36F"
    },
    "859": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "860": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x100"
    },
    "863": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP1",
      "path": "114"
    },
    "864": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP4",
      "path": "114"
    },
    "865": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "866": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DIV",
      "path": "114"
    },
    "867": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "MUL",
      "path": "114"
    },
    "868": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP4",
      "path": "114"
    },
    "869": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "870": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "871": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "873": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "ADD",
      "path": "114"
    },
    "874": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "875": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x308"
    },
    "878": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "JUMP",
      "path": "114"
    },
    "879": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "880": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP3",
      "path": "114"
    },
    "881": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "ADD",
      "path": "114"
    },
    "882": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "883": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "884": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "886": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "887": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "889": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "891": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "892": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "893": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "894": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP2",
      "path": "114"
    },
    "895": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "896": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP2",
      "path": "114"
    },
    "897": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "898": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "899": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x1"
    },
    "901": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "ADD",
      "path": "114"
    },
    "902": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "903": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "905": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "ADD",
      "path": "114"
    },
    "906": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP1",
      "path": "114"
    },
    "907": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "DUP4",
      "path": "114"
    },
    "908": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "GT",
      "path": "114"
    },
    "909": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x37D"
    },
    "912": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "913": {
      "op": "POP"
    },
    "914": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP4",
      "path": "114"
    },
    "915": {
      "fn": "ERC777.name",
      "offset": [
        2989,
        3001
      ],
      "op": "SWAP6",
      "path": "114"
    },
    "916": {
      "fn": "ERC777.name",
      "offset": [
        2910,
        3008
      ],
      "op": "SWAP5",
      "path": "114"
    },
    "917": {
      "op": "POP"
    },
    "918": {
      "op": "POP"
    },
    "919": {
      "op": "POP"
    },
    "920": {
      "op": "POP"
    },
    "921": {
      "op": "POP"
    },
    "922": {
      "fn": "ERC777.name",
      "jump": "o",
      "offset": [
        2910,
        3008
      ],
      "op": "JUMP",
      "path": "114"
    },
    "923": {
      "fn": "ERC777.approve",
      "offset": [
        8253,
        8450
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "924": {
      "fn": "ERC777.approve",
      "offset": [
        8335,
        8339
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "926": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121",
      "statement": 7
    },
    "927": {
      "fn": "ERC777.approve",
      "offset": [
        8390,
        8422
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 8,
      "value": "0x3A9"
    },
    "930": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "DUP2",
      "path": "121"
    },
    "931": {
      "fn": "ERC777.approve",
      "offset": [
        8407,
        8414
      ],
      "op": "DUP6",
      "path": "114"
    },
    "932": {
      "fn": "ERC777.approve",
      "offset": [
        8416,
        8421
      ],
      "op": "DUP6",
      "path": "114"
    },
    "933": {
      "fn": "ERC777.approve",
      "offset": [
        8390,
        8398
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x9D0"
    },
    "936": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8390,
        8422
      ],
      "op": "JUMP",
      "path": "114"
    },
    "937": {
      "fn": "ERC777.approve",
      "offset": [
        8390,
        8422
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "938": {
      "op": "POP"
    },
    "939": {
      "fn": "ERC777.approve",
      "offset": [
        8439,
        8443
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 9,
      "value": "0x1"
    },
    "941": {
      "fn": "ERC777.approve",
      "offset": [
        8439,
        8443
      ],
      "op": "SWAP4",
      "path": "114"
    },
    "942": {
      "fn": "ERC777.approve",
      "offset": [
        8253,
        8450
      ],
      "op": "SWAP3",
      "path": "114"
    },
    "943": {
      "op": "POP"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "fn": "ERC777.approve",
      "jump": "o",
      "offset": [
        8253,
        8450
      ],
      "op": "JUMP",
      "path": "114"
    },
    "947": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8815,
        9591
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "948": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8921,
        8925
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "956": {
      "op": "SHL"
    },
    "957": {
      "op": "SUB"
    },
    "958": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8945,
        8968
      ],
      "op": "DUP4",
      "path": "114",
      "statement": 10
    },
    "959": {
      "branch": 63,
      "fn": "ERC777.transferFrom",
      "offset": [
        8945,
        8968
      ],
      "op": "AND",
      "path": "114"
    },
    "960": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3E4"
    },
    "963": {
      "branch": 63,
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "964": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "966": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "967": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "DUP2",
      "path": "114"
    },
    "975": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "976": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "978": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "ADD",
      "path": "114"
    },
    "979": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "982": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "983": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1621"
    },
    "986": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        8937,
        9009
      ],
      "op": "JUMP",
      "path": "114"
    },
    "987": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "988": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "990": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "991": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "DUP1",
      "path": "114"
    },
    "992": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "993": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "SUB",
      "path": "114"
    },
    "994": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "995": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "114"
    },
    "996": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8937,
        9009
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1003": {
      "op": "SHL"
    },
    "1004": {
      "op": "SUB"
    },
    "1005": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9027,
        9047
      ],
      "op": "DUP5",
      "path": "114",
      "statement": 11
    },
    "1006": {
      "branch": 64,
      "fn": "ERC777.transferFrom",
      "offset": [
        9027,
        9047
      ],
      "op": "AND",
      "path": "114"
    },
    "1007": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9019,
        9090
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x449"
    },
    "1010": {
      "branch": 64,
      "fn": "ERC777.transferFrom",
      "offset": [
        9019,
        9090
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "1011": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9019,
        9090
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1013": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9019,
        9090
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1014": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1020": {
      "op": "SHL"
    },
    "1021": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9019,
        9090
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1022": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9019,
        9090
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1025": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9019,
        9090
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "1027": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9019,
        9090
      ],
      "op": "DUP3",
      "path": "114"
    },
    "1028": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9019,
        9090
      ],
      "op": "ADD",
      "path": "114"
    },
    "1029": {
      "op": "MSTORE"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1034": {
      "op": "DUP3"
    },
    "1035": {
      "op": "ADD"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1072": {
      "op": "DUP3"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "op": "MSTORE"
    },
    "1075": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1084": {
      "op": "SHL"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1087": {
      "op": "DUP3"
    },
    "1088": {
      "op": "ADD"
    },
    "1089": {
      "op": "MSTORE"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1092": {
      "op": "ADD"
    },
    "1093": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9019,
        9090
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "1096": {
      "op": "JUMP"
    },
    "1097": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9019,
        9090
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1098": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9101,
        9116
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1100": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "1101": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9101,
        9131
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1102": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9101,
        9131
      ],
      "op": "POP",
      "path": "114"
    },
    "1103": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 12,
      "value": "0x47A"
    },
    "1106": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9160,
        9167
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1107": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9169,
        9175
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1108": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9177,
        9186
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1109": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9188,
        9194
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1110": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1112": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1113": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1114": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1116": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "ADD",
      "path": "114"
    },
    "1117": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1119": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1120": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1121": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1123": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1124": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1125": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "POP",
      "path": "114"
    },
    "1126": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1128": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1129": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1130": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1132": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "ADD",
      "path": "114"
    },
    "1133": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1135": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1136": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1137": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1139": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1140": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1141": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "POP",
      "path": "114"
    },
    "1142": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9159
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xAF7"
    },
    "1145": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9142,
        9203
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1146": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9142,
        9203
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1147": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 13,
      "value": "0x4A6"
    },
    "1150": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9220,
        9227
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1151": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9229,
        9235
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1152": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9237,
        9246
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1153": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9248,
        9254
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1154": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1156": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1157": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1158": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1160": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "ADD",
      "path": "114"
    },
    "1161": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1163": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1164": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1165": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1167": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1168": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1169": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "POP",
      "path": "114"
    },
    "1170": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1172": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1173": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1174": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1176": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "ADD",
      "path": "114"
    },
    "1177": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1179": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1180": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1181": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1183": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1184": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1185": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "POP",
      "path": "114"
    },
    "1186": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9219
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xC2E"
    },
    "1189": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9214,
        9263
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1190": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9214,
        9263
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1197": {
      "op": "SHL"
    },
    "1198": {
      "op": "SUB"
    },
    "1199": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9320
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1200": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9320
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1201": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9320
      ],
      "op": "AND",
      "path": "114"
    },
    "1202": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9274,
        9298
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1204": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9320
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1205": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9320
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1206": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9320
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1207": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9312
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x8"
    },
    "1209": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9320
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1211": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9320
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1212": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9320
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1213": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9320
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1214": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9320
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1216": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9320
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1217": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9320
      ],
      "op": "DUP4",
      "path": "114"
    },
    "1218": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9320
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "1219": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9329
      ],
      "op": "SWAP4",
      "path": "114"
    },
    "1220": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9329
      ],
      "op": "DUP6",
      "path": "114"
    },
    "1221": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9329
      ],
      "op": "AND",
      "path": "114"
    },
    "1222": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9329
      ],
      "op": "DUP4",
      "path": "114"
    },
    "1223": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9329
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1224": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9329
      ],
      "op": "SWAP3",
      "path": "114"
    },
    "1225": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9329
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1226": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9329
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1227": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9329
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "1228": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9301,
        9329
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "1229": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9347,
        9373
      ],
      "op": "DUP4",
      "path": "114",
      "statement": 14
    },
    "1230": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9347,
        9373
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1231": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9347,
        9373
      ],
      "op": "LT",
      "path": "114"
    },
    "1232": {
      "branch": 65,
      "fn": "ERC777.transferFrom",
      "offset": [
        9347,
        9373
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "1233": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9339,
        9419
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x52E"
    },
    "1236": {
      "branch": 65,
      "fn": "ERC777.transferFrom",
      "offset": [
        9339,
        9419
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "1237": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9339,
        9419
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1239": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9339,
        9419
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1246": {
      "op": "SHL"
    },
    "1247": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9339,
        9419
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1248": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9339,
        9419
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1251": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9339,
        9419
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "1253": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9339,
        9419
      ],
      "op": "DUP3",
      "path": "114"
    },
    "1254": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9339,
        9419
      ],
      "op": "ADD",
      "path": "114"
    },
    "1255": {
      "op": "MSTORE"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1260": {
      "op": "DUP3"
    },
    "1261": {
      "op": "ADD"
    },
    "1262": {
      "op": "MSTORE"
    },
    "1263": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220616D6F756E74206578636565647320"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1298": {
      "op": "DUP3"
    },
    "1299": {
      "op": "ADD"
    },
    "1300": {
      "op": "MSTORE"
    },
    "1301": {
      "op": "PUSH9",
      "value": "0x616C6C6F77616E6365"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1313": {
      "op": "SHL"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1316": {
      "op": "DUP3"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "op": "MSTORE"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1321": {
      "op": "ADD"
    },
    "1322": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9339,
        9419
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "1325": {
      "op": "JUMP"
    },
    "1326": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9339,
        9419
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1327": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9429,
        9481
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 15,
      "value": "0x542"
    },
    "1330": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9438,
        9444
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1331": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9446,
        9453
      ],
      "op": "DUP4",
      "path": "114"
    },
    "1332": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9455,
        9480
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x53D"
    },
    "1335": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9474,
        9480
      ],
      "op": "DUP8",
      "path": "114"
    },
    "1336": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9455,
        9471
      ],
      "op": "DUP6",
      "path": "114"
    },
    "1337": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9455,
        9480
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x16FE"
    },
    "1340": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9455,
        9480
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1341": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9455,
        9480
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1342": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9429,
        9437
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x9D0"
    },
    "1345": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9429,
        9481
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1346": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9429,
        9481
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1347": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 16,
      "value": "0x570"
    },
    "1350": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9512,
        9519
      ],
      "op": "DUP3",
      "path": "114"
    },
    "1351": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9521,
        9527
      ],
      "op": "DUP8",
      "path": "114"
    },
    "1352": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9529,
        9538
      ],
      "op": "DUP8",
      "path": "114"
    },
    "1353": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9540,
        9546
      ],
      "op": "DUP8",
      "path": "114"
    },
    "1354": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1356": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1357": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1358": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1360": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "ADD",
      "path": "114"
    },
    "1361": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1363": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1364": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1365": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1367": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1368": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1369": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "POP",
      "path": "114"
    },
    "1370": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1372": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1373": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1374": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1376": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "ADD",
      "path": "114"
    },
    "1377": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1379": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1380": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1381": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1383": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1384": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1385": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "POP",
      "path": "114"
    },
    "1386": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9556,
        9561
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1388": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9511
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xD9D"
    },
    "1391": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9492,
        9562
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1392": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9492,
        9562
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1393": {
      "op": "POP"
    },
    "1394": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9580,
        9584
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 17,
      "value": "0x1"
    },
    "1396": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9580,
        9584
      ],
      "op": "SWAP6",
      "path": "114"
    },
    "1397": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8815,
        9591
      ],
      "op": "SWAP5",
      "path": "114"
    },
    "1398": {
      "op": "POP"
    },
    "1399": {
      "op": "POP"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "op": "POP"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "fn": "ERC777.transferFrom",
      "jump": "o",
      "offset": [
        8815,
        9591
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1404": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1405": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7193
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 18,
      "value": "0x586"
    },
    "1408": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "1409": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7186,
        7192
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1410": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7171
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x7BB"
    },
    "1413": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7158,
        7193
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1414": {
      "branch": 66,
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7193
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1415": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7150,
        7242
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x5A2"
    },
    "1418": {
      "branch": 66,
      "fn": "ERC777.operatorSend",
      "offset": [
        7150,
        7242
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "1419": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7150,
        7242
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1421": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7150,
        7242
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1422": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1428": {
      "op": "SHL"
    },
    "1429": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7150,
        7242
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1430": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7150,
        7242
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1431": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7150,
        7242
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "1433": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7150,
        7242
      ],
      "op": "ADD",
      "path": "114"
    },
    "1434": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7150,
        7242
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "1437": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7150,
        7242
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1438": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7150,
        7242
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1665"
    },
    "1441": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7150,
        7242
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1442": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7150,
        7242
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1443": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7252,
        7310
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 19,
      "value": "0x5B1"
    },
    "1446": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7258,
        7264
      ],
      "op": "DUP6",
      "path": "114"
    },
    "1447": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7266,
        7275
      ],
      "op": "DUP6",
      "path": "114"
    },
    "1448": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7277,
        7283
      ],
      "op": "DUP6",
      "path": "114"
    },
    "1449": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7285,
        7289
      ],
      "op": "DUP6",
      "path": "114"
    },
    "1450": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7291,
        7303
      ],
      "op": "DUP6",
      "path": "114"
    },
    "1451": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7305,
        7309
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x1"
    },
    "1453": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7252,
        7257
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xF71"
    },
    "1456": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7252,
        7310
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1457": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7252,
        7310
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1458": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "POP",
      "path": "114"
    },
    "1459": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "POP",
      "path": "114"
    },
    "1460": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "POP",
      "path": "114"
    },
    "1461": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "POP",
      "path": "114"
    },
    "1462": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6923,
        7317
      ],
      "op": "POP",
      "path": "114"
    },
    "1463": {
      "fn": "ERC777.operatorSend",
      "jump": "o",
      "offset": [
        6923,
        7317
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1464": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5727,
        6140
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1465": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "op": "SUB"
    },
    "1474": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5815,
        5839
      ],
      "op": "DUP3",
      "path": "114",
      "statement": 20
    },
    "1475": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5815,
        5839
      ],
      "op": "AND",
      "path": "114"
    },
    "1476": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5815,
        5839
      ],
      "op": "EQ",
      "path": "114"
    },
    "1477": {
      "branch": 67,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5815,
        5839
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "1478": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5807,
        5880
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x61D"
    },
    "1481": {
      "branch": 67,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5807,
        5880
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "1482": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5807,
        5880
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1484": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5807,
        5880
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1491": {
      "op": "SHL"
    },
    "1492": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5807,
        5880
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1493": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5807,
        5880
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1496": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5807,
        5880
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "1498": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5807,
        5880
      ],
      "op": "DUP3",
      "path": "114"
    },
    "1499": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5807,
        5880
      ],
      "op": "ADD",
      "path": "114"
    },
    "1500": {
      "op": "MSTORE"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1503": {
      "op": "DUP1"
    },
    "1504": {
      "op": "DUP3"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "MSTORE"
    },
    "1507": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617574686F72697A696E672073656C66206173206F706572"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1542": {
      "op": "DUP3"
    },
    "1543": {
      "op": "ADD"
    },
    "1544": {
      "op": "MSTORE"
    },
    "1545": {
      "op": "PUSH4",
      "value": "0x30BA37B9"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1552": {
      "op": "SHL"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1555": {
      "op": "DUP3"
    },
    "1556": {
      "op": "ADD"
    },
    "1557": {
      "op": "MSTORE"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1560": {
      "op": "ADD"
    },
    "1561": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5807,
        5880
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "1564": {
      "op": "JUMP"
    },
    "1565": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5807,
        5880
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1572": {
      "op": "SHL"
    },
    "1573": {
      "op": "SUB"
    },
    "1574": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5922
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1575": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5922
      ],
      "op": "AND",
      "path": "114"
    },
    "1576": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5922
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1578": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5922
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1579": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5922
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1580": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5922
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1581": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5912
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x5"
    },
    "1583": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5922
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1585": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5922
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1586": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5922
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1588": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5922
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1589": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5922
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "1590": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5922
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "1591": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5922
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0xFF"
    },
    "1593": {
      "branch": 68,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5895,
        5922
      ],
      "op": "AND",
      "path": "114"
    },
    "1594": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5891,
        6076
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "1595": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5891,
        6076
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x66E"
    },
    "1598": {
      "branch": 68,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5891,
        6076
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "1599": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "1600": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5983
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 21,
      "value": "0x0"
    },
    "1602": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5983
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1603": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5983
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1604": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5983
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1605": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5969
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x7"
    },
    "1607": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5983
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1609": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5983
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1610": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5983
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1611": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5983
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1612": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5983
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1614": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5983
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1615": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5983
      ],
      "op": "DUP4",
      "path": "114"
    },
    "1616": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5983
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1623": {
      "op": "SHL"
    },
    "1624": {
      "op": "SUB"
    },
    "1625": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5993
      ],
      "op": "DUP6",
      "path": "114"
    },
    "1626": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5993
      ],
      "op": "AND",
      "path": "114"
    },
    "1627": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5993
      ],
      "op": "DUP5",
      "path": "114"
    },
    "1628": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5993
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1629": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5993
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1630": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5993
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "1631": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5993
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1632": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5993
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1633": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5945,
        5993
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "1634": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5938,
        5993
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1635": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5938,
        5993
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1638": {
      "op": "NOT"
    },
    "1639": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5938,
        5993
      ],
      "op": "AND",
      "path": "114"
    },
    "1640": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5938,
        5993
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1641": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5938,
        5993
      ],
      "op": "SSTORE",
      "path": "114"
    },
    "1642": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5891,
        6076
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x69D"
    },
    "1645": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5891,
        6076
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1646": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5891,
        6076
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1647": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "1648": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6048
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 22,
      "value": "0x0"
    },
    "1650": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6048
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1651": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6048
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1652": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6048
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1653": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x6"
    },
    "1655": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6048
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1657": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6048
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1658": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6048
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1659": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6048
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1660": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6048
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1662": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6048
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1663": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6048
      ],
      "op": "DUP4",
      "path": "114"
    },
    "1664": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6048
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1671": {
      "op": "SHL"
    },
    "1672": {
      "op": "SUB"
    },
    "1673": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6058
      ],
      "op": "DUP6",
      "path": "114"
    },
    "1674": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6058
      ],
      "op": "AND",
      "path": "114"
    },
    "1675": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6058
      ],
      "op": "DUP5",
      "path": "114"
    },
    "1676": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6058
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1677": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6058
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1678": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6058
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "1679": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6058
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1680": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6058
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1681": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6058
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "1682": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6065
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1683": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6065
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1686": {
      "op": "NOT"
    },
    "1687": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6065
      ],
      "op": "AND",
      "path": "114"
    },
    "1688": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6065
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x1"
    },
    "1690": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6065
      ],
      "op": "OR",
      "path": "114"
    },
    "1691": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6065
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1692": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6024,
        6065
      ],
      "op": "SSTORE",
      "path": "114"
    },
    "1693": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5891,
        6076
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1694": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6091,
        6133
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 23,
      "value": "0x40"
    },
    "1696": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6091,
        6133
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1697": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "1698": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "121"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1705": {
      "op": "SHL"
    },
    "1706": {
      "op": "SUB"
    },
    "1707": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6091,
        6133
      ],
      "op": "DUP4",
      "path": "114"
    },
    "1708": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6091,
        6133
      ],
      "op": "AND",
      "path": "114"
    },
    "1709": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6091,
        6133
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1710": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6091,
        6133
      ],
      "op": "PUSH32",
      "path": "114",
      "value": "0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9"
    },
    "1743": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6091,
        6133
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1744": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6091,
        6133
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1746": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6091,
        6133
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1747": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6091,
        6133
      ],
      "op": "LOG3",
      "path": "114"
    },
    "1748": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5727,
        6140
      ],
      "op": "POP",
      "path": "114"
    },
    "1749": {
      "fn": "ERC777.authorizeOperator",
      "jump": "o",
      "offset": [
        5727,
        6140
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1750": {
      "fn": "ERC777.symbol",
      "offset": [
        3064,
        3166
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1751": {
      "fn": "ERC777.symbol",
      "offset": [
        3120,
        3133
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x60"
    },
    "1753": {
      "fn": "ERC777.symbol",
      "offset": [
        3152,
        3159
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 24,
      "value": "0x3"
    },
    "1755": {
      "fn": "ERC777.symbol",
      "offset": [
        3145,
        3159
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1756": {
      "fn": "ERC777.symbol",
      "offset": [
        3145,
        3159
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "1757": {
      "fn": "ERC777.symbol",
      "offset": [
        3145,
        3159
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x321"
    },
    "1760": {
      "fn": "ERC777.symbol",
      "offset": [
        3145,
        3159
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1761": {
      "fn": "ERC777.symbol",
      "offset": [
        3145,
        3159
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1715"
    },
    "1764": {
      "fn": "ERC777.symbol",
      "jump": "i",
      "offset": [
        3145,
        3159
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1765": {
      "fn": "ERC777.send",
      "offset": [
        4206,
        4370
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1766": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4363
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 25,
      "value": "0x703"
    },
    "1769": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "1770": {
      "fn": "ERC777.send",
      "offset": [
        4329,
        4338
      ],
      "op": "DUP5",
      "path": "114"
    },
    "1771": {
      "fn": "ERC777.send",
      "offset": [
        4340,
        4346
      ],
      "op": "DUP5",
      "path": "114"
    },
    "1772": {
      "fn": "ERC777.send",
      "offset": [
        4348,
        4352
      ],
      "op": "DUP5",
      "path": "114"
    },
    "1773": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4363
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1775": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4363
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1776": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4363
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1777": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4363
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1779": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4363
      ],
      "op": "ADD",
      "path": "114"
    },
    "1780": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4363
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1782": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4363
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1783": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4363
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1784": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4363
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1786": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4363
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1787": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4363
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1788": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4363
      ],
      "op": "POP",
      "path": "114"
    },
    "1789": {
      "fn": "ERC777.send",
      "offset": [
        4358,
        4362
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x1"
    },
    "1791": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4314
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xF71"
    },
    "1794": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4309,
        4363
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1795": {
      "fn": "ERC777.send",
      "offset": [
        4309,
        4363
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1796": {
      "fn": "ERC777.send",
      "offset": [
        4206,
        4370
      ],
      "op": "POP",
      "path": "114"
    },
    "1797": {
      "fn": "ERC777.send",
      "offset": [
        4206,
        4370
      ],
      "op": "POP",
      "path": "114"
    },
    "1798": {
      "fn": "ERC777.send",
      "offset": [
        4206,
        4370
      ],
      "op": "POP",
      "path": "114"
    },
    "1799": {
      "fn": "ERC777.send",
      "jump": "o",
      "offset": [
        4206,
        4370
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1800": {
      "fn": "ERC777.transfer",
      "offset": [
        4601,
        5040
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1801": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        4691
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1809": {
      "op": "SHL"
    },
    "1810": {
      "op": "SUB"
    },
    "1811": {
      "fn": "ERC777.transfer",
      "offset": [
        4711,
        4734
      ],
      "op": "DUP4",
      "path": "114",
      "statement": 26
    },
    "1812": {
      "branch": 69,
      "fn": "ERC777.transfer",
      "offset": [
        4711,
        4734
      ],
      "op": "AND",
      "path": "114"
    },
    "1813": {
      "fn": "ERC777.transfer",
      "offset": [
        4703,
        4775
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x730"
    },
    "1816": {
      "branch": 69,
      "fn": "ERC777.transfer",
      "offset": [
        4703,
        4775
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "1817": {
      "fn": "ERC777.transfer",
      "offset": [
        4703,
        4775
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1819": {
      "fn": "ERC777.transfer",
      "offset": [
        4703,
        4775
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1820": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "fn": "ERC777.transfer",
      "offset": [
        4703,
        4775
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1828": {
      "fn": "ERC777.transfer",
      "offset": [
        4703,
        4775
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1829": {
      "fn": "ERC777.transfer",
      "offset": [
        4703,
        4775
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "1831": {
      "fn": "ERC777.transfer",
      "offset": [
        4703,
        4775
      ],
      "op": "ADD",
      "path": "114"
    },
    "1832": {
      "fn": "ERC777.transfer",
      "offset": [
        4703,
        4775
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "1835": {
      "fn": "ERC777.transfer",
      "offset": [
        4703,
        4775
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1836": {
      "fn": "ERC777.transfer",
      "offset": [
        4703,
        4775
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1621"
    },
    "1839": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4703,
        4775
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1840": {
      "fn": "ERC777.transfer",
      "offset": [
        4703,
        4775
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1841": {
      "fn": "ERC777.transfer",
      "offset": [
        4786,
        4798
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1843": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "1844": {
      "fn": "ERC777.transfer",
      "offset": [
        4786,
        4813
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "1845": {
      "fn": "ERC777.transfer",
      "offset": [
        4786,
        4813
      ],
      "op": "POP",
      "path": "114"
    },
    "1846": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 27,
      "value": "0x761"
    },
    "1849": {
      "fn": "ERC777.transfer",
      "offset": [
        4842,
        4846
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1850": {
      "fn": "ERC777.transfer",
      "offset": [
        4848,
        4852
      ],
      "op": "DUP3",
      "path": "114"
    },
    "1851": {
      "fn": "ERC777.transfer",
      "offset": [
        4854,
        4863
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1852": {
      "fn": "ERC777.transfer",
      "offset": [
        4865,
        4871
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1853": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1855": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1856": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1857": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1859": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "ADD",
      "path": "114"
    },
    "1860": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1862": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1863": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1864": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1866": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1867": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1868": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "POP",
      "path": "114"
    },
    "1869": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1871": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1872": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1873": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1875": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "ADD",
      "path": "114"
    },
    "1876": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1878": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1879": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1880": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1882": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1883": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1884": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "POP",
      "path": "114"
    },
    "1885": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4841
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xAF7"
    },
    "1888": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4824,
        4880
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1889": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4880
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1890": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 28,
      "value": "0x78D"
    },
    "1893": {
      "fn": "ERC777.transfer",
      "offset": [
        4897,
        4901
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1894": {
      "fn": "ERC777.transfer",
      "offset": [
        4903,
        4907
      ],
      "op": "DUP3",
      "path": "114"
    },
    "1895": {
      "fn": "ERC777.transfer",
      "offset": [
        4909,
        4918
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1896": {
      "fn": "ERC777.transfer",
      "offset": [
        4920,
        4926
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1897": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1899": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1900": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1901": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1903": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "ADD",
      "path": "114"
    },
    "1904": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1906": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1907": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1908": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1910": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1911": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1912": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "POP",
      "path": "114"
    },
    "1913": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1915": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1916": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1917": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1919": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "ADD",
      "path": "114"
    },
    "1920": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1922": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1923": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1924": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1926": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1927": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1928": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "POP",
      "path": "114"
    },
    "1929": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4896
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xC2E"
    },
    "1932": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4891,
        4935
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1933": {
      "fn": "ERC777.transfer",
      "offset": [
        4891,
        4935
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1934": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 29,
      "value": "0x3A9"
    },
    "1937": {
      "fn": "ERC777.transfer",
      "offset": [
        4966,
        4970
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1938": {
      "fn": "ERC777.transfer",
      "offset": [
        4972,
        4976
      ],
      "op": "DUP3",
      "path": "114"
    },
    "1939": {
      "fn": "ERC777.transfer",
      "offset": [
        4978,
        4987
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1940": {
      "fn": "ERC777.transfer",
      "offset": [
        4989,
        4995
      ],
      "op": "DUP7",
      "path": "114"
    },
    "1941": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1943": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1944": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1945": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1947": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "ADD",
      "path": "114"
    },
    "1948": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1950": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1951": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1952": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1954": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1955": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1956": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "POP",
      "path": "114"
    },
    "1957": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1959": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "1960": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1961": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "1963": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "ADD",
      "path": "114"
    },
    "1964": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "1966": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1967": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "DUP1",
      "path": "114"
    },
    "1968": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1970": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "DUP2",
      "path": "114"
    },
    "1971": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "1972": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        5011
      ],
      "op": "POP",
      "path": "114"
    },
    "1973": {
      "fn": "ERC777.transfer",
      "offset": [
        5005,
        5010
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1975": {
      "fn": "ERC777.transfer",
      "offset": [
        4946,
        4965
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xD9D"
    },
    "1978": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4946,
        5011
      ],
      "op": "JUMP",
      "path": "114"
    },
    "1979": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5361,
        5660
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "1980": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5461,
        5465
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "1982": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5496,
        5507
      ],
      "op": "DUP2",
      "path": "114",
      "statement": 30
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1989": {
      "op": "SHL"
    },
    "1990": {
      "op": "SUB"
    },
    "1991": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5484,
        5507
      ],
      "op": "AND",
      "path": "114"
    },
    "1992": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5484,
        5492
      ],
      "op": "DUP4",
      "path": "114"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1999": {
      "op": "SHL"
    },
    "2000": {
      "op": "SUB"
    },
    "2001": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5484,
        5507
      ],
      "op": "AND",
      "path": "114"
    },
    "2002": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5484,
        5507
      ],
      "op": "EQ",
      "path": "114"
    },
    "2003": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5484,
        5604
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2004": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5484,
        5604
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x826"
    },
    "2007": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5484,
        5604
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "2008": {
      "op": "POP"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2015": {
      "op": "SHL"
    },
    "2016": {
      "op": "SUB"
    },
    "2017": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5551
      ],
      "op": "DUP4",
      "path": "114"
    },
    "2018": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5551
      ],
      "op": "AND",
      "path": "114"
    },
    "2019": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5551
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "2021": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5551
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2022": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5551
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2023": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5551
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2024": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5541
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x5"
    },
    "2026": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5551
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "2028": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5551
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2029": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5551
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2031": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5551
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2032": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5551
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "2033": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5551
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "2034": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5551
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0xFF"
    },
    "2036": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5551
      ],
      "op": "AND",
      "path": "114"
    },
    "2037": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5603
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2038": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5603
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "2039": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5603
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x826"
    },
    "2042": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5603
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "2043": {
      "op": "POP"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "op": "SUB"
    },
    "2052": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2053": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "DUP4",
      "path": "114"
    },
    "2054": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "AND",
      "path": "114"
    },
    "2055": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "2057": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2058": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2059": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2060": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5580
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x7"
    },
    "2062": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "2064": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2065": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2066": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2067": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2069": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2070": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "DUP4",
      "path": "114"
    },
    "2071": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5593
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "2072": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5603
      ],
      "op": "SWAP4",
      "path": "114"
    },
    "2073": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5603
      ],
      "op": "DUP8",
      "path": "114"
    },
    "2074": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5603
      ],
      "op": "AND",
      "path": "114"
    },
    "2075": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5603
      ],
      "op": "DUP4",
      "path": "114"
    },
    "2076": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5603
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2077": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5603
      ],
      "op": "SWAP3",
      "path": "114"
    },
    "2078": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5603
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2079": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5603
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2080": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5603
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "2081": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5603
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "2082": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5603
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0xFF"
    },
    "2084": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5556,
        5603
      ],
      "op": "AND",
      "path": "114"
    },
    "2085": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5555,
        5603
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "2086": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5524,
        5603
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2087": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5484,
        5653
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2088": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5484,
        5653
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x856"
    },
    "2091": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5484,
        5653
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "2092": {
      "op": "POP"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2099": {
      "op": "SHL"
    },
    "2100": {
      "op": "SUB"
    },
    "2101": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2102": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "DUP4",
      "path": "114"
    },
    "2103": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "AND",
      "path": "114"
    },
    "2104": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "2106": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2107": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2108": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2109": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5630
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x6"
    },
    "2111": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "2113": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2114": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2115": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2116": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2118": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2119": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "DUP4",
      "path": "114"
    },
    "2120": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5643
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "2121": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5653
      ],
      "op": "SWAP4",
      "path": "114"
    },
    "2122": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5653
      ],
      "op": "DUP8",
      "path": "114"
    },
    "2123": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5653
      ],
      "op": "AND",
      "path": "114"
    },
    "2124": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5653
      ],
      "op": "DUP4",
      "path": "114"
    },
    "2125": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5653
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2126": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5653
      ],
      "op": "SWAP3",
      "path": "114"
    },
    "2127": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5653
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2128": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5653
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2129": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5653
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "2130": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5653
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "2131": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5653
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0xFF"
    },
    "2133": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5620,
        5653
      ],
      "op": "AND",
      "path": "114"
    },
    "2134": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5484,
        5653
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2135": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5477,
        5653
      ],
      "op": "SWAP4",
      "path": "114"
    },
    "2136": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5361,
        5660
      ],
      "op": "SWAP3",
      "path": "114"
    },
    "2137": {
      "op": "POP"
    },
    "2138": {
      "op": "POP"
    },
    "2139": {
      "op": "POP"
    },
    "2140": {
      "fn": "ERC777.isOperatorFor",
      "jump": "o",
      "offset": [
        5361,
        5660
      ],
      "op": "JUMP",
      "path": "114"
    },
    "2141": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6204,
        6608
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2148": {
      "op": "SHL"
    },
    "2149": {
      "op": "SUB"
    },
    "2150": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6289,
        6313
      ],
      "op": "DUP2",
      "path": "114",
      "statement": 31
    },
    "2151": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6289,
        6313
      ],
      "op": "AND",
      "path": "114"
    },
    "2152": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "2153": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6289,
        6313
      ],
      "op": "EQ",
      "path": "114"
    },
    "2154": {
      "branch": 70,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6289,
        6313
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "2155": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6281,
        6351
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x8C0"
    },
    "2158": {
      "branch": 70,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6281,
        6351
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "2159": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6281,
        6351
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2161": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6281,
        6351
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "2162": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2168": {
      "op": "SHL"
    },
    "2169": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6281,
        6351
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2170": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6281,
        6351
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2173": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6281,
        6351
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "2175": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6281,
        6351
      ],
      "op": "DUP3",
      "path": "114"
    },
    "2176": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6281,
        6351
      ],
      "op": "ADD",
      "path": "114"
    },
    "2177": {
      "op": "MSTORE"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2182": {
      "op": "DUP3"
    },
    "2183": {
      "op": "ADD"
    },
    "2184": {
      "op": "MSTORE"
    },
    "2185": {
      "op": "PUSH32",
      "value": "0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2220": {
      "op": "DUP3"
    },
    "2221": {
      "op": "ADD"
    },
    "2222": {
      "op": "MSTORE"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2227": {
      "op": "SHL"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2230": {
      "op": "DUP3"
    },
    "2231": {
      "op": "ADD"
    },
    "2232": {
      "op": "MSTORE"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2235": {
      "op": "ADD"
    },
    "2236": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6281,
        6351
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "2239": {
      "op": "JUMP"
    },
    "2240": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6281,
        6351
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "op": "SUB"
    },
    "2249": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6393
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2250": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6393
      ],
      "op": "AND",
      "path": "114"
    },
    "2251": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6393
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "2253": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6393
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2254": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6393
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2255": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6393
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2256": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6383
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x5"
    },
    "2258": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6393
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "2260": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6393
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2261": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6393
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2263": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6393
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2264": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6393
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "2265": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6393
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "2266": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6393
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0xFF"
    },
    "2268": {
      "branch": 71,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6366,
        6393
      ],
      "op": "AND",
      "path": "114"
    },
    "2269": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6362,
        6547
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "2270": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6362,
        6547
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x914"
    },
    "2273": {
      "branch": 71,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6362,
        6547
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "2274": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "2275": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6447
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 32,
      "value": "0x0"
    },
    "2277": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6447
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2278": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6447
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2279": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6447
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2280": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6433
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x7"
    },
    "2282": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6447
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "2284": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6447
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2285": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6447
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2286": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6447
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2287": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6447
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2289": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6447
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2290": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6447
      ],
      "op": "DUP4",
      "path": "114"
    },
    "2291": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6447
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2298": {
      "op": "SHL"
    },
    "2299": {
      "op": "SUB"
    },
    "2300": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6457
      ],
      "op": "DUP6",
      "path": "114"
    },
    "2301": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6457
      ],
      "op": "AND",
      "path": "114"
    },
    "2302": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6457
      ],
      "op": "DUP5",
      "path": "114"
    },
    "2303": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6457
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2304": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6457
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2305": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6457
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "2306": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6457
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2307": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6457
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2308": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6457
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "2309": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6464
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2310": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6464
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2313": {
      "op": "NOT"
    },
    "2314": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6464
      ],
      "op": "AND",
      "path": "114"
    },
    "2315": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6460,
        6464
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x1"
    },
    "2317": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6464
      ],
      "op": "OR",
      "path": "114"
    },
    "2318": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6464
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2319": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6409,
        6464
      ],
      "op": "SSTORE",
      "path": "114"
    },
    "2320": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6362,
        6547
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x940"
    },
    "2323": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6362,
        6547
      ],
      "op": "JUMP",
      "path": "114"
    },
    "2324": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6362,
        6547
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2325": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "2326": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6526
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 33,
      "value": "0x0"
    },
    "2328": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6526
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2329": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6526
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2330": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6526
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2331": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6512
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x6"
    },
    "2333": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6526
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "2335": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6526
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2336": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6526
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2337": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6526
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2338": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6526
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2340": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6526
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2341": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6526
      ],
      "op": "DUP4",
      "path": "114"
    },
    "2342": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6526
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2349": {
      "op": "SHL"
    },
    "2350": {
      "op": "SUB"
    },
    "2351": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6536
      ],
      "op": "DUP6",
      "path": "114"
    },
    "2352": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6536
      ],
      "op": "AND",
      "path": "114"
    },
    "2353": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6536
      ],
      "op": "DUP5",
      "path": "114"
    },
    "2354": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6536
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2355": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6536
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2356": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6536
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "2357": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6536
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2358": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6536
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2359": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6502,
        6536
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "2360": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6495,
        6536
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2361": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6495,
        6536
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2364": {
      "op": "NOT"
    },
    "2365": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6495,
        6536
      ],
      "op": "AND",
      "path": "114"
    },
    "2366": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6495,
        6536
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2367": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6495,
        6536
      ],
      "op": "SSTORE",
      "path": "114"
    },
    "2368": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6362,
        6547
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2369": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6562,
        6601
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 34,
      "value": "0x40"
    },
    "2371": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6562,
        6601
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "2372": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "2373": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "121"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2380": {
      "op": "SHL"
    },
    "2381": {
      "op": "SUB"
    },
    "2382": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6562,
        6601
      ],
      "op": "DUP4",
      "path": "114"
    },
    "2383": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6562,
        6601
      ],
      "op": "AND",
      "path": "114"
    },
    "2384": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6562,
        6601
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2385": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6562,
        6601
      ],
      "op": "PUSH32",
      "path": "114",
      "value": "0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1"
    },
    "2418": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6562,
        6601
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2419": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6562,
        6601
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "2421": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6562,
        6601
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2422": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6562,
        6601
      ],
      "op": "LOG3",
      "path": "114"
    },
    "2423": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6204,
        6608
      ],
      "op": "POP",
      "path": "114"
    },
    "2424": {
      "fn": "ERC777.revokeOperator",
      "jump": "o",
      "offset": [
        6204,
        6608
      ],
      "op": "JUMP",
      "path": "114"
    },
    "2425": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7438,
        7725
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2426": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7581,
        7617
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 35,
      "value": "0x983"
    },
    "2429": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "2430": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7609,
        7616
      ],
      "op": "DUP6",
      "path": "114"
    },
    "2431": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7581,
        7594
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x7BB"
    },
    "2434": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7581,
        7617
      ],
      "op": "JUMP",
      "path": "114"
    },
    "2435": {
      "branch": 72,
      "fn": "ERC777.operatorBurn",
      "offset": [
        7581,
        7617
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2436": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7573,
        7666
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x99F"
    },
    "2439": {
      "branch": 72,
      "fn": "ERC777.operatorBurn",
      "offset": [
        7573,
        7666
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "2440": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7573,
        7666
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2442": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7573,
        7666
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "2443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2449": {
      "op": "SHL"
    },
    "2450": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7573,
        7666
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2451": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7573,
        7666
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2452": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7573,
        7666
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "2454": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7573,
        7666
      ],
      "op": "ADD",
      "path": "114"
    },
    "2455": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7573,
        7666
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "2458": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7573,
        7666
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2459": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7573,
        7666
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1665"
    },
    "2462": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7573,
        7666
      ],
      "op": "JUMP",
      "path": "114"
    },
    "2463": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7573,
        7666
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2464": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7676,
        7718
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 36,
      "value": "0x9AB"
    },
    "2467": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7682,
        7689
      ],
      "op": "DUP5",
      "path": "114"
    },
    "2468": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7691,
        7697
      ],
      "op": "DUP5",
      "path": "114"
    },
    "2469": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7699,
        7703
      ],
      "op": "DUP5",
      "path": "114"
    },
    "2470": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7705,
        7717
      ],
      "op": "DUP5",
      "path": "114"
    },
    "2471": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7676,
        7681
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1054"
    },
    "2474": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7676,
        7718
      ],
      "op": "JUMP",
      "path": "114"
    },
    "2475": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7676,
        7718
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2476": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7438,
        7725
      ],
      "op": "POP",
      "path": "114"
    },
    "2477": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7438,
        7725
      ],
      "op": "POP",
      "path": "114"
    },
    "2478": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7438,
        7725
      ],
      "op": "POP",
      "path": "114"
    },
    "2479": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7438,
        7725
      ],
      "op": "POP",
      "path": "114"
    },
    "2480": {
      "fn": "ERC777.operatorBurn",
      "jump": "o",
      "offset": [
        7438,
        7725
      ],
      "op": "JUMP",
      "path": "114"
    },
    "2481": {
      "fn": "ERC777.burn",
      "offset": [
        5170,
        5298
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2482": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5291
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 37,
      "value": "0x9CC"
    },
    "2485": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "2486": {
      "fn": "ERC777.burn",
      "offset": [
        5274,
        5280
      ],
      "op": "DUP4",
      "path": "114"
    },
    "2487": {
      "fn": "ERC777.burn",
      "offset": [
        5282,
        5286
      ],
      "op": "DUP4",
      "path": "114"
    },
    "2488": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5291
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2490": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5291
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "2491": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5291
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2492": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5291
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "2494": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5291
      ],
      "op": "ADD",
      "path": "114"
    },
    "2495": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5291
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2497": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5291
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2498": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5291
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2499": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5291
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "2501": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5291
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2502": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5291
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2503": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5291
      ],
      "op": "POP",
      "path": "114"
    },
    "2504": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5259
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1054"
    },
    "2507": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5254,
        5291
      ],
      "op": "JUMP",
      "path": "114"
    },
    "2508": {
      "fn": "ERC777.burn",
      "offset": [
        5254,
        5291
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2509": {
      "fn": "ERC777.burn",
      "offset": [
        5170,
        5298
      ],
      "op": "POP",
      "path": "114"
    },
    "2510": {
      "fn": "ERC777.burn",
      "offset": [
        5170,
        5298
      ],
      "op": "POP",
      "path": "114"
    },
    "2511": {
      "fn": "ERC777.burn",
      "jump": "o",
      "offset": [
        5170,
        5298
      ],
      "op": "JUMP",
      "path": "114"
    },
    "2512": {
      "fn": "ERC777._approve",
      "offset": [
        14752,
        15087
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2519": {
      "op": "SHL"
    },
    "2520": {
      "op": "SUB"
    },
    "2521": {
      "fn": "ERC777._approve",
      "offset": [
        14845,
        14865
      ],
      "op": "DUP4",
      "path": "114",
      "statement": 38
    },
    "2522": {
      "branch": 73,
      "fn": "ERC777._approve",
      "offset": [
        14845,
        14865
      ],
      "op": "AND",
      "path": "114"
    },
    "2523": {
      "fn": "ERC777._approve",
      "offset": [
        14837,
        14907
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xA34"
    },
    "2526": {
      "branch": 73,
      "fn": "ERC777._approve",
      "offset": [
        14837,
        14907
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "2527": {
      "fn": "ERC777._approve",
      "offset": [
        14837,
        14907
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2529": {
      "fn": "ERC777._approve",
      "offset": [
        14837,
        14907
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "2530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2536": {
      "op": "SHL"
    },
    "2537": {
      "fn": "ERC777._approve",
      "offset": [
        14837,
        14907
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2538": {
      "fn": "ERC777._approve",
      "offset": [
        14837,
        14907
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2541": {
      "fn": "ERC777._approve",
      "offset": [
        14837,
        14907
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "2543": {
      "fn": "ERC777._approve",
      "offset": [
        14837,
        14907
      ],
      "op": "DUP3",
      "path": "114"
    },
    "2544": {
      "fn": "ERC777._approve",
      "offset": [
        14837,
        14907
      ],
      "op": "ADD",
      "path": "114"
    },
    "2545": {
      "op": "MSTORE"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2550": {
      "op": "DUP3"
    },
    "2551": {
      "op": "ADD"
    },
    "2552": {
      "op": "MSTORE"
    },
    "2553": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2588": {
      "op": "DUP3"
    },
    "2589": {
      "op": "ADD"
    },
    "2590": {
      "op": "MSTORE"
    },
    "2591": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2599": {
      "op": "SHL"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2602": {
      "op": "DUP3"
    },
    "2603": {
      "op": "ADD"
    },
    "2604": {
      "op": "MSTORE"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2607": {
      "op": "ADD"
    },
    "2608": {
      "fn": "ERC777._approve",
      "offset": [
        14837,
        14907
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "2611": {
      "op": "JUMP"
    },
    "2612": {
      "fn": "ERC777._approve",
      "offset": [
        14837,
        14907
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "op": "SUB"
    },
    "2621": {
      "fn": "ERC777._approve",
      "offset": [
        14925,
        14946
      ],
      "op": "DUP3",
      "path": "114",
      "statement": 39
    },
    "2622": {
      "branch": 74,
      "fn": "ERC777._approve",
      "offset": [
        14925,
        14946
      ],
      "op": "AND",
      "path": "114"
    },
    "2623": {
      "fn": "ERC777._approve",
      "offset": [
        14917,
        14986
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xA96"
    },
    "2626": {
      "branch": 74,
      "fn": "ERC777._approve",
      "offset": [
        14917,
        14986
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "2627": {
      "fn": "ERC777._approve",
      "offset": [
        14917,
        14986
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2629": {
      "fn": "ERC777._approve",
      "offset": [
        14917,
        14986
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "2630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2636": {
      "op": "SHL"
    },
    "2637": {
      "fn": "ERC777._approve",
      "offset": [
        14917,
        14986
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2638": {
      "fn": "ERC777._approve",
      "offset": [
        14917,
        14986
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2641": {
      "fn": "ERC777._approve",
      "offset": [
        14917,
        14986
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "2643": {
      "fn": "ERC777._approve",
      "offset": [
        14917,
        14986
      ],
      "op": "DUP3",
      "path": "114"
    },
    "2644": {
      "fn": "ERC777._approve",
      "offset": [
        14917,
        14986
      ],
      "op": "ADD",
      "path": "114"
    },
    "2645": {
      "op": "MSTORE"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2650": {
      "op": "DUP3"
    },
    "2651": {
      "op": "ADD"
    },
    "2652": {
      "op": "MSTORE"
    },
    "2653": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617070726F766520746F20746865207A65726F2061646472"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2688": {
      "op": "DUP3"
    },
    "2689": {
      "op": "ADD"
    },
    "2690": {
      "op": "MSTORE"
    },
    "2691": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2697": {
      "op": "SHL"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2700": {
      "op": "DUP3"
    },
    "2701": {
      "op": "ADD"
    },
    "2702": {
      "op": "MSTORE"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2705": {
      "op": "ADD"
    },
    "2706": {
      "fn": "ERC777._approve",
      "offset": [
        14917,
        14986
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "2709": {
      "op": "JUMP"
    },
    "2710": {
      "fn": "ERC777._approve",
      "offset": [
        14917,
        14986
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2717": {
      "op": "SHL"
    },
    "2718": {
      "op": "SUB"
    },
    "2719": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "DUP4",
      "path": "114",
      "statement": 40
    },
    "2720": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2721": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "AND",
      "path": "114"
    },
    "2722": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "2724": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2725": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2726": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2727": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15008
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x8"
    },
    "2729": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "2731": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2732": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2733": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2734": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2736": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2737": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "DUP4",
      "path": "114"
    },
    "2738": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15016
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "2739": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15025
      ],
      "op": "SWAP5",
      "path": "114"
    },
    "2740": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15025
      ],
      "op": "DUP8",
      "path": "114"
    },
    "2741": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15025
      ],
      "op": "AND",
      "path": "114"
    },
    "2742": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15025
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2743": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15025
      ],
      "op": "DUP5",
      "path": "114"
    },
    "2744": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15025
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2745": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15025
      ],
      "op": "SWAP5",
      "path": "114"
    },
    "2746": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15025
      ],
      "op": "DUP3",
      "path": "114"
    },
    "2747": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15025
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2748": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15025
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "2749": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15025
      ],
      "op": "DUP3",
      "path": "114"
    },
    "2750": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15025
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2751": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15025
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "2752": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15033
      ],
      "op": "DUP6",
      "path": "114"
    },
    "2753": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15033
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2754": {
      "fn": "ERC777._approve",
      "offset": [
        14997,
        15033
      ],
      "op": "SSTORE",
      "path": "114"
    },
    "2755": {
      "fn": "ERC777._approve",
      "offset": [
        15048,
        15080
      ],
      "op": "SWAP1",
      "path": "114",
      "statement": 41
    },
    "2756": {
      "fn": "ERC777._approve",
      "offset": [
        15048,
        15080
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "2757": {
      "op": "DUP5"
    },
    "2758": {
      "op": "DUP2"
    },
    "2759": {
      "op": "MSTORE"
    },
    "2760": {
      "fn": "ERC777._approve",
      "offset": [
        15048,
        15080
      ],
      "op": "PUSH32",
      "path": "114",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2793": {
      "fn": "ERC777._approve",
      "offset": [
        15048,
        15080
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "2794": {
      "op": "ADD"
    },
    "2795": {
      "fn": "ERC777._approve",
      "offset": [
        15048,
        15080
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2797": {
      "fn": "ERC777._approve",
      "offset": [
        15048,
        15080
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "2798": {
      "fn": "ERC777._approve",
      "offset": [
        15048,
        15080
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2799": {
      "fn": "ERC777._approve",
      "offset": [
        15048,
        15080
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "2800": {
      "fn": "ERC777._approve",
      "offset": [
        15048,
        15080
      ],
      "op": "SUB",
      "path": "114"
    },
    "2801": {
      "fn": "ERC777._approve",
      "offset": [
        15048,
        15080
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2802": {
      "fn": "ERC777._approve",
      "offset": [
        15048,
        15080
      ],
      "op": "LOG3",
      "path": "114"
    },
    "2803": {
      "fn": "ERC777._approve",
      "offset": [
        14752,
        15087
      ],
      "op": "POP",
      "path": "114"
    },
    "2804": {
      "fn": "ERC777._approve",
      "offset": [
        14752,
        15087
      ],
      "op": "POP",
      "path": "114"
    },
    "2805": {
      "fn": "ERC777._approve",
      "offset": [
        14752,
        15087
      ],
      "op": "POP",
      "path": "114"
    },
    "2806": {
      "fn": "ERC777._approve",
      "jump": "o",
      "offset": [
        14752,
        15087
      ],
      "op": "JUMP",
      "path": "114"
    },
    "2807": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15560,
        16044
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2808": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2810": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "2811": {
      "op": "PUSH4",
      "value": "0x555DDC65"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2820": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2827": {
      "op": "SHL"
    },
    "2828": {
      "op": "SUB"
    },
    "2829": {
      "op": "DUP7"
    },
    "2830": {
      "op": "AND"
    },
    "2831": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "2833": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP3",
      "path": "114"
    },
    "2834": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "ADD",
      "path": "114"
    },
    "2835": {
      "op": "MSTORE"
    },
    "2836": {
      "offset": [
        1417,
        1448
      ],
      "op": "PUSH32",
      "path": "114",
      "value": "0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2871": {
      "op": "DUP3"
    },
    "2872": {
      "op": "ADD"
    },
    "2873": {
      "op": "MSTORE"
    },
    "2874": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15781,
        15800
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "2876": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15781,
        15800
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2877": {
      "offset": [
        1168,
        1210
      ],
      "op": "PUSH20",
      "path": "114",
      "value": "0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
    },
    "2898": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        1168,
        1210
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2899": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15844
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0xAABBB8CA"
    },
    "2904": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15844
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2907": {
      "op": "ADD"
    },
    "2908": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "2910": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2912": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "2913": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2914": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP4",
      "path": "114"
    },
    "2915": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "SUB",
      "path": "114"
    },
    "2916": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2917": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP7",
      "path": "114"
    },
    "2918": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2919": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "EXTCODESIZE",
      "path": "114"
    },
    "2920": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "2921": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2922": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "2923": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xB73"
    },
    "2926": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "2927": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "2929": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2930": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "REVERT",
      "path": "114"
    },
    "2931": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2932": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "POP",
      "path": "114"
    },
    "2933": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "GAS",
      "path": "114"
    },
    "2934": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "STATICCALL",
      "path": "114"
    },
    "2935": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "2936": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2937": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "2938": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xB87"
    },
    "2941": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "2942": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "RETURNDATASIZE",
      "path": "114"
    },
    "2943": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "2945": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2946": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "RETURNDATACOPY",
      "path": "114"
    },
    "2947": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "RETURNDATASIZE",
      "path": "114"
    },
    "2948": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "2950": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "REVERT",
      "path": "114"
    },
    "2951": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2952": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "POP",
      "path": "114"
    },
    "2953": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "POP",
      "path": "114"
    },
    "2954": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "POP",
      "path": "114"
    },
    "2955": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "POP",
      "path": "114"
    },
    "2956": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2958": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "2959": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "RETURNDATASIZE",
      "path": "114"
    },
    "2960": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x1F"
    },
    "2962": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "NOT",
      "path": "114"
    },
    "2963": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x1F"
    },
    "2965": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP3",
      "path": "114"
    },
    "2966": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "ADD",
      "path": "114"
    },
    "2967": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "AND",
      "path": "114"
    },
    "2968": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP3",
      "path": "114"
    },
    "2969": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "ADD",
      "path": "114"
    },
    "2970": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP1",
      "path": "114"
    },
    "2971": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "2973": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "2974": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "POP",
      "path": "114"
    },
    "2975": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2976": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "ADD",
      "path": "114"
    },
    "2977": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2978": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xBAB"
    },
    "2981": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "2982": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2983": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x12B4"
    },
    "2986": {
      "fn": "ERC777._callTokensToSend",
      "jump": "i",
      "offset": [
        15803,
        15881
      ],
      "op": "JUMP",
      "path": "114"
    },
    "2987": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15803,
        15881
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "2988": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15781,
        15881
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "2989": {
      "op": "POP"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2996": {
      "op": "SHL"
    },
    "2997": {
      "op": "SUB"
    },
    "2998": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15895,
        15920
      ],
      "op": "DUP2",
      "path": "114"
    },
    "2999": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15895,
        15920
      ],
      "op": "AND",
      "path": "114"
    },
    "3000": {
      "branch": 75,
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15895,
        15920
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3001": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15891,
        16038
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xC25"
    },
    "3004": {
      "branch": 75,
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15891,
        16038
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "3005": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 42,
      "value": "0x40"
    },
    "3007": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "3008": {
      "op": "PUSH4",
      "value": "0x3AD5CBC1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3015": {
      "op": "SHL"
    },
    "3016": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3017": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3024": {
      "op": "SHL"
    },
    "3025": {
      "op": "SUB"
    },
    "3026": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        15975
      ],
      "op": "DUP3",
      "path": "114"
    },
    "3027": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        15975
      ],
      "op": "AND",
      "path": "114"
    },
    "3028": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        15975
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3029": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        15975
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x75AB9782"
    },
    "3034": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        15975
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3035": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xBF2"
    },
    "3038": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3039": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15976,
        15984
      ],
      "op": "DUP11",
      "path": "114"
    },
    "3040": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15976,
        15984
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3041": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15986,
        15990
      ],
      "op": "DUP11",
      "path": "114"
    },
    "3042": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15986,
        15990
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3043": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15992,
        15994
      ],
      "op": "DUP11",
      "path": "114"
    },
    "3044": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15992,
        15994
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3045": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15996,
        16002
      ],
      "op": "DUP11",
      "path": "114"
    },
    "3046": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15996,
        16002
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3047": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16004,
        16012
      ],
      "op": "DUP11",
      "path": "114"
    },
    "3048": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16004,
        16012
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3049": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16014,
        16026
      ],
      "op": "DUP11",
      "path": "114"
    },
    "3050": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16014,
        16026
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3051": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "3053": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "ADD",
      "path": "114"
    },
    "3054": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1567"
    },
    "3057": {
      "fn": "ERC777._callTokensToSend",
      "jump": "i",
      "offset": [
        15936,
        16027
      ],
      "op": "JUMP",
      "path": "114"
    },
    "3058": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3059": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3061": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3063": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "3064": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3065": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "DUP4",
      "path": "114"
    },
    "3066": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "SUB",
      "path": "114"
    },
    "3067": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3068": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3070": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "DUP8",
      "path": "114"
    },
    "3071": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3072": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "EXTCODESIZE",
      "path": "114"
    },
    "3073": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3074": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3075": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3076": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xC0C"
    },
    "3079": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "3080": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3082": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3083": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "REVERT",
      "path": "114"
    },
    "3084": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3085": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "POP",
      "path": "114"
    },
    "3086": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "GAS",
      "path": "114"
    },
    "3087": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "CALL",
      "path": "114"
    },
    "3088": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3089": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3090": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3091": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xC20"
    },
    "3094": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "3095": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "RETURNDATASIZE",
      "path": "114"
    },
    "3096": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3098": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3099": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "RETURNDATACOPY",
      "path": "114"
    },
    "3100": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "RETURNDATASIZE",
      "path": "114"
    },
    "3101": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3103": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "REVERT",
      "path": "114"
    },
    "3104": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3105": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "POP",
      "path": "114"
    },
    "3106": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "POP",
      "path": "114"
    },
    "3107": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "POP",
      "path": "114"
    },
    "3108": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15936,
        16027
      ],
      "op": "POP",
      "path": "114"
    },
    "3109": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15891,
        16038
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3110": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15560,
        16044
      ],
      "op": "POP",
      "path": "114"
    },
    "3111": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15560,
        16044
      ],
      "op": "POP",
      "path": "114"
    },
    "3112": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15560,
        16044
      ],
      "op": "POP",
      "path": "114"
    },
    "3113": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15560,
        16044
      ],
      "op": "POP",
      "path": "114"
    },
    "3114": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15560,
        16044
      ],
      "op": "POP",
      "path": "114"
    },
    "3115": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15560,
        16044
      ],
      "op": "POP",
      "path": "114"
    },
    "3116": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15560,
        16044
      ],
      "op": "POP",
      "path": "114"
    },
    "3117": {
      "fn": "ERC777._callTokensToSend",
      "jump": "o",
      "offset": [
        15560,
        16044
      ],
      "op": "JUMP",
      "path": "114"
    },
    "3118": {
      "fn": "ERC777._move",
      "offset": [
        14025,
        14614
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3125": {
      "op": "SHL"
    },
    "3126": {
      "op": "SUB"
    },
    "3127": {
      "fn": "ERC777._move",
      "offset": [
        14315,
        14330
      ],
      "op": "DUP6",
      "path": "114"
    },
    "3128": {
      "fn": "ERC777._move",
      "offset": [
        14315,
        14330
      ],
      "op": "AND",
      "path": "114"
    },
    "3129": {
      "fn": "ERC777._move",
      "offset": [
        14293,
        14312
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3131": {
      "fn": "ERC777._move",
      "offset": [
        14315,
        14330
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3132": {
      "fn": "ERC777._move",
      "offset": [
        14315,
        14330
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3133": {
      "fn": "ERC777._move",
      "offset": [
        14315,
        14330
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "3134": {
      "fn": "ERC777._move",
      "offset": [
        14315,
        14330
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "3136": {
      "fn": "ERC777._move",
      "offset": [
        14315,
        14330
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3137": {
      "fn": "ERC777._move",
      "offset": [
        14315,
        14330
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3138": {
      "fn": "ERC777._move",
      "offset": [
        14315,
        14330
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "3139": {
      "fn": "ERC777._move",
      "offset": [
        14315,
        14330
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3141": {
      "fn": "ERC777._move",
      "offset": [
        14315,
        14330
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3142": {
      "fn": "ERC777._move",
      "offset": [
        14315,
        14330
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "3143": {
      "fn": "ERC777._move",
      "offset": [
        14315,
        14330
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "3144": {
      "fn": "ERC777._move",
      "offset": [
        14348,
        14369
      ],
      "op": "DUP4",
      "path": "114",
      "statement": 43
    },
    "3145": {
      "fn": "ERC777._move",
      "offset": [
        14348,
        14369
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3146": {
      "fn": "ERC777._move",
      "offset": [
        14348,
        14369
      ],
      "op": "LT",
      "path": "114"
    },
    "3147": {
      "branch": 76,
      "fn": "ERC777._move",
      "offset": [
        14348,
        14369
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3148": {
      "fn": "ERC777._move",
      "offset": [
        14340,
        14413
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xCA7"
    },
    "3151": {
      "branch": 76,
      "fn": "ERC777._move",
      "offset": [
        14340,
        14413
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "3152": {
      "fn": "ERC777._move",
      "offset": [
        14340,
        14413
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3154": {
      "fn": "ERC777._move",
      "offset": [
        14340,
        14413
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "3155": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3161": {
      "op": "SHL"
    },
    "3162": {
      "fn": "ERC777._move",
      "offset": [
        14340,
        14413
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3163": {
      "fn": "ERC777._move",
      "offset": [
        14340,
        14413
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3166": {
      "fn": "ERC777._move",
      "offset": [
        14340,
        14413
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "3168": {
      "fn": "ERC777._move",
      "offset": [
        14340,
        14413
      ],
      "op": "DUP3",
      "path": "114"
    },
    "3169": {
      "fn": "ERC777._move",
      "offset": [
        14340,
        14413
      ],
      "op": "ADD",
      "path": "114"
    },
    "3170": {
      "op": "MSTORE"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3175": {
      "op": "DUP3"
    },
    "3176": {
      "op": "ADD"
    },
    "3177": {
      "op": "MSTORE"
    },
    "3178": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220616D6F756E74206578636565647320"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3213": {
      "op": "DUP3"
    },
    "3214": {
      "op": "ADD"
    },
    "3215": {
      "op": "MSTORE"
    },
    "3216": {
      "op": "PUSH7",
      "value": "0x62616C616E6365"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "3226": {
      "op": "SHL"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3229": {
      "op": "DUP3"
    },
    "3230": {
      "op": "ADD"
    },
    "3231": {
      "op": "MSTORE"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3234": {
      "op": "ADD"
    },
    "3235": {
      "fn": "ERC777._move",
      "offset": [
        14340,
        14413
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "3238": {
      "op": "JUMP"
    },
    "3239": {
      "fn": "ERC777._move",
      "offset": [
        14340,
        14413
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3240": {
      "fn": "ERC777._move",
      "offset": [
        14441,
        14461
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 44,
      "value": "0xCB1"
    },
    "3243": {
      "fn": "ERC777._move",
      "offset": [
        14455,
        14461
      ],
      "op": "DUP5",
      "path": "114"
    },
    "3244": {
      "fn": "ERC777._move",
      "offset": [
        14441,
        14452
      ],
      "op": "DUP3",
      "path": "114"
    },
    "3245": {
      "fn": "ERC777._move",
      "offset": [
        14441,
        14461
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x16FE"
    },
    "3248": {
      "fn": "ERC777._move",
      "jump": "i",
      "offset": [
        14441,
        14461
      ],
      "op": "JUMP",
      "path": "114"
    },
    "3249": {
      "fn": "ERC777._move",
      "offset": [
        14441,
        14461
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3256": {
      "op": "SHL"
    },
    "3257": {
      "op": "SUB"
    },
    "3258": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14438
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3259": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14438
      ],
      "op": "DUP9",
      "path": "114"
    },
    "3260": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14438
      ],
      "op": "AND",
      "path": "114"
    },
    "3261": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14432
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3263": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14438
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3264": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14438
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3265": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14438
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "3266": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14438
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "3268": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14438
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3269": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14438
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3270": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14438
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "3271": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14438
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3273": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14438
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3274": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14438
      ],
      "op": "DUP3",
      "path": "114"
    },
    "3275": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14438
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "3276": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14461
      ],
      "op": "SWAP4",
      "path": "114"
    },
    "3277": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14461
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3278": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14461
      ],
      "op": "SWAP4",
      "path": "114"
    },
    "3279": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14461
      ],
      "op": "SSTORE",
      "path": "114"
    },
    "3280": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14484
      ],
      "op": "SWAP1",
      "path": "114",
      "statement": 45
    },
    "3281": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14484
      ],
      "op": "DUP8",
      "path": "114"
    },
    "3282": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14484
      ],
      "op": "AND",
      "path": "114"
    },
    "3283": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14484
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3284": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14484
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "3285": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14484
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3286": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14484
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3287": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14484
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "3288": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14494
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3289": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14494
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "3290": {
      "fn": "ERC777._move",
      "offset": [
        14488,
        14494
      ],
      "op": "DUP7",
      "path": "114"
    },
    "3291": {
      "fn": "ERC777._move",
      "offset": [
        14488,
        14494
      ],
      "op": "SWAP3",
      "path": "114"
    },
    "3292": {
      "fn": "ERC777._move",
      "offset": [
        14423,
        14432
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3293": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14494
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xCE7"
    },
    "3296": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14494
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3297": {
      "fn": "ERC777._move",
      "offset": [
        14488,
        14494
      ],
      "op": "DUP5",
      "path": "114"
    },
    "3298": {
      "fn": "ERC777._move",
      "offset": [
        14488,
        14494
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3299": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14494
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x16E6"
    },
    "3302": {
      "fn": "ERC777._move",
      "jump": "i",
      "offset": [
        14471,
        14494
      ],
      "op": "JUMP",
      "path": "114"
    },
    "3303": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14494
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3304": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14494
      ],
      "op": "SWAP3",
      "path": "114"
    },
    "3305": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14494
      ],
      "op": "POP",
      "path": "114"
    },
    "3306": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14494
      ],
      "op": "POP",
      "path": "114"
    },
    "3307": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14494
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3308": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14494
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3309": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14494
      ],
      "op": "SSTORE",
      "path": "114"
    },
    "3310": {
      "fn": "ERC777._move",
      "offset": [
        14471,
        14494
      ],
      "op": "POP",
      "path": "114"
    },
    "3311": {
      "fn": "ERC777._move",
      "offset": [
        14531,
        14533
      ],
      "op": "DUP5",
      "path": "114",
      "statement": 46
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3318": {
      "op": "SHL"
    },
    "3319": {
      "op": "SUB"
    },
    "3320": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "AND",
      "path": "114"
    },
    "3321": {
      "fn": "ERC777._move",
      "offset": [
        14525,
        14529
      ],
      "op": "DUP7",
      "path": "114"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3328": {
      "op": "SHL"
    },
    "3329": {
      "op": "SUB"
    },
    "3330": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "AND",
      "path": "114"
    },
    "3331": {
      "fn": "ERC777._move",
      "offset": [
        14515,
        14523
      ],
      "op": "DUP9",
      "path": "114"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3338": {
      "op": "SHL"
    },
    "3339": {
      "op": "SUB"
    },
    "3340": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "AND",
      "path": "114"
    },
    "3341": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "PUSH32",
      "path": "114",
      "value": "0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987"
    },
    "3374": {
      "fn": "ERC777._move",
      "offset": [
        14535,
        14541
      ],
      "op": "DUP8",
      "path": "114"
    },
    "3375": {
      "fn": "ERC777._move",
      "offset": [
        14543,
        14551
      ],
      "op": "DUP8",
      "path": "114"
    },
    "3376": {
      "fn": "ERC777._move",
      "offset": [
        14553,
        14565
      ],
      "op": "DUP8",
      "path": "114"
    },
    "3377": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3379": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "3380": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xD3F"
    },
    "3383": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "SWAP4",
      "path": "114"
    },
    "3384": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "SWAP3",
      "path": "114"
    },
    "3385": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "3386": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3387": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x16B1"
    },
    "3390": {
      "fn": "ERC777._move",
      "jump": "i",
      "offset": [
        14510,
        14566
      ],
      "op": "JUMP",
      "path": "114"
    },
    "3391": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3392": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3394": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "3395": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3396": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "3397": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "SUB",
      "path": "114"
    },
    "3398": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3399": {
      "fn": "ERC777._move",
      "offset": [
        14510,
        14566
      ],
      "op": "LOG4",
      "path": "114"
    },
    "3400": {
      "fn": "ERC777._move",
      "offset": [
        14596,
        14598
      ],
      "op": "DUP5",
      "path": "114",
      "statement": 47
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3407": {
      "op": "SHL"
    },
    "3408": {
      "op": "SUB"
    },
    "3409": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "AND",
      "path": "114"
    },
    "3410": {
      "fn": "ERC777._move",
      "offset": [
        14590,
        14594
      ],
      "op": "DUP7",
      "path": "114"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3417": {
      "op": "SHL"
    },
    "3418": {
      "op": "SUB"
    },
    "3419": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "AND",
      "path": "114"
    },
    "3420": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "PUSH32",
      "path": "114",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3453": {
      "fn": "ERC777._move",
      "offset": [
        14600,
        14606
      ],
      "op": "DUP7",
      "path": "114"
    },
    "3454": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3456": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "3457": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xD8C"
    },
    "3460": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "3461": {
      "op": "DUP2"
    },
    "3462": {
      "op": "MSTORE"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3465": {
      "op": "ADD"
    },
    "3466": {
      "op": "SWAP1"
    },
    "3467": {
      "op": "JUMP"
    },
    "3468": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3469": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3471": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "3472": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3473": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "3474": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "SUB",
      "path": "114"
    },
    "3475": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3476": {
      "fn": "ERC777._move",
      "offset": [
        14581,
        14607
      ],
      "op": "LOG3",
      "path": "114"
    },
    "3477": {
      "fn": "ERC777._move",
      "offset": [
        14025,
        14614
      ],
      "op": "POP",
      "path": "114"
    },
    "3478": {
      "fn": "ERC777._move",
      "offset": [
        14025,
        14614
      ],
      "op": "POP",
      "path": "114"
    },
    "3479": {
      "fn": "ERC777._move",
      "offset": [
        14025,
        14614
      ],
      "op": "POP",
      "path": "114"
    },
    "3480": {
      "fn": "ERC777._move",
      "offset": [
        14025,
        14614
      ],
      "op": "POP",
      "path": "114"
    },
    "3481": {
      "fn": "ERC777._move",
      "offset": [
        14025,
        14614
      ],
      "op": "POP",
      "path": "114"
    },
    "3482": {
      "fn": "ERC777._move",
      "offset": [
        14025,
        14614
      ],
      "op": "POP",
      "path": "114"
    },
    "3483": {
      "fn": "ERC777._move",
      "offset": [
        14025,
        14614
      ],
      "op": "POP",
      "path": "114"
    },
    "3484": {
      "fn": "ERC777._move",
      "jump": "o",
      "offset": [
        14025,
        14614
      ],
      "op": "JUMP",
      "path": "114"
    },
    "3485": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16733,
        17421
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3486": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3488": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "3489": {
      "op": "PUSH4",
      "value": "0x555DDC65"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3496": {
      "op": "SHL"
    },
    "3497": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3498": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3505": {
      "op": "SHL"
    },
    "3506": {
      "op": "SUB"
    },
    "3507": {
      "op": "DUP7"
    },
    "3508": {
      "op": "AND"
    },
    "3509": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "3511": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP3",
      "path": "114"
    },
    "3512": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "ADD",
      "path": "114"
    },
    "3513": {
      "op": "MSTORE"
    },
    "3514": {
      "offset": [
        1514,
        1548
      ],
      "op": "PUSH32",
      "path": "114",
      "value": "0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3549": {
      "op": "DUP3"
    },
    "3550": {
      "op": "ADD"
    },
    "3551": {
      "op": "MSTORE"
    },
    "3552": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16990,
        17009
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3554": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16990,
        17009
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3555": {
      "offset": [
        1168,
        1210
      ],
      "op": "PUSH20",
      "path": "114",
      "value": "0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
    },
    "3576": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        1168,
        1210
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3577": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17053
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0xAABBB8CA"
    },
    "3582": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17053
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3585": {
      "op": "ADD"
    },
    "3586": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "3588": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3590": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "3591": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3592": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP4",
      "path": "114"
    },
    "3593": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "SUB",
      "path": "114"
    },
    "3594": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3595": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP7",
      "path": "114"
    },
    "3596": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3597": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "EXTCODESIZE",
      "path": "114"
    },
    "3598": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3599": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3600": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3601": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xE19"
    },
    "3604": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "3605": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3607": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3608": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "REVERT",
      "path": "114"
    },
    "3609": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3610": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "POP",
      "path": "114"
    },
    "3611": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "GAS",
      "path": "114"
    },
    "3612": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "STATICCALL",
      "path": "114"
    },
    "3613": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3614": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3615": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3616": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xE2D"
    },
    "3619": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "3620": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "RETURNDATASIZE",
      "path": "114"
    },
    "3621": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3623": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3624": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "RETURNDATACOPY",
      "path": "114"
    },
    "3625": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "RETURNDATASIZE",
      "path": "114"
    },
    "3626": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3628": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "REVERT",
      "path": "114"
    },
    "3629": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3630": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "POP",
      "path": "114"
    },
    "3631": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "POP",
      "path": "114"
    },
    "3632": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "POP",
      "path": "114"
    },
    "3633": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "POP",
      "path": "114"
    },
    "3634": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3636": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "3637": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "RETURNDATASIZE",
      "path": "114"
    },
    "3638": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x1F"
    },
    "3640": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "NOT",
      "path": "114"
    },
    "3641": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x1F"
    },
    "3643": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP3",
      "path": "114"
    },
    "3644": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "ADD",
      "path": "114"
    },
    "3645": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "AND",
      "path": "114"
    },
    "3646": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP3",
      "path": "114"
    },
    "3647": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "ADD",
      "path": "114"
    },
    "3648": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3649": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3651": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "3652": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "POP",
      "path": "114"
    },
    "3653": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3654": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "ADD",
      "path": "114"
    },
    "3655": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3656": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xE51"
    },
    "3659": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "3660": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3661": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x12B4"
    },
    "3664": {
      "fn": "ERC777._callTokensReceived",
      "jump": "i",
      "offset": [
        17012,
        17091
      ],
      "op": "JUMP",
      "path": "114"
    },
    "3665": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17012,
        17091
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3666": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16990,
        17091
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3667": {
      "op": "POP"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3674": {
      "op": "SHL"
    },
    "3675": {
      "op": "SUB"
    },
    "3676": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17105,
        17130
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3677": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17105,
        17130
      ],
      "op": "AND",
      "path": "114"
    },
    "3678": {
      "branch": 77,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17105,
        17130
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3679": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17101,
        17415
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xECD"
    },
    "3682": {
      "branch": 77,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17101,
        17415
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "3683": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 48,
      "value": "0x40"
    },
    "3685": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "3686": {
      "op": "PUSH3",
      "value": "0x23DE29"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3692": {
      "op": "SHL"
    },
    "3693": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3694": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3701": {
      "op": "SHL"
    },
    "3702": {
      "op": "SUB"
    },
    "3703": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17190
      ],
      "op": "DUP3",
      "path": "114"
    },
    "3704": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17190
      ],
      "op": "AND",
      "path": "114"
    },
    "3705": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17190
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3706": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17190
      ],
      "op": "PUSH3",
      "path": "114",
      "value": "0x23DE29"
    },
    "3710": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17190
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3711": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xE96"
    },
    "3714": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3715": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17191,
        17199
      ],
      "op": "DUP12",
      "path": "114"
    },
    "3716": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17191,
        17199
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3717": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17201,
        17205
      ],
      "op": "DUP12",
      "path": "114"
    },
    "3718": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17201,
        17205
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3719": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17207,
        17209
      ],
      "op": "DUP12",
      "path": "114"
    },
    "3720": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17207,
        17209
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3721": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17211,
        17217
      ],
      "op": "DUP12",
      "path": "114"
    },
    "3722": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17211,
        17217
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3723": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17219,
        17227
      ],
      "op": "DUP12",
      "path": "114"
    },
    "3724": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17219,
        17227
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3725": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17229,
        17241
      ],
      "op": "DUP12",
      "path": "114"
    },
    "3726": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17229,
        17241
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "3727": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "3729": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "ADD",
      "path": "114"
    },
    "3730": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1567"
    },
    "3733": {
      "fn": "ERC777._callTokensReceived",
      "jump": "i",
      "offset": [
        17146,
        17242
      ],
      "op": "JUMP",
      "path": "114"
    },
    "3734": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3735": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3737": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3739": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "3740": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3741": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "DUP4",
      "path": "114"
    },
    "3742": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "SUB",
      "path": "114"
    },
    "3743": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3744": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3746": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "DUP8",
      "path": "114"
    },
    "3747": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3748": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "EXTCODESIZE",
      "path": "114"
    },
    "3749": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3750": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3751": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3752": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xEB0"
    },
    "3755": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "3756": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3758": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3759": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "REVERT",
      "path": "114"
    },
    "3760": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3761": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "POP",
      "path": "114"
    },
    "3762": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "GAS",
      "path": "114"
    },
    "3763": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "CALL",
      "path": "114"
    },
    "3764": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3765": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3766": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3767": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xEC4"
    },
    "3770": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "3771": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "RETURNDATASIZE",
      "path": "114"
    },
    "3772": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3774": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "DUP1",
      "path": "114"
    },
    "3775": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "RETURNDATACOPY",
      "path": "114"
    },
    "3776": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "RETURNDATASIZE",
      "path": "114"
    },
    "3777": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "3779": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "REVERT",
      "path": "114"
    },
    "3780": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3781": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "POP",
      "path": "114"
    },
    "3782": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "POP",
      "path": "114"
    },
    "3783": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "POP",
      "path": "114"
    },
    "3784": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17146,
        17242
      ],
      "op": "POP",
      "path": "114"
    },
    "3785": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17101,
        17415
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xF67"
    },
    "3788": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17101,
        17415
      ],
      "op": "JUMP",
      "path": "114"
    },
    "3789": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17101,
        17415
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3790": {
      "branch": 78,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17263,
        17282
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3791": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17259,
        17415
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "3792": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17259,
        17415
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xF67"
    },
    "3795": {
      "branch": 78,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17259,
        17415
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3802": {
      "op": "SHL"
    },
    "3803": {
      "op": "SUB"
    },
    "3804": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17307,
        17320
      ],
      "op": "DUP7",
      "path": "114",
      "statement": 49
    },
    "3805": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17307,
        17320
      ],
      "op": "AND",
      "path": "114"
    },
    "3806": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "119"
    },
    "3807": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "119",
      "statement": 50
    },
    "3808": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17298,
        17404
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xF67"
    },
    "3811": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17298,
        17404
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "3812": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17298,
        17404
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3814": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17298,
        17404
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "3815": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3821": {
      "op": "SHL"
    },
    "3822": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17298,
        17404
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3823": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17298,
        17404
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3826": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17298,
        17404
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "3828": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17298,
        17404
      ],
      "op": "DUP3",
      "path": "114"
    },
    "3829": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17298,
        17404
      ],
      "op": "ADD",
      "path": "114"
    },
    "3830": {
      "op": "MSTORE"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x4D"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3835": {
      "op": "DUP3"
    },
    "3836": {
      "op": "ADD"
    },
    "3837": {
      "op": "MSTORE"
    },
    "3838": {
      "op": "PUSH32",
      "value": "0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3873": {
      "op": "DUP3"
    },
    "3874": {
      "op": "ADD"
    },
    "3875": {
      "op": "MSTORE"
    },
    "3876": {
      "op": "PUSH32",
      "value": "0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3911": {
      "op": "DUP3"
    },
    "3912": {
      "op": "ADD"
    },
    "3913": {
      "op": "MSTORE"
    },
    "3914": {
      "op": "PUSH13",
      "value": "0x1AD95B9CD49958DA5C1A595B9D"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "3930": {
      "op": "SHL"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3933": {
      "op": "DUP3"
    },
    "3934": {
      "op": "ADD"
    },
    "3935": {
      "op": "MSTORE"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3938": {
      "op": "ADD"
    },
    "3939": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17298,
        17404
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "3942": {
      "op": "JUMP"
    },
    "3943": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17298,
        17404
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3944": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16733,
        17421
      ],
      "op": "POP",
      "path": "114"
    },
    "3945": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16733,
        17421
      ],
      "op": "POP",
      "path": "114"
    },
    "3946": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16733,
        17421
      ],
      "op": "POP",
      "path": "114"
    },
    "3947": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16733,
        17421
      ],
      "op": "POP",
      "path": "114"
    },
    "3948": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16733,
        17421
      ],
      "op": "POP",
      "path": "114"
    },
    "3949": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16733,
        17421
      ],
      "op": "POP",
      "path": "114"
    },
    "3950": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16733,
        17421
      ],
      "op": "POP",
      "path": "114"
    },
    "3951": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16733,
        17421
      ],
      "op": "POP",
      "path": "114"
    },
    "3952": {
      "fn": "ERC777._callTokensReceived",
      "jump": "o",
      "offset": [
        16733,
        17421
      ],
      "op": "JUMP",
      "path": "114"
    },
    "3953": {
      "fn": "ERC777._send",
      "offset": [
        12247,
        12917
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3960": {
      "op": "SHL"
    },
    "3961": {
      "op": "SUB"
    },
    "3962": {
      "fn": "ERC777._send",
      "offset": [
        12489,
        12507
      ],
      "op": "DUP7",
      "path": "114",
      "statement": 51
    },
    "3963": {
      "branch": 79,
      "fn": "ERC777._send",
      "offset": [
        12489,
        12507
      ],
      "op": "AND",
      "path": "114"
    },
    "3964": {
      "fn": "ERC777._send",
      "offset": [
        12481,
        12546
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xFD2"
    },
    "3967": {
      "branch": 79,
      "fn": "ERC777._send",
      "offset": [
        12481,
        12546
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "3968": {
      "fn": "ERC777._send",
      "offset": [
        12481,
        12546
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "3970": {
      "fn": "ERC777._send",
      "offset": [
        12481,
        12546
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "3971": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3977": {
      "op": "SHL"
    },
    "3978": {
      "fn": "ERC777._send",
      "offset": [
        12481,
        12546
      ],
      "op": "DUP2",
      "path": "114"
    },
    "3979": {
      "fn": "ERC777._send",
      "offset": [
        12481,
        12546
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3982": {
      "fn": "ERC777._send",
      "offset": [
        12481,
        12546
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "3984": {
      "fn": "ERC777._send",
      "offset": [
        12481,
        12546
      ],
      "op": "DUP3",
      "path": "114"
    },
    "3985": {
      "fn": "ERC777._send",
      "offset": [
        12481,
        12546
      ],
      "op": "ADD",
      "path": "114"
    },
    "3986": {
      "op": "MSTORE"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3991": {
      "op": "DUP3"
    },
    "3992": {
      "op": "ADD"
    },
    "3993": {
      "op": "MSTORE"
    },
    "3994": {
      "op": "PUSH32",
      "value": "0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4029": {
      "op": "DUP3"
    },
    "4030": {
      "op": "ADD"
    },
    "4031": {
      "op": "MSTORE"
    },
    "4032": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4037": {
      "op": "SHL"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4040": {
      "op": "DUP3"
    },
    "4041": {
      "op": "ADD"
    },
    "4042": {
      "op": "MSTORE"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4045": {
      "op": "ADD"
    },
    "4046": {
      "fn": "ERC777._send",
      "offset": [
        12481,
        12546
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "4049": {
      "op": "JUMP"
    },
    "4050": {
      "fn": "ERC777._send",
      "offset": [
        12481,
        12546
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4057": {
      "op": "SHL"
    },
    "4058": {
      "op": "SUB"
    },
    "4059": {
      "fn": "ERC777._send",
      "offset": [
        12564,
        12580
      ],
      "op": "DUP6",
      "path": "114",
      "statement": 52
    },
    "4060": {
      "branch": 80,
      "fn": "ERC777._send",
      "offset": [
        12564,
        12580
      ],
      "op": "AND",
      "path": "114"
    },
    "4061": {
      "fn": "ERC777._send",
      "offset": [
        12556,
        12617
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1028"
    },
    "4064": {
      "branch": 80,
      "fn": "ERC777._send",
      "offset": [
        12556,
        12617
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "4065": {
      "fn": "ERC777._send",
      "offset": [
        12556,
        12617
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "4067": {
      "fn": "ERC777._send",
      "offset": [
        12556,
        12617
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "4068": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4074": {
      "op": "SHL"
    },
    "4075": {
      "fn": "ERC777._send",
      "offset": [
        12556,
        12617
      ],
      "op": "DUP2",
      "path": "114"
    },
    "4076": {
      "fn": "ERC777._send",
      "offset": [
        12556,
        12617
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4079": {
      "fn": "ERC777._send",
      "offset": [
        12556,
        12617
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "4081": {
      "fn": "ERC777._send",
      "offset": [
        12556,
        12617
      ],
      "op": "DUP3",
      "path": "114"
    },
    "4082": {
      "fn": "ERC777._send",
      "offset": [
        12556,
        12617
      ],
      "op": "ADD",
      "path": "114"
    },
    "4083": {
      "op": "DUP2"
    },
    "4084": {
      "op": "SWAP1"
    },
    "4085": {
      "op": "MSTORE"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4088": {
      "op": "DUP3"
    },
    "4089": {
      "op": "ADD"
    },
    "4090": {
      "op": "MSTORE"
    },
    "4091": {
      "op": "PUSH32",
      "value": "0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4126": {
      "op": "DUP3"
    },
    "4127": {
      "op": "ADD"
    },
    "4128": {
      "op": "MSTORE"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4131": {
      "op": "ADD"
    },
    "4132": {
      "fn": "ERC777._send",
      "offset": [
        12556,
        12617
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "4135": {
      "op": "JUMP"
    },
    "4136": {
      "fn": "ERC777._send",
      "offset": [
        12556,
        12617
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "4137": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "4138": {
      "fn": "ERC777._send",
      "offset": [
        12670,
        12739
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 53,
      "value": "0x1037"
    },
    "4141": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "DUP2",
      "path": "121"
    },
    "4142": {
      "fn": "ERC777._send",
      "offset": [
        12698,
        12702
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4143": {
      "fn": "ERC777._send",
      "offset": [
        12704,
        12706
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4144": {
      "fn": "ERC777._send",
      "offset": [
        12708,
        12714
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4145": {
      "fn": "ERC777._send",
      "offset": [
        12716,
        12724
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4146": {
      "fn": "ERC777._send",
      "offset": [
        12726,
        12738
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4147": {
      "fn": "ERC777._send",
      "offset": [
        12670,
        12687
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xAF7"
    },
    "4150": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12670,
        12739
      ],
      "op": "JUMP",
      "path": "114"
    },
    "4151": {
      "fn": "ERC777._send",
      "offset": [
        12670,
        12739
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "4152": {
      "fn": "ERC777._send",
      "offset": [
        12750,
        12807
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 54,
      "value": "0x1045"
    },
    "4155": {
      "fn": "ERC777._send",
      "offset": [
        12756,
        12764
      ],
      "op": "DUP2",
      "path": "114"
    },
    "4156": {
      "fn": "ERC777._send",
      "offset": [
        12766,
        12770
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4157": {
      "fn": "ERC777._send",
      "offset": [
        12772,
        12774
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4158": {
      "fn": "ERC777._send",
      "offset": [
        12776,
        12782
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4159": {
      "fn": "ERC777._send",
      "offset": [
        12784,
        12792
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4160": {
      "fn": "ERC777._send",
      "offset": [
        12794,
        12806
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4161": {
      "fn": "ERC777._send",
      "offset": [
        12750,
        12755
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xC2E"
    },
    "4164": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12750,
        12807
      ],
      "op": "JUMP",
      "path": "114"
    },
    "4165": {
      "fn": "ERC777._send",
      "offset": [
        12750,
        12807
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "4166": {
      "fn": "ERC777._send",
      "offset": [
        12818,
        12910
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 55,
      "value": "0xC25"
    },
    "4169": {
      "fn": "ERC777._send",
      "offset": [
        12838,
        12846
      ],
      "op": "DUP2",
      "path": "114"
    },
    "4170": {
      "fn": "ERC777._send",
      "offset": [
        12848,
        12852
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4171": {
      "fn": "ERC777._send",
      "offset": [
        12854,
        12856
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4172": {
      "fn": "ERC777._send",
      "offset": [
        12858,
        12864
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4173": {
      "fn": "ERC777._send",
      "offset": [
        12866,
        12874
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4174": {
      "fn": "ERC777._send",
      "offset": [
        12876,
        12888
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4175": {
      "fn": "ERC777._send",
      "offset": [
        12890,
        12909
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4176": {
      "fn": "ERC777._send",
      "offset": [
        12818,
        12837
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xD9D"
    },
    "4179": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12818,
        12910
      ],
      "op": "JUMP",
      "path": "114"
    },
    "4180": {
      "fn": "ERC777._burn",
      "offset": [
        13222,
        14019
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4187": {
      "op": "SHL"
    },
    "4188": {
      "op": "SUB"
    },
    "4189": {
      "fn": "ERC777._burn",
      "offset": [
        13406,
        13424
      ],
      "op": "DUP5",
      "path": "114",
      "statement": 56
    },
    "4190": {
      "branch": 81,
      "fn": "ERC777._burn",
      "offset": [
        13406,
        13424
      ],
      "op": "AND",
      "path": "114"
    },
    "4191": {
      "fn": "ERC777._burn",
      "offset": [
        13398,
        13463
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x10B5"
    },
    "4194": {
      "branch": 81,
      "fn": "ERC777._burn",
      "offset": [
        13398,
        13463
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "4195": {
      "fn": "ERC777._burn",
      "offset": [
        13398,
        13463
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "4197": {
      "fn": "ERC777._burn",
      "offset": [
        13398,
        13463
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "4198": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4204": {
      "op": "SHL"
    },
    "4205": {
      "fn": "ERC777._burn",
      "offset": [
        13398,
        13463
      ],
      "op": "DUP2",
      "path": "114"
    },
    "4206": {
      "fn": "ERC777._burn",
      "offset": [
        13398,
        13463
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4209": {
      "fn": "ERC777._burn",
      "offset": [
        13398,
        13463
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "4211": {
      "fn": "ERC777._burn",
      "offset": [
        13398,
        13463
      ],
      "op": "DUP3",
      "path": "114"
    },
    "4212": {
      "fn": "ERC777._burn",
      "offset": [
        13398,
        13463
      ],
      "op": "ADD",
      "path": "114"
    },
    "4213": {
      "op": "MSTORE"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4218": {
      "op": "DUP3"
    },
    "4219": {
      "op": "ADD"
    },
    "4220": {
      "op": "MSTORE"
    },
    "4221": {
      "op": "PUSH32",
      "value": "0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4256": {
      "op": "DUP3"
    },
    "4257": {
      "op": "ADD"
    },
    "4258": {
      "op": "MSTORE"
    },
    "4259": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4264": {
      "op": "SHL"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4267": {
      "op": "DUP3"
    },
    "4268": {
      "op": "ADD"
    },
    "4269": {
      "op": "MSTORE"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4272": {
      "op": "ADD"
    },
    "4273": {
      "fn": "ERC777._burn",
      "offset": [
        13398,
        13463
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "4276": {
      "op": "JUMP"
    },
    "4277": {
      "fn": "ERC777._burn",
      "offset": [
        13398,
        13463
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "4278": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "121"
    },
    "4279": {
      "fn": "ERC777._burn",
      "offset": [
        13516,
        13589
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 57,
      "value": "0x10C5"
    },
    "4282": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "DUP2",
      "path": "121"
    },
    "4283": {
      "fn": "ERC777._burn",
      "offset": [
        13544,
        13548
      ],
      "op": "DUP7",
      "path": "114"
    },
    "4284": {
      "fn": "ERC777._burn",
      "offset": [
        13474,
        13490
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "4286": {
      "fn": "ERC777._burn",
      "offset": [
        13562,
        13568
      ],
      "op": "DUP8",
      "path": "114"
    },
    "4287": {
      "fn": "ERC777._burn",
      "offset": [
        13570,
        13574
      ],
      "op": "DUP8",
      "path": "114"
    },
    "4288": {
      "fn": "ERC777._burn",
      "offset": [
        13576,
        13588
      ],
      "op": "DUP8",
      "path": "114"
    },
    "4289": {
      "fn": "ERC777._burn",
      "offset": [
        13516,
        13533
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xAF7"
    },
    "4292": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13516,
        13589
      ],
      "op": "JUMP",
      "path": "114"
    },
    "4293": {
      "fn": "ERC777._burn",
      "offset": [
        13516,
        13589
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4300": {
      "op": "SHL"
    },
    "4301": {
      "op": "SUB"
    },
    "4302": {
      "fn": "ERC777._burn",
      "offset": [
        13723,
        13738
      ],
      "op": "DUP6",
      "path": "114"
    },
    "4303": {
      "fn": "ERC777._burn",
      "offset": [
        13723,
        13738
      ],
      "op": "AND",
      "path": "114"
    },
    "4304": {
      "fn": "ERC777._burn",
      "offset": [
        13701,
        13720
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "4306": {
      "fn": "ERC777._burn",
      "offset": [
        13723,
        13738
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4307": {
      "fn": "ERC777._burn",
      "offset": [
        13723,
        13738
      ],
      "op": "DUP2",
      "path": "114"
    },
    "4308": {
      "fn": "ERC777._burn",
      "offset": [
        13723,
        13738
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "4309": {
      "fn": "ERC777._burn",
      "offset": [
        13723,
        13738
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "4311": {
      "fn": "ERC777._burn",
      "offset": [
        13723,
        13738
      ],
      "op": "DUP2",
      "path": "114"
    },
    "4312": {
      "fn": "ERC777._burn",
      "offset": [
        13723,
        13738
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4313": {
      "fn": "ERC777._burn",
      "offset": [
        13723,
        13738
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "4314": {
      "fn": "ERC777._burn",
      "offset": [
        13723,
        13738
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "4316": {
      "fn": "ERC777._burn",
      "offset": [
        13723,
        13738
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4317": {
      "fn": "ERC777._burn",
      "offset": [
        13723,
        13738
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "4318": {
      "fn": "ERC777._burn",
      "offset": [
        13723,
        13738
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "4319": {
      "fn": "ERC777._burn",
      "offset": [
        13756,
        13777
      ],
      "op": "DUP5",
      "path": "114",
      "statement": 58
    },
    "4320": {
      "fn": "ERC777._burn",
      "offset": [
        13756,
        13777
      ],
      "op": "DUP2",
      "path": "114"
    },
    "4321": {
      "fn": "ERC777._burn",
      "offset": [
        13756,
        13777
      ],
      "op": "LT",
      "path": "114"
    },
    "4322": {
      "branch": 82,
      "fn": "ERC777._burn",
      "offset": [
        13756,
        13777
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "4323": {
      "fn": "ERC777._burn",
      "offset": [
        13748,
        13817
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x113A"
    },
    "4326": {
      "branch": 82,
      "fn": "ERC777._burn",
      "offset": [
        13748,
        13817
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "4327": {
      "fn": "ERC777._burn",
      "offset": [
        13748,
        13817
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "4329": {
      "fn": "ERC777._burn",
      "offset": [
        13748,
        13817
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "4330": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4336": {
      "op": "SHL"
    },
    "4337": {
      "fn": "ERC777._burn",
      "offset": [
        13748,
        13817
      ],
      "op": "DUP2",
      "path": "114"
    },
    "4338": {
      "fn": "ERC777._burn",
      "offset": [
        13748,
        13817
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4341": {
      "fn": "ERC777._burn",
      "offset": [
        13748,
        13817
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "4343": {
      "fn": "ERC777._burn",
      "offset": [
        13748,
        13817
      ],
      "op": "DUP3",
      "path": "114"
    },
    "4344": {
      "fn": "ERC777._burn",
      "offset": [
        13748,
        13817
      ],
      "op": "ADD",
      "path": "114"
    },
    "4345": {
      "op": "MSTORE"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4350": {
      "op": "DUP3"
    },
    "4351": {
      "op": "ADD"
    },
    "4352": {
      "op": "MSTORE"
    },
    "4353": {
      "op": "PUSH32",
      "value": "0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4388": {
      "op": "DUP3"
    },
    "4389": {
      "op": "ADD"
    },
    "4390": {
      "op": "MSTORE"
    },
    "4391": {
      "op": "PUSH3",
      "value": "0x6E6365"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4397": {
      "op": "SHL"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4400": {
      "op": "DUP3"
    },
    "4401": {
      "op": "ADD"
    },
    "4402": {
      "op": "MSTORE"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4405": {
      "op": "ADD"
    },
    "4406": {
      "fn": "ERC777._burn",
      "offset": [
        13748,
        13817
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x3DB"
    },
    "4409": {
      "op": "JUMP"
    },
    "4410": {
      "fn": "ERC777._burn",
      "offset": [
        13748,
        13817
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "4411": {
      "fn": "ERC777._burn",
      "offset": [
        13845,
        13865
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 59,
      "value": "0x1144"
    },
    "4414": {
      "fn": "ERC777._burn",
      "offset": [
        13859,
        13865
      ],
      "op": "DUP6",
      "path": "114"
    },
    "4415": {
      "fn": "ERC777._burn",
      "offset": [
        13845,
        13856
      ],
      "op": "DUP3",
      "path": "114"
    },
    "4416": {
      "fn": "ERC777._burn",
      "offset": [
        13845,
        13865
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x16FE"
    },
    "4419": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13845,
        13865
      ],
      "op": "JUMP",
      "path": "114"
    },
    "4420": {
      "fn": "ERC777._burn",
      "offset": [
        13845,
        13865
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4427": {
      "op": "SHL"
    },
    "4428": {
      "op": "SUB"
    },
    "4429": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13842
      ],
      "op": "DUP8",
      "path": "114"
    },
    "4430": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13842
      ],
      "op": "AND",
      "path": "114"
    },
    "4431": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13836
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "4433": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13842
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4434": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13842
      ],
      "op": "DUP2",
      "path": "114"
    },
    "4435": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13842
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "4436": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13842
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "4438": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13842
      ],
      "op": "DUP2",
      "path": "114"
    },
    "4439": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13842
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4440": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13842
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "4441": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13842
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "4443": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13842
      ],
      "op": "DUP2",
      "path": "114"
    },
    "4444": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13842
      ],
      "op": "KECCAK256",
      "path": "114"
    },
    "4445": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13865
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "4446": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13865
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4447": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13865
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "4448": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13865
      ],
      "op": "SSTORE",
      "path": "114"
    },
    "4449": {
      "fn": "ERC777._burn",
      "offset": [
        13875,
        13887
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 60,
      "value": "0x1"
    },
    "4451": {
      "fn": "ERC777._burn",
      "offset": [
        13875,
        13897
      ],
      "op": "DUP1",
      "path": "114"
    },
    "4452": {
      "fn": "ERC777._burn",
      "offset": [
        13875,
        13897
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "4453": {
      "fn": "ERC777._burn",
      "offset": [
        13891,
        13897
      ],
      "op": "DUP8",
      "path": "114"
    },
    "4454": {
      "fn": "ERC777._burn",
      "offset": [
        13891,
        13897
      ],
      "op": "SWAP3",
      "path": "114"
    },
    "4455": {
      "fn": "ERC777._burn",
      "offset": [
        13827,
        13836
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4456": {
      "fn": "ERC777._burn",
      "offset": [
        13875,
        13897
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1172"
    },
    "4459": {
      "fn": "ERC777._burn",
      "offset": [
        13875,
        13897
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4460": {
      "fn": "ERC777._burn",
      "offset": [
        13891,
        13897
      ],
      "op": "DUP5",
      "path": "114"
    },
    "4461": {
      "fn": "ERC777._burn",
      "offset": [
        13891,
        13897
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4462": {
      "fn": "ERC777._burn",
      "offset": [
        13875,
        13897
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x16FE"
    },
    "4465": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13875,
        13897
      ],
      "op": "JUMP",
      "path": "114"
    },
    "4466": {
      "fn": "ERC777._burn",
      "offset": [
        13875,
        13897
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "4467": {
      "fn": "ERC777._burn",
      "offset": [
        13875,
        13897
      ],
      "op": "SWAP3",
      "path": "114"
    },
    "4468": {
      "fn": "ERC777._burn",
      "offset": [
        13875,
        13897
      ],
      "op": "POP",
      "path": "114"
    },
    "4469": {
      "fn": "ERC777._burn",
      "offset": [
        13875,
        13897
      ],
      "op": "POP",
      "path": "114"
    },
    "4470": {
      "fn": "ERC777._burn",
      "offset": [
        13875,
        13897
      ],
      "op": "DUP2",
      "path": "114"
    },
    "4471": {
      "fn": "ERC777._burn",
      "offset": [
        13875,
        13897
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4472": {
      "fn": "ERC777._burn",
      "offset": [
        13875,
        13897
      ],
      "op": "SSTORE",
      "path": "114"
    },
    "4473": {
      "fn": "ERC777._burn",
      "offset": [
        13875,
        13897
      ],
      "op": "POP",
      "path": "114"
    },
    "4474": {
      "fn": "ERC777._burn",
      "offset": [
        13930,
        13934
      ],
      "op": "DUP6",
      "path": "114",
      "statement": 61
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4481": {
      "op": "SHL"
    },
    "4482": {
      "op": "SUB"
    },
    "4483": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "AND",
      "path": "114"
    },
    "4484": {
      "fn": "ERC777._burn",
      "offset": [
        13920,
        13928
      ],
      "op": "DUP3",
      "path": "114"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4491": {
      "op": "SHL"
    },
    "4492": {
      "op": "SUB"
    },
    "4493": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "AND",
      "path": "114"
    },
    "4494": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "PUSH32",
      "path": "114",
      "value": "0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098"
    },
    "4527": {
      "fn": "ERC777._burn",
      "offset": [
        13936,
        13942
      ],
      "op": "DUP8",
      "path": "114"
    },
    "4528": {
      "fn": "ERC777._burn",
      "offset": [
        13944,
        13948
      ],
      "op": "DUP8",
      "path": "114"
    },
    "4529": {
      "fn": "ERC777._burn",
      "offset": [
        13950,
        13962
      ],
      "op": "DUP8",
      "path": "114"
    },
    "4530": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "4532": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "4533": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x11C0"
    },
    "4536": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "SWAP4",
      "path": "114"
    },
    "4537": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "SWAP3",
      "path": "114"
    },
    "4538": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "4539": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4540": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x16B1"
    },
    "4543": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13913,
        13963
      ],
      "op": "JUMP",
      "path": "114"
    },
    "4544": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "4545": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "4547": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "4548": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "DUP1",
      "path": "114"
    },
    "4549": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "4550": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "SUB",
      "path": "114"
    },
    "4551": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4552": {
      "fn": "ERC777._burn",
      "offset": [
        13913,
        13963
      ],
      "op": "LOG3",
      "path": "114"
    },
    "4553": {
      "fn": "ERC777._burn",
      "offset": [
        13978,
        14012
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 62,
      "value": "0x40"
    },
    "4555": {
      "fn": "ERC777._burn",
      "offset": [
        13978,
        14012
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "4556": {
      "op": "DUP6"
    },
    "4557": {
      "op": "DUP2"
    },
    "4558": {
      "op": "MSTORE"
    },
    "4559": {
      "fn": "ERC777._burn",
      "offset": [
        14001,
        14002
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "4561": {
      "fn": "ERC777._burn",
      "offset": [
        14001,
        14002
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4568": {
      "op": "SHL"
    },
    "4569": {
      "op": "SUB"
    },
    "4570": {
      "fn": "ERC777._burn",
      "offset": [
        13978,
        14012
      ],
      "op": "DUP9",
      "path": "114"
    },
    "4571": {
      "fn": "ERC777._burn",
      "offset": [
        13978,
        14012
      ],
      "op": "AND",
      "path": "114"
    },
    "4572": {
      "fn": "ERC777._burn",
      "offset": [
        13978,
        14012
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4573": {
      "fn": "ERC777._burn",
      "offset": [
        13978,
        14012
      ],
      "op": "PUSH32",
      "path": "114",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4606": {
      "fn": "ERC777._burn",
      "offset": [
        13978,
        14012
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4609": {
      "op": "ADD"
    },
    "4610": {
      "fn": "ERC777._burn",
      "offset": [
        13978,
        14012
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "4612": {
      "fn": "ERC777._burn",
      "offset": [
        13978,
        14012
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "4613": {
      "fn": "ERC777._burn",
      "offset": [
        13978,
        14012
      ],
      "op": "DUP1",
      "path": "114"
    },
    "4614": {
      "fn": "ERC777._burn",
      "offset": [
        13978,
        14012
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "4615": {
      "fn": "ERC777._burn",
      "offset": [
        13978,
        14012
      ],
      "op": "SUB",
      "path": "114"
    },
    "4616": {
      "fn": "ERC777._burn",
      "offset": [
        13978,
        14012
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "4617": {
      "fn": "ERC777._burn",
      "offset": [
        13978,
        14012
      ],
      "op": "LOG3",
      "path": "114"
    },
    "4618": {
      "fn": "ERC777._burn",
      "offset": [
        13222,
        14019
      ],
      "op": "POP",
      "path": "114"
    },
    "4619": {
      "fn": "ERC777._burn",
      "offset": [
        13222,
        14019
      ],
      "op": "POP",
      "path": "114"
    },
    "4620": {
      "fn": "ERC777._burn",
      "offset": [
        13222,
        14019
      ],
      "op": "POP",
      "path": "114"
    },
    "4621": {
      "fn": "ERC777._burn",
      "offset": [
        13222,
        14019
      ],
      "op": "POP",
      "path": "114"
    },
    "4622": {
      "fn": "ERC777._burn",
      "offset": [
        13222,
        14019
      ],
      "op": "POP",
      "path": "114"
    },
    "4623": {
      "fn": "ERC777._burn",
      "offset": [
        13222,
        14019
      ],
      "op": "POP",
      "path": "114"
    },
    "4624": {
      "fn": "ERC777._burn",
      "jump": "o",
      "offset": [
        13222,
        14019
      ],
      "op": "JUMP",
      "path": "114"
    },
    "4625": {
      "op": "JUMPDEST"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4628": {
      "op": "DUP3"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4631": {
      "op": "DUP4"
    },
    "4632": {
      "op": "ADD"
    },
    "4633": {
      "op": "SLT"
    },
    "4634": {
      "op": "PUSH2",
      "value": "0x1221"
    },
    "4637": {
      "op": "JUMPI"
    },
    "4638": {
      "op": "DUP1"
    },
    "4639": {
      "op": "DUP2"
    },
    "4640": {
      "op": "REVERT"
    },
    "4641": {
      "op": "JUMPDEST"
    },
    "4642": {
      "op": "DUP2"
    },
    "4643": {
      "op": "CALLDATALOAD"
    },
    "4644": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4653": {
      "op": "DUP1"
    },
    "4654": {
      "op": "DUP3"
    },
    "4655": {
      "op": "GT"
    },
    "4656": {
      "op": "ISZERO"
    },
    "4657": {
      "op": "PUSH2",
      "value": "0x123C"
    },
    "4660": {
      "op": "JUMPI"
    },
    "4661": {
      "op": "PUSH2",
      "value": "0x123C"
    },
    "4664": {
      "op": "PUSH2",
      "value": "0x1766"
    },
    "4667": {
      "jump": "i",
      "op": "JUMP"
    },
    "4668": {
      "op": "JUMPDEST"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4671": {
      "op": "MLOAD"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4674": {
      "op": "DUP4"
    },
    "4675": {
      "op": "ADD"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4678": {
      "op": "NOT"
    },
    "4679": {
      "op": "SWAP1"
    },
    "4680": {
      "op": "DUP2"
    },
    "4681": {
      "op": "AND"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4684": {
      "op": "ADD"
    },
    "4685": {
      "op": "AND"
    },
    "4686": {
      "op": "DUP2"
    },
    "4687": {
      "op": "ADD"
    },
    "4688": {
      "op": "SWAP1"
    },
    "4689": {
      "op": "DUP3"
    },
    "4690": {
      "op": "DUP3"
    },
    "4691": {
      "op": "GT"
    },
    "4692": {
      "op": "DUP2"
    },
    "4693": {
      "op": "DUP4"
    },
    "4694": {
      "op": "LT"
    },
    "4695": {
      "op": "OR"
    },
    "4696": {
      "op": "ISZERO"
    },
    "4697": {
      "op": "PUSH2",
      "value": "0x1264"
    },
    "4700": {
      "op": "JUMPI"
    },
    "4701": {
      "op": "PUSH2",
      "value": "0x1264"
    },
    "4704": {
      "op": "PUSH2",
      "value": "0x1766"
    },
    "4707": {
      "jump": "i",
      "op": "JUMP"
    },
    "4708": {
      "op": "JUMPDEST"
    },
    "4709": {
      "op": "DUP2"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4712": {
      "op": "MSTORE"
    },
    "4713": {
      "op": "DUP4"
    },
    "4714": {
      "op": "DUP2"
    },
    "4715": {
      "op": "MSTORE"
    },
    "4716": {
      "op": "DUP7"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4719": {
      "op": "DUP6"
    },
    "4720": {
      "op": "DUP9"
    },
    "4721": {
      "op": "ADD"
    },
    "4722": {
      "op": "ADD"
    },
    "4723": {
      "op": "GT"
    },
    "4724": {
      "op": "ISZERO"
    },
    "4725": {
      "op": "PUSH2",
      "value": "0x127C"
    },
    "4728": {
      "op": "JUMPI"
    },
    "4729": {
      "op": "DUP5"
    },
    "4730": {
      "op": "DUP6"
    },
    "4731": {
      "op": "REVERT"
    },
    "4732": {
      "op": "JUMPDEST"
    },
    "4733": {
      "op": "DUP4"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4736": {
      "op": "DUP8"
    },
    "4737": {
      "op": "ADD"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4740": {
      "op": "DUP4"
    },
    "4741": {
      "op": "ADD"
    },
    "4742": {
      "op": "CALLDATACOPY"
    },
    "4743": {
      "op": "SWAP3"
    },
    "4744": {
      "op": "DUP4"
    },
    "4745": {
      "op": "ADD"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4748": {
      "op": "ADD"
    },
    "4749": {
      "op": "SWAP4"
    },
    "4750": {
      "op": "SWAP1"
    },
    "4751": {
      "op": "SWAP4"
    },
    "4752": {
      "op": "MSTORE"
    },
    "4753": {
      "op": "POP"
    },
    "4754": {
      "op": "SWAP4"
    },
    "4755": {
      "op": "SWAP3"
    },
    "4756": {
      "op": "POP"
    },
    "4757": {
      "op": "POP"
    },
    "4758": {
      "op": "POP"
    },
    "4759": {
      "jump": "o",
      "op": "JUMP"
    },
    "4760": {
      "op": "JUMPDEST"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4765": {
      "op": "DUP3"
    },
    "4766": {
      "op": "DUP5"
    },
    "4767": {
      "op": "SUB"
    },
    "4768": {
      "op": "SLT"
    },
    "4769": {
      "op": "ISZERO"
    },
    "4770": {
      "op": "PUSH2",
      "value": "0x12A9"
    },
    "4773": {
      "op": "JUMPI"
    },
    "4774": {
      "op": "DUP1"
    },
    "4775": {
      "op": "DUP2"
    },
    "4776": {
      "op": "REVERT"
    },
    "4777": {
      "op": "JUMPDEST"
    },
    "4778": {
      "op": "DUP2"
    },
    "4779": {
      "op": "CALLDATALOAD"
    },
    "4780": {
      "op": "PUSH2",
      "value": "0x856"
    },
    "4783": {
      "op": "DUP2"
    },
    "4784": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "4787": {
      "jump": "i",
      "op": "JUMP"
    },
    "4788": {
      "op": "JUMPDEST"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4793": {
      "op": "DUP3"
    },
    "4794": {
      "op": "DUP5"
    },
    "4795": {
      "op": "SUB"
    },
    "4796": {
      "op": "SLT"
    },
    "4797": {
      "op": "ISZERO"
    },
    "4798": {
      "op": "PUSH2",
      "value": "0x12C5"
    },
    "4801": {
      "op": "JUMPI"
    },
    "4802": {
      "op": "DUP1"
    },
    "4803": {
      "op": "DUP2"
    },
    "4804": {
      "op": "REVERT"
    },
    "4805": {
      "op": "JUMPDEST"
    },
    "4806": {
      "op": "DUP2"
    },
    "4807": {
      "op": "MLOAD"
    },
    "4808": {
      "op": "PUSH2",
      "value": "0x856"
    },
    "4811": {
      "op": "DUP2"
    },
    "4812": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "4815": {
      "jump": "i",
      "op": "JUMP"
    },
    "4816": {
      "op": "JUMPDEST"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4819": {
      "op": "DUP1"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4822": {
      "op": "DUP4"
    },
    "4823": {
      "op": "DUP6"
    },
    "4824": {
      "op": "SUB"
    },
    "4825": {
      "op": "SLT"
    },
    "4826": {
      "op": "ISZERO"
    },
    "4827": {
      "op": "PUSH2",
      "value": "0x12E2"
    },
    "4830": {
      "op": "JUMPI"
    },
    "4831": {
      "op": "DUP1"
    },
    "4832": {
      "op": "DUP2"
    },
    "4833": {
      "op": "REVERT"
    },
    "4834": {
      "op": "JUMPDEST"
    },
    "4835": {
      "op": "DUP3"
    },
    "4836": {
      "op": "CALLDATALOAD"
    },
    "4837": {
      "op": "PUSH2",
      "value": "0x12ED"
    },
    "4840": {
      "op": "DUP2"
    },
    "4841": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "4844": {
      "jump": "i",
      "op": "JUMP"
    },
    "4845": {
      "op": "JUMPDEST"
    },
    "4846": {
      "op": "SWAP2"
    },
    "4847": {
      "op": "POP"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4850": {
      "op": "DUP4"
    },
    "4851": {
      "op": "ADD"
    },
    "4852": {
      "op": "CALLDATALOAD"
    },
    "4853": {
      "op": "PUSH2",
      "value": "0x12FD"
    },
    "4856": {
      "op": "DUP2"
    },
    "4857": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "4860": {
      "jump": "i",
      "op": "JUMP"
    },
    "4861": {
      "op": "JUMPDEST"
    },
    "4862": {
      "op": "DUP1"
    },
    "4863": {
      "op": "SWAP2"
    },
    "4864": {
      "op": "POP"
    },
    "4865": {
      "op": "POP"
    },
    "4866": {
      "op": "SWAP3"
    },
    "4867": {
      "op": "POP"
    },
    "4868": {
      "op": "SWAP3"
    },
    "4869": {
      "op": "SWAP1"
    },
    "4870": {
      "op": "POP"
    },
    "4871": {
      "jump": "o",
      "op": "JUMP"
    },
    "4872": {
      "op": "JUMPDEST"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4875": {
      "op": "DUP1"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4880": {
      "op": "DUP5"
    },
    "4881": {
      "op": "DUP7"
    },
    "4882": {
      "op": "SUB"
    },
    "4883": {
      "op": "SLT"
    },
    "4884": {
      "op": "ISZERO"
    },
    "4885": {
      "op": "PUSH2",
      "value": "0x131C"
    },
    "4888": {
      "op": "JUMPI"
    },
    "4889": {
      "op": "DUP1"
    },
    "4890": {
      "op": "DUP2"
    },
    "4891": {
      "op": "REVERT"
    },
    "4892": {
      "op": "JUMPDEST"
    },
    "4893": {
      "op": "DUP4"
    },
    "4894": {
      "op": "CALLDATALOAD"
    },
    "4895": {
      "op": "PUSH2",
      "value": "0x1327"
    },
    "4898": {
      "op": "DUP2"
    },
    "4899": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "4902": {
      "jump": "i",
      "op": "JUMP"
    },
    "4903": {
      "op": "JUMPDEST"
    },
    "4904": {
      "op": "SWAP3"
    },
    "4905": {
      "op": "POP"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4908": {
      "op": "DUP5"
    },
    "4909": {
      "op": "ADD"
    },
    "4910": {
      "op": "CALLDATALOAD"
    },
    "4911": {
      "op": "PUSH2",
      "value": "0x1337"
    },
    "4914": {
      "op": "DUP2"
    },
    "4915": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "4918": {
      "jump": "i",
      "op": "JUMP"
    },
    "4919": {
      "op": "JUMPDEST"
    },
    "4920": {
      "op": "SWAP3"
    },
    "4921": {
      "op": "SWAP6"
    },
    "4922": {
      "op": "SWAP3"
    },
    "4923": {
      "op": "SWAP5"
    },
    "4924": {
      "op": "POP"
    },
    "4925": {
      "op": "POP"
    },
    "4926": {
      "op": "POP"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4929": {
      "op": "SWAP2"
    },
    "4930": {
      "op": "SWAP1"
    },
    "4931": {
      "op": "SWAP2"
    },
    "4932": {
      "op": "ADD"
    },
    "4933": {
      "op": "CALLDATALOAD"
    },
    "4934": {
      "op": "SWAP1"
    },
    "4935": {
      "jump": "o",
      "op": "JUMP"
    },
    "4936": {
      "op": "JUMPDEST"
    },
    "4937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4939": {
      "op": "DUP1"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4942": {
      "op": "DUP1"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4947": {
      "op": "DUP7"
    },
    "4948": {
      "op": "DUP9"
    },
    "4949": {
      "op": "SUB"
    },
    "4950": {
      "op": "SLT"
    },
    "4951": {
      "op": "ISZERO"
    },
    "4952": {
      "op": "PUSH2",
      "value": "0x135F"
    },
    "4955": {
      "op": "JUMPI"
    },
    "4956": {
      "op": "DUP1"
    },
    "4957": {
      "op": "DUP2"
    },
    "4958": {
      "op": "REVERT"
    },
    "4959": {
      "op": "JUMPDEST"
    },
    "4960": {
      "op": "DUP6"
    },
    "4961": {
      "op": "CALLDATALOAD"
    },
    "4962": {
      "op": "PUSH2",
      "value": "0x136A"
    },
    "4965": {
      "op": "DUP2"
    },
    "4966": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "4969": {
      "jump": "i",
      "op": "JUMP"
    },
    "4970": {
      "op": "JUMPDEST"
    },
    "4971": {
      "op": "SWAP5"
    },
    "4972": {
      "op": "POP"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4975": {
      "op": "DUP7"
    },
    "4976": {
      "op": "ADD"
    },
    "4977": {
      "op": "CALLDATALOAD"
    },
    "4978": {
      "op": "PUSH2",
      "value": "0x137A"
    },
    "4981": {
      "op": "DUP2"
    },
    "4982": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "4985": {
      "jump": "i",
      "op": "JUMP"
    },
    "4986": {
      "op": "JUMPDEST"
    },
    "4987": {
      "op": "SWAP4"
    },
    "4988": {
      "op": "POP"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4991": {
      "op": "DUP7"
    },
    "4992": {
      "op": "ADD"
    },
    "4993": {
      "op": "CALLDATALOAD"
    },
    "4994": {
      "op": "SWAP3"
    },
    "4995": {
      "op": "POP"
    },
    "4996": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4998": {
      "op": "DUP7"
    },
    "4999": {
      "op": "ADD"
    },
    "5000": {
      "op": "CALLDATALOAD"
    },
    "5001": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5010": {
      "op": "DUP1"
    },
    "5011": {
      "op": "DUP3"
    },
    "5012": {
      "op": "GT"
    },
    "5013": {
      "op": "ISZERO"
    },
    "5014": {
      "op": "PUSH2",
      "value": "0x139D"
    },
    "5017": {
      "op": "JUMPI"
    },
    "5018": {
      "op": "DUP3"
    },
    "5019": {
      "op": "DUP4"
    },
    "5020": {
      "op": "REVERT"
    },
    "5021": {
      "op": "JUMPDEST"
    },
    "5022": {
      "op": "PUSH2",
      "value": "0x13A9"
    },
    "5025": {
      "op": "DUP10"
    },
    "5026": {
      "op": "DUP4"
    },
    "5027": {
      "op": "DUP11"
    },
    "5028": {
      "op": "ADD"
    },
    "5029": {
      "op": "PUSH2",
      "value": "0x1211"
    },
    "5032": {
      "jump": "i",
      "op": "JUMP"
    },
    "5033": {
      "op": "JUMPDEST"
    },
    "5034": {
      "op": "SWAP4"
    },
    "5035": {
      "op": "POP"
    },
    "5036": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5038": {
      "op": "DUP9"
    },
    "5039": {
      "op": "ADD"
    },
    "5040": {
      "op": "CALLDATALOAD"
    },
    "5041": {
      "op": "SWAP2"
    },
    "5042": {
      "op": "POP"
    },
    "5043": {
      "op": "DUP1"
    },
    "5044": {
      "op": "DUP3"
    },
    "5045": {
      "op": "GT"
    },
    "5046": {
      "op": "ISZERO"
    },
    "5047": {
      "op": "PUSH2",
      "value": "0x13BE"
    },
    "5050": {
      "op": "JUMPI"
    },
    "5051": {
      "op": "DUP3"
    },
    "5052": {
      "op": "DUP4"
    },
    "5053": {
      "op": "REVERT"
    },
    "5054": {
      "op": "JUMPDEST"
    },
    "5055": {
      "op": "POP"
    },
    "5056": {
      "op": "PUSH2",
      "value": "0x13CB"
    },
    "5059": {
      "op": "DUP9"
    },
    "5060": {
      "op": "DUP3"
    },
    "5061": {
      "op": "DUP10"
    },
    "5062": {
      "op": "ADD"
    },
    "5063": {
      "op": "PUSH2",
      "value": "0x1211"
    },
    "5066": {
      "jump": "i",
      "op": "JUMP"
    },
    "5067": {
      "op": "JUMPDEST"
    },
    "5068": {
      "op": "SWAP2"
    },
    "5069": {
      "op": "POP"
    },
    "5070": {
      "op": "POP"
    },
    "5071": {
      "op": "SWAP3"
    },
    "5072": {
      "op": "SWAP6"
    },
    "5073": {
      "op": "POP"
    },
    "5074": {
      "op": "SWAP3"
    },
    "5075": {
      "op": "SWAP6"
    },
    "5076": {
      "op": "SWAP1"
    },
    "5077": {
      "op": "SWAP4"
    },
    "5078": {
      "op": "POP"
    },
    "5079": {
      "jump": "o",
      "op": "JUMP"
    },
    "5080": {
      "op": "JUMPDEST"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5083": {
      "op": "DUP1"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5086": {
      "op": "DUP4"
    },
    "5087": {
      "op": "DUP6"
    },
    "5088": {
      "op": "SUB"
    },
    "5089": {
      "op": "SLT"
    },
    "5090": {
      "op": "ISZERO"
    },
    "5091": {
      "op": "PUSH2",
      "value": "0x13EA"
    },
    "5094": {
      "op": "JUMPI"
    },
    "5095": {
      "op": "DUP2"
    },
    "5096": {
      "op": "DUP3"
    },
    "5097": {
      "op": "REVERT"
    },
    "5098": {
      "op": "JUMPDEST"
    },
    "5099": {
      "op": "DUP3"
    },
    "5100": {
      "op": "CALLDATALOAD"
    },
    "5101": {
      "op": "PUSH2",
      "value": "0x13F5"
    },
    "5104": {
      "op": "DUP2"
    },
    "5105": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "5108": {
      "jump": "i",
      "op": "JUMP"
    },
    "5109": {
      "op": "JUMPDEST"
    },
    "5110": {
      "op": "SWAP5"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5113": {
      "op": "SWAP4"
    },
    "5114": {
      "op": "SWAP1"
    },
    "5115": {
      "op": "SWAP4"
    },
    "5116": {
      "op": "ADD"
    },
    "5117": {
      "op": "CALLDATALOAD"
    },
    "5118": {
      "op": "SWAP4"
    },
    "5119": {
      "op": "POP"
    },
    "5120": {
      "op": "POP"
    },
    "5121": {
      "op": "POP"
    },
    "5122": {
      "jump": "o",
      "op": "JUMP"
    },
    "5123": {
      "op": "JUMPDEST"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5126": {
      "op": "DUP1"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5131": {
      "op": "DUP5"
    },
    "5132": {
      "op": "DUP7"
    },
    "5133": {
      "op": "SUB"
    },
    "5134": {
      "op": "SLT"
    },
    "5135": {
      "op": "ISZERO"
    },
    "5136": {
      "op": "PUSH2",
      "value": "0x1417"
    },
    "5139": {
      "op": "JUMPI"
    },
    "5140": {
      "op": "DUP3"
    },
    "5141": {
      "op": "DUP4"
    },
    "5142": {
      "op": "REVERT"
    },
    "5143": {
      "op": "JUMPDEST"
    },
    "5144": {
      "op": "DUP4"
    },
    "5145": {
      "op": "CALLDATALOAD"
    },
    "5146": {
      "op": "PUSH2",
      "value": "0x1422"
    },
    "5149": {
      "op": "DUP2"
    },
    "5150": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "5153": {
      "jump": "i",
      "op": "JUMP"
    },
    "5154": {
      "op": "JUMPDEST"
    },
    "5155": {
      "op": "SWAP3"
    },
    "5156": {
      "op": "POP"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5159": {
      "op": "DUP5"
    },
    "5160": {
      "op": "ADD"
    },
    "5161": {
      "op": "CALLDATALOAD"
    },
    "5162": {
      "op": "SWAP2"
    },
    "5163": {
      "op": "POP"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5166": {
      "op": "DUP5"
    },
    "5167": {
      "op": "ADD"
    },
    "5168": {
      "op": "CALLDATALOAD"
    },
    "5169": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5178": {
      "op": "DUP2"
    },
    "5179": {
      "op": "GT"
    },
    "5180": {
      "op": "ISZERO"
    },
    "5181": {
      "op": "PUSH2",
      "value": "0x1444"
    },
    "5184": {
      "op": "JUMPI"
    },
    "5185": {
      "op": "DUP2"
    },
    "5186": {
      "op": "DUP3"
    },
    "5187": {
      "op": "REVERT"
    },
    "5188": {
      "op": "JUMPDEST"
    },
    "5189": {
      "op": "PUSH2",
      "value": "0x1450"
    },
    "5192": {
      "op": "DUP7"
    },
    "5193": {
      "op": "DUP3"
    },
    "5194": {
      "op": "DUP8"
    },
    "5195": {
      "op": "ADD"
    },
    "5196": {
      "op": "PUSH2",
      "value": "0x1211"
    },
    "5199": {
      "jump": "i",
      "op": "JUMP"
    },
    "5200": {
      "op": "JUMPDEST"
    },
    "5201": {
      "op": "SWAP2"
    },
    "5202": {
      "op": "POP"
    },
    "5203": {
      "op": "POP"
    },
    "5204": {
      "op": "SWAP3"
    },
    "5205": {
      "op": "POP"
    },
    "5206": {
      "op": "SWAP3"
    },
    "5207": {
      "op": "POP"
    },
    "5208": {
      "op": "SWAP3"
    },
    "5209": {
      "jump": "o",
      "op": "JUMP"
    },
    "5210": {
      "op": "JUMPDEST"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5213": {
      "op": "DUP1"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5216": {
      "op": "DUP1"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5219": {
      "op": "DUP6"
    },
    "5220": {
      "op": "DUP8"
    },
    "5221": {
      "op": "SUB"
    },
    "5222": {
      "op": "SLT"
    },
    "5223": {
      "op": "ISZERO"
    },
    "5224": {
      "op": "PUSH2",
      "value": "0x146F"
    },
    "5227": {
      "op": "JUMPI"
    },
    "5228": {
      "op": "DUP4"
    },
    "5229": {
      "op": "DUP5"
    },
    "5230": {
      "op": "REVERT"
    },
    "5231": {
      "op": "JUMPDEST"
    },
    "5232": {
      "op": "DUP5"
    },
    "5233": {
      "op": "CALLDATALOAD"
    },
    "5234": {
      "op": "PUSH2",
      "value": "0x147A"
    },
    "5237": {
      "op": "DUP2"
    },
    "5238": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "5241": {
      "jump": "i",
      "op": "JUMP"
    },
    "5242": {
      "op": "JUMPDEST"
    },
    "5243": {
      "op": "SWAP4"
    },
    "5244": {
      "op": "POP"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5247": {
      "op": "DUP6"
    },
    "5248": {
      "op": "ADD"
    },
    "5249": {
      "op": "CALLDATALOAD"
    },
    "5250": {
      "op": "SWAP3"
    },
    "5251": {
      "op": "POP"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5254": {
      "op": "DUP6"
    },
    "5255": {
      "op": "ADD"
    },
    "5256": {
      "op": "CALLDATALOAD"
    },
    "5257": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5266": {
      "op": "DUP1"
    },
    "5267": {
      "op": "DUP3"
    },
    "5268": {
      "op": "GT"
    },
    "5269": {
      "op": "ISZERO"
    },
    "5270": {
      "op": "PUSH2",
      "value": "0x149D"
    },
    "5273": {
      "op": "JUMPI"
    },
    "5274": {
      "op": "DUP4"
    },
    "5275": {
      "op": "DUP5"
    },
    "5276": {
      "op": "REVERT"
    },
    "5277": {
      "op": "JUMPDEST"
    },
    "5278": {
      "op": "PUSH2",
      "value": "0x14A9"
    },
    "5281": {
      "op": "DUP9"
    },
    "5282": {
      "op": "DUP4"
    },
    "5283": {
      "op": "DUP10"
    },
    "5284": {
      "op": "ADD"
    },
    "5285": {
      "op": "PUSH2",
      "value": "0x1211"
    },
    "5288": {
      "jump": "i",
      "op": "JUMP"
    },
    "5289": {
      "op": "JUMPDEST"
    },
    "5290": {
      "op": "SWAP4"
    },
    "5291": {
      "op": "POP"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5294": {
      "op": "DUP8"
    },
    "5295": {
      "op": "ADD"
    },
    "5296": {
      "op": "CALLDATALOAD"
    },
    "5297": {
      "op": "SWAP2"
    },
    "5298": {
      "op": "POP"
    },
    "5299": {
      "op": "DUP1"
    },
    "5300": {
      "op": "DUP3"
    },
    "5301": {
      "op": "GT"
    },
    "5302": {
      "op": "ISZERO"
    },
    "5303": {
      "op": "PUSH2",
      "value": "0x14BE"
    },
    "5306": {
      "op": "JUMPI"
    },
    "5307": {
      "op": "DUP3"
    },
    "5308": {
      "op": "DUP4"
    },
    "5309": {
      "op": "REVERT"
    },
    "5310": {
      "op": "JUMPDEST"
    },
    "5311": {
      "op": "POP"
    },
    "5312": {
      "op": "PUSH2",
      "value": "0x14CB"
    },
    "5315": {
      "op": "DUP8"
    },
    "5316": {
      "op": "DUP3"
    },
    "5317": {
      "op": "DUP9"
    },
    "5318": {
      "op": "ADD"
    },
    "5319": {
      "op": "PUSH2",
      "value": "0x1211"
    },
    "5322": {
      "jump": "i",
      "op": "JUMP"
    },
    "5323": {
      "op": "JUMPDEST"
    },
    "5324": {
      "op": "SWAP2"
    },
    "5325": {
      "op": "POP"
    },
    "5326": {
      "op": "POP"
    },
    "5327": {
      "op": "SWAP3"
    },
    "5328": {
      "op": "SWAP6"
    },
    "5329": {
      "op": "SWAP2"
    },
    "5330": {
      "op": "SWAP5"
    },
    "5331": {
      "op": "POP"
    },
    "5332": {
      "op": "SWAP3"
    },
    "5333": {
      "op": "POP"
    },
    "5334": {
      "jump": "o",
      "op": "JUMP"
    },
    "5335": {
      "op": "JUMPDEST"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5338": {
      "op": "DUP1"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5341": {
      "op": "DUP4"
    },
    "5342": {
      "op": "DUP6"
    },
    "5343": {
      "op": "SUB"
    },
    "5344": {
      "op": "SLT"
    },
    "5345": {
      "op": "ISZERO"
    },
    "5346": {
      "op": "PUSH2",
      "value": "0x14E9"
    },
    "5349": {
      "op": "JUMPI"
    },
    "5350": {
      "op": "DUP2"
    },
    "5351": {
      "op": "DUP3"
    },
    "5352": {
      "op": "REVERT"
    },
    "5353": {
      "op": "JUMPDEST"
    },
    "5354": {
      "op": "DUP3"
    },
    "5355": {
      "op": "CALLDATALOAD"
    },
    "5356": {
      "op": "SWAP2"
    },
    "5357": {
      "op": "POP"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5360": {
      "op": "DUP4"
    },
    "5361": {
      "op": "ADD"
    },
    "5362": {
      "op": "CALLDATALOAD"
    },
    "5363": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5372": {
      "op": "DUP2"
    },
    "5373": {
      "op": "GT"
    },
    "5374": {
      "op": "ISZERO"
    },
    "5375": {
      "op": "PUSH2",
      "value": "0x1506"
    },
    "5378": {
      "op": "JUMPI"
    },
    "5379": {
      "op": "DUP2"
    },
    "5380": {
      "op": "DUP3"
    },
    "5381": {
      "op": "REVERT"
    },
    "5382": {
      "op": "JUMPDEST"
    },
    "5383": {
      "op": "PUSH2",
      "value": "0x1512"
    },
    "5386": {
      "op": "DUP6"
    },
    "5387": {
      "op": "DUP3"
    },
    "5388": {
      "op": "DUP7"
    },
    "5389": {
      "op": "ADD"
    },
    "5390": {
      "op": "PUSH2",
      "value": "0x1211"
    },
    "5393": {
      "jump": "i",
      "op": "JUMP"
    },
    "5394": {
      "op": "JUMPDEST"
    },
    "5395": {
      "op": "SWAP2"
    },
    "5396": {
      "op": "POP"
    },
    "5397": {
      "op": "POP"
    },
    "5398": {
      "op": "SWAP3"
    },
    "5399": {
      "op": "POP"
    },
    "5400": {
      "op": "SWAP3"
    },
    "5401": {
      "op": "SWAP1"
    },
    "5402": {
      "op": "POP"
    },
    "5403": {
      "jump": "o",
      "op": "JUMP"
    },
    "5404": {
      "op": "JUMPDEST"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5407": {
      "op": "DUP2"
    },
    "5408": {
      "op": "MLOAD"
    },
    "5409": {
      "op": "DUP1"
    },
    "5410": {
      "op": "DUP5"
    },
    "5411": {
      "op": "MSTORE"
    },
    "5412": {
      "op": "DUP2"
    },
    "5413": {
      "op": "JUMPDEST"
    },
    "5414": {
      "op": "DUP2"
    },
    "5415": {
      "op": "DUP2"
    },
    "5416": {
      "op": "LT"
    },
    "5417": {
      "op": "ISZERO"
    },
    "5418": {
      "op": "PUSH2",
      "value": "0x1541"
    },
    "5421": {
      "op": "JUMPI"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5424": {
      "op": "DUP2"
    },
    "5425": {
      "op": "DUP6"
    },
    "5426": {
      "op": "ADD"
    },
    "5427": {
      "op": "DUP2"
    },
    "5428": {
      "op": "ADD"
    },
    "5429": {
      "op": "MLOAD"
    },
    "5430": {
      "op": "DUP7"
    },
    "5431": {
      "op": "DUP4"
    },
    "5432": {
      "op": "ADD"
    },
    "5433": {
      "op": "DUP3"
    },
    "5434": {
      "op": "ADD"
    },
    "5435": {
      "op": "MSTORE"
    },
    "5436": {
      "op": "ADD"
    },
    "5437": {
      "op": "PUSH2",
      "value": "0x1525"
    },
    "5440": {
      "op": "JUMP"
    },
    "5441": {
      "op": "JUMPDEST"
    },
    "5442": {
      "op": "DUP2"
    },
    "5443": {
      "op": "DUP2"
    },
    "5444": {
      "op": "GT"
    },
    "5445": {
      "op": "ISZERO"
    },
    "5446": {
      "op": "PUSH2",
      "value": "0x1552"
    },
    "5449": {
      "op": "JUMPI"
    },
    "5450": {
      "op": "DUP3"
    },
    "5451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5453": {
      "op": "DUP4"
    },
    "5454": {
      "op": "DUP8"
    },
    "5455": {
      "op": "ADD"
    },
    "5456": {
      "op": "ADD"
    },
    "5457": {
      "op": "MSTORE"
    },
    "5458": {
      "op": "JUMPDEST"
    },
    "5459": {
      "op": "POP"
    },
    "5460": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5462": {
      "op": "ADD"
    },
    "5463": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5465": {
      "op": "NOT"
    },
    "5466": {
      "op": "AND"
    },
    "5467": {
      "op": "SWAP3"
    },
    "5468": {
      "op": "SWAP1"
    },
    "5469": {
      "op": "SWAP3"
    },
    "5470": {
      "op": "ADD"
    },
    "5471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5473": {
      "op": "ADD"
    },
    "5474": {
      "op": "SWAP3"
    },
    "5475": {
      "op": "SWAP2"
    },
    "5476": {
      "op": "POP"
    },
    "5477": {
      "op": "POP"
    },
    "5478": {
      "jump": "o",
      "op": "JUMP"
    },
    "5479": {
      "op": "JUMPDEST"
    },
    "5480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5486": {
      "op": "SHL"
    },
    "5487": {
      "op": "SUB"
    },
    "5488": {
      "op": "DUP8"
    },
    "5489": {
      "op": "DUP2"
    },
    "5490": {
      "op": "AND"
    },
    "5491": {
      "op": "DUP3"
    },
    "5492": {
      "op": "MSTORE"
    },
    "5493": {
      "op": "DUP7"
    },
    "5494": {
      "op": "DUP2"
    },
    "5495": {
      "op": "AND"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5498": {
      "op": "DUP4"
    },
    "5499": {
      "op": "ADD"
    },
    "5500": {
      "op": "MSTORE"
    },
    "5501": {
      "op": "DUP6"
    },
    "5502": {
      "op": "AND"
    },
    "5503": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5505": {
      "op": "DUP3"
    },
    "5506": {
      "op": "ADD"
    },
    "5507": {
      "op": "MSTORE"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5510": {
      "op": "DUP2"
    },
    "5511": {
      "op": "ADD"
    },
    "5512": {
      "op": "DUP5"
    },
    "5513": {
      "op": "SWAP1"
    },
    "5514": {
      "op": "MSTORE"
    },
    "5515": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5519": {
      "op": "DUP3"
    },
    "5520": {
      "op": "ADD"
    },
    "5521": {
      "op": "DUP2"
    },
    "5522": {
      "op": "SWAP1"
    },
    "5523": {
      "op": "MSTORE"
    },
    "5524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5526": {
      "op": "SWAP1"
    },
    "5527": {
      "op": "PUSH2",
      "value": "0x15A2"
    },
    "5530": {
      "op": "SWAP1"
    },
    "5531": {
      "op": "DUP4"
    },
    "5532": {
      "op": "ADD"
    },
    "5533": {
      "op": "DUP6"
    },
    "5534": {
      "op": "PUSH2",
      "value": "0x151C"
    },
    "5537": {
      "jump": "i",
      "op": "JUMP"
    },
    "5538": {
      "op": "JUMPDEST"
    },
    "5539": {
      "op": "DUP3"
    },
    "5540": {
      "op": "DUP2"
    },
    "5541": {
      "op": "SUB"
    },
    "5542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5544": {
      "op": "DUP5"
    },
    "5545": {
      "op": "ADD"
    },
    "5546": {
      "op": "MSTORE"
    },
    "5547": {
      "op": "PUSH2",
      "value": "0x15B4"
    },
    "5550": {
      "op": "DUP2"
    },
    "5551": {
      "op": "DUP6"
    },
    "5552": {
      "op": "PUSH2",
      "value": "0x151C"
    },
    "5555": {
      "jump": "i",
      "op": "JUMP"
    },
    "5556": {
      "op": "JUMPDEST"
    },
    "5557": {
      "op": "SWAP10"
    },
    "5558": {
      "op": "SWAP9"
    },
    "5559": {
      "op": "POP"
    },
    "5560": {
      "op": "POP"
    },
    "5561": {
      "op": "POP"
    },
    "5562": {
      "op": "POP"
    },
    "5563": {
      "op": "POP"
    },
    "5564": {
      "op": "POP"
    },
    "5565": {
      "op": "POP"
    },
    "5566": {
      "op": "POP"
    },
    "5567": {
      "op": "POP"
    },
    "5568": {
      "jump": "o",
      "op": "JUMP"
    },
    "5569": {
      "op": "JUMPDEST"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5572": {
      "op": "DUP1"
    },
    "5573": {
      "op": "DUP3"
    },
    "5574": {
      "op": "MSTORE"
    },
    "5575": {
      "op": "DUP3"
    },
    "5576": {
      "op": "MLOAD"
    },
    "5577": {
      "op": "DUP3"
    },
    "5578": {
      "op": "DUP3"
    },
    "5579": {
      "op": "ADD"
    },
    "5580": {
      "op": "DUP2"
    },
    "5581": {
      "op": "SWAP1"
    },
    "5582": {
      "op": "MSTORE"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5585": {
      "op": "SWAP2"
    },
    "5586": {
      "op": "SWAP1"
    },
    "5587": {
      "op": "DUP5"
    },
    "5588": {
      "op": "DUP3"
    },
    "5589": {
      "op": "ADD"
    },
    "5590": {
      "op": "SWAP1"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5593": {
      "op": "DUP6"
    },
    "5594": {
      "op": "ADD"
    },
    "5595": {
      "op": "SWAP1"
    },
    "5596": {
      "op": "DUP5"
    },
    "5597": {
      "op": "JUMPDEST"
    },
    "5598": {
      "op": "DUP2"
    },
    "5599": {
      "op": "DUP2"
    },
    "5600": {
      "op": "LT"
    },
    "5601": {
      "op": "ISZERO"
    },
    "5602": {
      "op": "PUSH2",
      "value": "0x1602"
    },
    "5605": {
      "op": "JUMPI"
    },
    "5606": {
      "op": "DUP4"
    },
    "5607": {
      "op": "MLOAD"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5614": {
      "op": "SHL"
    },
    "5615": {
      "op": "SUB"
    },
    "5616": {
      "op": "AND"
    },
    "5617": {
      "op": "DUP4"
    },
    "5618": {
      "op": "MSTORE"
    },
    "5619": {
      "op": "SWAP3"
    },
    "5620": {
      "op": "DUP5"
    },
    "5621": {
      "op": "ADD"
    },
    "5622": {
      "op": "SWAP3"
    },
    "5623": {
      "op": "SWAP2"
    },
    "5624": {
      "op": "DUP5"
    },
    "5625": {
      "op": "ADD"
    },
    "5626": {
      "op": "SWAP2"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5629": {
      "op": "ADD"
    },
    "5630": {
      "op": "PUSH2",
      "value": "0x15DD"
    },
    "5633": {
      "op": "JUMP"
    },
    "5634": {
      "op": "JUMPDEST"
    },
    "5635": {
      "op": "POP"
    },
    "5636": {
      "op": "SWAP1"
    },
    "5637": {
      "op": "SWAP7"
    },
    "5638": {
      "op": "SWAP6"
    },
    "5639": {
      "op": "POP"
    },
    "5640": {
      "op": "POP"
    },
    "5641": {
      "op": "POP"
    },
    "5642": {
      "op": "POP"
    },
    "5643": {
      "op": "POP"
    },
    "5644": {
      "op": "POP"
    },
    "5645": {
      "jump": "o",
      "op": "JUMP"
    },
    "5646": {
      "op": "JUMPDEST"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5651": {
      "op": "DUP3"
    },
    "5652": {
      "op": "MSTORE"
    },
    "5653": {
      "op": "PUSH2",
      "value": "0x856"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5658": {
      "op": "DUP4"
    },
    "5659": {
      "op": "ADD"
    },
    "5660": {
      "op": "DUP5"
    },
    "5661": {
      "op": "PUSH2",
      "value": "0x151C"
    },
    "5664": {
      "jump": "i",
      "op": "JUMP"
    },
    "5665": {
      "op": "JUMPDEST"
    },
    "5666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5668": {
      "op": "DUP1"
    },
    "5669": {
      "op": "DUP3"
    },
    "5670": {
      "op": "MSTORE"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5673": {
      "op": "SWAP1"
    },
    "5674": {
      "op": "DUP3"
    },
    "5675": {
      "op": "ADD"
    },
    "5676": {
      "op": "MSTORE"
    },
    "5677": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220746F20746865207A65726F20616464"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5712": {
      "op": "DUP3"
    },
    "5713": {
      "op": "ADD"
    },
    "5714": {
      "op": "MSTORE"
    },
    "5715": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "5720": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5722": {
      "op": "SHL"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5725": {
      "op": "DUP3"
    },
    "5726": {
      "op": "ADD"
    },
    "5727": {
      "op": "MSTORE"
    },
    "5728": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5730": {
      "op": "ADD"
    },
    "5731": {
      "op": "SWAP1"
    },
    "5732": {
      "jump": "o",
      "op": "JUMP"
    },
    "5733": {
      "op": "JUMPDEST"
    },
    "5734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5736": {
      "op": "DUP1"
    },
    "5737": {
      "op": "DUP3"
    },
    "5738": {
      "op": "MSTORE"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5741": {
      "op": "SWAP1"
    },
    "5742": {
      "op": "DUP3"
    },
    "5743": {
      "op": "ADD"
    },
    "5744": {
      "op": "MSTORE"
    },
    "5745": {
      "op": "PUSH32",
      "value": "0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5780": {
      "op": "DUP3"
    },
    "5781": {
      "op": "ADD"
    },
    "5782": {
      "op": "MSTORE"
    },
    "5783": {
      "op": "PUSH12",
      "value": "0x39103337B9103437B63232B9"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "5798": {
      "op": "SHL"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5801": {
      "op": "DUP3"
    },
    "5802": {
      "op": "ADD"
    },
    "5803": {
      "op": "MSTORE"
    },
    "5804": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5806": {
      "op": "ADD"
    },
    "5807": {
      "op": "SWAP1"
    },
    "5808": {
      "jump": "o",
      "op": "JUMP"
    },
    "5809": {
      "op": "JUMPDEST"
    },
    "5810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5812": {
      "op": "DUP5"
    },
    "5813": {
      "op": "DUP3"
    },
    "5814": {
      "op": "MSTORE"
    },
    "5815": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5819": {
      "op": "DUP4"
    },
    "5820": {
      "op": "ADD"
    },
    "5821": {
      "op": "MSTORE"
    },
    "5822": {
      "op": "PUSH2",
      "value": "0x16CA"
    },
    "5825": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5827": {
      "op": "DUP4"
    },
    "5828": {
      "op": "ADD"
    },
    "5829": {
      "op": "DUP6"
    },
    "5830": {
      "op": "PUSH2",
      "value": "0x151C"
    },
    "5833": {
      "jump": "i",
      "op": "JUMP"
    },
    "5834": {
      "op": "JUMPDEST"
    },
    "5835": {
      "op": "DUP3"
    },
    "5836": {
      "op": "DUP2"
    },
    "5837": {
      "op": "SUB"
    },
    "5838": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5840": {
      "op": "DUP5"
    },
    "5841": {
      "op": "ADD"
    },
    "5842": {
      "op": "MSTORE"
    },
    "5843": {
      "op": "PUSH2",
      "value": "0x16DC"
    },
    "5846": {
      "op": "DUP2"
    },
    "5847": {
      "op": "DUP6"
    },
    "5848": {
      "op": "PUSH2",
      "value": "0x151C"
    },
    "5851": {
      "jump": "i",
      "op": "JUMP"
    },
    "5852": {
      "op": "JUMPDEST"
    },
    "5853": {
      "op": "SWAP7"
    },
    "5854": {
      "op": "SWAP6"
    },
    "5855": {
      "op": "POP"
    },
    "5856": {
      "op": "POP"
    },
    "5857": {
      "op": "POP"
    },
    "5858": {
      "op": "POP"
    },
    "5859": {
      "op": "POP"
    },
    "5860": {
      "op": "POP"
    },
    "5861": {
      "jump": "o",
      "op": "JUMP"
    },
    "5862": {
      "op": "JUMPDEST"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5865": {
      "op": "DUP3"
    },
    "5866": {
      "op": "NOT"
    },
    "5867": {
      "op": "DUP3"
    },
    "5868": {
      "op": "GT"
    },
    "5869": {
      "op": "ISZERO"
    },
    "5870": {
      "op": "PUSH2",
      "value": "0x16F9"
    },
    "5873": {
      "op": "JUMPI"
    },
    "5874": {
      "op": "PUSH2",
      "value": "0x16F9"
    },
    "5877": {
      "op": "PUSH2",
      "value": "0x1750"
    },
    "5880": {
      "jump": "i",
      "op": "JUMP"
    },
    "5881": {
      "op": "JUMPDEST"
    },
    "5882": {
      "op": "POP"
    },
    "5883": {
      "op": "ADD"
    },
    "5884": {
      "op": "SWAP1"
    },
    "5885": {
      "jump": "o",
      "op": "JUMP"
    },
    "5886": {
      "op": "JUMPDEST"
    },
    "5887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5889": {
      "op": "DUP3"
    },
    "5890": {
      "op": "DUP3"
    },
    "5891": {
      "op": "LT"
    },
    "5892": {
      "op": "ISZERO"
    },
    "5893": {
      "op": "PUSH2",
      "value": "0x1710"
    },
    "5896": {
      "op": "JUMPI"
    },
    "5897": {
      "op": "PUSH2",
      "value": "0x1710"
    },
    "5900": {
      "op": "PUSH2",
      "value": "0x1750"
    },
    "5903": {
      "jump": "i",
      "op": "JUMP"
    },
    "5904": {
      "op": "JUMPDEST"
    },
    "5905": {
      "op": "POP"
    },
    "5906": {
      "op": "SUB"
    },
    "5907": {
      "op": "SWAP1"
    },
    "5908": {
      "jump": "o",
      "op": "JUMP"
    },
    "5909": {
      "op": "JUMPDEST"
    },
    "5910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5912": {
      "op": "DUP2"
    },
    "5913": {
      "op": "DUP2"
    },
    "5914": {
      "op": "SHR"
    },
    "5915": {
      "op": "SWAP1"
    },
    "5916": {
      "op": "DUP3"
    },
    "5917": {
      "op": "AND"
    },
    "5918": {
      "op": "DUP1"
    },
    "5919": {
      "op": "PUSH2",
      "value": "0x1729"
    },
    "5922": {
      "op": "JUMPI"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5925": {
      "op": "DUP3"
    },
    "5926": {
      "op": "AND"
    },
    "5927": {
      "op": "SWAP2"
    },
    "5928": {
      "op": "POP"
    },
    "5929": {
      "op": "JUMPDEST"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5932": {
      "op": "DUP3"
    },
    "5933": {
      "op": "LT"
    },
    "5934": {
      "op": "DUP2"
    },
    "5935": {
      "op": "EQ"
    },
    "5936": {
      "op": "ISZERO"
    },
    "5937": {
      "op": "PUSH2",
      "value": "0x174A"
    },
    "5940": {
      "op": "JUMPI"
    },
    "5941": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5948": {
      "op": "SHL"
    },
    "5949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5951": {
      "op": "MSTORE"
    },
    "5952": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5954": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5956": {
      "op": "MSTORE"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5961": {
      "op": "REVERT"
    },
    "5962": {
      "op": "JUMPDEST"
    },
    "5963": {
      "op": "POP"
    },
    "5964": {
      "op": "SWAP2"
    },
    "5965": {
      "op": "SWAP1"
    },
    "5966": {
      "op": "POP"
    },
    "5967": {
      "jump": "o",
      "op": "JUMP"
    },
    "5968": {
      "op": "JUMPDEST"
    },
    "5969": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5974": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5976": {
      "op": "SHL"
    },
    "5977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5979": {
      "op": "MSTORE"
    },
    "5980": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5984": {
      "op": "MSTORE"
    },
    "5985": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5989": {
      "op": "REVERT"
    },
    "5990": {
      "op": "JUMPDEST"
    },
    "5991": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5996": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5998": {
      "op": "SHL"
    },
    "5999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6001": {
      "op": "MSTORE"
    },
    "6002": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6004": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6006": {
      "op": "MSTORE"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6011": {
      "op": "REVERT"
    },
    "6012": {
      "op": "JUMPDEST"
    },
    "6013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6019": {
      "op": "SHL"
    },
    "6020": {
      "op": "SUB"
    },
    "6021": {
      "op": "DUP2"
    },
    "6022": {
      "op": "AND"
    },
    "6023": {
      "op": "DUP2"
    },
    "6024": {
      "op": "EQ"
    },
    "6025": {
      "op": "PUSH2",
      "value": "0x1791"
    },
    "6028": {
      "op": "JUMPI"
    },
    "6029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6031": {
      "op": "DUP1"
    },
    "6032": {
      "op": "REVERT"
    },
    "6033": {
      "op": "JUMPDEST"
    },
    "6034": {
      "op": "POP"
    },
    "6035": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8b2428038d1f7f826f4ed7fd0e20ba70447a7ed6",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC777.sol\";\nimport \"./IERC777Recipient.sol\";\nimport \"./IERC777Sender.sol\";\nimport \"../ERC20/IERC20.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/IERC1820Registry.sol\";\n\n/**\n * @dev Implementation of the {IERC777} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * Support for ERC20 is included in this contract, as specified by the EIP: both\n * the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n * Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n * movements.\n *\n * Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n * are no special restrictions in the amount of tokens that created, moved, or\n * destroyed. This makes integration with ERC20 applications seamless.\n */\ncontract ERC777 is Context, IERC777, IERC20 {\n    using Address for address;\n\n    IERC1820Registry constant internal _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n    mapping(address => uint256) private _balances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\n    bytes32 private constant _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\"ERC777TokensRecipient\");\n\n    // This isn't ever read from - it's only used to respond to the defaultOperators query.\n    address[] private _defaultOperatorsArray;\n\n    // Immutable, but accounts may revoke them (tracked in __revokedDefaultOperators).\n    mapping(address => bool) private _defaultOperators;\n\n    // For each account, a mapping of its operators and revoked default operators.\n    mapping(address => mapping(address => bool)) private _operators;\n    mapping(address => mapping(address => bool)) private _revokedDefaultOperators;\n\n    // ERC20-allowances\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    /**\n     * @dev `defaultOperators` may be an empty array.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address[] memory defaultOperators_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n\n        _defaultOperatorsArray = defaultOperators_;\n        for (uint256 i = 0; i < defaultOperators_.length; i++) {\n            _defaultOperators[defaultOperators_[i]] = true;\n        }\n\n        // register interfaces\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this));\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this));\n    }\n\n    /**\n     * @dev See {IERC777-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC777-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {ERC20-decimals}.\n     *\n     * Always returns 18, as per the\n     * [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\n     */\n    function decimals() public pure virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC777-granularity}.\n     *\n     * This implementation always returns `1`.\n     */\n    function granularity() public view virtual override returns (uint256) {\n        return 1;\n    }\n\n    /**\n     * @dev See {IERC777-totalSupply}.\n     */\n    function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`tokenHolder`).\n     */\n    function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _balances[tokenHolder];\n    }\n\n    /**\n     * @dev See {IERC777-send}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function send(address recipient, uint256 amount, bytes memory data) public virtual override  {\n        _send(_msgSender(), recipient, amount, data, \"\", true);\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n     * interface if it is a contract.\n     *\n     * Also emits a {Sent} event.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n\n        address from = _msgSender();\n\n        _callTokensToSend(from, from, recipient, amount, \"\", \"\");\n\n        _move(from, from, recipient, amount, \"\", \"\");\n\n        _callTokensReceived(from, from, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev See {IERC777-burn}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function burn(uint256 amount, bytes memory data) public virtual override  {\n        _burn(_msgSender(), amount, data, \"\");\n    }\n\n    /**\n     * @dev See {IERC777-isOperatorFor}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {\n        return operator == tokenHolder ||\n            (_defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator]) ||\n            _operators[tokenHolder][operator];\n    }\n\n    /**\n     * @dev See {IERC777-authorizeOperator}.\n     */\n    function authorizeOperator(address operator) public virtual override  {\n        require(_msgSender() != operator, \"ERC777: authorizing self as operator\");\n\n        if (_defaultOperators[operator]) {\n            delete _revokedDefaultOperators[_msgSender()][operator];\n        } else {\n            _operators[_msgSender()][operator] = true;\n        }\n\n        emit AuthorizedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-revokeOperator}.\n     */\n    function revokeOperator(address operator) public virtual override  {\n        require(operator != _msgSender(), \"ERC777: revoking self as operator\");\n\n        if (_defaultOperators[operator]) {\n            _revokedDefaultOperators[_msgSender()][operator] = true;\n        } else {\n            delete _operators[_msgSender()][operator];\n        }\n\n        emit RevokedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-defaultOperators}.\n     */\n    function defaultOperators() public view virtual override returns (address[] memory) {\n        return _defaultOperatorsArray;\n    }\n\n    /**\n     * @dev See {IERC777-operatorSend}.\n     *\n     * Emits {Sent} and {IERC20-Transfer} events.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    )\n        public\n        virtual\n        override\n    {\n        require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\");\n        _send(sender, recipient, amount, data, operatorData, true);\n    }\n\n    /**\n     * @dev See {IERC777-operatorBurn}.\n     *\n     * Emits {Burned} and {IERC20-Transfer} events.\n     */\n    function operatorBurn(address account, uint256 amount, bytes memory data, bytes memory operatorData) public virtual override {\n        require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\");\n        _burn(account, amount, data, operatorData);\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators may\n     * not have allowance, and accounts with allowance may not be operators\n     * themselves.\n     */\n    function allowance(address holder, address spender) public view virtual override returns (uint256) {\n        return _allowances[holder][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\n        address holder = _msgSender();\n        _approve(holder, spender, value);\n        return true;\n    }\n\n   /**\n    * @dev See {IERC20-transferFrom}.\n    *\n    * Note that operator and allowance concepts are orthogonal: operators cannot\n    * call `transferFrom` (unless they have allowance), and accounts with\n    * allowance cannot call `operatorSend` (unless they are operators).\n    *\n    * Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\n    */\n    function transferFrom(address holder, address recipient, uint256 amount) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n        require(holder != address(0), \"ERC777: transfer from the zero address\");\n\n        address spender = _msgSender();\n\n        _callTokensToSend(spender, holder, recipient, amount, \"\", \"\");\n\n        _move(spender, holder, recipient, amount, \"\", \"\");\n\n        uint256 currentAllowance = _allowances[holder][spender];\n        require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\");\n        _approve(holder, spender, currentAllowance - amount);\n\n        _callTokensReceived(spender, holder, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    )\n        internal\n        virtual\n    {\n        _mint(account, amount, userData, operatorData, true);\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If `requireReceptionAck` is set to true, and if a send hook is\n     * registered for `account`, the corresponding function will be called with\n     * `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    )\n        internal\n        virtual\n    {\n        require(account != address(0), \"ERC777: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, amount);\n\n        // Update state variables\n        _totalSupply += amount;\n        _balances[account] += amount;\n\n        _callTokensReceived(operator, address(0), account, amount, userData, operatorData, requireReceptionAck);\n\n        emit Minted(operator, account, amount, userData, operatorData);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Send tokens\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _send(\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    )\n        internal\n        virtual\n    {\n        require(from != address(0), \"ERC777: send from the zero address\");\n        require(to != address(0), \"ERC777: send to the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, to, amount, userData, operatorData);\n\n        _move(operator, from, to, amount, userData, operatorData);\n\n        _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck);\n    }\n\n    /**\n     * @dev Burn tokens\n     * @param from address token holder address\n     * @param amount uint256 amount of tokens to burn\n     * @param data bytes extra information provided by the token holder\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _burn(\n        address from,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    )\n        internal\n        virtual\n    {\n        require(from != address(0), \"ERC777: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, address(0), amount, data, operatorData);\n\n        _beforeTokenTransfer(operator, from, address(0), amount);\n\n        // Update state variables\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\");\n        _balances[from] = fromBalance - amount;\n        _totalSupply -= amount;\n\n        emit Burned(operator, from, amount, data, operatorData);\n        emit Transfer(from, address(0), amount);\n    }\n\n    function _move(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    )\n        private\n    {\n        _beforeTokenTransfer(operator, from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\");\n        _balances[from] = fromBalance - amount;\n        _balances[to] += amount;\n\n        emit Sent(operator, from, to, amount, userData, operatorData);\n        emit Transfer(from, to, amount);\n    }\n\n    /**\n     * @dev See {ERC20-_approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function _approve(address holder, address spender, uint256 value) internal {\n        require(holder != address(0), \"ERC777: approve from the zero address\");\n        require(spender != address(0), \"ERC777: approve to the zero address\");\n\n        _allowances[holder][spender] = value;\n        emit Approval(holder, spender, value);\n    }\n\n    /**\n     * @dev Call from.tokensToSend() if the interface is registered\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _callTokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    )\n        private\n    {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData);\n        }\n    }\n\n    /**\n     * @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n     * tokensReceived() was not registered for the recipient\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _callTokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    )\n        private\n    {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData);\n        } else if (requireReceptionAck) {\n            require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\");\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes\n     * calls to {send}, {transfer}, {operatorSend}, minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address operator, address from, address to, uint256 amount) internal virtual { }\n}\n",
  "sourceMap": "1014:17147:114:-:0;;;2244:612;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2376:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2399:17:114;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;2427:42:114;;;;:22;;:42;;;;;:::i;:::-;;2484:9;2479:126;2503:17;:24;2499:1;:28;2479:126;;;2590:4;2548:17;:39;2566:17;2584:1;2566:20;;;;;;-1:-1:-1;;;2566:20:114;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2548:39:114;;;;;;;;;;;-1:-1:-1;2548:39:114;:46;;-1:-1:-1;;2548:46:114;;;;;;;;;;2529:3;;;;:::i;:::-;;;;2479:126;;;-1:-1:-1;2646:97:114;;-1:-1:-1;;;2646:97:114;;2696:4;2646:97;;;2527:34:144;;;2703:24:114;2577:18:144;;;2570:34;2620:18;;;2613:43;1168:42:114;;2646:41;;2462:18:144;;2646:97:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2753:96:114;;-1:-1:-1;;;2753:96:114;;2803:4;2753:96;;;2527:34:144;;;2810:23:114;2577:18:144;;;2570:34;2620:18;;;2613:43;1168:42:114;;-1:-1:-1;2753:41:114;;-1:-1:-1;2462:18:144;;2753:96:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2244:612;;;1014:17147;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1014:17147:114;;;-1:-1:-1;1014:17147:114;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1014:17147:114;-1:-1:-1;;;;;1014:17147:114;;;;;;;;;;;-1:-1:-1;1014:17147:114;;;;;;;;;;;;;;;;;;;;;14:719:144;;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;195:26:144;;192:2;;;224:18;;:::i;:::-;263:4;291:53;334:2;315:13;;-1:-1:-1;;311:27:144;307:36;;291:53;:::i;:::-;369:2;360:7;353:19;413:3;408:2;403;395:6;391:15;387:24;384:33;381:2;;;434:5;427;420:20;381:2;460:5;474:134;488:2;485:1;482:9;474:134;;;577:14;;;573:23;;567:30;545:15;;;541:24;;534:64;499:10;;474:134;;;626:2;623:1;620:9;617:2;;;686:5;681:2;676;667:7;663:16;659:25;652:40;617:2;-1:-1:-1;720:7:144;78:655;-1:-1:-1;;;;;78:655:144:o;738:1544::-;;;;940:2;928:9;919:7;915:23;911:32;908:2;;;961:6;953;946:22;908:2;993:16;;-1:-1:-1;;;;;1058:14:144;;;1055:2;;;1090:6;1082;1075:22;1055:2;1118:61;1171:7;1162:6;1151:9;1147:22;1118:61;:::i;:::-;1108:71;;1198:2;1188:12;;1246:2;1235:9;1231:18;1225:25;1275:2;1265:8;1262:16;1259:2;;;1296:6;1288;1281:22;1259:2;1324:63;1379:7;1368:8;1357:9;1353:24;1324:63;:::i;:::-;1314:73;;;1433:2;1422:9;1418:18;1412:25;1462:2;1452:8;1449:16;1446:2;;;1483:6;1475;1468:22;1446:2;1511:24;;1566:4;1558:13;;1554:27;-1:-1:-1;1544:2:144;;1600:6;1592;1585:22;1544:2;1634;1628:9;1656:2;1652;1649:10;1646:2;;;1662:18;;:::i;:::-;1708:2;1705:1;1701:10;1691:20;;1731:28;1755:2;1751;1747:11;1731:28;:::i;:::-;1793:15;;;1824:12;;;;1856:11;;;1886;;;1882:20;;1879:33;-1:-1:-1;1876:2:144;;;1930:6;1922;1915:22;1876:2;1957:6;1948:15;;1972:280;1986:2;1983:1;1980:9;1972:280;;;2044:10;;;-1:-1:-1;;;;;;2087:31:144;;2077:42;;2067:2;;2138:6;2130;2123:22;2067:2;2160:18;;;2004:1;1997:9;;;;;2198:12;;;;2230;;1972:280;;;1976:3;2271:5;2261:15;;;;;;;;898:1384;;;;;:::o;2667:275::-;2738:2;2732:9;2803:2;2784:13;;-1:-1:-1;;2780:27:144;2768:40;;-1:-1:-1;;;;;2823:34:144;;2859:22;;;2820:62;2817:2;;;2885:18;;:::i;:::-;2921:2;2914:22;2712:230;;-1:-1:-1;2712:230:144:o;2947:380::-;3026:1;3022:12;;;;3069;;;3090:2;;3144:4;3136:6;3132:17;3122:27;;3090:2;3197;3189:6;3186:14;3166:18;3163:38;3160:2;;;3243:10;3238:3;3234:20;3231:1;3224:31;3278:4;3275:1;3268:15;3306:4;3303:1;3296:15;3160:2;;3002:325;;;:::o;3332:236::-;;-1:-1:-1;;3392:17:144;;3389:2;;;-1:-1:-1;;;3432:33:144;;3488:4;3485:1;3478:15;3518:4;3439:3;3506:17;3389:2;-1:-1:-1;3560:1:144;3549:13;;3379:189::o;3573:127::-;3634:10;3629:3;3625:20;3622:1;3615:31;3665:4;3662:1;3655:15;3689:4;3686:1;3679:15;3605:95;1014:17147:114;;;;;;",
  "sourcePath": "contracts/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
  "type": "contract"
}