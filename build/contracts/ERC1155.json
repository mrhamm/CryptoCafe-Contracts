{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getOwnerUniqueTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
    "2": "contracts/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
    "3": "contracts/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
    "4": "contracts/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
    "5": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
    "6": "contracts/openzeppelin-contracts/contracts/utils/Context.sol",
    "7": "contracts/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
    "8": "contracts/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
    "9": "contracts/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
    "exportedSymbols": {
      "Address": [
        3923
      ],
      "Context": [
        3946
      ],
      "ERC1155": [
        2936
      ],
      "ERC165": [
        3970
      ],
      "EnumerableSet": [
        3449
      ],
      "IERC1155": [
        3571
      ],
      "IERC1155MetadataURI": [
        3627
      ],
      "IERC1155Receiver": [
        3612
      ],
      "IERC165": [
        3982
      ]
    },
    "id": 2937,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1770,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "file": "./IERC1155.sol",
        "id": 1771,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2937,
        "sourceUnit": 3572,
        "src": "58:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "file": "./IERC1155Receiver.sol",
        "id": 1772,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2937,
        "sourceUnit": 3613,
        "src": "83:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "file": "./extensions/IERC1155MetadataURI.sol",
        "id": 1773,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2937,
        "sourceUnit": 3628,
        "src": "116:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 1774,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2937,
        "sourceUnit": 3924,
        "src": "163:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 1775,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2937,
        "sourceUnit": 3947,
        "src": "197:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 1776,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2937,
        "sourceUnit": 3971,
        "src": "231:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "file": "../../utils/structs/EnumerableSet.sol",
        "id": 1777,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2937,
        "sourceUnit": 3450,
        "src": "278:47:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1779,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3946,
              "src": "564:7:1"
            },
            "id": 1780,
            "nodeType": "InheritanceSpecifier",
            "src": "564:7:1"
          },
          {
            "baseName": {
              "id": 1781,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3970,
              "src": "573:6:1"
            },
            "id": 1782,
            "nodeType": "InheritanceSpecifier",
            "src": "573:6:1"
          },
          {
            "baseName": {
              "id": 1783,
              "name": "IERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3571,
              "src": "581:8:1"
            },
            "id": 1784,
            "nodeType": "InheritanceSpecifier",
            "src": "581:8:1"
          },
          {
            "baseName": {
              "id": 1785,
              "name": "IERC1155MetadataURI",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3627,
              "src": "591:19:1"
            },
            "id": 1786,
            "nodeType": "InheritanceSpecifier",
            "src": "591:19:1"
          }
        ],
        "contractDependencies": [
          3571,
          3627,
          3946,
          3970,
          3982
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1778,
          "nodeType": "StructuredDocumentation",
          "src": "326:217:1",
          "text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
        },
        "fullyImplemented": true,
        "id": 2936,
        "linearizedBaseContracts": [
          2936,
          3627,
          3571,
          3970,
          3982,
          3946
        ],
        "name": "ERC1155",
        "nameLocation": "553:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1789,
            "libraryName": {
              "id": 1787,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3923,
              "src": "624:7:1"
            },
            "nodeType": "UsingForDirective",
            "src": "618:26:1",
            "typeName": {
              "id": 1788,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "636:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 1793,
            "libraryName": {
              "id": 1790,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3449,
              "src": "655:13:1"
            },
            "nodeType": "UsingForDirective",
            "src": "649:46:1",
            "typeName": {
              "id": 1792,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1791,
                "name": "EnumerableSet.UintSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3349,
                "src": "673:21:1"
              },
              "referencedDeclaration": 3349,
              "src": "673:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$3349_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            }
          },
          {
            "constant": false,
            "id": 1798,
            "mutability": "mutable",
            "name": "_holderTokens",
            "nameLocation": "751:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 2936,
            "src": "700:64:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3349_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "typeName": {
              "id": 1797,
              "keyType": {
                "id": 1794,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "709:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "700:42:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3349_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.UintSet)"
              },
              "valueType": {
                "id": 1796,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1795,
                  "name": "EnumerableSet.UintSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3349,
                  "src": "720:21:1"
                },
                "referencedDeclaration": 3349,
                "src": "720:21:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UintSet_$3349_storage_ptr",
                  "typeString": "struct EnumerableSet.UintSet"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1804,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "877:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 2936,
            "src": "820:66:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 1803,
              "keyType": {
                "id": 1799,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "829:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "820:48:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(address => uint256))"
              },
              "valueType": {
                "id": 1802,
                "keyType": {
                  "id": 1800,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "848:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "840:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 1801,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "859:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1810,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "997:18:1",
            "nodeType": "VariableDeclaration",
            "scope": 2936,
            "src": "943:72:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 1809,
              "keyType": {
                "id": 1805,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "952:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "943:45:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 1808,
                "keyType": {
                  "id": 1806,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "971:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "963:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1807,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "982:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1812,
            "mutability": "mutable",
            "name": "_uri",
            "nameLocation": "1151:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 2936,
            "src": "1136:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1811,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1136:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1822,
              "nodeType": "Block",
              "src": "1238:30:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1819,
                        "name": "uri_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1815,
                        "src": "1256:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1818,
                      "name": "_setURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2315,
                      "src": "1248:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1248:13:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1821,
                  "nodeType": "ExpressionStatement",
                  "src": "1248:13:1"
                }
              ]
            },
            "documentation": {
              "id": 1813,
              "nodeType": "StructuredDocumentation",
              "src": "1162:38:1",
              "text": " @dev See {_setURI}."
            },
            "id": 1823,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1815,
                  "mutability": "mutable",
                  "name": "uri_",
                  "nameLocation": "1232:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1823,
                  "src": "1218:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1814,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1218:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1217:20:1"
            },
            "returnParameters": {
              "id": 1817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1238:0:1"
            },
            "scope": 2936,
            "src": "1205:63:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3969,
              3981
            ],
            "body": {
              "id": 1853,
              "nodeType": "Block",
              "src": "1443:185:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1834,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1826,
                          "src": "1460:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1836,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3571,
                                "src": "1480:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$3571_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$3571_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              ],
                              "id": 1835,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1475:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1475:14:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$3571",
                              "typeString": "type(contract IERC1155)"
                            }
                          },
                          "id": 1838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1475:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1460:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1840,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1826,
                          "src": "1517:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1842,
                                "name": "IERC1155MetadataURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3627,
                                "src": "1537:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$3627_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$3627_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              ],
                              "id": 1841,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1532:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1532:25:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$3627",
                              "typeString": "type(contract IERC1155MetadataURI)"
                            }
                          },
                          "id": 1844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1532:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1517:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1460:109:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1849,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1826,
                          "src": "1609:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 1847,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1585:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC1155_$2936_$",
                            "typeString": "type(contract super ERC1155)"
                          }
                        },
                        "id": 1848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3969,
                        "src": "1585:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 1850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1585:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1460:161:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1833,
                  "id": 1852,
                  "nodeType": "Return",
                  "src": "1453:168:1"
                }
              ]
            },
            "documentation": {
              "id": 1824,
              "nodeType": "StructuredDocumentation",
              "src": "1274:56:1",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 1854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1344:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1830,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1828,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3970,
                  "src": "1411:6:1"
                },
                {
                  "id": 1829,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3982,
                  "src": "1419:7:1"
                }
              ],
              "src": "1402:25:1"
            },
            "parameters": {
              "id": 1827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1826,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1369:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1854,
                  "src": "1362:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1825,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1362:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1361:20:1"
            },
            "returnParameters": {
              "id": 1833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1832,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1854,
                  "src": "1437:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1831,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1436:6:1"
            },
            "scope": 2936,
            "src": "1335:293:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3626
            ],
            "body": {
              "id": 1865,
              "nodeType": "Block",
              "src": "2102:28:1",
              "statements": [
                {
                  "expression": {
                    "id": 1863,
                    "name": "_uri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1812,
                    "src": "2119:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1862,
                  "id": 1864,
                  "nodeType": "Return",
                  "src": "2112:11:1"
                }
              ]
            },
            "documentation": {
              "id": 1855,
              "nodeType": "StructuredDocumentation",
              "src": "1634:388:1",
              "text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
            },
            "functionSelector": "0e89341c",
            "id": 1866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "2036:3:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1859,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2069:8:1"
            },
            "parameters": {
              "id": 1858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1857,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "2040:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2039:9:1"
            },
            "returnParameters": {
              "id": 1862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1861,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "2087:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1860,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2086:15:1"
            },
            "scope": 2936,
            "src": "2027:103:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3509
            ],
            "body": {
              "id": 1893,
              "nodeType": "Block",
              "src": "2367:133:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1878,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1869,
                          "src": "2385:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2404:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2396:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1879,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2396:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2396:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2385:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 1884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2408:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        },
                        "value": "ERC1155: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        }
                      ],
                      "id": 1877,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2377:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2377:77:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1886,
                  "nodeType": "ExpressionStatement",
                  "src": "2377:77:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1887,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1804,
                        "src": "2471:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 1889,
                      "indexExpression": {
                        "id": 1888,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "2481:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2471:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1891,
                    "indexExpression": {
                      "id": 1890,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1869,
                      "src": "2485:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2471:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1876,
                  "id": 1892,
                  "nodeType": "Return",
                  "src": "2464:29:1"
                }
              ]
            },
            "documentation": {
              "id": 1867,
              "nodeType": "StructuredDocumentation",
              "src": "2136:131:1",
              "text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
            },
            "functionSelector": "00fdd58e",
            "id": 1894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2281:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1873,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2340:8:1"
            },
            "parameters": {
              "id": 1872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1869,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2299:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1894,
                  "src": "2291:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2291:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1871,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2316:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1894,
                  "src": "2308:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2308:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2290:29:1"
            },
            "returnParameters": {
              "id": 1876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1875,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1894,
                  "src": "2358:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2358:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2357:9:1"
            },
            "scope": 2936,
            "src": "2272:228:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3522
            ],
            "body": {
              "id": 1957,
              "nodeType": "Block",
              "src": "2852:335:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1909,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1898,
                            "src": "2870:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2870:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1911,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1901,
                            "src": "2889:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2889:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2870:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
                        "id": 1914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2901:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        },
                        "value": "ERC1155: accounts and ids length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        }
                      ],
                      "id": 1908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2862:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2862:83:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1916,
                  "nodeType": "ExpressionStatement",
                  "src": "2862:83:1"
                },
                {
                  "assignments": [
                    1921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1921,
                      "mutability": "mutable",
                      "name": "batchBalances",
                      "nameLocation": "2973:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1957,
                      "src": "2956:30:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1919,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2956:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1920,
                        "nodeType": "ArrayTypeName",
                        "src": "2956:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1928,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1925,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1898,
                          "src": "3003:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3003:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2989:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1922,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2993:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1923,
                        "nodeType": "ArrayTypeName",
                        "src": "2993:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 1927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2989:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2956:63:1"
                },
                {
                  "body": {
                    "id": 1953,
                    "nodeType": "Block",
                    "src": "3076:74:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 1951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1940,
                              "name": "batchBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1921,
                              "src": "3090:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1942,
                            "indexExpression": {
                              "id": 1941,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1930,
                              "src": "3104:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3090:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1944,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1898,
                                  "src": "3119:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 1946,
                                "indexExpression": {
                                  "id": 1945,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1930,
                                  "src": "3128:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3119:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 1947,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1901,
                                  "src": "3132:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1949,
                                "indexExpression": {
                                  "id": 1948,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1930,
                                  "src": "3136:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3132:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1943,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1894,
                              "src": "3109:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 1950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3109:30:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3090:49:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1952,
                        "nodeType": "ExpressionStatement",
                        "src": "3090:49:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1933,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1930,
                      "src": "3050:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1934,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1898,
                        "src": "3054:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3054:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3050:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1954,
                  "initializationExpression": {
                    "assignments": [
                      1930
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1930,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3043:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1954,
                        "src": "3035:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1929,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3035:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1932,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3047:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3035:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3071:3:1",
                      "subExpression": {
                        "id": 1937,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1930,
                        "src": "3073:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1939,
                    "nodeType": "ExpressionStatement",
                    "src": "3071:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "3030:120:1"
                },
                {
                  "expression": {
                    "id": 1955,
                    "name": "batchBalances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1921,
                    "src": "3167:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 1907,
                  "id": 1956,
                  "nodeType": "Return",
                  "src": "3160:20:1"
                }
              ]
            },
            "documentation": {
              "id": 1895,
              "nodeType": "StructuredDocumentation",
              "src": "2506:146:1",
              "text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
            },
            "functionSelector": "4e1273f4",
            "id": 1958,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfBatch",
            "nameLocation": "2666:14:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1903,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2804:8:1"
            },
            "parameters": {
              "id": 1902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1898,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nameLocation": "2707:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "2690:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1896,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2690:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1897,
                    "nodeType": "ArrayTypeName",
                    "src": "2690:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1901,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "2742:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "2725:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1899,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2725:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1900,
                    "nodeType": "ArrayTypeName",
                    "src": "2725:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2680:71:1"
            },
            "returnParameters": {
              "id": 1907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1906,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "2830:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1904,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2830:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1905,
                    "nodeType": "ArrayTypeName",
                    "src": "2830:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2829:18:1"
            },
            "scope": 2936,
            "src": "2657:530:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3530
            ],
            "body": {
              "id": 1991,
              "nodeType": "Block",
              "src": "3339:222:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1968,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3934,
                            "src": "3357:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3357:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1970,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1961,
                          "src": "3373:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3357:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
                        "id": 1972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3383:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        },
                        "value": "ERC1155: setting approval status for self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        }
                      ],
                      "id": 1967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3349:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3349:78:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1974,
                  "nodeType": "ExpressionStatement",
                  "src": "3349:78:1"
                },
                {
                  "expression": {
                    "id": 1982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1975,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1810,
                          "src": "3438:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 1979,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1976,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3934,
                            "src": "3457:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3457:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3438:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1980,
                      "indexExpression": {
                        "id": 1978,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1961,
                        "src": "3471:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3438:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1981,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1963,
                      "src": "3483:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3438:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1983,
                  "nodeType": "ExpressionStatement",
                  "src": "3438:53:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1985,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3934,
                          "src": "3521:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3521:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1987,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1961,
                        "src": "3535:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1988,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1963,
                        "src": "3545:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1984,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3492,
                      "src": "3506:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3506:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1990,
                  "nodeType": "EmitStatement",
                  "src": "3501:53:1"
                }
              ]
            },
            "documentation": {
              "id": 1959,
              "nodeType": "StructuredDocumentation",
              "src": "3193:57:1",
              "text": " @dev See {IERC1155-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 1992,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "3264:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1965,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3330:8:1"
            },
            "parameters": {
              "id": 1964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1961,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3290:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1992,
                  "src": "3282:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3282:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1963,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3305:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1992,
                  "src": "3300:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1962,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3300:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3281:33:1"
            },
            "returnParameters": {
              "id": 1966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3339:0:1"
            },
            "scope": 2936,
            "src": "3255:306:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3540
            ],
            "body": {
              "id": 2009,
              "nodeType": "Block",
              "src": "3733:61:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2003,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1810,
                        "src": "3750:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 2005,
                      "indexExpression": {
                        "id": 2004,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1995,
                        "src": "3769:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3750:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 2007,
                    "indexExpression": {
                      "id": 2006,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1997,
                      "src": "3778:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3750:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2002,
                  "id": 2008,
                  "nodeType": "Return",
                  "src": "3743:44:1"
                }
              ]
            },
            "documentation": {
              "id": 1993,
              "nodeType": "StructuredDocumentation",
              "src": "3567:56:1",
              "text": " @dev See {IERC1155-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 2010,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "3637:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1999,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3709:8:1"
            },
            "parameters": {
              "id": 1998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1995,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3662:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "3654:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3654:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1997,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3679:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "3671:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3671:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3653:35:1"
            },
            "returnParameters": {
              "id": 2002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2001,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "3727:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2000,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3727:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3726:6:1"
            },
            "scope": 2936,
            "src": "3628:166:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3554
            ],
            "body": {
              "id": 2140,
              "nodeType": "Block",
              "src": "4058:885:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2026,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2015,
                          "src": "4076:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4090:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4082:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2027,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4082:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4082:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4076:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4094:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 2025,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4068:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4068:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2034,
                  "nodeType": "ExpressionStatement",
                  "src": "4068:66:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2036,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2013,
                            "src": "4165:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2037,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3934,
                              "src": "4173:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4173:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4165:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2041,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2013,
                              "src": "4206:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2042,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3934,
                                "src": "4212:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4212:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2040,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2010,
                            "src": "4189:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 2044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4189:36:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4165:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4239:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        },
                        "value": "ERC1155: caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        }
                      ],
                      "id": 2035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4144:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4144:148:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "4144:148:1"
                },
                {
                  "assignments": [
                    2050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2050,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "4311:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2140,
                      "src": "4303:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2049,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4303:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2053,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2051,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3934,
                      "src": "4322:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4322:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4303:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2055,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "4366:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2056,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "4376:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2057,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
                        "src": "4382:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2059,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "4404:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2058,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2904,
                          "src": "4386:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 2060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4386:21:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2062,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2019,
                            "src": "4427:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2061,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2904,
                          "src": "4409:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 2063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4409:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2064,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2021,
                        "src": "4436:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2054,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2744,
                      "src": "4345:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4345:96:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2066,
                  "nodeType": "ExpressionStatement",
                  "src": "4345:96:1"
                },
                {
                  "assignments": [
                    2068
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2068,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "4460:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2140,
                      "src": "4452:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2067,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4452:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2074,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2069,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1804,
                        "src": "4474:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 2071,
                      "indexExpression": {
                        "id": 2070,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2017,
                        "src": "4484:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4474:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2073,
                    "indexExpression": {
                      "id": 2072,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "4488:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4474:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4452:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2076,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2068,
                          "src": "4511:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2077,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2019,
                          "src": "4526:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4511:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                        "id": 2079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4534:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        },
                        "value": "ERC1155: insufficient balance for transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        }
                      ],
                      "id": 2075,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4503:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4503:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2081,
                  "nodeType": "ExpressionStatement",
                  "src": "4503:76:1"
                },
                {
                  "expression": {
                    "id": 2090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2082,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1804,
                          "src": "4589:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 2085,
                        "indexExpression": {
                          "id": 2083,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2017,
                          "src": "4599:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4589:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2086,
                      "indexExpression": {
                        "id": 2084,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "4603:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4589:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2087,
                        "name": "fromBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2068,
                        "src": "4611:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2088,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2019,
                        "src": "4625:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4611:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4589:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2091,
                  "nodeType": "ExpressionStatement",
                  "src": "4589:42:1"
                },
                {
                  "expression": {
                    "id": 2098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2092,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1804,
                          "src": "4641:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 2095,
                        "indexExpression": {
                          "id": 2093,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2017,
                          "src": "4651:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4641:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2096,
                      "indexExpression": {
                        "id": 2094,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
                        "src": "4655:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4641:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2097,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2019,
                      "src": "4662:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4641:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2099,
                  "nodeType": "ExpressionStatement",
                  "src": "4641:27:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2104,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2017,
                        "src": "4700:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 2100,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1798,
                          "src": "4678:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3349_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 2102,
                        "indexExpression": {
                          "id": 2101,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2015,
                          "src": "4692:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4678:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$3349_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 2103,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3370,
                      "src": "4678:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$3349_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$3349_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 2105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4678:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2106,
                  "nodeType": "ExpressionStatement",
                  "src": "4678:25:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2107,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1804,
                          "src": "4717:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 2109,
                        "indexExpression": {
                          "id": 2108,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2017,
                          "src": "4727:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4717:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2111,
                      "indexExpression": {
                        "id": 2110,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "4731:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4717:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4738:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4717:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2122,
                  "nodeType": "IfStatement",
                  "src": "4713:83:1",
                  "trueBody": {
                    "id": 2121,
                    "nodeType": "Block",
                    "src": "4740:56:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2118,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2017,
                              "src": "4782:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2114,
                                "name": "_holderTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1798,
                                "src": "4755:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3349_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                                }
                              },
                              "id": 2116,
                              "indexExpression": {
                                "id": 2115,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2013,
                                "src": "4769:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4755:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$3349_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 2117,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "remove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3391,
                            "src": "4755:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$3349_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$3349_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            }
                          },
                          "id": 2119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4755:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2120,
                        "nodeType": "ExpressionStatement",
                        "src": "4755:30:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2124,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "4826:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2125,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "4836:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2126,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
                        "src": "4842:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2127,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2017,
                        "src": "4846:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2128,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2019,
                        "src": "4850:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2123,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3468,
                      "src": "4811:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4811:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2130,
                  "nodeType": "EmitStatement",
                  "src": "4806:51:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2132,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "4899:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2133,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "4909:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2134,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
                        "src": "4915:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2135,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2017,
                        "src": "4919:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2136,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2019,
                        "src": "4923:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2137,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2021,
                        "src": "4931:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2131,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2809,
                      "src": "4868:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 2138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4868:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2139,
                  "nodeType": "ExpressionStatement",
                  "src": "4868:68:1"
                }
              ]
            },
            "documentation": {
              "id": 2011,
              "nodeType": "StructuredDocumentation",
              "src": "3800:56:1",
              "text": " @dev See {IERC1155-safeTransferFrom}."
            },
            "functionSelector": "f242432a",
            "id": 2141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "3870:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2023,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4045:8:1"
            },
            "parameters": {
              "id": 2022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3904:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2141,
                  "src": "3896:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3896:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2015,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3926:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2141,
                  "src": "3918:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3918:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2017,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3946:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2141,
                  "src": "3938:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3938:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2019,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3966:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2141,
                  "src": "3958:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3958:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2021,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3995:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2141,
                  "src": "3982:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2020,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3982:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3886:119:1"
            },
            "returnParameters": {
              "id": 2024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4058:0:1"
            },
            "scope": 2936,
            "src": "3861:1082:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3570
            ],
            "body": {
              "id": 2303,
              "nodeType": "Block",
              "src": "5237:1128:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2159,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2149,
                            "src": "5255:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5255:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2161,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2152,
                            "src": "5269:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5269:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5255:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 2164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5285:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 2158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5247:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5247:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
                  "src": "5247:81:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2168,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2146,
                          "src": "5346:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5360:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5352:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2169,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5352:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5352:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5346:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5364:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 2167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5338:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5338:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2176,
                  "nodeType": "ExpressionStatement",
                  "src": "5338:66:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2178,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "5435:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2179,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3934,
                              "src": "5443:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5443:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5435:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2183,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2144,
                              "src": "5476:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2184,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3934,
                                "src": "5482:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5482:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2182,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2010,
                            "src": "5459:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 2186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5459:36:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5435:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 2188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5509:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC1155: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 2177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5414:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5414:157:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2190,
                  "nodeType": "ExpressionStatement",
                  "src": "5414:157:1"
                },
                {
                  "assignments": [
                    2192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2192,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "5590:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2303,
                      "src": "5582:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2191,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5582:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2195,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2193,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3934,
                      "src": "5601:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5601:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5582:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2197,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2192,
                        "src": "5645:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2198,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "5655:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2199,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2146,
                        "src": "5661:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2200,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2149,
                        "src": "5665:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2201,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "5670:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2202,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2154,
                        "src": "5679:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2196,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2744,
                      "src": "5624:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5624:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2204,
                  "nodeType": "ExpressionStatement",
                  "src": "5624:60:1"
                },
                {
                  "body": {
                    "id": 2284,
                    "nodeType": "Block",
                    "src": "5736:474:1",
                    "statements": [
                      {
                        "assignments": [
                          2217
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2217,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "5758:2:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2284,
                            "src": "5750:10:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2216,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5750:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2221,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2218,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2149,
                            "src": "5763:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2220,
                          "indexExpression": {
                            "id": 2219,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2206,
                            "src": "5767:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5763:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5750:19:1"
                      },
                      {
                        "assignments": [
                          2223
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2223,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "5791:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2284,
                            "src": "5783:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2222,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5783:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2227,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2224,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2152,
                            "src": "5800:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2226,
                          "indexExpression": {
                            "id": 2225,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2206,
                            "src": "5808:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5800:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5783:27:1"
                      },
                      {
                        "assignments": [
                          2229
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2229,
                            "mutability": "mutable",
                            "name": "fromBalance",
                            "nameLocation": "5833:11:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2284,
                            "src": "5825:19:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2228,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5825:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2235,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2230,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1804,
                              "src": "5847:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 2232,
                            "indexExpression": {
                              "id": 2231,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2217,
                              "src": "5857:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5847:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2234,
                          "indexExpression": {
                            "id": 2233,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "5861:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5847:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5825:41:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2237,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2229,
                                "src": "5888:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2238,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2223,
                                "src": "5903:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5888:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                              "id": 2240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5911:44:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              },
                              "value": "ERC1155: insufficient balance for transfer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              }
                            ],
                            "id": 2236,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5880:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5880:76:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2242,
                        "nodeType": "ExpressionStatement",
                        "src": "5880:76:1"
                      },
                      {
                        "expression": {
                          "id": 2251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2243,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1804,
                                "src": "5970:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 2246,
                              "indexExpression": {
                                "id": 2244,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2217,
                                "src": "5980:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5970:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2247,
                            "indexExpression": {
                              "id": 2245,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2144,
                              "src": "5984:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5970:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2248,
                              "name": "fromBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2229,
                              "src": "5992:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2249,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2223,
                              "src": "6006:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5992:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5970:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2252,
                        "nodeType": "ExpressionStatement",
                        "src": "5970:42:1"
                      },
                      {
                        "expression": {
                          "id": 2259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2253,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1804,
                                "src": "6026:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 2256,
                              "indexExpression": {
                                "id": 2254,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2217,
                                "src": "6036:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6026:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2257,
                            "indexExpression": {
                              "id": 2255,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2146,
                              "src": "6040:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6026:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2258,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2223,
                            "src": "6047:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6026:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2260,
                        "nodeType": "ExpressionStatement",
                        "src": "6026:27:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2265,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2217,
                              "src": "6089:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2261,
                                "name": "_holderTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1798,
                                "src": "6067:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3349_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                                }
                              },
                              "id": 2263,
                              "indexExpression": {
                                "id": 2262,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2146,
                                "src": "6081:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6067:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$3349_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 2264,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3370,
                            "src": "6067:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$3349_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$3349_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            }
                          },
                          "id": 2266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6067:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2267,
                        "nodeType": "ExpressionStatement",
                        "src": "6067:25:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2268,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1804,
                                "src": "6111:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 2270,
                              "indexExpression": {
                                "id": 2269,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2217,
                                "src": "6121:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6111:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2272,
                            "indexExpression": {
                              "id": 2271,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2144,
                              "src": "6125:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6111:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6134:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6111:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2283,
                        "nodeType": "IfStatement",
                        "src": "6106:94:1",
                        "trueBody": {
                          "id": 2282,
                          "nodeType": "Block",
                          "src": "6136:64:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2279,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2217,
                                    "src": "6182:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2275,
                                      "name": "_holderTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1798,
                                      "src": "6155:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3349_storage_$",
                                        "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                                      }
                                    },
                                    "id": 2277,
                                    "indexExpression": {
                                      "id": 2276,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2144,
                                      "src": "6169:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6155:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UintSet_$3349_storage",
                                      "typeString": "struct EnumerableSet.UintSet storage ref"
                                    }
                                  },
                                  "id": 2278,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "remove",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3391,
                                  "src": "6155:26:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$3349_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$3349_storage_ptr_$",
                                    "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                                  }
                                },
                                "id": 2280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6155:30:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2281,
                              "nodeType": "ExpressionStatement",
                              "src": "6155:30:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2209,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2206,
                      "src": "5715:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2210,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2149,
                        "src": "5719:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 2211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5719:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5715:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2285,
                  "initializationExpression": {
                    "assignments": [
                      2206
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2206,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5708:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2285,
                        "src": "5700:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2205,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5700:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2208,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5712:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5700:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "5731:3:1",
                      "subExpression": {
                        "id": 2213,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2206,
                        "src": "5733:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2215,
                    "nodeType": "ExpressionStatement",
                    "src": "5731:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "5695:515:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2287,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2192,
                        "src": "6239:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2288,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "6249:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2289,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2146,
                        "src": "6255:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2290,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2149,
                        "src": "6259:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2291,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "6264:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 2286,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3483,
                      "src": "6225:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 2292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6225:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2293,
                  "nodeType": "EmitStatement",
                  "src": "6220:52:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2295,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2192,
                        "src": "6319:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2296,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "6329:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2297,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2146,
                        "src": "6335:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2298,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2149,
                        "src": "6339:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2299,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "6344:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2300,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2154,
                        "src": "6353:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2294,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2876,
                      "src": "6283:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6283:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2302,
                  "nodeType": "ExpressionStatement",
                  "src": "6283:75:1"
                }
              ]
            },
            "documentation": {
              "id": 2142,
              "nodeType": "StructuredDocumentation",
              "src": "4949:61:1",
              "text": " @dev See {IERC1155-safeBatchTransferFrom}."
            },
            "functionSelector": "2eb2c2d6",
            "id": 2304,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeBatchTransferFrom",
            "nameLocation": "5024:21:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2156,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5224:8:1"
            },
            "parameters": {
              "id": 2155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2144,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5063:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2304,
                  "src": "5055:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5055:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2146,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5085:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2304,
                  "src": "5077:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5077:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2149,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "5114:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2304,
                  "src": "5097:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2147,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5097:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2148,
                    "nodeType": "ArrayTypeName",
                    "src": "5097:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2152,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "5144:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2304,
                  "src": "5127:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2150,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5127:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2151,
                    "nodeType": "ArrayTypeName",
                    "src": "5127:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2154,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5174:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2304,
                  "src": "5161:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2153,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5161:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5045:139:1"
            },
            "returnParameters": {
              "id": 2157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5237:0:1"
            },
            "scope": 2936,
            "src": "5015:1350:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2314,
              "nodeType": "Block",
              "src": "7244:30:1",
              "statements": [
                {
                  "expression": {
                    "id": 2312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2310,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1812,
                      "src": "7254:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2311,
                      "name": "newuri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2307,
                      "src": "7261:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7254:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2313,
                  "nodeType": "ExpressionStatement",
                  "src": "7254:13:1"
                }
              ]
            },
            "documentation": {
              "id": 2305,
              "nodeType": "StructuredDocumentation",
              "src": "6371:812:1",
              "text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
            },
            "id": 2315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setURI",
            "nameLocation": "7197:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2307,
                  "mutability": "mutable",
                  "name": "newuri",
                  "nameLocation": "7219:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2315,
                  "src": "7205:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2306,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7205:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7204:22:1"
            },
            "returnParameters": {
              "id": 2309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7244:0:1"
            },
            "scope": 2936,
            "src": "7188:86:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2396,
              "nodeType": "Block",
              "src": "7758:490:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2328,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2318,
                          "src": "7776:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7795:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7787:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2329,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7787:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7787:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7776:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7799:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 2327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7768:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7768:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2336,
                  "nodeType": "ExpressionStatement",
                  "src": "7768:67:1"
                },
                {
                  "assignments": [
                    2338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2338,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "7854:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2396,
                      "src": "7846:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2337,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7846:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2341,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2339,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3934,
                      "src": "7865:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7865:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7846:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2343,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2338,
                        "src": "7909:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7927:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7919:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2344,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7919:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7919:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2348,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2318,
                        "src": "7931:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2350,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2320,
                            "src": "7958:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2349,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2904,
                          "src": "7940:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 2351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7940:21:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2353,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2322,
                            "src": "7981:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2352,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2904,
                          "src": "7963:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 2354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7963:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2355,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2324,
                        "src": "7990:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2342,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2744,
                      "src": "7888:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7888:107:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2357,
                  "nodeType": "ExpressionStatement",
                  "src": "7888:107:1"
                },
                {
                  "expression": {
                    "id": 2364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2358,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1804,
                          "src": "8006:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 2361,
                        "indexExpression": {
                          "id": 2359,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2320,
                          "src": "8016:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8006:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2362,
                      "indexExpression": {
                        "id": 2360,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2318,
                        "src": "8020:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8006:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2363,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2322,
                      "src": "8032:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8006:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2365,
                  "nodeType": "ExpressionStatement",
                  "src": "8006:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2370,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2320,
                        "src": "8076:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 2366,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1798,
                          "src": "8049:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3349_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 2368,
                        "indexExpression": {
                          "id": 2367,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2318,
                          "src": "8063:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8049:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$3349_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 2369,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3370,
                      "src": "8049:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$3349_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$3349_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 2371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8049:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2372,
                  "nodeType": "ExpressionStatement",
                  "src": "8049:30:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2374,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2338,
                        "src": "8109:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8127:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8119:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2375,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8119:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8119:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2379,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2318,
                        "src": "8131:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2380,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2320,
                        "src": "8140:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2381,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8144:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2373,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3468,
                      "src": "8094:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 2382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8094:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2383,
                  "nodeType": "EmitStatement",
                  "src": "8089:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2385,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2338,
                        "src": "8193:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8211:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8203:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2386,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8203:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8203:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2390,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2318,
                        "src": "8215:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2391,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2320,
                        "src": "8224:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2392,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8228:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2393,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2324,
                        "src": "8236:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2384,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2809,
                      "src": "8162:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 2394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8162:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2395,
                  "nodeType": "ExpressionStatement",
                  "src": "8162:79:1"
                }
              ]
            },
            "documentation": {
              "id": 2316,
              "nodeType": "StructuredDocumentation",
              "src": "7280:377:1",
              "text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n Emits a {TransferSingle} event.\n Requirements:\n - `account` cannot be the zero address.\n - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
            },
            "id": 2397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "7671:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2318,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7685:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2397,
                  "src": "7677:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7677:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2320,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "7702:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2397,
                  "src": "7694:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7694:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2322,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7714:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2397,
                  "src": "7706:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7706:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2324,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7735:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2397,
                  "src": "7722:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2323,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7722:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7676:64:1"
            },
            "returnParameters": {
              "id": 2326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7758:0:1"
            },
            "scope": 2936,
            "src": "7662:586:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2504,
              "nodeType": "Block",
              "src": "8709:611:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2412,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2400,
                          "src": "8727:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8741:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8733:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2413,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8733:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8733:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8727:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8745:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 2411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8719:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8719:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2420,
                  "nodeType": "ExpressionStatement",
                  "src": "8719:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2422,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2403,
                            "src": "8799:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8799:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2424,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2406,
                            "src": "8813:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8813:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8799:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 2427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8829:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 2421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8791:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8791:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2429,
                  "nodeType": "ExpressionStatement",
                  "src": "8791:81:1"
                },
                {
                  "assignments": [
                    2431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2431,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "8891:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2504,
                      "src": "8883:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2430,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8883:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2434,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2432,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3934,
                      "src": "8902:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8902:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8883:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2436,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2431,
                        "src": "8946:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8964:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8956:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2437,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8956:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8956:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2441,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2400,
                        "src": "8968:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2442,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2403,
                        "src": "8972:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2443,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2406,
                        "src": "8977:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2444,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2408,
                        "src": "8986:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2435,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2744,
                      "src": "8925:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8925:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2446,
                  "nodeType": "ExpressionStatement",
                  "src": "8925:66:1"
                },
                {
                  "body": {
                    "id": 2479,
                    "nodeType": "Block",
                    "src": "9040:104:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 2468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2458,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1804,
                                "src": "9054:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 2463,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2459,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2403,
                                  "src": "9064:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 2461,
                                "indexExpression": {
                                  "id": 2460,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2448,
                                  "src": "9068:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9064:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9054:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2464,
                            "indexExpression": {
                              "id": 2462,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2400,
                              "src": "9072:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9054:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2465,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2406,
                              "src": "9079:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2467,
                            "indexExpression": {
                              "id": 2466,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2448,
                              "src": "9087:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9079:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9054:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2469,
                        "nodeType": "ExpressionStatement",
                        "src": "9054:35:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 2474,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2403,
                                "src": "9126:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 2476,
                              "indexExpression": {
                                "id": 2475,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2448,
                                "src": "9130:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9126:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2470,
                                "name": "_holderTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1798,
                                "src": "9104:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3349_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                                }
                              },
                              "id": 2472,
                              "indexExpression": {
                                "id": 2471,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2400,
                                "src": "9118:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9104:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$3349_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 2473,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3370,
                            "src": "9104:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$3349_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$3349_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            }
                          },
                          "id": 2477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9104:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2478,
                        "nodeType": "ExpressionStatement",
                        "src": "9104:29:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2451,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2448,
                      "src": "9019:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2452,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2403,
                        "src": "9023:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 2453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9023:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9019:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2480,
                  "initializationExpression": {
                    "assignments": [
                      2448
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2448,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9012:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2480,
                        "src": "9007:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2447,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9007:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2450,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9016:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9007:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9035:3:1",
                      "subExpression": {
                        "id": 2455,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2448,
                        "src": "9035:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2457,
                    "nodeType": "ExpressionStatement",
                    "src": "9035:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "9002:142:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2482,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2431,
                        "src": "9182:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9200:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9192:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2483,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9192:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9192:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2487,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2400,
                        "src": "9204:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2488,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2403,
                        "src": "9208:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2489,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2406,
                        "src": "9213:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 2481,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3483,
                      "src": "9168:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 2490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9168:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2491,
                  "nodeType": "EmitStatement",
                  "src": "9163:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2493,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2431,
                        "src": "9268:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9286:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9278:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2494,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9278:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9278:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2498,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2400,
                        "src": "9290:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2499,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2403,
                        "src": "9294:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2500,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2406,
                        "src": "9299:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2501,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2408,
                        "src": "9308:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2492,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2876,
                      "src": "9232:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9232:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2503,
                  "nodeType": "ExpressionStatement",
                  "src": "9232:81:1"
                }
              ]
            },
            "documentation": {
              "id": 2398,
              "nodeType": "StructuredDocumentation",
              "src": "8254:334:1",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
            },
            "id": 2505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintBatch",
            "nameLocation": "8602:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2400,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8621:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2505,
                  "src": "8613:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8613:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2403,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "8642:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2505,
                  "src": "8625:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2401,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8625:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2402,
                    "nodeType": "ArrayTypeName",
                    "src": "8625:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2406,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "8664:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2505,
                  "src": "8647:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2404,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8647:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2405,
                    "nodeType": "ArrayTypeName",
                    "src": "8647:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2408,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8686:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2505,
                  "src": "8673:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2407,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8673:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8612:79:1"
            },
            "returnParameters": {
              "id": 2410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8709:0:1"
            },
            "scope": 2936,
            "src": "8593:727:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2598,
              "nodeType": "Block",
              "src": "9646:650:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2516,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2508,
                          "src": "9664:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9683:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9675:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2517,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9675:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9675:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9664:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 2522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9687:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        },
                        "value": "ERC1155: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        }
                      ],
                      "id": 2515,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9656:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9656:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2524,
                  "nodeType": "ExpressionStatement",
                  "src": "9656:69:1"
                },
                {
                  "assignments": [
                    2526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2526,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "9744:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2598,
                      "src": "9736:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2525,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9736:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2529,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2527,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3934,
                      "src": "9755:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9755:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9736:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2531,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2526,
                        "src": "9799:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2532,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2508,
                        "src": "9809:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9826:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9818:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2533,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9818:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9818:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2538,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2510,
                            "src": "9848:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2537,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2904,
                          "src": "9830:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 2539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9830:21:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2541,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2512,
                            "src": "9871:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2540,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2904,
                          "src": "9853:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 2542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9853:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9880:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2530,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2744,
                      "src": "9778:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9778:105:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2545,
                  "nodeType": "ExpressionStatement",
                  "src": "9778:105:1"
                },
                {
                  "assignments": [
                    2547
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2547,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9902:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2598,
                      "src": "9894:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2546,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9894:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2553,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2548,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1804,
                        "src": "9919:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 2550,
                      "indexExpression": {
                        "id": 2549,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2510,
                        "src": "9929:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9919:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2552,
                    "indexExpression": {
                      "id": 2551,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2508,
                      "src": "9933:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9919:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9894:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2555,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2547,
                          "src": "9959:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2556,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2512,
                          "src": "9977:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9959:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 2558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9985:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                          "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                        },
                        "value": "ERC1155: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                          "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                        }
                      ],
                      "id": 2554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9951:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9951:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2560,
                  "nodeType": "ExpressionStatement",
                  "src": "9951:73:1"
                },
                {
                  "assignments": [
                    2562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2562,
                      "mutability": "mutable",
                      "name": "newBalance",
                      "nameLocation": "10042:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2598,
                      "src": "10034:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2561,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10034:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2566,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2563,
                      "name": "accountBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2547,
                      "src": "10055:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 2564,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2512,
                      "src": "10070:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10055:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10034:42:1"
                },
                {
                  "expression": {
                    "id": 2573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2567,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1804,
                          "src": "10086:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 2570,
                        "indexExpression": {
                          "id": 2568,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2510,
                          "src": "10096:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10086:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2571,
                      "indexExpression": {
                        "id": 2569,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2508,
                        "src": "10100:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10086:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2572,
                      "name": "newBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2562,
                      "src": "10111:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10086:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2574,
                  "nodeType": "ExpressionStatement",
                  "src": "10086:35:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2575,
                      "name": "newBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2562,
                      "src": "10135:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10148:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10135:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2586,
                  "nodeType": "IfStatement",
                  "src": "10131:78:1",
                  "trueBody": {
                    "id": 2585,
                    "nodeType": "Block",
                    "src": "10151:58:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2582,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2510,
                              "src": "10195:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2578,
                                "name": "_holderTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1798,
                                "src": "10165:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3349_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                                }
                              },
                              "id": 2580,
                              "indexExpression": {
                                "id": 2579,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2508,
                                "src": "10179:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10165:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$3349_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 2581,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "remove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3391,
                            "src": "10165:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$3349_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$3349_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            }
                          },
                          "id": 2583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10165:33:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2584,
                        "nodeType": "ExpressionStatement",
                        "src": "10165:33:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2588,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2526,
                        "src": "10247:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2589,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2508,
                        "src": "10257:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10274:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10266:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2590,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10266:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10266:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2594,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2510,
                        "src": "10278:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2595,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2512,
                        "src": "10282:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2587,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3468,
                      "src": "10232:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 2596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10232:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2597,
                  "nodeType": "EmitStatement",
                  "src": "10227:62:1"
                }
              ]
            },
            "documentation": {
              "id": 2506,
              "nodeType": "StructuredDocumentation",
              "src": "9326:238:1",
              "text": " @dev Destroys `amount` tokens of token type `id` from `account`\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens of token type `id`."
            },
            "id": 2599,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9578:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2508,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9592:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2599,
                  "src": "9584:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9584:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2510,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "9609:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2599,
                  "src": "9601:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9601:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2512,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9621:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2599,
                  "src": "9613:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9613:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9583:45:1"
            },
            "returnParameters": {
              "id": 2514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9646:0:1"
            },
            "scope": 2936,
            "src": "9569:727:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2724,
              "nodeType": "Block",
              "src": "10592:858:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2612,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2602,
                          "src": "10610:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10629:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10621:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2613,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10621:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10621:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10610:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 2618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10633:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        },
                        "value": "ERC1155: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        }
                      ],
                      "id": 2611,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10602:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10602:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2620,
                  "nodeType": "ExpressionStatement",
                  "src": "10602:69:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2622,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2605,
                            "src": "10689:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10689:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2624,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2608,
                            "src": "10703:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10703:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10689:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 2627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10719:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 2621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10681:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10681:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2629,
                  "nodeType": "ExpressionStatement",
                  "src": "10681:81:1"
                },
                {
                  "assignments": [
                    2631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2631,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "10781:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2724,
                      "src": "10773:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2630,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10773:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2634,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2632,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3934,
                      "src": "10792:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10792:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10773:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2636,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2631,
                        "src": "10835:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2637,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2602,
                        "src": "10845:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10862:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10854:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2638,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10854:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10854:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2642,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2605,
                        "src": "10866:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2643,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2608,
                        "src": "10871:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10880:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2635,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2744,
                      "src": "10814:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10814:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2646,
                  "nodeType": "ExpressionStatement",
                  "src": "10814:69:1"
                },
                {
                  "body": {
                    "id": 2711,
                    "nodeType": "Block",
                    "src": "10932:438:1",
                    "statements": [
                      {
                        "assignments": [
                          2659
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2659,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "10954:2:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2711,
                            "src": "10946:10:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2658,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10946:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2663,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2660,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2605,
                            "src": "10959:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2662,
                          "indexExpression": {
                            "id": 2661,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2648,
                            "src": "10963:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10959:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10946:19:1"
                      },
                      {
                        "assignments": [
                          2665
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2665,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "10987:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2711,
                            "src": "10979:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2664,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10979:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2669,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2666,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2608,
                            "src": "10996:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2668,
                          "indexExpression": {
                            "id": 2667,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2648,
                            "src": "11004:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10996:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10979:27:1"
                      },
                      {
                        "assignments": [
                          2671
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2671,
                            "mutability": "mutable",
                            "name": "accountBalance",
                            "nameLocation": "11029:14:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2711,
                            "src": "11021:22:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2670,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11021:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2677,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2672,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1804,
                              "src": "11046:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 2674,
                            "indexExpression": {
                              "id": 2673,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2659,
                              "src": "11056:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11046:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2676,
                          "indexExpression": {
                            "id": 2675,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2602,
                            "src": "11060:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11046:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11021:47:1"
                      },
                      {
                        "assignments": [
                          2679
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2679,
                            "mutability": "mutable",
                            "name": "newBalance",
                            "nameLocation": "11090:10:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2711,
                            "src": "11082:18:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2678,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11082:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2683,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2680,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2671,
                            "src": "11103:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2681,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2665,
                            "src": "11118:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11103:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11082:42:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2685,
                                "name": "accountBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2671,
                                "src": "11146:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2686,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2665,
                                "src": "11164:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11146:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
                              "id": 2688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11172:38:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                                "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                              },
                              "value": "ERC1155: burn amount exceeds balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                                "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                              }
                            ],
                            "id": 2684,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11138:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11138:73:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2690,
                        "nodeType": "ExpressionStatement",
                        "src": "11138:73:1"
                      },
                      {
                        "expression": {
                          "id": 2697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2691,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1804,
                                "src": "11225:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 2694,
                              "indexExpression": {
                                "id": 2692,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2659,
                                "src": "11235:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11225:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2695,
                            "indexExpression": {
                              "id": 2693,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2602,
                              "src": "11239:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11225:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2696,
                            "name": "newBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2679,
                            "src": "11250:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11225:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2698,
                        "nodeType": "ExpressionStatement",
                        "src": "11225:35:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2699,
                            "name": "newBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2679,
                            "src": "11278:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11291:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11278:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2710,
                        "nodeType": "IfStatement",
                        "src": "11274:86:1",
                        "trueBody": {
                          "id": 2709,
                          "nodeType": "Block",
                          "src": "11294:66:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2706,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2659,
                                    "src": "11342:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2702,
                                      "name": "_holderTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1798,
                                      "src": "11312:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3349_storage_$",
                                        "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                                      }
                                    },
                                    "id": 2704,
                                    "indexExpression": {
                                      "id": 2703,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2602,
                                      "src": "11326:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11312:22:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UintSet_$3349_storage",
                                      "typeString": "struct EnumerableSet.UintSet storage ref"
                                    }
                                  },
                                  "id": 2705,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "remove",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3391,
                                  "src": "11312:29:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$3349_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$3349_storage_ptr_$",
                                    "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                                  }
                                },
                                "id": 2707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11312:33:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2708,
                              "nodeType": "ExpressionStatement",
                              "src": "11312:33:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2651,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2648,
                      "src": "10911:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2652,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2605,
                        "src": "10915:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 2653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10915:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10911:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2712,
                  "initializationExpression": {
                    "assignments": [
                      2648
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2648,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10904:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2712,
                        "src": "10899:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2647,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10899:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2650,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10908:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10899:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10927:3:1",
                      "subExpression": {
                        "id": 2655,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2648,
                        "src": "10927:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2657,
                    "nodeType": "ExpressionStatement",
                    "src": "10927:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "10894:476:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2714,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2631,
                        "src": "11399:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2715,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2602,
                        "src": "11409:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11426:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11418:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2716,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11418:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11418:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2720,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2605,
                        "src": "11430:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2721,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2608,
                        "src": "11435:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 2713,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3483,
                      "src": "11385:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 2722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11385:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2723,
                  "nodeType": "EmitStatement",
                  "src": "11380:63:1"
                }
              ]
            },
            "documentation": {
              "id": 2600,
              "nodeType": "StructuredDocumentation",
              "src": "10302:183:1",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
            },
            "id": 2725,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnBatch",
            "nameLocation": "10499:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2602,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10518:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2725,
                  "src": "10510:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10510:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2605,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "10544:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2725,
                  "src": "10527:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2603,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10527:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2604,
                    "nodeType": "ArrayTypeName",
                    "src": "10527:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2608,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "10566:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2725,
                  "src": "10549:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2606,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10549:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2607,
                    "nodeType": "ArrayTypeName",
                    "src": "10549:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10509:65:1"
            },
            "returnParameters": {
              "id": 2610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10592:0:1"
            },
            "scope": 2936,
            "src": "10490:960:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2743,
              "nodeType": "Block",
              "src": "12616:3:1",
              "statements": []
            },
            "documentation": {
              "id": 2726,
              "nodeType": "StructuredDocumentation",
              "src": "11456:923:1",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2744,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "12393:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2728,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12431:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2744,
                  "src": "12423:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12423:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2730,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12457:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2744,
                  "src": "12449:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12449:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2732,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12479:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2744,
                  "src": "12471:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12471:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2735,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "12508:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2744,
                  "src": "12491:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2733,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12491:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2734,
                    "nodeType": "ArrayTypeName",
                    "src": "12491:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2738,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "12538:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2744,
                  "src": "12521:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2736,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12521:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2737,
                    "nodeType": "ArrayTypeName",
                    "src": "12521:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2740,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12568:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2744,
                  "src": "12555:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2739,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12555:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12413:165:1"
            },
            "returnParameters": {
              "id": 2742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12616:0:1"
            },
            "scope": 2936,
            "src": "12384:235:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2808,
              "nodeType": "Block",
              "src": "12830:536:1",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2759,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2750,
                        "src": "12844:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3647,
                      "src": "12844:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 2761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12844:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2807,
                  "nodeType": "IfStatement",
                  "src": "12840:520:1",
                  "trueBody": {
                    "id": 2806,
                    "nodeType": "Block",
                    "src": "12861:499:1",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 2788,
                              "nodeType": "Block",
                              "src": "12978:188:1",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2781,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2775,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2773,
                                      "src": "13000:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 2777,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2750,
                                              "src": "13029:2:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2776,
                                            "name": "IERC1155Receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3612,
                                            "src": "13012:16:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$3612_$",
                                              "typeString": "type(contract IERC1155Receiver)"
                                            }
                                          },
                                          "id": 2778,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13012:20:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1155Receiver_$3612",
                                            "typeString": "contract IERC1155Receiver"
                                          }
                                        },
                                        "id": 2779,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3593,
                                        "src": "13012:38:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
                                        }
                                      },
                                      "id": 2780,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "13012:47:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "13000:59:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 2787,
                                  "nodeType": "IfStatement",
                                  "src": "12996:156:1",
                                  "trueBody": {
                                    "id": 2786,
                                    "nodeType": "Block",
                                    "src": "13061:91:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 2783,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13090:42:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 2782,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "13083:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 2784,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13083:50:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 2785,
                                        "nodeType": "ExpressionStatement",
                                        "src": "13083:50:1"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2789,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2774,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2773,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "12968:8:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2789,
                                  "src": "12961:15:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 2772,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12961:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12960:17:1"
                            },
                            "src": "12952:214:1"
                          },
                          {
                            "block": {
                              "id": 2797,
                              "nodeType": "Block",
                              "src": "13201:47:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2794,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2791,
                                        "src": "13226:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 2793,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "13219:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 2795,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13219:14:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2796,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13219:14:1"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 2798,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2792,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2791,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "13193:6:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2798,
                                  "src": "13179:20:1",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 2790,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13179:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13178:22:1"
                            },
                            "src": "13167:81:1"
                          },
                          {
                            "block": {
                              "id": 2803,
                              "nodeType": "Block",
                              "src": "13255:95:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 2800,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13280:54:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 2799,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "13273:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 2801,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13273:62:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2802,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13273:62:1"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2804,
                            "nodeType": "TryCatchClause",
                            "src": "13249:101:1"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 2766,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2746,
                              "src": "12918:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2767,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2748,
                              "src": "12928:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2768,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2752,
                              "src": "12934:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2769,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2754,
                              "src": "12938:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2770,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2756,
                              "src": "12946:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2763,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2750,
                                  "src": "12896:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2762,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3612,
                                "src": "12879:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$3612_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 2764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12879:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$3612",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 2765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3593,
                            "src": "12879:38:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 2771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12879:72:1",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 2805,
                        "nodeType": "TryStatement",
                        "src": "12875:475:1"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 2809,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeTransferAcceptanceCheck",
            "nameLocation": "12634:30:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2746,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12682:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2809,
                  "src": "12674:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12674:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2748,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12708:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2809,
                  "src": "12700:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12700:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2750,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12730:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2809,
                  "src": "12722:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12722:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2752,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "12750:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2809,
                  "src": "12742:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12742:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2754,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12770:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2809,
                  "src": "12762:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12762:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2756,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12799:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2809,
                  "src": "12786:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2755,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12786:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12664:145:1"
            },
            "returnParameters": {
              "id": 2758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12830:0:1"
            },
            "scope": 2936,
            "src": "12625:741:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2875,
              "nodeType": "Block",
              "src": "13602:548:1",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2826,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2815,
                        "src": "13616:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3647,
                      "src": "13616:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 2828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13616:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2874,
                  "nodeType": "IfStatement",
                  "src": "13612:532:1",
                  "trueBody": {
                    "id": 2873,
                    "nodeType": "Block",
                    "src": "13633:511:1",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 2855,
                              "nodeType": "Block",
                              "src": "13757:193:1",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2848,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2842,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2840,
                                      "src": "13779:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 2844,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2815,
                                              "src": "13808:2:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2843,
                                            "name": "IERC1155Receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3612,
                                            "src": "13791:16:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$3612_$",
                                              "typeString": "type(contract IERC1155Receiver)"
                                            }
                                          },
                                          "id": 2845,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13791:20:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1155Receiver_$3612",
                                            "typeString": "contract IERC1155Receiver"
                                          }
                                        },
                                        "id": 2846,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155BatchReceived",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3611,
                                        "src": "13791:43:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
                                        }
                                      },
                                      "id": 2847,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "13791:52:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "13779:64:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 2854,
                                  "nodeType": "IfStatement",
                                  "src": "13775:161:1",
                                  "trueBody": {
                                    "id": 2853,
                                    "nodeType": "Block",
                                    "src": "13845:91:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 2850,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13874:42:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 2849,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "13867:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 2851,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13867:50:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 2852,
                                        "nodeType": "ExpressionStatement",
                                        "src": "13867:50:1"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2856,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2841,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2840,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "13747:8:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2856,
                                  "src": "13740:15:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 2839,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13740:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13739:17:1"
                            },
                            "src": "13731:219:1"
                          },
                          {
                            "block": {
                              "id": 2864,
                              "nodeType": "Block",
                              "src": "13985:47:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2861,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2858,
                                        "src": "14010:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 2860,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14003:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 2862,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14003:14:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2863,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14003:14:1"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 2865,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2859,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2858,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "13977:6:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2865,
                                  "src": "13963:20:1",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 2857,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13963:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13962:22:1"
                            },
                            "src": "13951:81:1"
                          },
                          {
                            "block": {
                              "id": 2870,
                              "nodeType": "Block",
                              "src": "14039:95:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 2867,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14064:54:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 2866,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14057:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 2868,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14057:62:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2869,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14057:62:1"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2871,
                            "nodeType": "TryCatchClause",
                            "src": "14033:101:1"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 2833,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2811,
                              "src": "13695:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2834,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2813,
                              "src": "13705:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2835,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2818,
                              "src": "13711:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 2836,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "13716:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 2837,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2823,
                              "src": "13725:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2830,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2815,
                                  "src": "13668:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2829,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3612,
                                "src": "13651:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$3612_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 2831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13651:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$3612",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 2832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155BatchReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3611,
                            "src": "13651:43:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 2838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13651:79:1",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 2872,
                        "nodeType": "TryStatement",
                        "src": "13647:487:1"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 2876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeBatchTransferAcceptanceCheck",
            "nameLocation": "13381:35:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2811,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13434:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2876,
                  "src": "13426:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13426:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2813,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13460:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2876,
                  "src": "13452:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13452:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2815,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13482:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2876,
                  "src": "13474:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13474:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2818,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "13511:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2876,
                  "src": "13494:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2816,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13494:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2817,
                    "nodeType": "ArrayTypeName",
                    "src": "13494:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2821,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "13541:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2876,
                  "src": "13524:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2819,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13524:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2820,
                    "nodeType": "ArrayTypeName",
                    "src": "13524:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2823,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13571:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2876,
                  "src": "13558:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2822,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13558:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13416:165:1"
            },
            "returnParameters": {
              "id": 2825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13602:0:1"
            },
            "scope": 2936,
            "src": "13372:778:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2903,
              "nodeType": "Block",
              "src": "14240:109:1",
              "statements": [
                {
                  "assignments": [
                    2888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2888,
                      "mutability": "mutable",
                      "name": "array",
                      "nameLocation": "14267:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2903,
                      "src": "14250:22:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2886,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14250:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2887,
                        "nodeType": "ArrayTypeName",
                        "src": "14250:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2894,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 2892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14289:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 2891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14275:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2889,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14279:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2890,
                        "nodeType": "ArrayTypeName",
                        "src": "14279:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 2893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14275:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14250:41:1"
                },
                {
                  "expression": {
                    "id": 2899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2895,
                        "name": "array",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2888,
                        "src": "14301:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 2897,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 2896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14307:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14301:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2898,
                      "name": "element",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "14312:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14301:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2900,
                  "nodeType": "ExpressionStatement",
                  "src": "14301:18:1"
                },
                {
                  "expression": {
                    "id": 2901,
                    "name": "array",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2888,
                    "src": "14337:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 2883,
                  "id": 2902,
                  "nodeType": "Return",
                  "src": "14330:12:1"
                }
              ]
            },
            "id": 2904,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asSingletonArray",
            "nameLocation": "14165:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2878,
                  "mutability": "mutable",
                  "name": "element",
                  "nameLocation": "14191:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2904,
                  "src": "14183:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14183:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14182:17:1"
            },
            "returnParameters": {
              "id": 2883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2882,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2904,
                  "src": "14222:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2880,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14222:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2881,
                    "nodeType": "ArrayTypeName",
                    "src": "14222:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14221:18:1"
            },
            "scope": 2936,
            "src": "14156:193:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2920,
              "nodeType": "Block",
              "src": "14444:54:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2917,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2908,
                        "src": "14485:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 2913,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1798,
                          "src": "14461:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3349_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 2915,
                        "indexExpression": {
                          "id": 2914,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2906,
                          "src": "14475:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14461:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$3349_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 2916,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3448,
                      "src": "14461:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$3349_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$3349_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
                      }
                    },
                    "id": 2918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14461:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2912,
                  "id": 2919,
                  "nodeType": "Return",
                  "src": "14454:37:1"
                }
              ]
            },
            "functionSelector": "2f745c59",
            "id": 2921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nameLocation": "14364:19:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2906,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "14392:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2921,
                  "src": "14384:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14384:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2908,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "14407:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2921,
                  "src": "14399:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14399:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14383:30:1"
            },
            "returnParameters": {
              "id": 2912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2911,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2921,
                  "src": "14435:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14435:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14434:9:1"
            },
            "scope": 2936,
            "src": "14355:143:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2934,
              "nodeType": "Block",
              "src": "14579:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 2928,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1798,
                          "src": "14596:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3349_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 2930,
                        "indexExpression": {
                          "id": 2929,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2923,
                          "src": "14610:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14596:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$3349_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 2931,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3427,
                      "src": "14596:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$3349_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$3349_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14596:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2927,
                  "id": 2933,
                  "nodeType": "Return",
                  "src": "14589:36:1"
                }
              ]
            },
            "functionSelector": "42da6f9c",
            "id": 2935,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnerUniqueTokens",
            "nameLocation": "14513:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2923,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "14542:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2935,
                  "src": "14534:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14534:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14533:15:1"
            },
            "returnParameters": {
              "id": 2927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2926,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2935,
                  "src": "14570:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14570:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14569:9:1"
            },
            "scope": 2936,
            "src": "14504:128:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2937,
        "src": "544:14090:1"
      }
    ],
    "src": "33:14602:1"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001ac438038062001ac4833981016040819052620000349162000105565b6200003f8162000046565b506200022e565b80516200005b9060039060208401906200005f565b5050565b8280546200006d90620001db565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b6000602080838503121562000118578182fd5b82516001600160401b03808211156200012f578384fd5b818501915085601f83011262000143578384fd5b81518181111562000158576200015862000218565b604051601f8201601f19908116603f0116810190838211818310171562000183576200018362000218565b8160405282815288868487010111156200019b578687fd5b8693505b82841015620001be57848401860151818501870152928501926200019f565b82841115620001cf57868684830101525b98975050505050505050565b600181811c90821680620001f057607f821691505b602082108114156200021257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611886806200023e6000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c806342da6f9c1161006657806342da6f9c146101335780634e1273f414610146578063a22cb46514610166578063e985e9c514610179578063f242432a146101b55761009d565b8062fdd58e146100a257806301ffc9a7146100c85780630e89341c146100eb5780632eb2c2d61461010b5780632f745c5914610120575b600080fd5b6100b56100b03660046112f5565b6101c8565b6040519081526020015b60405180910390f35b6100db6100d63660046113e9565b610264565b60405190151581526020016100bf565b6100fe6100f9366004611421565b6102b8565b6040516100bf91906115a2565b61011e6101193660046111b2565b61034c565b005b6100b561012e3660046112f5565b61069f565b6100b5610141366004611166565b6106c8565b61015961015436600461131e565b6106e9565b6040516100bf9190611561565b61011e6101743660046112bb565b61084b565b6100db610187366004611180565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b61011e6101c3366004611258565b61095f565b60006001600160a01b0383166102395760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061029557506001600160e01b031982166303a24d0760e21b145b806102b057506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b6060600380546102c7906116df565b80601f01602080910402602001604051908101604052809291908181526020018280546102f3906116df565b80156103405780601f1061031557610100808354040283529160200191610340565b820191906000526020600020905b81548152906001019060200180831161032357829003601f168201915b50505050509050919050565b81518351146103ae5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610230565b6001600160a01b0384166103d45760405162461bcd60e51b8152600401610230906115fd565b6103dc610bb1565b6001600160a01b0316856001600160a01b03161480610402575061040285610187610bb1565b6104695760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610230565b6000610473610bb1565b905060005b84518110156106315760008582815181106104a357634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106104cf57634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160008481526001835260408082206001600160a01b038e1683529093529190912054909150818110156105205760405162461bcd60e51b815260040161023090611642565b61052a82826116c8565b6001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002081905550816001600085815260200190815260200160002060008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546105aa91906116b0565b90915550506001600160a01b03891660009081526020819052604090206105d19084610bb6565b5060008381526001602090815260408083206001600160a01b038e16845290915290205461061d576001600160a01b038a16600090815260208190526040902061061b9084610bc2565b505b5050508061062a90611747565b9050610478565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610681929190611574565b60405180910390a4610697818787878787610bce565b505050505050565b6001600160a01b03821660009081526020819052604081206106c19083610d39565b9392505050565b6001600160a01b03811660009081526020819052604081206102b090610d45565b6060815183511461074e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610230565b6000835167ffffffffffffffff81111561077857634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156107a1578160200160208202803683370190505b50905060005b8451811015610843576108088582815181106107d357634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106107fb57634e487b7160e01b600052603260045260246000fd5b60200260200101516101c8565b82828151811061082857634e487b7160e01b600052603260045260246000fd5b602090810291909101015261083c81611747565b90506107a7565b509392505050565b816001600160a01b031661085d610bb1565b6001600160a01b031614156108c65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610230565b80600260006108d3610bb1565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610917610bb1565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610953911515815260200190565b60405180910390a35050565b6001600160a01b0384166109855760405162461bcd60e51b8152600401610230906115fd565b61098d610bb1565b6001600160a01b0316856001600160a01b031614806109b357506109b385610187610bb1565b610a115760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610230565b6000610a1b610bb1565b9050610a3c818787610a2c88610d4f565b610a3588610d4f565b5050505050565b60008481526001602090815260408083206001600160a01b038a16845290915290205483811015610a7f5760405162461bcd60e51b815260040161023090611642565b610a8984826116c8565b60008681526001602090815260408083206001600160a01b038c81168552925280832093909355881681529081208054869290610ac79084906116b0565b90915550506001600160a01b0386166000908152602081905260409020610aee9086610bb6565b5060008581526001602090815260408083206001600160a01b038b168452909152902054610b3a576001600160a01b0387166000908152602081905260409020610b389086610bc2565b505b856001600160a01b0316876001600160a01b0316836001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051610b92929190918252602082015260400190565b60405180910390a4610ba8828888888888610da8565b50505050505050565b335b90565b60006106c18383610e72565b60006106c18383610ec1565b6001600160a01b0384163b156106975760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610c1290899089908890889088906004016114be565b602060405180830381600087803b158015610c2c57600080fd5b505af1925050508015610c5c575060408051601f3d908101601f19168201909252610c5991810190611405565b60015b610d0957610c6861178e565b806308c379a01415610ca25750610c7d6117a5565b80610c885750610ca4565b8060405162461bcd60e51b815260040161023091906115a2565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610230565b6001600160e01b0319811663bc197c8160e01b14610ba85760405162461bcd60e51b8152600401610230906115b5565b60006106c18383610fd8565b60006102b0825490565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610d9757634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156106975760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610dec908990899088908890889060040161151c565b602060405180830381600087803b158015610e0657600080fd5b505af1925050508015610e36575060408051601f3d908101601f19168201909252610e3391810190611405565b60015b610e4257610c6861178e565b6001600160e01b0319811663f23a6e6160e01b14610ba85760405162461bcd60e51b8152600401610230906115b5565b6000818152600183016020526040812054610eb95750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561025e565b50600061025e565b60008181526001830160205260408120548015610fce576000610ee56001836116c8565b8554909150600090610ef9906001906116c8565b90506000866000018281548110610f2057634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080876000018481548110610f5157634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925582815260018901909152604090208490558654879080610f9257634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061025e565b600091505061025e565b815460009082106110365760405162461bcd60e51b815260206004820152602260248201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604482015261647360f01b6064820152608401610230565b82600001828154811061105957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b80356001600160a01b03811681146102b357600080fd5b600082601f830112611093578081fd5b813560206110a08261168c565b6040516110ad828261171a565b8381528281019150858301600585901b870184018810156110cc578586fd5b855b858110156110ea578135845292840192908401906001016110ce565b5090979650505050505050565b600082601f830112611107578081fd5b813567ffffffffffffffff81111561112157611121611778565b604051611138601f8301601f19166020018261171a565b81815284602083860101111561114c578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215611177578081fd5b6106c18261106c565b60008060408385031215611192578081fd5b61119b8361106c565b91506111a96020840161106c565b90509250929050565b600080600080600060a086880312156111c9578081fd5b6111d28661106c565b94506111e06020870161106c565b9350604086013567ffffffffffffffff808211156111fc578283fd5b61120889838a01611083565b9450606088013591508082111561121d578283fd5b61122989838a01611083565b9350608088013591508082111561123e578283fd5b5061124b888289016110f7565b9150509295509295909350565b600080600080600060a0868803121561126f578081fd5b6112788661106c565b94506112866020870161106c565b93506040860135925060608601359150608086013567ffffffffffffffff8111156112af578182fd5b61124b888289016110f7565b600080604083850312156112cd578182fd5b6112d68361106c565b9150602083013580151581146112ea578182fd5b809150509250929050565b60008060408385031215611307578182fd5b6113108361106c565b946020939093013593505050565b60008060408385031215611330578182fd5b823567ffffffffffffffff80821115611347578384fd5b818501915085601f83011261135a578384fd5b813560206113678261168c565b604051611374828261171a565b8381528281019150858301600585901b870184018b1015611393578889fd5b8896505b848710156113bc576113a88161106c565b835260019690960195918301918301611397565b50965050860135925050808211156113d2578283fd5b506113df85828601611083565b9150509250929050565b6000602082840312156113fa578081fd5b81356106c181611837565b600060208284031215611416578081fd5b81516106c181611837565b600060208284031215611432578081fd5b5035919050565b6000815180845260208085019450808401835b838110156114685781518752958201959082019060010161144c565b509495945050505050565b60008151808452815b818110156114985760208185018101518683018201520161147c565b818111156114a95782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a0604082018190526000906114ea90830186611439565b82810360608401526114fc8186611439565b905082810360808401526115108185611473565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061155690830184611473565b979650505050505050565b6000602082526106c16020830184611439565b6000604082526115876040830185611439565b82810360208401526115998185611439565b95945050505050565b6000602082526106c16020830184611473565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff8211156116a6576116a6611778565b5060051b60200190565b600082198211156116c3576116c3611762565b500190565b6000828210156116da576116da611762565b500390565b600181811c908216806116f357607f821691505b6020821081141561171457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561174057611740611778565b6040525050565b600060001982141561175b5761175b611762565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115610bb357600481823e5160e01c90565b600060443d10156117b557610bb3565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156117e7575050505050610bb3565b828501915081518181111561180157505050505050610bb3565b843d870101602082850101111561181d57505050505050610bb3565b61182c6020828601018761171a565b509094505050505090565b6001600160e01b03198116811461184d57600080fd5b5056fea26469706673582212203c90f0064ff7c2416725b73584feb08c7b78b06d48f97a65fd77990b5b0cdbb664736f6c63430008030033",
  "bytecodeSha1": "905f31bef4130c47f3bcfaa6550c0cbe996b3060",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "ERC1155",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "74": [
            13779,
            13843,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "75": [
            13000,
            13059,
            false
          ]
        },
        "ERC1155.balanceOf": {
          "62": [
            2385,
            2406,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "68": [
            2870,
            2899,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "63": [
            5255,
            5283,
            true
          ],
          "64": [
            5346,
            5362,
            true
          ],
          "65": [
            5435,
            5455,
            true
          ],
          "66": [
            5459,
            5495,
            true
          ],
          "67": [
            5888,
            5909,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "70": [
            4076,
            4092,
            true
          ],
          "71": [
            4165,
            4185,
            true
          ],
          "72": [
            4189,
            4225,
            true
          ],
          "73": [
            4511,
            4532,
            true
          ]
        },
        "ERC1155.setApprovalForAll": {
          "69": [
            3357,
            3381,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "EnumerableSet._at": {
          "77": [
            4547,
            4573,
            true
          ]
        },
        "EnumerableSet._remove": {
          "76": [
            2441,
            2456,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "ERC1155._asSingletonArray": {
          "46": [
            14301,
            14319
          ],
          "47": [
            14330,
            14342
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "40": [
            14003,
            14017
          ],
          "41": [
            14057,
            14119
          ],
          "42": [
            13867,
            13917
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "48": [
            13083,
            13133
          ]
        },
        "ERC1155.balanceOf": {
          "1": [
            2377,
            2454
          ],
          "2": [
            2464,
            2493
          ]
        },
        "ERC1155.balanceOfBatch": {
          "19": [
            2862,
            2945
          ],
          "20": [
            3090,
            3139
          ],
          "21": [
            3071,
            3074
          ],
          "22": [
            3160,
            3180
          ]
        },
        "ERC1155.getOwnerUniqueTokens": {
          "18": [
            14589,
            14625
          ]
        },
        "ERC1155.isApprovedForAll": {
          "0": [
            3743,
            3787
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "6": [
            5247,
            5328
          ],
          "7": [
            5338,
            5404
          ],
          "8": [
            5414,
            5571
          ],
          "9": [
            5880,
            5956
          ],
          "10": [
            5970,
            6012
          ],
          "11": [
            6026,
            6053
          ],
          "12": [
            6067,
            6092
          ],
          "13": [
            6155,
            6185
          ],
          "14": [
            5731,
            5734
          ],
          "15": [
            6220,
            6272
          ],
          "16": [
            6283,
            6358
          ]
        },
        "ERC1155.safeTransferFrom": {
          "26": [
            4068,
            4134
          ],
          "27": [
            4144,
            4292
          ],
          "28": [
            4345,
            4441
          ],
          "29": [
            4503,
            4579
          ],
          "30": [
            4589,
            4631
          ],
          "31": [
            4641,
            4668
          ],
          "32": [
            4678,
            4703
          ],
          "33": [
            4755,
            4785
          ],
          "34": [
            4806,
            4857
          ],
          "35": [
            4868,
            4936
          ]
        },
        "ERC1155.setApprovalForAll": {
          "23": [
            3349,
            3427
          ],
          "24": [
            3438,
            3491
          ],
          "25": [
            3501,
            3554
          ]
        },
        "ERC1155.supportsInterface": {
          "3": [
            1453,
            1621
          ]
        },
        "ERC1155.tokenOfOwnerByIndex": {
          "17": [
            14454,
            14491
          ]
        },
        "ERC1155.uri": {
          "5": [
            2112,
            2123
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {
        "Address.isContract": {
          "39": [
            1109,
            1124
          ]
        }
      },
      "6": {
        "Context._msgSender": {
          "36": [
            658,
            675
          ]
        }
      },
      "7": {
        "ERC165.supportsInterface": {
          "4": [
            864,
            911
          ]
        }
      },
      "8": {},
      "9": {
        "EnumerableSet._add": {
          "50": [
            1753,
            1776
          ],
          "51": [
            1911,
            1951
          ],
          "52": [
            1965,
            1976
          ],
          "53": [
            2007,
            2019
          ]
        },
        "EnumerableSet._at": {
          "60": [
            4539,
            4612
          ],
          "61": [
            4622,
            4647
          ]
        },
        "EnumerableSet._contains": {
          "49": [
            3895,
            3926
          ]
        },
        "EnumerableSet._length": {
          "45": [
            4089,
            4114
          ]
        },
        "EnumerableSet._remove": {
          "54": [
            3266,
            3304
          ],
          "55": [
            3370,
            3406
          ],
          "56": [
            3528,
            3545
          ],
          "57": [
            3613,
            3639
          ],
          "58": [
            3654,
            3665
          ],
          "59": [
            3696,
            3708
          ]
        },
        "EnumerableSet.add": {
          "37": [
            8152,
            8191
          ]
        },
        "EnumerableSet.at": {
          "43": [
            9341,
            9379
          ]
        },
        "EnumerableSet.length": {
          "44": [
            8886,
            8912
          ]
        },
        "EnumerableSet.remove": {
          "38": [
            8452,
            8494
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "EnumerableSet",
    "IERC1155",
    "IERC1155MetadataURI",
    "IERC1155Receiver",
    "IERC165"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009d5760003560e01c806342da6f9c1161006657806342da6f9c146101335780634e1273f414610146578063a22cb46514610166578063e985e9c514610179578063f242432a146101b55761009d565b8062fdd58e146100a257806301ffc9a7146100c85780630e89341c146100eb5780632eb2c2d61461010b5780632f745c5914610120575b600080fd5b6100b56100b03660046112f5565b6101c8565b6040519081526020015b60405180910390f35b6100db6100d63660046113e9565b610264565b60405190151581526020016100bf565b6100fe6100f9366004611421565b6102b8565b6040516100bf91906115a2565b61011e6101193660046111b2565b61034c565b005b6100b561012e3660046112f5565b61069f565b6100b5610141366004611166565b6106c8565b61015961015436600461131e565b6106e9565b6040516100bf9190611561565b61011e6101743660046112bb565b61084b565b6100db610187366004611180565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b61011e6101c3366004611258565b61095f565b60006001600160a01b0383166102395760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061029557506001600160e01b031982166303a24d0760e21b145b806102b057506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b6060600380546102c7906116df565b80601f01602080910402602001604051908101604052809291908181526020018280546102f3906116df565b80156103405780601f1061031557610100808354040283529160200191610340565b820191906000526020600020905b81548152906001019060200180831161032357829003601f168201915b50505050509050919050565b81518351146103ae5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610230565b6001600160a01b0384166103d45760405162461bcd60e51b8152600401610230906115fd565b6103dc610bb1565b6001600160a01b0316856001600160a01b03161480610402575061040285610187610bb1565b6104695760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610230565b6000610473610bb1565b905060005b84518110156106315760008582815181106104a357634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106104cf57634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160008481526001835260408082206001600160a01b038e1683529093529190912054909150818110156105205760405162461bcd60e51b815260040161023090611642565b61052a82826116c8565b6001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002081905550816001600085815260200190815260200160002060008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546105aa91906116b0565b90915550506001600160a01b03891660009081526020819052604090206105d19084610bb6565b5060008381526001602090815260408083206001600160a01b038e16845290915290205461061d576001600160a01b038a16600090815260208190526040902061061b9084610bc2565b505b5050508061062a90611747565b9050610478565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610681929190611574565b60405180910390a4610697818787878787610bce565b505050505050565b6001600160a01b03821660009081526020819052604081206106c19083610d39565b9392505050565b6001600160a01b03811660009081526020819052604081206102b090610d45565b6060815183511461074e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610230565b6000835167ffffffffffffffff81111561077857634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156107a1578160200160208202803683370190505b50905060005b8451811015610843576108088582815181106107d357634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106107fb57634e487b7160e01b600052603260045260246000fd5b60200260200101516101c8565b82828151811061082857634e487b7160e01b600052603260045260246000fd5b602090810291909101015261083c81611747565b90506107a7565b509392505050565b816001600160a01b031661085d610bb1565b6001600160a01b031614156108c65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610230565b80600260006108d3610bb1565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610917610bb1565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610953911515815260200190565b60405180910390a35050565b6001600160a01b0384166109855760405162461bcd60e51b8152600401610230906115fd565b61098d610bb1565b6001600160a01b0316856001600160a01b031614806109b357506109b385610187610bb1565b610a115760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610230565b6000610a1b610bb1565b9050610a3c818787610a2c88610d4f565b610a3588610d4f565b5050505050565b60008481526001602090815260408083206001600160a01b038a16845290915290205483811015610a7f5760405162461bcd60e51b815260040161023090611642565b610a8984826116c8565b60008681526001602090815260408083206001600160a01b038c81168552925280832093909355881681529081208054869290610ac79084906116b0565b90915550506001600160a01b0386166000908152602081905260409020610aee9086610bb6565b5060008581526001602090815260408083206001600160a01b038b168452909152902054610b3a576001600160a01b0387166000908152602081905260409020610b389086610bc2565b505b856001600160a01b0316876001600160a01b0316836001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051610b92929190918252602082015260400190565b60405180910390a4610ba8828888888888610da8565b50505050505050565b335b90565b60006106c18383610e72565b60006106c18383610ec1565b6001600160a01b0384163b156106975760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610c1290899089908890889088906004016114be565b602060405180830381600087803b158015610c2c57600080fd5b505af1925050508015610c5c575060408051601f3d908101601f19168201909252610c5991810190611405565b60015b610d0957610c6861178e565b806308c379a01415610ca25750610c7d6117a5565b80610c885750610ca4565b8060405162461bcd60e51b815260040161023091906115a2565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610230565b6001600160e01b0319811663bc197c8160e01b14610ba85760405162461bcd60e51b8152600401610230906115b5565b60006106c18383610fd8565b60006102b0825490565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610d9757634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156106975760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610dec908990899088908890889060040161151c565b602060405180830381600087803b158015610e0657600080fd5b505af1925050508015610e36575060408051601f3d908101601f19168201909252610e3391810190611405565b60015b610e4257610c6861178e565b6001600160e01b0319811663f23a6e6160e01b14610ba85760405162461bcd60e51b8152600401610230906115b5565b6000818152600183016020526040812054610eb95750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561025e565b50600061025e565b60008181526001830160205260408120548015610fce576000610ee56001836116c8565b8554909150600090610ef9906001906116c8565b90506000866000018281548110610f2057634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080876000018481548110610f5157634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925582815260018901909152604090208490558654879080610f9257634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061025e565b600091505061025e565b815460009082106110365760405162461bcd60e51b815260206004820152602260248201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604482015261647360f01b6064820152608401610230565b82600001828154811061105957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b80356001600160a01b03811681146102b357600080fd5b600082601f830112611093578081fd5b813560206110a08261168c565b6040516110ad828261171a565b8381528281019150858301600585901b870184018810156110cc578586fd5b855b858110156110ea578135845292840192908401906001016110ce565b5090979650505050505050565b600082601f830112611107578081fd5b813567ffffffffffffffff81111561112157611121611778565b604051611138601f8301601f19166020018261171a565b81815284602083860101111561114c578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215611177578081fd5b6106c18261106c565b60008060408385031215611192578081fd5b61119b8361106c565b91506111a96020840161106c565b90509250929050565b600080600080600060a086880312156111c9578081fd5b6111d28661106c565b94506111e06020870161106c565b9350604086013567ffffffffffffffff808211156111fc578283fd5b61120889838a01611083565b9450606088013591508082111561121d578283fd5b61122989838a01611083565b9350608088013591508082111561123e578283fd5b5061124b888289016110f7565b9150509295509295909350565b600080600080600060a0868803121561126f578081fd5b6112788661106c565b94506112866020870161106c565b93506040860135925060608601359150608086013567ffffffffffffffff8111156112af578182fd5b61124b888289016110f7565b600080604083850312156112cd578182fd5b6112d68361106c565b9150602083013580151581146112ea578182fd5b809150509250929050565b60008060408385031215611307578182fd5b6113108361106c565b946020939093013593505050565b60008060408385031215611330578182fd5b823567ffffffffffffffff80821115611347578384fd5b818501915085601f83011261135a578384fd5b813560206113678261168c565b604051611374828261171a565b8381528281019150858301600585901b870184018b1015611393578889fd5b8896505b848710156113bc576113a88161106c565b835260019690960195918301918301611397565b50965050860135925050808211156113d2578283fd5b506113df85828601611083565b9150509250929050565b6000602082840312156113fa578081fd5b81356106c181611837565b600060208284031215611416578081fd5b81516106c181611837565b600060208284031215611432578081fd5b5035919050565b6000815180845260208085019450808401835b838110156114685781518752958201959082019060010161144c565b509495945050505050565b60008151808452815b818110156114985760208185018101518683018201520161147c565b818111156114a95782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a0604082018190526000906114ea90830186611439565b82810360608401526114fc8186611439565b905082810360808401526115108185611473565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061155690830184611473565b979650505050505050565b6000602082526106c16020830184611439565b6000604082526115876040830185611439565b82810360208401526115998185611439565b95945050505050565b6000602082526106c16020830184611473565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff8211156116a6576116a6611778565b5060051b60200190565b600082198211156116c3576116c3611762565b500190565b6000828210156116da576116da611762565b500390565b600181811c908216806116f357607f821691505b6020821081141561171457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561174057611740611778565b6040525050565b600060001982141561175b5761175b611762565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115610bb357600481823e5160e01c90565b600060443d10156117b557610bb3565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156117e7575050505050610bb3565b828501915081518181111561180157505050505050610bb3565b843d870101602082850101111561181d57505050505050610bb3565b61182c6020828601018761171a565b509094505050505090565b6001600160e01b03198116811461184d57600080fd5b5056fea26469706673582212203c90f0064ff7c2416725b73584feb08c7b78b06d48f97a65fd77990b5b0cdbb664736f6c63430008030033",
  "deployedSourceMap": "544:14090:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2272:228;;;;;;:::i;:::-;;:::i;:::-;;;14402:25:10;;;14390:2;14375:18;2272:228:1;;;;;;;;1335:293;;;;;;:::i;:::-;;:::i;:::-;;;9485:14:10;;9478:22;9460:41;;9448:2;9433:18;1335:293:1;9415:92:10;2027:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5015:1350::-;;;;;;:::i;:::-;;:::i;:::-;;14355:143;;;;;;:::i;:::-;;:::i;14504:128::-;;;;;;:::i;:::-;;:::i;2657:530::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3255:306::-;;;;;;:::i;:::-;;:::i;3628:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3750:27:1;;;3727:4;3750:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3628:166;3861:1082;;;;;;:::i;:::-;;:::i;2272:228::-;2358:7;-1:-1:-1;;;;;2385:21:1;;2377:77;;;;-1:-1:-1;;;2377:77:1;;11171:2:10;2377:77:1;;;11153:21:10;11210:2;11190:18;;;11183:30;11249:34;11229:18;;;11222:62;-1:-1:-1;;;11300:18:10;;;11293:41;11351:19;;2377:77:1;;;;;;;;;-1:-1:-1;2471:13:1;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;2471:22:1;;;;;;;;;;2272:228;;;;;:::o;1335:293::-;1437:4;-1:-1:-1;;;;;;1460:41:1;;-1:-1:-1;;;1460:41:1;;:109;;-1:-1:-1;;;;;;;1517:52:1;;-1:-1:-1;;;1517:52:1;1460:109;:161;;;-1:-1:-1;;;;;;;;;;871:40:7;;;1585:36:1;1453:168;;1335:293;;;;:::o;2027:103::-;2087:13;2119:4;2112:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:103;;;:::o;5015:1350::-;5269:7;:14;5255:3;:10;:28;5247:81;;;;-1:-1:-1;;;5247:81:1;;14049:2:10;5247:81:1;;;14031:21:10;14088:2;14068:18;;;14061:30;14127:34;14107:18;;;14100:62;-1:-1:-1;;;14178:18:10;;;14171:38;14226:19;;5247:81:1;14021:230:10;5247:81:1;-1:-1:-1;;;;;5346:16:1;;5338:66;;;;-1:-1:-1;;;5338:66:1;;;;;;;:::i;:::-;5443:12;:10;:12::i;:::-;-1:-1:-1;;;;;5435:20:1;:4;-1:-1:-1;;;;;5435:20:1;;:60;;;;5459:36;5476:4;5482:12;:10;:12::i;5459:36::-;5414:157;;;;-1:-1:-1;;;5414:157:1;;12399:2:10;5414:157:1;;;12381:21:10;12438:2;12418:18;;;12411:30;12477:34;12457:18;;;12450:62;-1:-1:-1;;;12528:18:10;;;12521:48;12586:19;;5414:157:1;12371:240:10;5414:157:1;5582:16;5601:12;:10;:12::i;:::-;5582:31;;5700:9;5695:515;5719:3;:10;5715:1;:14;5695:515;;;5750:10;5763:3;5767:1;5763:6;;;;;;-1:-1:-1;;;5763:6:1;;;;;;;;;;;;;;;5750:19;;5783:14;5800:7;5808:1;5800:10;;;;;;-1:-1:-1;;;5800:10:1;;;;;;;;;;;;;;;;;;;;5825:19;5847:13;;;:9;:13;;;;;;-1:-1:-1;;;;;5847:19:1;;;;;;;;;;;;5800:10;;-1:-1:-1;5888:21:1;;;;5880:76;;;;-1:-1:-1;;;5880:76:1;;;;;;;:::i;:::-;5992:20;6006:6;5992:11;:20;:::i;:::-;5970:9;:13;5980:2;5970:13;;;;;;;;;;;:19;5984:4;-1:-1:-1;;;;;5970:19:1;-1:-1:-1;;;;;5970:19:1;;;;;;;;;;;;:42;;;;6047:6;6026:9;:13;6036:2;6026:13;;;;;;;;;;;:17;6040:2;-1:-1:-1;;;;;6026:17:1;-1:-1:-1;;;;;6026:17:1;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6067:17:1;;:13;:17;;;;;;;;;;:25;;6089:2;6067:21;:25::i;:::-;-1:-1:-1;6111:13:1;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6111:19:1;;;;;;;;;;6106:94;;-1:-1:-1;;;;;6155:19:1;;:13;:19;;;;;;;;;;:30;;6182:2;6155:26;:30::i;:::-;;6106:94;5695:515;;;5731:3;;;;:::i;:::-;;;5695:515;;;;6255:2;-1:-1:-1;;;;;6225:47:1;6249:4;-1:-1:-1;;;;;6225:47:1;6239:8;-1:-1:-1;;;;;6225:47:1;;6259:3;6264:7;6225:47;;;;;;;:::i;:::-;;;;;;;;6283:75;6319:8;6329:4;6335:2;6339:3;6344:7;6353:4;6283:35;:75::i;:::-;5015:1350;;;;;;:::o;14355:143::-;-1:-1:-1;;;;;14461:20:1;;14435:7;14461:20;;;;;;;;;;:30;;14485:5;14461:23;:30::i;:::-;14454:37;14355:143;-1:-1:-1;;;14355:143:1:o;14504:128::-;-1:-1:-1;;;;;14596:20:1;;14570:7;14596:20;;;;;;;;;;:29;;:27;:29::i;2657:530::-;2830:16;2889:3;:10;2870:8;:15;:29;2862:83;;;;-1:-1:-1;;;2862:83:1;;13639:2:10;2862:83:1;;;13621:21:10;13678:2;13658:18;;;13651:30;13717:34;13697:18;;;13690:62;-1:-1:-1;;;13768:18:10;;;13761:39;13817:19;;2862:83:1;13611:231:10;2862:83:1;2956:30;3003:8;:15;2989:30;;;;;;-1:-1:-1;;;2989:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2989:30:1;;2956:63;;3035:9;3030:120;3054:8;:15;3050:1;:19;3030:120;;;3109:30;3119:8;3128:1;3119:11;;;;;;-1:-1:-1;;;3119:11:1;;;;;;;;;;;;;;;3132:3;3136:1;3132:6;;;;;;-1:-1:-1;;;3132:6:1;;;;;;;;;;;;;;;3109:9;:30::i;:::-;3090:13;3104:1;3090:16;;;;;;-1:-1:-1;;;3090:16:1;;;;;;;;;;;;;;;;;;:49;3071:3;;;:::i;:::-;;;3030:120;;;-1:-1:-1;3167:13:1;2657:530;-1:-1:-1;;;2657:530:1:o;3255:306::-;3373:8;-1:-1:-1;;;;;3357:24:1;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3357:24:1;;;3349:78;;;;-1:-1:-1;;;3349:78:1;;13229:2:10;3349:78:1;;;13211:21:10;13268:2;13248:18;;;13241:30;13307:34;13287:18;;;13280:62;-1:-1:-1;;;13358:18:10;;;13351:39;13407:19;;3349:78:1;13201:231:10;3349:78:1;3483:8;3438:18;:32;3457:12;:10;:12::i;:::-;-1:-1:-1;;;;;3438:32:1;;;;;;;;;;;;;;;;;-1:-1:-1;3438:32:1;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;3438:53:1;;;;;;;;;;;3521:12;:10;:12::i;:::-;-1:-1:-1;;;;;3506:48:1;;3545:8;3506:48;;;;9485:14:10;9478:22;9460:41;;9448:2;9433:18;;9415:92;3506:48:1;;;;;;;;3255:306;;:::o;3861:1082::-;-1:-1:-1;;;;;4076:16:1;;4068:66;;;;-1:-1:-1;;;4068:66:1;;;;;;;:::i;:::-;4173:12;:10;:12::i;:::-;-1:-1:-1;;;;;4165:20:1;:4;-1:-1:-1;;;;;4165:20:1;;:60;;;;4189:36;4206:4;4212:12;:10;:12::i;4189:36::-;4144:148;;;;-1:-1:-1;;;4144:148:1;;11583:2:10;4144:148:1;;;11565:21:10;11622:2;11602:18;;;11595:30;11661:34;11641:18;;;11634:62;-1:-1:-1;;;11712:18:10;;;11705:39;11761:19;;4144:148:1;11555:231:10;4144:148:1;4303:16;4322:12;:10;:12::i;:::-;4303:31;;4345:96;4366:8;4376:4;4382:2;4386:21;4404:2;4386:17;:21::i;:::-;4409:25;4427:6;4409:17;:25::i;:::-;5015:1350;;;;;;4345:96;4452:19;4474:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;4474:19:1;;;;;;;;;;4511:21;;;;4503:76;;;;-1:-1:-1;;;4503:76:1;;;;;;;:::i;:::-;4611:20;4625:6;4611:11;:20;:::i;:::-;4589:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;4589:19:1;;;;;;;;;;:42;;;;4641:17;;;;;;;:27;;4662:6;;4589:13;4641:27;;4662:6;;4641:27;:::i;:::-;;;;-1:-1:-1;;;;;;;4678:17:1;;:13;:17;;;;;;;;;;:25;;4700:2;4678:21;:25::i;:::-;-1:-1:-1;4717:13:1;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;4717:19:1;;;;;;;;;;4713:83;;-1:-1:-1;;;;;4755:19:1;;:13;:19;;;;;;;;;;:30;;4782:2;4755:26;:30::i;:::-;;4713:83;4842:2;-1:-1:-1;;;;;4811:46:1;4836:4;-1:-1:-1;;;;;4811:46:1;4826:8;-1:-1:-1;;;;;4811:46:1;;4846:2;4850:6;4811:46;;;;;;14612:25:10;;;14668:2;14653:18;;14646:34;14600:2;14585:18;;14567:119;4811:46:1;;;;;;;;4868:68;4899:8;4909:4;4915:2;4919;4923:6;4931:4;4868:30;:68::i;:::-;3861:1082;;;;;;;:::o;586:96:6:-;665:10;586:96;;:::o;8069:129:9:-;8136:4;8159:32;8164:3;8184:5;8159:4;:32::i;8366:135::-;8436:4;8459:35;8467:3;8487:5;8459:7;:35::i;13372:778:1:-;-1:-1:-1;;;;;13616:13:1;;1078:20:5;1116:8;13612:532:1;;13651:79;;-1:-1:-1;;;13651:79:1;;-1:-1:-1;;;;;13651:43:1;;;;;:79;;13695:8;;13705:4;;13711:3;;13716:7;;13725:4;;13651:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13651:79:1;;;;;;;;-1:-1:-1;;13651:79:1;;;;;;;;;;;;:::i;:::-;;;13647:487;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14010:6;14003:14;;-1:-1:-1;;;14003:14:1;;;;;;;;:::i;13647:487::-;;;14057:62;;-1:-1:-1;;;14057:62:1;;9938:2:10;14057:62:1;;;9920:21:10;9977:2;9957:18;;;9950:30;10016:34;9996:18;;;9989:62;-1:-1:-1;;;10067:18:10;;;10060:50;10127:19;;14057:62:1;9910:242:10;13647:487:1;-1:-1:-1;;;;;;13779:64:1;;-1:-1:-1;;;13779:64:1;13775:161;;13867:50;;-1:-1:-1;;;13867:50:1;;;;;;;:::i;9251:135:9:-;9322:7;9356:22;9360:3;9372:5;9356:3;:22::i;8807:112::-;8867:7;8893:19;8901:3;4096:18;;4014:107;14156:193:1;14275:16;;;14289:1;14275:16;;;;;;;;;14222;;14250:22;;14275:16;;;;;;;;;;;;-1:-1:-1;14275:16:1;14250:41;;14312:7;14301:5;14307:1;14301:8;;;;;;-1:-1:-1;;;14301:8:1;;;;;;;;;;;;;;;;;;:18;14337:5;14156:193;-1:-1:-1;;14156:193:1:o;12625:741::-;-1:-1:-1;;;;;12844:13:1;;1078:20:5;1116:8;12840:520:1;;12879:72;;-1:-1:-1;;;12879:72:1;;-1:-1:-1;;;;;12879:38:1;;;;;:72;;12918:8;;12928:4;;12934:2;;12938:6;;12946:4;;12879:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12879:72:1;;;;;;;;-1:-1:-1;;12879:72:1;;;;;;;;;;;;:::i;:::-;;;12875:475;;;;:::i;:::-;-1:-1:-1;;;;;;13000:59:1;;-1:-1:-1;;;13000:59:1;12996:156;;13083:50;;-1:-1:-1;;;13083:50:1;;;;;;;:::i;1632:404:9:-;1695:4;3902:19;;;:12;;;:19;;;;;;1711:319;;-1:-1:-1;1753:23:9;;;;;;;;:11;:23;;;;;;;;;;;;;1933:18;;1911:19;;;:12;;;:19;;;;;;:40;;;;1965:11;;1711:319;-1:-1:-1;2014:5:9;2007:12;;2204:1521;2270:4;2407:19;;;:12;;;:19;;;;;;2441:15;;2437:1282;;2798:21;2822:14;2835:1;2822:10;:14;:::i;:::-;2870:18;;2798:38;;-1:-1:-1;2850:17:9;;2870:22;;2891:1;;2870:22;:::i;:::-;2850:42;;3132:17;3152:3;:11;;3164:9;3152:22;;;;;;-1:-1:-1;;;3152:22:9;;;;;;;;;;;;;;;;;3132:42;;3295:9;3266:3;:11;;3278:13;3266:26;;;;;;-1:-1:-1;;;3266:26:9;;;;;;;;;;;;;;;;;;;;:38;;;;3370:23;;;:12;;;:23;;;;;;:36;;;3528:17;;3370:3;;3528:17;;;-1:-1:-1;;;3528:17:9;;;;;;;;;;;;;;;;;;;;;;;;;;3620:3;:12;;:19;3633:5;3620:19;;;;;;;;;;;3613:26;;;3661:4;3654:11;;;;;;;;2437:1282;3703:5;3696:12;;;;;4453:201;4547:18;;4520:7;;4547:26;-1:-1:-1;4539:73:9;;;;-1:-1:-1;;;4539:73:9;;10359:2:10;4539:73:9;;;10341:21:10;10398:2;10378:18;;;10371:30;10437:34;10417:18;;;10410:62;-1:-1:-1;;;10488:18:10;;;10481:32;10530:19;;4539:73:9;10331:224:10;4539:73:9;4629:3;:11;;4641:5;4629:18;;;;;;-1:-1:-1;;;4629:18:9;;;;;;;;;;;;;;;;;4622:25;;4453:201;;;;:::o;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:2;;177:1;174;167:12;192:755;;299:3;292:4;284:6;280:17;276:27;266:2;;321:5;314;307:20;266:2;361:6;348:20;387:4;410:43;450:2;410:43;:::i;:::-;482:2;476:9;494:31;522:2;514:6;494:31;:::i;:::-;560:18;;;594:15;;;;-1:-1:-1;629:15:10;;;679:1;675:10;;;663:23;;659:32;;656:41;-1:-1:-1;653:2:10;;;714:5;707;700:20;653:2;740:5;754:163;768:2;765:1;762:9;754:163;;;825:17;;813:30;;863:12;;;;895;;;;786:1;779:9;754:163;;;-1:-1:-1;935:6:10;;256:691;-1:-1:-1;;;;;;;256:691:10:o;952:575::-;;1047:3;1040:4;1032:6;1028:17;1024:27;1014:2;;1069:5;1062;1055:20;1014:2;1109:6;1096:20;1135:18;1131:2;1128:26;1125:2;;;1157:18;;:::i;:::-;1206:2;1200:9;1218:67;1273:2;1254:13;;-1:-1:-1;;1250:27:10;1279:4;1246:38;1200:9;1218:67;:::i;:::-;1309:2;1301:6;1294:18;1355:3;1348:4;1343:2;1335:6;1331:15;1327:26;1324:35;1321:2;;;1376:5;1369;1362:20;1321:2;1444;1437:4;1429:6;1425:17;1418:4;1410:6;1406:17;1393:54;1467:15;;;1484:4;1463:26;1456:41;;;;1471:6;1004:523;-1:-1:-1;;1004:523:10:o;1532:196::-;;1644:2;1632:9;1623:7;1619:23;1615:32;1612:2;;;1665:6;1657;1650:22;1612:2;1693:29;1712:9;1693:29;:::i;1733:270::-;;;1862:2;1850:9;1841:7;1837:23;1833:32;1830:2;;;1883:6;1875;1868:22;1830:2;1911:29;1930:9;1911:29;:::i;:::-;1901:39;;1959:38;1993:2;1982:9;1978:18;1959:38;:::i;:::-;1949:48;;1820:183;;;;;:::o;2008:983::-;;;;;;2247:3;2235:9;2226:7;2222:23;2218:33;2215:2;;;2269:6;2261;2254:22;2215:2;2297:29;2316:9;2297:29;:::i;:::-;2287:39;;2345:38;2379:2;2368:9;2364:18;2345:38;:::i;:::-;2335:48;;2434:2;2423:9;2419:18;2406:32;2457:18;2498:2;2490:6;2487:14;2484:2;;;2519:6;2511;2504:22;2484:2;2547:61;2600:7;2591:6;2580:9;2576:22;2547:61;:::i;:::-;2537:71;;2661:2;2650:9;2646:18;2633:32;2617:48;;2690:2;2680:8;2677:16;2674:2;;;2711:6;2703;2696:22;2674:2;2739:63;2794:7;2783:8;2772:9;2768:24;2739:63;:::i;:::-;2729:73;;2855:3;2844:9;2840:19;2827:33;2811:49;;2885:2;2875:8;2872:16;2869:2;;;2906:6;2898;2891:22;2869:2;;2934:51;2977:7;2966:8;2955:9;2951:24;2934:51;:::i;:::-;2924:61;;;2205:786;;;;;;;;:::o;2996:626::-;;;;;;3185:3;3173:9;3164:7;3160:23;3156:33;3153:2;;;3207:6;3199;3192:22;3153:2;3235:29;3254:9;3235:29;:::i;:::-;3225:39;;3283:38;3317:2;3306:9;3302:18;3283:38;:::i;:::-;3273:48;;3368:2;3357:9;3353:18;3340:32;3330:42;;3419:2;3408:9;3404:18;3391:32;3381:42;;3474:3;3463:9;3459:19;3446:33;3502:18;3494:6;3491:30;3488:2;;;3539:6;3531;3524:22;3488:2;3567:49;3608:7;3599:6;3588:9;3584:22;3567:49;:::i;3627:367::-;;;3753:2;3741:9;3732:7;3728:23;3724:32;3721:2;;;3774:6;3766;3759:22;3721:2;3802:29;3821:9;3802:29;:::i;:::-;3792:39;;3881:2;3870:9;3866:18;3853:32;3928:5;3921:13;3914:21;3907:5;3904:32;3894:2;;3955:6;3947;3940:22;3894:2;3983:5;3973:15;;;3711:283;;;;;:::o;3999:264::-;;;4128:2;4116:9;4107:7;4103:23;4099:32;4096:2;;;4149:6;4141;4134:22;4096:2;4177:29;4196:9;4177:29;:::i;:::-;4167:39;4253:2;4238:18;;;;4225:32;;-1:-1:-1;;;4086:177:10:o;4268:1274::-;;;4447:2;4435:9;4426:7;4422:23;4418:32;4415:2;;;4468:6;4460;4453:22;4415:2;4513:9;4500:23;4542:18;4583:2;4575:6;4572:14;4569:2;;;4604:6;4596;4589:22;4569:2;4647:6;4636:9;4632:22;4622:32;;4692:7;4685:4;4681:2;4677:13;4673:27;4663:2;;4719:6;4711;4704:22;4663:2;4760;4747:16;4782:4;4805:43;4845:2;4805:43;:::i;:::-;4877:2;4871:9;4889:31;4917:2;4909:6;4889:31;:::i;:::-;4955:18;;;4989:15;;;;-1:-1:-1;5024:11:10;;;5066:1;5062:10;;;5054:19;;5050:28;;5047:41;-1:-1:-1;5044:2:10;;;5106:6;5098;5091:22;5044:2;5133:6;5124:15;;5148:169;5162:2;5159:1;5156:9;5148:169;;;5219:23;5238:3;5219:23;:::i;:::-;5207:36;;5180:1;5173:9;;;;;5263:12;;;;5295;;5148:169;;;-1:-1:-1;5336:6:10;-1:-1:-1;;5380:18:10;;5367:32;;-1:-1:-1;;5411:16:10;;;5408:2;;;5445:6;5437;5430:22;5408:2;;5473:63;5528:7;5517:8;5506:9;5502:24;5473:63;:::i;:::-;5463:73;;;4405:1137;;;;;:::o;5547:255::-;;5658:2;5646:9;5637:7;5633:23;5629:32;5626:2;;;5679:6;5671;5664:22;5626:2;5723:9;5710:23;5742:30;5766:5;5742:30;:::i;5807:259::-;;5929:2;5917:9;5908:7;5904:23;5900:32;5897:2;;;5950:6;5942;5935:22;5897:2;5987:9;5981:16;6006:30;6030:5;6006:30;:::i;6071:190::-;;6183:2;6171:9;6162:7;6158:23;6154:32;6151:2;;;6204:6;6196;6189:22;6151:2;-1:-1:-1;6232:23:10;;6141:120;-1:-1:-1;6141:120:10:o;6266:437::-;;6357:5;6351:12;6384:6;6379:3;6372:19;6410:4;6439:2;6434:3;6430:12;6423:19;;6476:2;6469:5;6465:14;6497:3;6509:169;6523:6;6520:1;6517:13;6509:169;;;6584:13;;6572:26;;6618:12;;;;6653:15;;;;6545:1;6538:9;6509:169;;;-1:-1:-1;6694:3:10;;6327:376;-1:-1:-1;;;;;6327:376:10:o;6708:475::-;;6787:5;6781:12;6814:6;6809:3;6802:19;6839:3;6851:162;6865:6;6862:1;6859:13;6851:162;;;6927:4;6983:13;;;6979:22;;6973:29;6955:11;;;6951:20;;6944:59;6880:12;6851:162;;;7031:6;7028:1;7025:13;7022:2;;;7097:3;7090:4;7081:6;7076:3;7072:16;7068:27;7061:40;7022:2;-1:-1:-1;7165:2:10;7144:15;-1:-1:-1;;7140:29:10;7131:39;;;;7172:4;7127:50;;6757:426;-1:-1:-1;;6757:426:10:o;7188:826::-;-1:-1:-1;;;;;7585:15:10;;;7567:34;;7637:15;;7632:2;7617:18;;7610:43;7547:3;7684:2;7669:18;;7662:31;;;7188:826;;7716:57;;7753:19;;7745:6;7716:57;:::i;:::-;7821:9;7813:6;7809:22;7804:2;7793:9;7789:18;7782:50;7855:44;7892:6;7884;7855:44;:::i;:::-;7841:58;;7948:9;7940:6;7936:22;7930:3;7919:9;7915:19;7908:51;7976:32;8001:6;7993;7976:32;:::i;:::-;7968:40;7519:495;-1:-1:-1;;;;;;;;7519:495:10:o;8019:560::-;-1:-1:-1;;;;;8316:15:10;;;8298:34;;8368:15;;8363:2;8348:18;;8341:43;8415:2;8400:18;;8393:34;;;8458:2;8443:18;;8436:34;;;8278:3;8501;8486:19;;8479:32;;;8019:560;;8528:45;;8553:19;;8545:6;8528:45;:::i;:::-;8520:53;8250:329;-1:-1:-1;;;;;;;8250:329:10:o;8584:261::-;;8763:2;8752:9;8745:21;8783:56;8835:2;8824:9;8820:18;8812:6;8783:56;:::i;8850:465::-;;9107:2;9096:9;9089:21;9133:56;9185:2;9174:9;9170:18;9162:6;9133:56;:::i;:::-;9237:9;9229:6;9225:22;9220:2;9209:9;9205:18;9198:50;9265:44;9302:6;9294;9265:44;:::i;:::-;9257:52;9079:236;-1:-1:-1;;;;;9079:236:10:o;9512:219::-;;9661:2;9650:9;9643:21;9681:44;9721:2;9710:9;9706:18;9698:6;9681:44;:::i;10560:404::-;10762:2;10744:21;;;10801:2;10781:18;;;10774:30;10840:34;10835:2;10820:18;;10813:62;-1:-1:-1;;;10906:2:10;10891:18;;10884:38;10954:3;10939:19;;10734:230::o;11791:401::-;11993:2;11975:21;;;12032:2;12012:18;;;12005:30;12071:34;12066:2;12051:18;;12044:62;-1:-1:-1;;;12137:2:10;12122:18;;12115:35;12182:3;12167:19;;11965:227::o;12616:406::-;12818:2;12800:21;;;12857:2;12837:18;;;12830:30;12896:34;12891:2;12876:18;;12869:62;-1:-1:-1;;;12962:2:10;12947:18;;12940:40;13012:3;12997:19;;12790:232::o;14691:183::-;;14784:18;14776:6;14773:30;14770:2;;;14806:18;;:::i;:::-;-1:-1:-1;14851:1:10;14847:14;14863:4;14843:25;;14760:114::o;14879:128::-;;14950:1;14946:6;14943:1;14940:13;14937:2;;;14956:18;;:::i;:::-;-1:-1:-1;14992:9:10;;14927:80::o;15012:125::-;;15080:1;15077;15074:8;15071:2;;;15085:18;;:::i;:::-;-1:-1:-1;15122:9:10;;15061:76::o;15142:380::-;15221:1;15217:12;;;;15264;;;15285:2;;15339:4;15331:6;15327:17;15317:27;;15285:2;15392;15384:6;15381:14;15361:18;15358:38;15355:2;;;15438:10;15433:3;15429:20;15426:1;15419:31;15473:4;15470:1;15463:15;15501:4;15498:1;15491:15;15355:2;;15197:325;;;:::o;15527:249::-;15637:2;15618:13;;-1:-1:-1;;15614:27:10;15602:40;;15672:18;15657:34;;15693:22;;;15654:62;15651:2;;;15719:18;;:::i;:::-;15755:2;15748:22;-1:-1:-1;;15574:202:10:o;15781:135::-;;-1:-1:-1;;15841:17:10;;15838:2;;;15861:18;;:::i;:::-;-1:-1:-1;15908:1:10;15897:13;;15828:88::o;15921:127::-;15982:10;15977:3;15973:20;15970:1;15963:31;16013:4;16010:1;16003:15;16037:4;16034:1;16027:15;16053:127;16114:10;16109:3;16105:20;16102:1;16095:31;16145:4;16142:1;16135:15;16169:4;16166:1;16159:15;16185:185;;16262:1;16244:16;16241:23;16238:2;;;16312:1;16307:3;16302;16287:27;16343:10;16338:3;16334:20;16228:142;:::o;16375:671::-;;16456:4;16438:16;16435:26;16432:2;;;16464:5;;16432:2;16498;16492:9;-1:-1:-1;;16563:16:10;16559:25;;16556:1;16492:9;16535:50;16614:4;16608:11;16638:16;16673:18;16744:2;16737:4;16729:6;16725:17;16722:25;16717:2;16709:6;16706:14;16703:45;16700:2;;;16751:5;;;;;;;16700:2;16788:6;16782:4;16778:17;16767:28;;16824:3;16818:10;16851:2;16843:6;16840:14;16837:2;;;16857:5;;;;;;;;16837:2;16941;16922:16;16916:4;16912:27;16908:36;16901:4;16892:6;16887:3;16883:16;16879:27;16876:69;16873:2;;;16948:5;;;;;;;;16873:2;16964:57;17015:4;17006:6;16998;16994:19;16990:30;16984:4;16964:57;:::i;:::-;-1:-1:-1;17037:3:10;;-1:-1:-1;;;;;16422:624:10;:::o;17051:131::-;-1:-1:-1;;;;;;17125:32:10;;17115:43;;17105:2;;17172:1;17169;17162:12;17105:2;17095:87;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "constructor": {
        "details": "See {_setURI}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "version": 1
  },
  "offset": [
    544,
    14634
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42DA6F9C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x42DA6F9C EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B5 JUMPI PUSH2 0x9D JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x120 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E9 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xFE PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1421 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST PUSH2 0x11E PUSH2 0x119 CALLDATASIZE PUSH1 0x4 PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0x34C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x69F JUMP JUMPDEST PUSH2 0xB5 PUSH2 0x141 CALLDATASIZE PUSH1 0x4 PUSH2 0x1166 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST PUSH2 0x11E PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH2 0xDB PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x11E PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x95F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x295 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x2B0 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2C7 SWAP1 PUSH2 0x16DF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F3 SWAP1 PUSH2 0x16DF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x340 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x315 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x340 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x323 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x230 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x3DC PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x402 JUMPI POP PUSH2 0x402 DUP6 PUSH2 0x187 PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x469 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x230 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x473 PUSH2 0xBB1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x520 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x52A DUP3 DUP3 PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0x16B0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x5D1 SWAP1 DUP5 PUSH2 0xBB6 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x61D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x61B SWAP1 DUP5 PUSH2 0xBC2 JUMP JUMPDEST POP JUMPDEST POP POP POP DUP1 PUSH2 0x62A SWAP1 PUSH2 0x1747 JUMP JUMPDEST SWAP1 POP PUSH2 0x478 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x681 SWAP3 SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x697 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xBCE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6C1 SWAP1 DUP4 PUSH2 0xD39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x2B0 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x230 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x778 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7A1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x843 JUMPI PUSH2 0x808 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7FB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1C8 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x828 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x83C DUP2 PUSH2 0x1747 JUMP JUMPDEST SWAP1 POP PUSH2 0x7A7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x85D PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x8D3 PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x917 PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x953 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x985 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x98D PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x9B3 JUMPI POP PUSH2 0x9B3 DUP6 PUSH2 0x187 PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x230 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1B PUSH2 0xBB1 JUMP JUMPDEST SWAP1 POP PUSH2 0xA3C DUP2 DUP8 DUP8 PUSH2 0xA2C DUP9 PUSH2 0xD4F JUMP JUMPDEST PUSH2 0xA35 DUP9 PUSH2 0xD4F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xA7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0xA89 DUP5 DUP3 PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP9 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xAC7 SWAP1 DUP5 SWAP1 PUSH2 0x16B0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xAEE SWAP1 DUP7 PUSH2 0xBB6 JUMP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xB3A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB38 SWAP1 DUP7 PUSH2 0xBC2 JUMP JUMPDEST POP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xB92 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xBA8 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xDA8 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C1 DUP4 DUP4 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C1 DUP4 DUP4 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xC12 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC5C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC59 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD09 JUMPI PUSH2 0xC68 PUSH2 0x178E JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xCA2 JUMPI POP PUSH2 0xC7D PUSH2 0x17A5 JUMP JUMPDEST DUP1 PUSH2 0xC88 JUMPI POP PUSH2 0xCA4 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x230 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C1 DUP4 DUP4 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD97 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xDEC SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x151C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE36 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE33 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE42 JUMPI PUSH2 0xC68 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xEB9 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x25E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x25E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xFCE JUMPI PUSH1 0x0 PUSH2 0xEE5 PUSH1 0x1 DUP4 PUSH2 0x16C8 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xEF9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF20 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF51 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0xF92 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x25E JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x25E JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x1036 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x230 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1059 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1093 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x10A0 DUP3 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10AD DUP3 DUP3 PUSH2 0x171A JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x10CC JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x10EA JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10CE JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1107 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1121 JUMPI PUSH2 0x1121 PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1138 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x171A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x114C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1177 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6C1 DUP3 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1192 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x119B DUP4 PUSH2 0x106C JUMP JUMPDEST SWAP2 POP PUSH2 0x11A9 PUSH1 0x20 DUP5 ADD PUSH2 0x106C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11C9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x11D2 DUP7 PUSH2 0x106C JUMP JUMPDEST SWAP5 POP PUSH2 0x11E0 PUSH1 0x20 DUP8 ADD PUSH2 0x106C JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11FC JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1208 DUP10 DUP4 DUP11 ADD PUSH2 0x1083 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x121D JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1229 DUP10 DUP4 DUP11 ADD PUSH2 0x1083 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x123E JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x124B DUP9 DUP3 DUP10 ADD PUSH2 0x10F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x126F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1278 DUP7 PUSH2 0x106C JUMP JUMPDEST SWAP5 POP PUSH2 0x1286 PUSH1 0x20 DUP8 ADD PUSH2 0x106C JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12AF JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x124B DUP9 DUP3 DUP10 ADD PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12CD JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x12D6 DUP4 PUSH2 0x106C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12EA JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1307 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1310 DUP4 PUSH2 0x106C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1330 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1347 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x135A JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1367 DUP3 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1374 DUP3 DUP3 PUSH2 0x171A JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x1393 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x13BC JUMPI PUSH2 0x13A8 DUP2 PUSH2 0x106C JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1397 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x13D2 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x13DF DUP6 DUP3 DUP7 ADD PUSH2 0x1083 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6C1 DUP2 PUSH2 0x1837 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1416 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6C1 DUP2 PUSH2 0x1837 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1432 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1468 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x144C JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1498 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x147C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x14A9 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x14EA SWAP1 DUP4 ADD DUP7 PUSH2 0x1439 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x14FC DUP2 DUP7 PUSH2 0x1439 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1510 DUP2 DUP6 PUSH2 0x1473 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1556 SWAP1 DUP4 ADD DUP5 PUSH2 0x1473 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x6C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x1587 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1439 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1599 DUP2 DUP6 PUSH2 0x1439 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x6C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1473 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16A6 JUMPI PUSH2 0x16A6 PUSH2 0x1778 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x16C3 JUMPI PUSH2 0x16C3 PUSH2 0x1762 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x16DA JUMPI PUSH2 0x16DA PUSH2 0x1762 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x16F3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1714 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1740 JUMPI PUSH2 0x1740 PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x175B JUMPI PUSH2 0x175B PUSH2 0x1762 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0xBB3 JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x17B5 JUMPI PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x17E7 JUMPI POP POP POP POP POP PUSH2 0xBB3 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1801 JUMPI POP POP POP POP POP POP PUSH2 0xBB3 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x181D JUMPI POP POP POP POP POP POP PUSH2 0xBB3 JUMP JUMPDEST PUSH2 0x182C PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x171A JUMP JUMPDEST POP SWAP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x184D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY SWAP1 CREATE MOD 0x4F 0xF7 0xC2 COINBASE PUSH8 0x25B73584FEB08C7B PUSH25 0xB06D48F97A65FD77990B5B0CDBB664736F6C63430008030033 ",
  "pcMap": {
    "0": {
      "offset": [
        544,
        14634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D"
    },
    "25": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x42DA6F9C"
    },
    "38": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x42DA6F9C"
    },
    "49": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x133"
    },
    "53": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E1273F4"
    },
    "60": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "64": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA22CB465"
    },
    "71": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x166"
    },
    "75": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE985E9C5"
    },
    "82": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x179"
    },
    "86": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF242432A"
    },
    "93": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B5"
    },
    "97": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D"
    },
    "101": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMP",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFDD58E"
    },
    "108": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "EQ",
      "path": "1"
    },
    "109": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA2"
    },
    "112": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1FFC9A7"
    },
    "119": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "EQ",
      "path": "1"
    },
    "120": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC8"
    },
    "123": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "124": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE89341C"
    },
    "130": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "EQ",
      "path": "1"
    },
    "131": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEB"
    },
    "134": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "135": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2EB2C2D6"
    },
    "141": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "EQ",
      "path": "1"
    },
    "142": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10B"
    },
    "145": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "146": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2F745C59"
    },
    "152": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "EQ",
      "path": "1"
    },
    "153": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x120"
    },
    "156": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "157": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "158": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "161": {
      "first_revert": true,
      "fn": null,
      "offset": [
        544,
        14634
      ],
      "op": "REVERT",
      "path": "1"
    },
    "162": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "163": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB5"
    },
    "166": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0"
    },
    "169": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "170": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "172": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12F5"
    },
    "175": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMP",
      "path": "1"
    },
    "176": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "177": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C8"
    },
    "180": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMP",
      "path": "1"
    },
    "181": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "182": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "184": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "185": {
      "op": "SWAP1"
    },
    "186": {
      "op": "DUP2"
    },
    "187": {
      "op": "MSTORE"
    },
    "188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "190": {
      "op": "ADD"
    },
    "191": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "192": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "194": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "195": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "DUP1",
      "path": "1"
    },
    "196": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "197": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "SUB",
      "path": "1"
    },
    "198": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "199": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "RETURN",
      "path": "1"
    },
    "200": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "201": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDB"
    },
    "204": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD6"
    },
    "207": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "208": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "210": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13E9"
    },
    "213": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMP",
      "path": "1"
    },
    "214": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "215": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x264"
    },
    "218": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMP",
      "path": "1"
    },
    "219": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "220": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "222": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "223": {
      "op": "SWAP1"
    },
    "224": {
      "op": "ISZERO"
    },
    "225": {
      "op": "ISZERO"
    },
    "226": {
      "op": "DUP2"
    },
    "227": {
      "op": "MSTORE"
    },
    "228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "230": {
      "op": "ADD"
    },
    "231": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBF"
    },
    "234": {
      "op": "JUMP"
    },
    "235": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "236": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFE"
    },
    "239": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF9"
    },
    "242": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "243": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "245": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1421"
    },
    "248": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMP",
      "path": "1"
    },
    "249": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "250": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B8"
    },
    "253": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMP",
      "path": "1"
    },
    "254": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "255": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "257": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "258": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBF"
    },
    "261": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "262": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "263": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A2"
    },
    "266": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMP",
      "path": "1"
    },
    "267": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "268": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11E"
    },
    "271": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x119"
    },
    "274": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "275": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "277": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11B2"
    },
    "280": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMP",
      "path": "1"
    },
    "281": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "282": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34C"
    },
    "285": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMP",
      "path": "1"
    },
    "286": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "287": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "STOP",
      "path": "1"
    },
    "288": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "289": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB5"
    },
    "292": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12E"
    },
    "295": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "296": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "298": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12F5"
    },
    "301": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        14355,
        14498
      ],
      "op": "JUMP",
      "path": "1"
    },
    "302": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "303": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x69F"
    },
    "306": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        14355,
        14498
      ],
      "op": "JUMP",
      "path": "1"
    },
    "307": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "308": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB5"
    },
    "311": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x141"
    },
    "314": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "315": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "317": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1166"
    },
    "320": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "jump": "i",
      "offset": [
        14504,
        14632
      ],
      "op": "JUMP",
      "path": "1"
    },
    "321": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "322": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C8"
    },
    "325": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "jump": "i",
      "offset": [
        14504,
        14632
      ],
      "op": "JUMP",
      "path": "1"
    },
    "326": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "327": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x159"
    },
    "330": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x154"
    },
    "333": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "334": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "336": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x131E"
    },
    "339": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMP",
      "path": "1"
    },
    "340": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "341": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6E9"
    },
    "344": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMP",
      "path": "1"
    },
    "345": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "346": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "348": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "349": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBF"
    },
    "352": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "353": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "354": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1561"
    },
    "357": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMP",
      "path": "1"
    },
    "358": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "359": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11E"
    },
    "362": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x174"
    },
    "365": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "366": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "368": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12BB"
    },
    "371": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3255,
        3561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "372": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "373": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x84B"
    },
    "376": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3255,
        3561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "377": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "378": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDB"
    },
    "381": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x187"
    },
    "384": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "385": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "387": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1180"
    },
    "390": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3628,
        3794
      ],
      "op": "JUMP",
      "path": "1"
    },
    "391": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "398": {
      "op": "SHL"
    },
    "399": {
      "op": "SUB"
    },
    "400": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 0
    },
    "401": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "DUP3",
      "path": "1"
    },
    "402": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "AND",
      "path": "1"
    },
    "403": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3727,
        3731
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "405": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "406": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "DUP2",
      "path": "1"
    },
    "407": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "408": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3768
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "410": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "412": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "413": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "DUP2",
      "path": "1"
    },
    "414": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "415": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "417": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "DUP1",
      "path": "1"
    },
    "418": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "DUP4",
      "path": "1"
    },
    "419": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "420": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "421": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "422": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "423": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "AND",
      "path": "1"
    },
    "424": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "DUP3",
      "path": "1"
    },
    "425": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "426": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "427": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "428": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "429": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "430": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "431": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "432": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "434": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "AND",
      "path": "1"
    },
    "435": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "436": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "JUMP",
      "path": "1"
    },
    "437": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "438": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11E"
    },
    "441": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C3"
    },
    "444": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "445": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "447": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1258"
    },
    "450": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3861,
        4943
      ],
      "op": "JUMP",
      "path": "1"
    },
    "451": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "452": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x95F"
    },
    "455": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3861,
        4943
      ],
      "op": "JUMP",
      "path": "1"
    },
    "456": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "457": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2358,
        2365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "465": {
      "op": "SHL"
    },
    "466": {
      "op": "SUB"
    },
    "467": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2385,
        2406
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 1
    },
    "468": {
      "branch": 62,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2385,
        2406
      ],
      "op": "AND",
      "path": "1"
    },
    "469": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x239"
    },
    "472": {
      "branch": 62,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "473": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "475": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "476": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "480": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "482": {
      "op": "SHL"
    },
    "483": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "DUP2",
      "path": "1"
    },
    "484": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "487": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "489": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "DUP3",
      "path": "1"
    },
    "490": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "ADD",
      "path": "1"
    },
    "491": {
      "op": "MSTORE"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "496": {
      "op": "DUP3"
    },
    "497": {
      "op": "ADD"
    },
    "498": {
      "op": "MSTORE"
    },
    "499": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "534": {
      "op": "DUP3"
    },
    "535": {
      "op": "ADD"
    },
    "536": {
      "op": "MSTORE"
    },
    "537": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "549": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "551": {
      "op": "SHL"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "554": {
      "op": "DUP3"
    },
    "555": {
      "op": "ADD"
    },
    "556": {
      "op": "MSTORE"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "559": {
      "op": "ADD"
    },
    "560": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "561": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "563": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "564": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "DUP1",
      "path": "1"
    },
    "565": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "566": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "SUB",
      "path": "1"
    },
    "567": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "568": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "569": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "570": {
      "op": "POP"
    },
    "571": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x0"
    },
    "573": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "DUP2",
      "path": "1"
    },
    "574": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "DUP2",
      "path": "1"
    },
    "575": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "576": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2480
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "578": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "580": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "581": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "DUP2",
      "path": "1"
    },
    "582": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "583": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "585": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "DUP1",
      "path": "1"
    },
    "586": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "DUP4",
      "path": "1"
    },
    "587": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "594": {
      "op": "SHL"
    },
    "595": {
      "op": "SUB"
    },
    "596": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "DUP7",
      "path": "1"
    },
    "597": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "AND",
      "path": "1"
    },
    "598": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "DUP5",
      "path": "1"
    },
    "599": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "600": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "601": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "602": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "603": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "604": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "605": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "606": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "607": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "608": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "609": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "POP",
      "path": "1"
    },
    "610": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "POP",
      "path": "1"
    },
    "611": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMP",
      "path": "1"
    },
    "612": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "613": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1437,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "619": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "621": {
      "op": "SHL"
    },
    "622": {
      "op": "SUB"
    },
    "623": {
      "op": "NOT"
    },
    "624": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1501
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 3
    },
    "625": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1501
      ],
      "op": "AND",
      "path": "1"
    },
    "626": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "631": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "633": {
      "op": "SHL"
    },
    "634": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1501
      ],
      "op": "EQ",
      "path": "1"
    },
    "635": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1501
      ],
      "op": "DUP1",
      "path": "1"
    },
    "636": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1569
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x295"
    },
    "639": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1569
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "640": {
      "op": "POP"
    },
    "641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "645": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "647": {
      "op": "SHL"
    },
    "648": {
      "op": "SUB"
    },
    "649": {
      "op": "NOT"
    },
    "650": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1517,
        1569
      ],
      "op": "DUP3",
      "path": "1"
    },
    "651": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1517,
        1569
      ],
      "op": "AND",
      "path": "1"
    },
    "652": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "657": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "659": {
      "op": "SHL"
    },
    "660": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1517,
        1569
      ],
      "op": "EQ",
      "path": "1"
    },
    "661": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1569
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "662": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1621
      ],
      "op": "DUP1",
      "path": "1"
    },
    "663": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1621
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B0"
    },
    "666": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1621
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "667": {
      "op": "POP"
    },
    "668": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "673": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "675": {
      "op": "SHL"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "680": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "682": {
      "op": "SHL"
    },
    "683": {
      "op": "SUB"
    },
    "684": {
      "op": "NOT"
    },
    "685": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 4
    },
    "686": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "7"
    },
    "687": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "7"
    },
    "688": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1585,
        1621
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "689": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1453,
        1621
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "690": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1453,
        1621
      ],
      "op": "POP",
      "path": "1"
    },
    "691": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "692": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "693": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "694": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "POP",
      "path": "1"
    },
    "695": {
      "fn": "ERC1155.supportsInterface",
      "jump": "o",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMP",
      "path": "1"
    },
    "696": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "697": {
      "fn": "ERC1155.uri",
      "offset": [
        2087,
        2100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "699": {
      "fn": "ERC1155.uri",
      "offset": [
        2119,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x3"
    },
    "701": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "702": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "703": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C7"
    },
    "706": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "707": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16DF"
    },
    "710": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMP",
      "path": "1"
    },
    "711": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "712": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "713": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "715": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "716": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "718": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "719": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "720": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DIV",
      "path": "1"
    },
    "721": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MUL",
      "path": "1"
    },
    "722": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "724": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "725": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "727": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "728": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "729": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP2",
      "path": "1"
    },
    "730": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "731": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "733": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "734": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "735": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "736": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "737": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "738": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP2",
      "path": "1"
    },
    "739": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP2",
      "path": "1"
    },
    "740": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "741": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "743": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "744": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP3",
      "path": "1"
    },
    "745": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "746": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "747": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F3"
    },
    "750": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "751": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16DF"
    },
    "754": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMP",
      "path": "1"
    },
    "755": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "756": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "757": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "758": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x340"
    },
    "761": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "762": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "763": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "765": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "LT",
      "path": "1"
    },
    "766": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x315"
    },
    "769": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "770": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "773": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "774": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP4",
      "path": "1"
    },
    "775": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "776": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DIV",
      "path": "1"
    },
    "777": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MUL",
      "path": "1"
    },
    "778": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP4",
      "path": "1"
    },
    "779": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "780": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "781": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "783": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "784": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "785": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x340"
    },
    "788": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMP",
      "path": "1"
    },
    "789": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "790": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP3",
      "path": "1"
    },
    "791": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "792": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "793": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "794": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "796": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "797": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "799": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "801": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "802": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "803": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "804": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP2",
      "path": "1"
    },
    "805": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "806": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP2",
      "path": "1"
    },
    "807": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "808": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "809": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "811": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "812": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "813": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "815": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "816": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "817": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP4",
      "path": "1"
    },
    "818": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "GT",
      "path": "1"
    },
    "819": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x323"
    },
    "822": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "823": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP3",
      "path": "1"
    },
    "824": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "825": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SUB",
      "path": "1"
    },
    "826": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "828": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "AND",
      "path": "1"
    },
    "829": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP3",
      "path": "1"
    },
    "830": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "831": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "832": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "833": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "POP",
      "path": "1"
    },
    "834": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "POP",
      "path": "1"
    },
    "835": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "POP",
      "path": "1"
    },
    "836": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "POP",
      "path": "1"
    },
    "837": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "POP",
      "path": "1"
    },
    "838": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "839": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "POP",
      "path": "1"
    },
    "840": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "841": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "842": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "POP",
      "path": "1"
    },
    "843": {
      "fn": "ERC1155.uri",
      "jump": "o",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMP",
      "path": "1"
    },
    "844": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "845": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5269,
        5276
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 6
    },
    "846": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5269,
        5283
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "847": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5255,
        5258
      ],
      "op": "DUP4",
      "path": "1"
    },
    "848": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5255,
        5265
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "849": {
      "branch": 63,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5255,
        5283
      ],
      "op": "EQ",
      "path": "1"
    },
    "850": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3AE"
    },
    "853": {
      "branch": 63,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "854": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "856": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "857": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "861": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "863": {
      "op": "SHL"
    },
    "864": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "DUP2",
      "path": "1"
    },
    "865": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "868": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "870": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "DUP3",
      "path": "1"
    },
    "871": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "ADD",
      "path": "1"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "877": {
      "op": "DUP3"
    },
    "878": {
      "op": "ADD"
    },
    "879": {
      "op": "MSTORE"
    },
    "880": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "915": {
      "op": "DUP3"
    },
    "916": {
      "op": "ADD"
    },
    "917": {
      "op": "MSTORE"
    },
    "918": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "932": {
      "op": "DUP3"
    },
    "933": {
      "op": "ADD"
    },
    "934": {
      "op": "MSTORE"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "937": {
      "op": "ADD"
    },
    "938": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230"
    },
    "941": {
      "op": "JUMP"
    },
    "942": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "947": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "949": {
      "op": "SHL"
    },
    "950": {
      "op": "SUB"
    },
    "951": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5346,
        5362
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 7
    },
    "952": {
      "branch": 64,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5346,
        5362
      ],
      "op": "AND",
      "path": "1"
    },
    "953": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D4"
    },
    "956": {
      "branch": 64,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "957": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "959": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "960": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "964": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "966": {
      "op": "SHL"
    },
    "967": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "DUP2",
      "path": "1"
    },
    "968": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "969": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "971": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "ADD",
      "path": "1"
    },
    "972": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230"
    },
    "975": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "976": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15FD"
    },
    "979": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5338,
        5404
      ],
      "op": "JUMP",
      "path": "1"
    },
    "980": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "981": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5443,
        5455
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 8,
      "value": "0x3DC"
    },
    "984": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5443,
        5453
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB1"
    },
    "987": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5443,
        5455
      ],
      "op": "JUMP",
      "path": "1"
    },
    "988": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5443,
        5455
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "op": "SUB"
    },
    "997": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5435,
        5455
      ],
      "op": "AND",
      "path": "1"
    },
    "998": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5435,
        5439
      ],
      "op": "DUP6",
      "path": "1"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1005": {
      "op": "SHL"
    },
    "1006": {
      "op": "SUB"
    },
    "1007": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5435,
        5455
      ],
      "op": "AND",
      "path": "1"
    },
    "1008": {
      "branch": 65,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5435,
        5455
      ],
      "op": "EQ",
      "path": "1"
    },
    "1009": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5435,
        5495
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1010": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5435,
        5495
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x402"
    },
    "1013": {
      "branch": 65,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5435,
        5495
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1014": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5435,
        5495
      ],
      "op": "POP",
      "path": "1"
    },
    "1015": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5459,
        5495
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x402"
    },
    "1018": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5476,
        5480
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1019": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5482,
        5494
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x187"
    },
    "1022": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5482,
        5492
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB1"
    },
    "1025": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5482,
        5494
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1026": {
      "branch": 66,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5459,
        5495
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1027": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x469"
    },
    "1030": {
      "branch": 66,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1031": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1033": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1034": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1040": {
      "op": "SHL"
    },
    "1041": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1042": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1045": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1047": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1048": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "ADD",
      "path": "1"
    },
    "1049": {
      "op": "MSTORE"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1054": {
      "op": "DUP3"
    },
    "1055": {
      "op": "ADD"
    },
    "1056": {
      "op": "MSTORE"
    },
    "1057": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1092": {
      "op": "DUP3"
    },
    "1093": {
      "op": "ADD"
    },
    "1094": {
      "op": "MSTORE"
    },
    "1095": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1116": {
      "op": "SHL"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1119": {
      "op": "DUP3"
    },
    "1120": {
      "op": "ADD"
    },
    "1121": {
      "op": "MSTORE"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1124": {
      "op": "ADD"
    },
    "1125": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230"
    },
    "1128": {
      "op": "JUMP"
    },
    "1129": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1130": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5582,
        5598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1132": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5601,
        5613
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x473"
    },
    "1135": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5601,
        5611
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB1"
    },
    "1138": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5601,
        5613
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1139": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5601,
        5613
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1140": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5582,
        5613
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1141": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5582,
        5613
      ],
      "op": "POP",
      "path": "1"
    },
    "1142": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5700,
        5709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1144": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1145": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5719,
        5722
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1146": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5719,
        5729
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1147": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5715,
        5716
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1148": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5715,
        5729
      ],
      "op": "LT",
      "path": "1"
    },
    "1149": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1150": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x631"
    },
    "1153": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1154": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5750,
        5760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1156": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5766
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1157": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5767,
        5768
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1158": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1159": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1160": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1161": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "LT",
      "path": "1"
    },
    "1162": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A3"
    },
    "1165": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1166": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1173": {
      "op": "SHL"
    },
    "1174": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1176": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1177": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "1179": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1181": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1182": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1184": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1186": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1187": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1188": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1190": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "MUL",
      "path": "1"
    },
    "1191": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1193": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "ADD",
      "path": "1"
    },
    "1194": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "ADD",
      "path": "1"
    },
    "1195": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1196": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5750,
        5769
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1197": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5750,
        5769
      ],
      "op": "POP",
      "path": "1"
    },
    "1198": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5783,
        5797
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1200": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5807
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1201": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5808,
        5809
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1202": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1203": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1204": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1205": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "LT",
      "path": "1"
    },
    "1206": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CF"
    },
    "1209": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1210": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1217": {
      "op": "SHL"
    },
    "1218": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1220": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1221": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "1223": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1225": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1226": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1228": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1230": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1231": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1232": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1234": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1235": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1236": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "MUL",
      "path": "1"
    },
    "1237": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1238": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1239": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1240": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "ADD",
      "path": "1"
    },
    "1241": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1242": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "ADD",
      "path": "1"
    },
    "1243": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1244": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5825,
        5844
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1246": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1247": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1248": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1249": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1251": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1252": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1253": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1255": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1256": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1257": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "op": "SUB"
    },
    "1266": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "DUP15",
      "path": "1"
    },
    "1267": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "AND",
      "path": "1"
    },
    "1268": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1269": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1270": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1271": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1272": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1273": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1274": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1275": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1276": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1277": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1278": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1279": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1280": {
      "op": "POP"
    },
    "1281": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5888,
        5909
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 9
    },
    "1282": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5888,
        5909
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1283": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5888,
        5909
      ],
      "op": "LT",
      "path": "1"
    },
    "1284": {
      "branch": 67,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5888,
        5909
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1285": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x520"
    },
    "1288": {
      "branch": 67,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1289": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1291": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1292": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1298": {
      "op": "SHL"
    },
    "1299": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1300": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1301": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1303": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "ADD",
      "path": "1"
    },
    "1304": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230"
    },
    "1307": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1308": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1642"
    },
    "1311": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5880,
        5956
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1312": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1313": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5992,
        6012
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 10,
      "value": "0x52A"
    },
    "1316": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6006,
        6012
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1317": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5992,
        6003
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1318": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5992,
        6012
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16C8"
    },
    "1321": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5992,
        6012
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1322": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5992,
        6012
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1323": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5979
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1325": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1327": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5980,
        5982
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1328": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1329": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1330": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1332": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "ADD",
      "path": "1"
    },
    "1333": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1334": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1335": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1336": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1338": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "ADD",
      "path": "1"
    },
    "1339": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1341": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1342": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1344": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5984,
        5988
      ],
      "op": "DUP13",
      "path": "1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1351": {
      "op": "SHL"
    },
    "1352": {
      "op": "SUB"
    },
    "1353": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "AND",
      "path": "1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1360": {
      "op": "SHL"
    },
    "1361": {
      "op": "SUB"
    },
    "1362": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "AND",
      "path": "1"
    },
    "1363": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1364": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1365": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1367": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "ADD",
      "path": "1"
    },
    "1368": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1369": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1370": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1371": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1373": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "ADD",
      "path": "1"
    },
    "1374": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1376": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1377": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        6012
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1378": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        6012
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1379": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        6012
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1380": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        6012
      ],
      "op": "POP",
      "path": "1"
    },
    "1381": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6047,
        6053
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 11
    },
    "1382": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6035
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1384": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1386": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6036,
        6038
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1387": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1388": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1389": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1391": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "ADD",
      "path": "1"
    },
    "1392": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1393": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1394": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1395": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1397": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "ADD",
      "path": "1"
    },
    "1398": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1400": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1401": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1403": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6040,
        6042
      ],
      "op": "DUP12",
      "path": "1"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1410": {
      "op": "SHL"
    },
    "1411": {
      "op": "SUB"
    },
    "1412": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "AND",
      "path": "1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "op": "SUB"
    },
    "1421": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "AND",
      "path": "1"
    },
    "1422": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1423": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1424": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1426": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "ADD",
      "path": "1"
    },
    "1427": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1428": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1429": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1430": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1432": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "ADD",
      "path": "1"
    },
    "1433": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1435": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1436": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1438": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1439": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1440": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1441": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5AA"
    },
    "1444": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1445": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1446": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16B0"
    },
    "1449": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6026,
        6053
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1450": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1451": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1452": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1453": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "op": "POP"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1462": {
      "op": "SHL"
    },
    "1463": {
      "op": "SUB"
    },
    "1464": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "DUP10",
      "path": "1",
      "statement": 12
    },
    "1465": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "AND",
      "path": "1"
    },
    "1466": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1468": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1469": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1470": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1471": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1473": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1474": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1475": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1476": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1478": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1479": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1480": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6092
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D1"
    },
    "1483": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6092
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1484": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6089,
        6091
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1485": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6088
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB6"
    },
    "1488": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6067,
        6092
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1489": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6092
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1490": {
      "op": "POP"
    },
    "1491": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1493": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1494": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1495": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1496": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6120
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1498": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1500": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1501": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1502": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1503": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1505": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1506": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1507": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1514": {
      "op": "SHL"
    },
    "1515": {
      "op": "SUB"
    },
    "1516": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "DUP15",
      "path": "1"
    },
    "1517": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "AND",
      "path": "1"
    },
    "1518": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1519": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1520": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1521": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1522": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1523": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1524": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1525": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1526": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6106,
        6200
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x61D"
    },
    "1529": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6106,
        6200
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1536": {
      "op": "SHL"
    },
    "1537": {
      "op": "SUB"
    },
    "1538": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "DUP11",
      "path": "1",
      "statement": 13
    },
    "1539": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "AND",
      "path": "1"
    },
    "1540": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1542": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1543": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1544": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1545": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1547": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1548": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1549": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1550": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1552": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1553": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1554": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6185
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x61B"
    },
    "1557": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6185
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1558": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6182,
        6184
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1559": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6181
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBC2"
    },
    "1562": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6155,
        6185
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1563": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6185
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1564": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6185
      ],
      "op": "POP",
      "path": "1"
    },
    "1565": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6106,
        6200
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1566": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1567": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1568": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1569": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5731,
        5734
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 14
    },
    "1570": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5731,
        5734
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x62A"
    },
    "1573": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5731,
        5734
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1574": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5731,
        5734
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1747"
    },
    "1577": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5731,
        5734
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1578": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5731,
        5734
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1579": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5731,
        5734
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1580": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5731,
        5734
      ],
      "op": "POP",
      "path": "1"
    },
    "1581": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x478"
    },
    "1584": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1585": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1586": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1587": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6255,
        6257
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 15
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1594": {
      "op": "SHL"
    },
    "1595": {
      "op": "SUB"
    },
    "1596": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "AND",
      "path": "1"
    },
    "1597": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6249,
        6253
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1604": {
      "op": "SHL"
    },
    "1605": {
      "op": "SUB"
    },
    "1606": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "AND",
      "path": "1"
    },
    "1607": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6239,
        6247
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1614": {
      "op": "SHL"
    },
    "1615": {
      "op": "SUB"
    },
    "1616": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "AND",
      "path": "1"
    },
    "1617": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "1650": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6259,
        6262
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1651": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6264,
        6271
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1652": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1654": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1655": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x681"
    },
    "1658": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1659": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1660": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1661": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1574"
    },
    "1664": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6225,
        6272
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1665": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1666": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1668": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1669": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1670": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1671": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "SUB",
      "path": "1"
    },
    "1672": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1673": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "LOG4",
      "path": "1"
    },
    "1674": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6283,
        6358
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 16,
      "value": "0x697"
    },
    "1677": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6327
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1678": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6329,
        6333
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1679": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6335,
        6337
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1680": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6339,
        6342
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1681": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6351
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1682": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6353,
        6357
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1683": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6283,
        6318
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBCE"
    },
    "1686": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6283,
        6358
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1687": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6283,
        6358
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1688": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "1689": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "1690": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "1691": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "1692": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "1693": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "1694": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1695": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1702": {
      "op": "SHL"
    },
    "1703": {
      "op": "SUB"
    },
    "1704": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 17
    },
    "1705": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "AND",
      "path": "1"
    },
    "1706": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14435,
        14442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1708": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1709": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1710": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1711": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1713": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1714": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1715": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1716": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1718": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1719": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1720": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14491
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C1"
    },
    "1723": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14491
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1724": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14485,
        14490
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1725": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14484
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD39"
    },
    "1728": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        14461,
        14491
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1729": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14491
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1730": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14454,
        14491
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1731": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1732": {
      "op": "POP"
    },
    "1733": {
      "op": "POP"
    },
    "1734": {
      "op": "POP"
    },
    "1735": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        14355,
        14498
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1736": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1743": {
      "op": "SHL"
    },
    "1744": {
      "op": "SUB"
    },
    "1745": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 18
    },
    "1746": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "AND",
      "path": "1"
    },
    "1747": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14570,
        14577
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1749": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1750": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1751": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1752": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1754": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1755": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1756": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1757": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1759": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1760": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1761": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14625
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B0"
    },
    "1764": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14625
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1765": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14623
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD45"
    },
    "1768": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "jump": "i",
      "offset": [
        14596,
        14625
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1769": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1770": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2830,
        2846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1772": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2889,
        2892
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 19
    },
    "1773": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2889,
        2899
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1774": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2870,
        2878
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1775": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2870,
        2885
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1776": {
      "branch": 68,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2870,
        2899
      ],
      "op": "EQ",
      "path": "1"
    },
    "1777": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x74E"
    },
    "1780": {
      "branch": 68,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1781": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1783": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1784": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1790": {
      "op": "SHL"
    },
    "1791": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1792": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1795": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1797": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1798": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "ADD",
      "path": "1"
    },
    "1799": {
      "op": "MSTORE"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1804": {
      "op": "DUP3"
    },
    "1805": {
      "op": "ADD"
    },
    "1806": {
      "op": "MSTORE"
    },
    "1807": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1842": {
      "op": "DUP3"
    },
    "1843": {
      "op": "ADD"
    },
    "1844": {
      "op": "MSTORE"
    },
    "1845": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "1857": {
      "op": "SHL"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1860": {
      "op": "DUP3"
    },
    "1861": {
      "op": "ADD"
    },
    "1862": {
      "op": "MSTORE"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1865": {
      "op": "ADD"
    },
    "1866": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230"
    },
    "1869": {
      "op": "JUMP"
    },
    "1870": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1871": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2956,
        2986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1873": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3003,
        3011
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1874": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3003,
        3018
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1875": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1884": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1885": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "GT",
      "path": "1"
    },
    "1886": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1887": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x778"
    },
    "1890": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1891": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1898": {
      "op": "SHL"
    },
    "1899": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1901": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1902": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x41"
    },
    "1904": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1906": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1907": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1909": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1911": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1912": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1913": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1915": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1916": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1917": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1918": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1919": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1920": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1921": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1923": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "MUL",
      "path": "1"
    },
    "1924": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1926": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "ADD",
      "path": "1"
    },
    "1927": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1928": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "ADD",
      "path": "1"
    },
    "1929": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1931": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1932": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1933": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1934": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A1"
    },
    "1937": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1938": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1939": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1941": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "ADD",
      "path": "1"
    },
    "1942": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1944": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1945": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "MUL",
      "path": "1"
    },
    "1946": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1947": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1948": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1949": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "CALLDATACOPY",
      "path": "1"
    },
    "1950": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "ADD",
      "path": "1"
    },
    "1951": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1952": {
      "op": "POP"
    },
    "1953": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1954": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "POP",
      "path": "1"
    },
    "1955": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2956,
        3019
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1956": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2956,
        3019
      ],
      "op": "POP",
      "path": "1"
    },
    "1957": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3035,
        3044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1959": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3030,
        3150
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1960": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3054,
        3062
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1961": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3054,
        3069
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1962": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3050,
        3051
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1963": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3050,
        3069
      ],
      "op": "LT",
      "path": "1"
    },
    "1964": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3030,
        3150
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1965": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3030,
        3150
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x843"
    },
    "1968": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3030,
        3150
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1969": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3109,
        3139
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 20,
      "value": "0x808"
    },
    "1972": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3127
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1973": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3128,
        3129
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1974": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1975": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1976": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1977": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "LT",
      "path": "1"
    },
    "1978": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7D3"
    },
    "1981": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1982": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1989": {
      "op": "SHL"
    },
    "1990": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1992": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1993": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "1995": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1997": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1998": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2000": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2002": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2003": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2004": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2006": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "MUL",
      "path": "1"
    },
    "2007": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2009": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "ADD",
      "path": "1"
    },
    "2010": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "ADD",
      "path": "1"
    },
    "2011": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2012": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3135
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2013": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3136,
        3137
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2014": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2015": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2016": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2017": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "LT",
      "path": "1"
    },
    "2018": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7FB"
    },
    "2021": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2022": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2029": {
      "op": "SHL"
    },
    "2030": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2032": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2033": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "2035": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2037": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2038": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2040": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2042": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2043": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2044": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2046": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "MUL",
      "path": "1"
    },
    "2047": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2049": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "ADD",
      "path": "1"
    },
    "2050": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "ADD",
      "path": "1"
    },
    "2051": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2052": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3109,
        3118
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C8"
    },
    "2055": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        3109,
        3139
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2056": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3109,
        3139
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2057": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3103
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2058": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3104,
        3105
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2059": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2060": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2061": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2062": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "LT",
      "path": "1"
    },
    "2063": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x828"
    },
    "2066": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2067": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2074": {
      "op": "SHL"
    },
    "2075": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2077": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2078": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "2080": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2082": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2083": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2085": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2087": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2088": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2089": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2091": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2092": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2093": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "MUL",
      "path": "1"
    },
    "2094": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2095": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2096": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2097": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "ADD",
      "path": "1"
    },
    "2098": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "ADD",
      "path": "1"
    },
    "2099": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3139
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2100": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3071,
        3074
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 21,
      "value": "0x83C"
    },
    "2103": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3071,
        3074
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2104": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3071,
        3074
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1747"
    },
    "2107": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        3071,
        3074
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2108": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3071,
        3074
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2109": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3071,
        3074
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2110": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3071,
        3074
      ],
      "op": "POP",
      "path": "1"
    },
    "2111": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3030,
        3150
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A7"
    },
    "2114": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3030,
        3150
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2115": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3030,
        3150
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2116": {
      "op": "POP"
    },
    "2117": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3167,
        3180
      ],
      "op": "SWAP4",
      "path": "1",
      "statement": 22
    },
    "2118": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2119": {
      "op": "POP"
    },
    "2120": {
      "op": "POP"
    },
    "2121": {
      "op": "POP"
    },
    "2122": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2123": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2124": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3373,
        3381
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 23
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2131": {
      "op": "SHL"
    },
    "2132": {
      "op": "SUB"
    },
    "2133": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3357,
        3381
      ],
      "op": "AND",
      "path": "1"
    },
    "2134": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3357,
        3369
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x85D"
    },
    "2137": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3357,
        3367
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB1"
    },
    "2140": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3357,
        3369
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2141": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3357,
        3369
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2148": {
      "op": "SHL"
    },
    "2149": {
      "op": "SUB"
    },
    "2150": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3357,
        3381
      ],
      "op": "AND",
      "path": "1"
    },
    "2151": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3357,
        3381
      ],
      "op": "EQ",
      "path": "1"
    },
    "2152": {
      "branch": 69,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3357,
        3381
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2153": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C6"
    },
    "2156": {
      "branch": 69,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2157": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2159": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2160": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2166": {
      "op": "SHL"
    },
    "2167": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2168": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2171": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2173": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2174": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "ADD",
      "path": "1"
    },
    "2175": {
      "op": "MSTORE"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2180": {
      "op": "DUP3"
    },
    "2181": {
      "op": "ADD"
    },
    "2182": {
      "op": "MSTORE"
    },
    "2183": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2218": {
      "op": "DUP3"
    },
    "2219": {
      "op": "ADD"
    },
    "2220": {
      "op": "MSTORE"
    },
    "2221": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2233": {
      "op": "SHL"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2236": {
      "op": "DUP3"
    },
    "2237": {
      "op": "ADD"
    },
    "2238": {
      "op": "MSTORE"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2241": {
      "op": "ADD"
    },
    "2242": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230"
    },
    "2245": {
      "op": "JUMP"
    },
    "2246": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2247": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3483,
        3491
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 24
    },
    "2248": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3456
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2250": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2252": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3457,
        3469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D3"
    },
    "2255": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3457,
        3467
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB1"
    },
    "2258": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3457,
        3469
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2259": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3457,
        3469
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2266": {
      "op": "SHL"
    },
    "2267": {
      "op": "SUB"
    },
    "2268": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2269": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2270": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "AND",
      "path": "1"
    },
    "2271": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2272": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2273": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2275": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2276": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2277": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "ADD",
      "path": "1"
    },
    "2278": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2279": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2280": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2281": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2282": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2284": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2285": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2286": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "ADD",
      "path": "1"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2289": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2290": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2291": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2292": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2293": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2294": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "AND",
      "path": "1"
    },
    "2295": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2296": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2297": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2298": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2299": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2300": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2301": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2302": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2303": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2304": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2305": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2308": {
      "op": "NOT"
    },
    "2309": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "AND",
      "path": "1"
    },
    "2310": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2311": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2312": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2313": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2314": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2315": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2316": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "OR",
      "path": "1"
    },
    "2317": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2318": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2319": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2320": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3521,
        3533
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 25,
      "value": "0x917"
    },
    "2323": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3521,
        3531
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB1"
    },
    "2326": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3521,
        3533
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2327": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3521,
        3533
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "AND",
      "path": "1"
    },
    "2337": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2370": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3545,
        3553
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2371": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2373": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2374": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x953"
    },
    "2377": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2378": {
      "op": "ISZERO"
    },
    "2379": {
      "op": "ISZERO"
    },
    "2380": {
      "op": "DUP2"
    },
    "2381": {
      "op": "MSTORE"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2384": {
      "op": "ADD"
    },
    "2385": {
      "op": "SWAP1"
    },
    "2386": {
      "op": "JUMP"
    },
    "2387": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2388": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2390": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2391": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2392": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2393": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "SUB",
      "path": "1"
    },
    "2394": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2395": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2396": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "POP",
      "path": "1"
    },
    "2397": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "POP",
      "path": "1"
    },
    "2398": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3255,
        3561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2399": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2406": {
      "op": "SHL"
    },
    "2407": {
      "op": "SUB"
    },
    "2408": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4076,
        4092
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 26
    },
    "2409": {
      "branch": 70,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4076,
        4092
      ],
      "op": "AND",
      "path": "1"
    },
    "2410": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x985"
    },
    "2413": {
      "branch": 70,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2414": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2416": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2417": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2423": {
      "op": "SHL"
    },
    "2424": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2425": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2426": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2428": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "ADD",
      "path": "1"
    },
    "2429": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230"
    },
    "2432": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2433": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15FD"
    },
    "2436": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4068,
        4134
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2437": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2438": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4173,
        4185
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 27,
      "value": "0x98D"
    },
    "2441": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4173,
        4183
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB1"
    },
    "2444": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4173,
        4185
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2445": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4173,
        4185
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2452": {
      "op": "SHL"
    },
    "2453": {
      "op": "SUB"
    },
    "2454": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4165,
        4185
      ],
      "op": "AND",
      "path": "1"
    },
    "2455": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4165,
        4169
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2462": {
      "op": "SHL"
    },
    "2463": {
      "op": "SUB"
    },
    "2464": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4165,
        4185
      ],
      "op": "AND",
      "path": "1"
    },
    "2465": {
      "branch": 71,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4165,
        4185
      ],
      "op": "EQ",
      "path": "1"
    },
    "2466": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4165,
        4225
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2467": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4165,
        4225
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B3"
    },
    "2470": {
      "branch": 71,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4165,
        4225
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2471": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4165,
        4225
      ],
      "op": "POP",
      "path": "1"
    },
    "2472": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4189,
        4225
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B3"
    },
    "2475": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4206,
        4210
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2476": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4212,
        4224
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x187"
    },
    "2479": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4212,
        4222
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB1"
    },
    "2482": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4212,
        4224
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2483": {
      "branch": 72,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4189,
        4225
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2484": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA11"
    },
    "2487": {
      "branch": 72,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2488": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2490": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2491": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2497": {
      "op": "SHL"
    },
    "2498": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2499": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2502": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2504": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2505": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "ADD",
      "path": "1"
    },
    "2506": {
      "op": "MSTORE"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2511": {
      "op": "DUP3"
    },
    "2512": {
      "op": "ADD"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2549": {
      "op": "DUP3"
    },
    "2550": {
      "op": "ADD"
    },
    "2551": {
      "op": "MSTORE"
    },
    "2552": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "2564": {
      "op": "SHL"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2567": {
      "op": "DUP3"
    },
    "2568": {
      "op": "ADD"
    },
    "2569": {
      "op": "MSTORE"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2572": {
      "op": "ADD"
    },
    "2573": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230"
    },
    "2576": {
      "op": "JUMP"
    },
    "2577": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2578": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4303,
        4319
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2580": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4322,
        4334
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA1B"
    },
    "2583": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4322,
        4332
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB1"
    },
    "2586": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4322,
        4334
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2587": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4322,
        4334
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2588": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4303,
        4334
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2589": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4303,
        4334
      ],
      "op": "POP",
      "path": "1"
    },
    "2590": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4345,
        4441
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 28,
      "value": "0xA3C"
    },
    "2593": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4366,
        4374
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2594": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4376,
        4380
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2595": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4382,
        4384
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2596": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4386,
        4407
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA2C"
    },
    "2599": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4404,
        4406
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2600": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4386,
        4403
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4F"
    },
    "2603": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4386,
        4407
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2604": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4386,
        4407
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2605": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4409,
        4434
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA35"
    },
    "2608": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4427,
        4433
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2609": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4409,
        4426
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4F"
    },
    "2612": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4409,
        4434
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2613": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4409,
        4434
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2614": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "2615": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "2616": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "2617": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "2618": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "2619": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2620": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4345,
        4441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2621": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4452,
        4471
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2623": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2624": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2625": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2626": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2628": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2630": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2631": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2632": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2633": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2635": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2636": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2637": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2644": {
      "op": "SHL"
    },
    "2645": {
      "op": "SUB"
    },
    "2646": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "DUP11",
      "path": "1"
    },
    "2647": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "AND",
      "path": "1"
    },
    "2648": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2649": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2650": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2651": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2652": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2653": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2654": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2655": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2656": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4511,
        4532
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 29
    },
    "2657": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4511,
        4532
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2658": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4511,
        4532
      ],
      "op": "LT",
      "path": "1"
    },
    "2659": {
      "branch": 73,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4511,
        4532
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2660": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA7F"
    },
    "2663": {
      "branch": 73,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2664": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2666": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2667": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2673": {
      "op": "SHL"
    },
    "2674": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2675": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2676": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2678": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "ADD",
      "path": "1"
    },
    "2679": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230"
    },
    "2682": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2683": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1642"
    },
    "2686": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4503,
        4579
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2687": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2688": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4611,
        4631
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 30,
      "value": "0xA89"
    },
    "2691": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4625,
        4631
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2692": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4611,
        4622
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2693": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4611,
        4631
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16C8"
    },
    "2696": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4611,
        4631
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2697": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4611,
        4631
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2698": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2700": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2701": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2702": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2703": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2705": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2707": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2708": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2709": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2710": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2712": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2713": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2714": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2721": {
      "op": "SHL"
    },
    "2722": {
      "op": "SUB"
    },
    "2723": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP13",
      "path": "1"
    },
    "2724": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2725": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "AND",
      "path": "1"
    },
    "2726": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2727": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2728": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2729": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2730": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2731": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2732": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2733": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4631
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2734": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4631
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2735": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4631
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2736": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4631
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2737": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4658
      ],
      "op": "DUP9",
      "path": "1",
      "statement": 31
    },
    "2738": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4658
      ],
      "op": "AND",
      "path": "1"
    },
    "2739": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4658
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2740": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4658
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2741": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4658
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2742": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4658
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2743": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4658
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2744": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2745": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2746": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4662,
        4668
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2747": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4662,
        4668
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2748": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2749": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAC7"
    },
    "2752": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2753": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4662,
        4668
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2754": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4662,
        4668
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2755": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16B0"
    },
    "2758": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4641,
        4668
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2759": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2760": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2761": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2762": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2763": {
      "op": "POP"
    },
    "2764": {
      "op": "POP"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2771": {
      "op": "SHL"
    },
    "2772": {
      "op": "SUB"
    },
    "2773": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "DUP7",
      "path": "1",
      "statement": 32
    },
    "2774": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "AND",
      "path": "1"
    },
    "2775": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4691
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2777": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2778": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2779": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2780": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2782": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2783": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2784": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2785": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2787": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2788": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2789": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4703
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAEE"
    },
    "2792": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4703
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2793": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4700,
        4702
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2794": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB6"
    },
    "2797": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4678,
        4703
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2798": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4703
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2799": {
      "op": "POP"
    },
    "2800": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2802": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2803": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2804": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2805": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2807": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2809": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2810": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2811": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2812": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2814": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2815": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2816": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2823": {
      "op": "SHL"
    },
    "2824": {
      "op": "SUB"
    },
    "2825": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "DUP12",
      "path": "1"
    },
    "2826": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "AND",
      "path": "1"
    },
    "2827": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2828": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2829": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2830": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2831": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2832": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2833": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2834": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2835": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4713,
        4796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB3A"
    },
    "2838": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4713,
        4796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2845": {
      "op": "SHL"
    },
    "2846": {
      "op": "SUB"
    },
    "2847": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "DUP8",
      "path": "1",
      "statement": 33
    },
    "2848": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "AND",
      "path": "1"
    },
    "2849": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4768
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2851": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2852": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2853": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2854": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2856": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2857": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2858": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2859": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2861": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2862": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2863": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4785
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB38"
    },
    "2866": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4785
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2867": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4782,
        4784
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2868": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBC2"
    },
    "2871": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4755,
        4785
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2872": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4785
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2873": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4785
      ],
      "op": "POP",
      "path": "1"
    },
    "2874": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4713,
        4796
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2875": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4842,
        4844
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 34
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2882": {
      "op": "SHL"
    },
    "2883": {
      "op": "SUB"
    },
    "2884": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "AND",
      "path": "1"
    },
    "2885": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4836,
        4840
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2892": {
      "op": "SHL"
    },
    "2893": {
      "op": "SUB"
    },
    "2894": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "AND",
      "path": "1"
    },
    "2895": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4826,
        4834
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2902": {
      "op": "SHL"
    },
    "2903": {
      "op": "SUB"
    },
    "2904": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "AND",
      "path": "1"
    },
    "2905": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "2938": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4846,
        4848
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2939": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4850,
        4856
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2940": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2942": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2943": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB92"
    },
    "2946": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2947": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2948": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2949": {
      "op": "SWAP2"
    },
    "2950": {
      "op": "DUP3"
    },
    "2951": {
      "op": "MSTORE"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2954": {
      "op": "DUP3"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "op": "MSTORE"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "op": "SWAP1"
    },
    "2961": {
      "op": "JUMP"
    },
    "2962": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2963": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2965": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2966": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2967": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2968": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "SUB",
      "path": "1"
    },
    "2969": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2970": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "LOG4",
      "path": "1"
    },
    "2971": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4868,
        4936
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 35,
      "value": "0xBA8"
    },
    "2974": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4899,
        4907
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2975": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4909,
        4913
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2976": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4915,
        4917
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2977": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4919,
        4921
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2978": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4923,
        4929
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2979": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4931,
        4935
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2980": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4868,
        4898
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDA8"
    },
    "2983": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4868,
        4936
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2984": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4868,
        4936
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2985": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "POP",
      "path": "1"
    },
    "2986": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "POP",
      "path": "1"
    },
    "2987": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "POP",
      "path": "1"
    },
    "2988": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "POP",
      "path": "1"
    },
    "2989": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "POP",
      "path": "1"
    },
    "2990": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "POP",
      "path": "1"
    },
    "2991": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "POP",
      "path": "1"
    },
    "2992": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "o",
      "offset": [
        3861,
        4943
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2993": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2994": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 36
    },
    "2995": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2996": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2997": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2998": {
      "fn": "EnumerableSet.add",
      "offset": [
        8069,
        8198
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2999": {
      "fn": "EnumerableSet.add",
      "offset": [
        8136,
        8140
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3001": {
      "fn": "EnumerableSet.add",
      "offset": [
        8159,
        8191
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 37,
      "value": "0x6C1"
    },
    "3004": {
      "fn": "EnumerableSet.add",
      "offset": [
        8164,
        8167
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3005": {
      "fn": "EnumerableSet.add",
      "offset": [
        8184,
        8189
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3006": {
      "fn": "EnumerableSet.add",
      "offset": [
        8159,
        8163
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE72"
    },
    "3009": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        8159,
        8191
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3010": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8366,
        8501
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3011": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8436,
        8440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3013": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8459,
        8494
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 38,
      "value": "0x6C1"
    },
    "3016": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8467,
        8470
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3017": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8487,
        8492
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3018": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8459,
        8466
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xEC1"
    },
    "3021": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        8459,
        8494
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3022": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13372,
        14150
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3029": {
      "op": "SHL"
    },
    "3030": {
      "op": "SUB"
    },
    "3031": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13616,
        13629
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3032": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13616,
        13629
      ],
      "op": "AND",
      "path": "1"
    },
    "3033": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "3034": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "5",
      "statement": 39
    },
    "3035": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13612,
        14144
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x697"
    },
    "3038": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13612,
        14144
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3039": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3041": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3042": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3049": {
      "op": "SHL"
    },
    "3050": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3051": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3058": {
      "op": "SHL"
    },
    "3059": {
      "op": "SUB"
    },
    "3060": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13694
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3061": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13694
      ],
      "op": "AND",
      "path": "1"
    },
    "3062": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13694
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3063": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13694
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBC197C81"
    },
    "3068": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13694
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3069": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC12"
    },
    "3072": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3073": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13695,
        13703
      ],
      "op": "DUP10",
      "path": "1"
    },
    "3074": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13695,
        13703
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3075": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13705,
        13709
      ],
      "op": "DUP10",
      "path": "1"
    },
    "3076": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13705,
        13709
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3077": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13711,
        13714
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3078": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13711,
        13714
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3079": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13716,
        13723
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3080": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13716,
        13723
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3081": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13725,
        13729
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3082": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13725,
        13729
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3083": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3085": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "ADD",
      "path": "1"
    },
    "3086": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14BE"
    },
    "3089": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3090": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3091": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3093": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3095": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3096": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3097": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3098": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SUB",
      "path": "1"
    },
    "3099": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3100": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3102": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3103": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3104": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "3105": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3106": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3107": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3108": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC2C"
    },
    "3111": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3112": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3114": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3115": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3116": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3117": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "POP",
      "path": "1"
    },
    "3118": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "GAS",
      "path": "1"
    },
    "3119": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "CALL",
      "path": "1"
    },
    "3120": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3121": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "POP",
      "path": "1"
    },
    "3122": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "POP",
      "path": "1"
    },
    "3123": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "POP",
      "path": "1"
    },
    "3124": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3125": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3126": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC5C"
    },
    "3129": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3130": {
      "op": "POP"
    },
    "3131": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3133": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3134": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3135": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3137": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3138": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3139": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3140": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "ADD",
      "path": "1"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3143": {
      "op": "NOT"
    },
    "3144": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "AND",
      "path": "1"
    },
    "3145": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3146": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "ADD",
      "path": "1"
    },
    "3147": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3148": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3149": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3150": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC59"
    },
    "3153": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3154": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3155": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "ADD",
      "path": "1"
    },
    "3156": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3157": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1405"
    },
    "3160": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3161": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3162": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3164": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3165": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD09"
    },
    "3168": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3169": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC68"
    },
    "3172": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x178E"
    },
    "3175": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3176": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3177": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3178": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8C379A0"
    },
    "3183": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "EQ",
      "path": "1"
    },
    "3184": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3185": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCA2"
    },
    "3188": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3189": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "POP",
      "path": "1"
    },
    "3190": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC7D"
    },
    "3193": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17A5"
    },
    "3196": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3197": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3198": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3199": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC88"
    },
    "3202": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3203": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "POP",
      "path": "1"
    },
    "3204": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCA4"
    },
    "3207": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3208": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3209": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14010,
        14016
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 40
    },
    "3210": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3212": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3219": {
      "op": "SHL"
    },
    "3220": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3221": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3222": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3224": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "ADD",
      "path": "1"
    },
    "3225": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230"
    },
    "3228": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3229": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3230": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A2"
    },
    "3233": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14003,
        14017
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3234": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3235": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "POP",
      "path": "1"
    },
    "3236": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3237": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 41,
      "value": "0x40"
    },
    "3239": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3246": {
      "op": "SHL"
    },
    "3247": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3248": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3251": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3253": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3254": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "ADD",
      "path": "1"
    },
    "3255": {
      "op": "MSTORE"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3260": {
      "op": "DUP3"
    },
    "3261": {
      "op": "ADD"
    },
    "3262": {
      "op": "MSTORE"
    },
    "3263": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3298": {
      "op": "DUP3"
    },
    "3299": {
      "op": "ADD"
    },
    "3300": {
      "op": "MSTORE"
    },
    "3301": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3327": {
      "op": "DUP3"
    },
    "3328": {
      "op": "ADD"
    },
    "3329": {
      "op": "MSTORE"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3332": {
      "op": "ADD"
    },
    "3333": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230"
    },
    "3336": {
      "op": "JUMP"
    },
    "3337": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3344": {
      "op": "SHL"
    },
    "3345": {
      "op": "SUB"
    },
    "3346": {
      "op": "NOT"
    },
    "3347": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13779,
        13843
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3348": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13779,
        13843
      ],
      "op": "AND",
      "path": "1"
    },
    "3349": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3356": {
      "op": "SHL"
    },
    "3357": {
      "branch": 74,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13779,
        13843
      ],
      "op": "EQ",
      "path": "1"
    },
    "3358": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13775,
        13936
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBA8"
    },
    "3361": {
      "branch": 74,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13775,
        13936
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3362": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 42,
      "value": "0x40"
    },
    "3364": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3365": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3371": {
      "op": "SHL"
    },
    "3372": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3373": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3374": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3376": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "ADD",
      "path": "1"
    },
    "3377": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230"
    },
    "3380": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3381": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15B5"
    },
    "3384": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13867,
        13917
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3385": {
      "fn": "EnumerableSet.at",
      "offset": [
        9251,
        9386
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3386": {
      "fn": "EnumerableSet.at",
      "offset": [
        9322,
        9329
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3388": {
      "fn": "EnumerableSet.at",
      "offset": [
        9356,
        9378
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 43,
      "value": "0x6C1"
    },
    "3391": {
      "fn": "EnumerableSet.at",
      "offset": [
        9360,
        9363
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3392": {
      "fn": "EnumerableSet.at",
      "offset": [
        9372,
        9377
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3393": {
      "fn": "EnumerableSet.at",
      "offset": [
        9356,
        9359
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFD8"
    },
    "3396": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        9356,
        9378
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3397": {
      "fn": "EnumerableSet.length",
      "offset": [
        8807,
        8919
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3398": {
      "fn": "EnumerableSet.length",
      "offset": [
        8867,
        8874
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3400": {
      "fn": "EnumerableSet.length",
      "offset": [
        8893,
        8912
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 44,
      "value": "0x2B0"
    },
    "3403": {
      "fn": "EnumerableSet.length",
      "offset": [
        8901,
        8904
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3404": {
      "fn": "EnumerableSet._length",
      "offset": [
        4096,
        4114
      ],
      "op": "SLOAD",
      "path": "9",
      "statement": 45
    },
    "3405": {
      "fn": "EnumerableSet._length",
      "offset": [
        4096,
        4114
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3406": {
      "fn": "EnumerableSet._length",
      "offset": [
        4014,
        4121
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3407": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14156,
        14349
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3408": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3410": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3411": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3412": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14289,
        14290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3414": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3415": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3416": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3417": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3418": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3419": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "ADD",
      "path": "1"
    },
    "3420": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3421": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3422": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3423": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14222,
        14238
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3425": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14222,
        14238
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3426": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14250,
        14272
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3428": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14250,
        14272
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3429": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3430": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3432": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3433": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3434": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "ADD",
      "path": "1"
    },
    "3435": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3436": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3437": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "3438": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3439": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "CALLDATACOPY",
      "path": "1"
    },
    "3440": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "ADD",
      "path": "1"
    },
    "3441": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3442": {
      "op": "POP"
    },
    "3443": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "POP",
      "path": "1"
    },
    "3444": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14250,
        14291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3445": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14250,
        14291
      ],
      "op": "POP",
      "path": "1"
    },
    "3446": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14312,
        14319
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 46
    },
    "3447": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14306
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3448": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14307,
        14308
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3450": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3451": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3452": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3453": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "LT",
      "path": "1"
    },
    "3454": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD97"
    },
    "3457": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3458": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3465": {
      "op": "SHL"
    },
    "3466": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3468": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3469": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "3471": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3473": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3474": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3476": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3478": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3479": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3480": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3482": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3483": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3484": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "MUL",
      "path": "1"
    },
    "3485": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3486": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3487": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3488": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "ADD",
      "path": "1"
    },
    "3489": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "ADD",
      "path": "1"
    },
    "3490": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14319
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3491": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14337,
        14342
      ],
      "op": "SWAP3",
      "path": "1",
      "statement": 47
    },
    "3492": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14156,
        14349
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3493": {
      "op": "POP"
    },
    "3494": {
      "op": "POP"
    },
    "3495": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        14156,
        14349
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3496": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12625,
        13366
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3503": {
      "op": "SHL"
    },
    "3504": {
      "op": "SUB"
    },
    "3505": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12844,
        12857
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3506": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12844,
        12857
      ],
      "op": "AND",
      "path": "1"
    },
    "3507": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "3508": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3509": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12840,
        13360
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x697"
    },
    "3512": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12840,
        13360
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3513": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3515": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3516": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3523": {
      "op": "SHL"
    },
    "3524": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3525": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3532": {
      "op": "SHL"
    },
    "3533": {
      "op": "SUB"
    },
    "3534": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12917
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3535": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12917
      ],
      "op": "AND",
      "path": "1"
    },
    "3536": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3537": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12917
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF23A6E61"
    },
    "3542": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3543": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDEC"
    },
    "3546": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3547": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12918,
        12926
      ],
      "op": "DUP10",
      "path": "1"
    },
    "3548": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12918,
        12926
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3549": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12928,
        12932
      ],
      "op": "DUP10",
      "path": "1"
    },
    "3550": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12928,
        12932
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3551": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12934,
        12936
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3552": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12934,
        12936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3553": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12938,
        12944
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3554": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12938,
        12944
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3555": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12946,
        12950
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3556": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12946,
        12950
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3557": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3559": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "ADD",
      "path": "1"
    },
    "3560": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151C"
    },
    "3563": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3564": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3565": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3567": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3569": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3570": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3571": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3572": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SUB",
      "path": "1"
    },
    "3573": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3574": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3576": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3577": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3578": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "3579": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3580": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3581": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3582": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE06"
    },
    "3585": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3586": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3588": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3589": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3590": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3591": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "POP",
      "path": "1"
    },
    "3592": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "GAS",
      "path": "1"
    },
    "3593": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "CALL",
      "path": "1"
    },
    "3594": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3595": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "POP",
      "path": "1"
    },
    "3596": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "POP",
      "path": "1"
    },
    "3597": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "POP",
      "path": "1"
    },
    "3598": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3599": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3600": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE36"
    },
    "3603": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3604": {
      "op": "POP"
    },
    "3605": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3607": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3608": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3609": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3611": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3612": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3613": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3614": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "ADD",
      "path": "1"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3617": {
      "op": "NOT"
    },
    "3618": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "AND",
      "path": "1"
    },
    "3619": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3620": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "ADD",
      "path": "1"
    },
    "3621": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3622": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3623": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3624": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE33"
    },
    "3627": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3628": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3629": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "ADD",
      "path": "1"
    },
    "3630": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3631": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1405"
    },
    "3634": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3635": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3636": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3638": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3639": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12875,
        13350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE42"
    },
    "3642": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12875,
        13350
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3643": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12875,
        13350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC68"
    },
    "3646": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12875,
        13350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x178E"
    },
    "3649": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12875,
        13350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3650": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12875,
        13350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3657": {
      "op": "SHL"
    },
    "3658": {
      "op": "SUB"
    },
    "3659": {
      "op": "NOT"
    },
    "3660": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13000,
        13059
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3661": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13000,
        13059
      ],
      "op": "AND",
      "path": "1"
    },
    "3662": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3669": {
      "op": "SHL"
    },
    "3670": {
      "branch": 75,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13000,
        13059
      ],
      "op": "EQ",
      "path": "1"
    },
    "3671": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12996,
        13152
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBA8"
    },
    "3674": {
      "branch": 75,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12996,
        13152
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3675": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 48,
      "value": "0x40"
    },
    "3677": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3678": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3684": {
      "op": "SHL"
    },
    "3685": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3686": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3687": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3689": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "ADD",
      "path": "1"
    },
    "3690": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230"
    },
    "3693": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3694": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15B5"
    },
    "3697": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13083,
        13133
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3698": {
      "fn": "EnumerableSet._add",
      "offset": [
        1632,
        2036
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3699": {
      "fn": "EnumerableSet._add",
      "offset": [
        1695,
        1699
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3701": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 49
    },
    "3702": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3703": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3704": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3706": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3914
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3707": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3914
      ],
      "op": "ADD",
      "path": "9"
    },
    "3708": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3710": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3711": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3713": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3714": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3715": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3716": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xEB9"
    },
    "3719": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3720": {
      "op": "POP"
    },
    "3721": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 50
    },
    "3722": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3723": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3725": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3726": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3727": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "ADD",
      "path": "9"
    },
    "3728": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3729": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3730": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3732": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3733": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3734": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3735": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3737": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3738": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3739": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3740": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3741": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "3742": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "ADD",
      "path": "9"
    },
    "3743": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3744": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3745": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3746": {
      "fn": "EnumerableSet._add",
      "offset": [
        1933,
        1951
      ],
      "op": "DUP5",
      "path": "9",
      "statement": 51
    },
    "3747": {
      "fn": "EnumerableSet._add",
      "offset": [
        1933,
        1951
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3748": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3749": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3750": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3751": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3752": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3753": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "ADD",
      "path": "9"
    },
    "3754": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3755": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "3756": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3757": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3759": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3760": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3761": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3762": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3763": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3764": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3765": {
      "fn": "EnumerableSet._add",
      "offset": [
        1965,
        1976
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 52,
      "value": "0x25E"
    },
    "3768": {
      "fn": "EnumerableSet._add",
      "offset": [
        1965,
        1976
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3769": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3770": {
      "op": "POP"
    },
    "3771": {
      "fn": "EnumerableSet._add",
      "offset": [
        2014,
        2019
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 53,
      "value": "0x0"
    },
    "3773": {
      "fn": "EnumerableSet._add",
      "offset": [
        2007,
        2019
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25E"
    },
    "3776": {
      "fn": "EnumerableSet._add",
      "offset": [
        2007,
        2019
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3777": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2204,
        3725
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3778": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2270,
        2274
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3780": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3781": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3782": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3783": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3785": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2419
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3786": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2419
      ],
      "op": "ADD",
      "path": "9"
    },
    "3787": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3789": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3790": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3792": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3793": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3794": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3795": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2441,
        2456
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3796": {
      "branch": 76,
      "fn": "EnumerableSet._remove",
      "offset": [
        2441,
        2456
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3797": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2437,
        3719
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFCE"
    },
    "3800": {
      "branch": 76,
      "fn": "EnumerableSet._remove",
      "offset": [
        2437,
        3719
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3801": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2798,
        2819
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3803": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2822,
        2836
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xEE5"
    },
    "3806": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2835,
        2836
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3808": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2822,
        2832
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3809": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2822,
        2836
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16C8"
    },
    "3812": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        2822,
        2836
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3813": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2822,
        2836
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3814": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2888
      ],
      "op": "DUP6",
      "path": "9"
    },
    "3815": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2888
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3816": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2798,
        2836
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3817": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2798,
        2836
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3818": {
      "op": "POP"
    },
    "3819": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2850,
        2867
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3821": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2850,
        2867
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3822": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2892
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xEF9"
    },
    "3825": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3826": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2891,
        2892
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3828": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2891,
        2892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3829": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2892
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16C8"
    },
    "3832": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        2870,
        2892
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3833": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2892
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3834": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2850,
        2892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3835": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2850,
        2892
      ],
      "op": "POP",
      "path": "9"
    },
    "3836": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3132,
        3149
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3838": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3155
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3839": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3163
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3841": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3163
      ],
      "op": "ADD",
      "path": "9"
    },
    "3842": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3164,
        3173
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3843": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3844": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3845": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3846": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "LT",
      "path": "9"
    },
    "3847": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF20"
    },
    "3850": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3851": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3858": {
      "op": "SHL"
    },
    "3859": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3861": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3862": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x32"
    },
    "3864": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3866": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3867": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "3869": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3871": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "REVERT",
      "path": "9"
    },
    "3872": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3873": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3874": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3876": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3877": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3879": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3881": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3882": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "ADD",
      "path": "9"
    },
    "3883": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3884": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3132,
        3174
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3885": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3132,
        3174
      ],
      "op": "POP",
      "path": "9"
    },
    "3886": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3295,
        3304
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 54
    },
    "3887": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3269
      ],
      "op": "DUP8",
      "path": "9"
    },
    "3888": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3277
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3890": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3277
      ],
      "op": "ADD",
      "path": "9"
    },
    "3891": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3278,
        3291
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3892": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3893": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3894": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3895": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "LT",
      "path": "9"
    },
    "3896": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF51"
    },
    "3899": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3900": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3907": {
      "op": "SHL"
    },
    "3908": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3910": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3911": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x32"
    },
    "3913": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3915": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3916": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "3918": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3920": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "REVERT",
      "path": "9"
    },
    "3921": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3922": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3924": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3925": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3926": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3927": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3929": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3930": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3931": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3932": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3933": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3934": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "ADD",
      "path": "9"
    },
    "3935": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3304
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3936": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3304
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3937": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3304
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3938": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3304
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3939": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 55
    },
    "3940": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3941": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3942": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3382
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3944": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3382
      ],
      "op": "DUP10",
      "path": "9"
    },
    "3945": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3382
      ],
      "op": "ADD",
      "path": "9"
    },
    "3946": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3947": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3948": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3949": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3951": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3952": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3953": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3406
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3954": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3406
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3955": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3406
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3956": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "DUP7",
      "path": "9",
      "statement": 56
    },
    "3957": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3958": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3373
      ],
      "op": "DUP8",
      "path": "9"
    },
    "3959": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3373
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3960": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3961": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF92"
    },
    "3964": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3965": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3972": {
      "op": "SHL"
    },
    "3973": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3975": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3976": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x31"
    },
    "3978": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3980": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3981": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "3983": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3985": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "REVERT",
      "path": "9"
    },
    "3986": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3987": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3989": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3990": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SUB",
      "path": "9"
    },
    "3991": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3992": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3993": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3994": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3996": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3997": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3999": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4001": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4002": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "ADD",
      "path": "9"
    },
    "4003": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4005": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4006": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4007": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4008": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4009": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3623
      ],
      "op": "DUP7",
      "path": "9",
      "statement": 57
    },
    "4010": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3632
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "4012": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3632
      ],
      "op": "ADD",
      "path": "9"
    },
    "4013": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4015": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3633,
        3638
      ],
      "op": "DUP8",
      "path": "9"
    },
    "4016": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4017": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4018": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4020": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "ADD",
      "path": "9"
    },
    "4021": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4022": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4023": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4024": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4026": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "ADD",
      "path": "9"
    },
    "4027": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4029": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4030": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3613,
        3639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4032": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3613,
        3639
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4033": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3613,
        3639
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4034": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3661,
        3665
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 58,
      "value": "0x1"
    },
    "4036": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "4037": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "POP",
      "path": "9"
    },
    "4038": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "POP",
      "path": "9"
    },
    "4039": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "POP",
      "path": "9"
    },
    "4040": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "POP",
      "path": "9"
    },
    "4041": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "POP",
      "path": "9"
    },
    "4042": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25E"
    },
    "4045": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4046": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2437,
        3719
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4047": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3703,
        3708
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 59,
      "value": "0x0"
    },
    "4049": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3696,
        3708
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4050": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3696,
        3708
      ],
      "op": "POP",
      "path": "9"
    },
    "4051": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3696,
        3708
      ],
      "op": "POP",
      "path": "9"
    },
    "4052": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3696,
        3708
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25E"
    },
    "4055": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3696,
        3708
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4056": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4057": {
      "fn": "EnumerableSet._at",
      "offset": [
        4547,
        4565
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 60
    },
    "4058": {
      "fn": "EnumerableSet._at",
      "offset": [
        4547,
        4565
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4059": {
      "fn": "EnumerableSet._at",
      "offset": [
        4520,
        4527
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4061": {
      "fn": "EnumerableSet._at",
      "offset": [
        4520,
        4527
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4062": {
      "branch": 77,
      "fn": "EnumerableSet._at",
      "offset": [
        4547,
        4573
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4063": {
      "op": "LT"
    },
    "4064": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1036"
    },
    "4067": {
      "branch": 77,
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4068": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4070": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4071": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4077": {
      "op": "SHL"
    },
    "4078": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4079": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4082": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4084": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4085": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "ADD",
      "path": "9"
    },
    "4086": {
      "op": "MSTORE"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4089": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4091": {
      "op": "DUP3"
    },
    "4092": {
      "op": "ADD"
    },
    "4093": {
      "op": "MSTORE"
    },
    "4094": {
      "op": "PUSH32",
      "value": "0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4129": {
      "op": "DUP3"
    },
    "4130": {
      "op": "ADD"
    },
    "4131": {
      "op": "MSTORE"
    },
    "4132": {
      "op": "PUSH2",
      "value": "0x6473"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4137": {
      "op": "SHL"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4140": {
      "op": "DUP3"
    },
    "4141": {
      "op": "ADD"
    },
    "4142": {
      "op": "MSTORE"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4145": {
      "op": "ADD"
    },
    "4146": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x230"
    },
    "4149": {
      "op": "JUMP"
    },
    "4150": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4151": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4632
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 61
    },
    "4152": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4640
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4154": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4640
      ],
      "op": "ADD",
      "path": "9"
    },
    "4155": {
      "fn": "EnumerableSet._at",
      "offset": [
        4641,
        4646
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4156": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4157": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4158": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4159": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "LT",
      "path": "9"
    },
    "4160": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1059"
    },
    "4163": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4164": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4171": {
      "op": "SHL"
    },
    "4172": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4174": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4175": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x32"
    },
    "4177": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4179": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4180": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "4182": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4184": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "REVERT",
      "path": "9"
    },
    "4185": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4186": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4187": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4189": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4190": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4192": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4194": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4195": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "ADD",
      "path": "9"
    },
    "4196": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4197": {
      "fn": "EnumerableSet._at",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4198": {
      "fn": "EnumerableSet._at",
      "offset": [
        4622,
        4647
      ],
      "op": "POP",
      "path": "9"
    },
    "4199": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4200": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4201": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "POP",
      "path": "9"
    },
    "4202": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "POP",
      "path": "9"
    },
    "4203": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4453,
        4654
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4204": {
      "op": "JUMPDEST"
    },
    "4205": {
      "op": "DUP1"
    },
    "4206": {
      "op": "CALLDATALOAD"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4213": {
      "op": "SHL"
    },
    "4214": {
      "op": "SUB"
    },
    "4215": {
      "op": "DUP2"
    },
    "4216": {
      "op": "AND"
    },
    "4217": {
      "op": "DUP2"
    },
    "4218": {
      "op": "EQ"
    },
    "4219": {
      "op": "PUSH2",
      "value": "0x2B3"
    },
    "4222": {
      "op": "JUMPI"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4225": {
      "op": "DUP1"
    },
    "4226": {
      "op": "REVERT"
    },
    "4227": {
      "op": "JUMPDEST"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4230": {
      "op": "DUP3"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4233": {
      "op": "DUP4"
    },
    "4234": {
      "op": "ADD"
    },
    "4235": {
      "op": "SLT"
    },
    "4236": {
      "op": "PUSH2",
      "value": "0x1093"
    },
    "4239": {
      "op": "JUMPI"
    },
    "4240": {
      "op": "DUP1"
    },
    "4241": {
      "op": "DUP2"
    },
    "4242": {
      "op": "REVERT"
    },
    "4243": {
      "op": "JUMPDEST"
    },
    "4244": {
      "op": "DUP2"
    },
    "4245": {
      "op": "CALLDATALOAD"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4248": {
      "op": "PUSH2",
      "value": "0x10A0"
    },
    "4251": {
      "op": "DUP3"
    },
    "4252": {
      "op": "PUSH2",
      "value": "0x168C"
    },
    "4255": {
      "jump": "i",
      "op": "JUMP"
    },
    "4256": {
      "op": "JUMPDEST"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4259": {
      "op": "MLOAD"
    },
    "4260": {
      "op": "PUSH2",
      "value": "0x10AD"
    },
    "4263": {
      "op": "DUP3"
    },
    "4264": {
      "op": "DUP3"
    },
    "4265": {
      "op": "PUSH2",
      "value": "0x171A"
    },
    "4268": {
      "jump": "i",
      "op": "JUMP"
    },
    "4269": {
      "op": "JUMPDEST"
    },
    "4270": {
      "op": "DUP4"
    },
    "4271": {
      "op": "DUP2"
    },
    "4272": {
      "op": "MSTORE"
    },
    "4273": {
      "op": "DUP3"
    },
    "4274": {
      "op": "DUP2"
    },
    "4275": {
      "op": "ADD"
    },
    "4276": {
      "op": "SWAP2"
    },
    "4277": {
      "op": "POP"
    },
    "4278": {
      "op": "DUP6"
    },
    "4279": {
      "op": "DUP4"
    },
    "4280": {
      "op": "ADD"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4283": {
      "op": "DUP6"
    },
    "4284": {
      "op": "SWAP1"
    },
    "4285": {
      "op": "SHL"
    },
    "4286": {
      "op": "DUP8"
    },
    "4287": {
      "op": "ADD"
    },
    "4288": {
      "op": "DUP5"
    },
    "4289": {
      "op": "ADD"
    },
    "4290": {
      "op": "DUP9"
    },
    "4291": {
      "op": "LT"
    },
    "4292": {
      "op": "ISZERO"
    },
    "4293": {
      "op": "PUSH2",
      "value": "0x10CC"
    },
    "4296": {
      "op": "JUMPI"
    },
    "4297": {
      "op": "DUP6"
    },
    "4298": {
      "op": "DUP7"
    },
    "4299": {
      "op": "REVERT"
    },
    "4300": {
      "op": "JUMPDEST"
    },
    "4301": {
      "op": "DUP6"
    },
    "4302": {
      "op": "JUMPDEST"
    },
    "4303": {
      "op": "DUP6"
    },
    "4304": {
      "op": "DUP2"
    },
    "4305": {
      "op": "LT"
    },
    "4306": {
      "op": "ISZERO"
    },
    "4307": {
      "op": "PUSH2",
      "value": "0x10EA"
    },
    "4310": {
      "op": "JUMPI"
    },
    "4311": {
      "op": "DUP2"
    },
    "4312": {
      "op": "CALLDATALOAD"
    },
    "4313": {
      "op": "DUP5"
    },
    "4314": {
      "op": "MSTORE"
    },
    "4315": {
      "op": "SWAP3"
    },
    "4316": {
      "op": "DUP5"
    },
    "4317": {
      "op": "ADD"
    },
    "4318": {
      "op": "SWAP3"
    },
    "4319": {
      "op": "SWAP1"
    },
    "4320": {
      "op": "DUP5"
    },
    "4321": {
      "op": "ADD"
    },
    "4322": {
      "op": "SWAP1"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4325": {
      "op": "ADD"
    },
    "4326": {
      "op": "PUSH2",
      "value": "0x10CE"
    },
    "4329": {
      "op": "JUMP"
    },
    "4330": {
      "op": "JUMPDEST"
    },
    "4331": {
      "op": "POP"
    },
    "4332": {
      "op": "SWAP1"
    },
    "4333": {
      "op": "SWAP8"
    },
    "4334": {
      "op": "SWAP7"
    },
    "4335": {
      "op": "POP"
    },
    "4336": {
      "op": "POP"
    },
    "4337": {
      "op": "POP"
    },
    "4338": {
      "op": "POP"
    },
    "4339": {
      "op": "POP"
    },
    "4340": {
      "op": "POP"
    },
    "4341": {
      "op": "POP"
    },
    "4342": {
      "jump": "o",
      "op": "JUMP"
    },
    "4343": {
      "op": "JUMPDEST"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4346": {
      "op": "DUP3"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4349": {
      "op": "DUP4"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "op": "SLT"
    },
    "4352": {
      "op": "PUSH2",
      "value": "0x1107"
    },
    "4355": {
      "op": "JUMPI"
    },
    "4356": {
      "op": "DUP1"
    },
    "4357": {
      "op": "DUP2"
    },
    "4358": {
      "op": "REVERT"
    },
    "4359": {
      "op": "JUMPDEST"
    },
    "4360": {
      "op": "DUP2"
    },
    "4361": {
      "op": "CALLDATALOAD"
    },
    "4362": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4371": {
      "op": "DUP2"
    },
    "4372": {
      "op": "GT"
    },
    "4373": {
      "op": "ISZERO"
    },
    "4374": {
      "op": "PUSH2",
      "value": "0x1121"
    },
    "4377": {
      "op": "JUMPI"
    },
    "4378": {
      "op": "PUSH2",
      "value": "0x1121"
    },
    "4381": {
      "op": "PUSH2",
      "value": "0x1778"
    },
    "4384": {
      "jump": "i",
      "op": "JUMP"
    },
    "4385": {
      "op": "JUMPDEST"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4388": {
      "op": "MLOAD"
    },
    "4389": {
      "op": "PUSH2",
      "value": "0x1138"
    },
    "4392": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4394": {
      "op": "DUP4"
    },
    "4395": {
      "op": "ADD"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4398": {
      "op": "NOT"
    },
    "4399": {
      "op": "AND"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4402": {
      "op": "ADD"
    },
    "4403": {
      "op": "DUP3"
    },
    "4404": {
      "op": "PUSH2",
      "value": "0x171A"
    },
    "4407": {
      "jump": "i",
      "op": "JUMP"
    },
    "4408": {
      "op": "JUMPDEST"
    },
    "4409": {
      "op": "DUP2"
    },
    "4410": {
      "op": "DUP2"
    },
    "4411": {
      "op": "MSTORE"
    },
    "4412": {
      "op": "DUP5"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4415": {
      "op": "DUP4"
    },
    "4416": {
      "op": "DUP7"
    },
    "4417": {
      "op": "ADD"
    },
    "4418": {
      "op": "ADD"
    },
    "4419": {
      "op": "GT"
    },
    "4420": {
      "op": "ISZERO"
    },
    "4421": {
      "op": "PUSH2",
      "value": "0x114C"
    },
    "4424": {
      "op": "JUMPI"
    },
    "4425": {
      "op": "DUP3"
    },
    "4426": {
      "op": "DUP4"
    },
    "4427": {
      "op": "REVERT"
    },
    "4428": {
      "op": "JUMPDEST"
    },
    "4429": {
      "op": "DUP2"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4432": {
      "op": "DUP6"
    },
    "4433": {
      "op": "ADD"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4436": {
      "op": "DUP4"
    },
    "4437": {
      "op": "ADD"
    },
    "4438": {
      "op": "CALLDATACOPY"
    },
    "4439": {
      "op": "SWAP1"
    },
    "4440": {
      "op": "DUP2"
    },
    "4441": {
      "op": "ADD"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4444": {
      "op": "ADD"
    },
    "4445": {
      "op": "SWAP2"
    },
    "4446": {
      "op": "SWAP1"
    },
    "4447": {
      "op": "SWAP2"
    },
    "4448": {
      "op": "MSTORE"
    },
    "4449": {
      "op": "SWAP3"
    },
    "4450": {
      "op": "SWAP2"
    },
    "4451": {
      "op": "POP"
    },
    "4452": {
      "op": "POP"
    },
    "4453": {
      "jump": "o",
      "op": "JUMP"
    },
    "4454": {
      "op": "JUMPDEST"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4459": {
      "op": "DUP3"
    },
    "4460": {
      "op": "DUP5"
    },
    "4461": {
      "op": "SUB"
    },
    "4462": {
      "op": "SLT"
    },
    "4463": {
      "op": "ISZERO"
    },
    "4464": {
      "op": "PUSH2",
      "value": "0x1177"
    },
    "4467": {
      "op": "JUMPI"
    },
    "4468": {
      "op": "DUP1"
    },
    "4469": {
      "op": "DUP2"
    },
    "4470": {
      "op": "REVERT"
    },
    "4471": {
      "op": "JUMPDEST"
    },
    "4472": {
      "op": "PUSH2",
      "value": "0x6C1"
    },
    "4475": {
      "op": "DUP3"
    },
    "4476": {
      "op": "PUSH2",
      "value": "0x106C"
    },
    "4479": {
      "jump": "i",
      "op": "JUMP"
    },
    "4480": {
      "op": "JUMPDEST"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4483": {
      "op": "DUP1"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4486": {
      "op": "DUP4"
    },
    "4487": {
      "op": "DUP6"
    },
    "4488": {
      "op": "SUB"
    },
    "4489": {
      "op": "SLT"
    },
    "4490": {
      "op": "ISZERO"
    },
    "4491": {
      "op": "PUSH2",
      "value": "0x1192"
    },
    "4494": {
      "op": "JUMPI"
    },
    "4495": {
      "op": "DUP1"
    },
    "4496": {
      "op": "DUP2"
    },
    "4497": {
      "op": "REVERT"
    },
    "4498": {
      "op": "JUMPDEST"
    },
    "4499": {
      "op": "PUSH2",
      "value": "0x119B"
    },
    "4502": {
      "op": "DUP4"
    },
    "4503": {
      "op": "PUSH2",
      "value": "0x106C"
    },
    "4506": {
      "jump": "i",
      "op": "JUMP"
    },
    "4507": {
      "op": "JUMPDEST"
    },
    "4508": {
      "op": "SWAP2"
    },
    "4509": {
      "op": "POP"
    },
    "4510": {
      "op": "PUSH2",
      "value": "0x11A9"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4515": {
      "op": "DUP5"
    },
    "4516": {
      "op": "ADD"
    },
    "4517": {
      "op": "PUSH2",
      "value": "0x106C"
    },
    "4520": {
      "jump": "i",
      "op": "JUMP"
    },
    "4521": {
      "op": "JUMPDEST"
    },
    "4522": {
      "op": "SWAP1"
    },
    "4523": {
      "op": "POP"
    },
    "4524": {
      "op": "SWAP3"
    },
    "4525": {
      "op": "POP"
    },
    "4526": {
      "op": "SWAP3"
    },
    "4527": {
      "op": "SWAP1"
    },
    "4528": {
      "op": "POP"
    },
    "4529": {
      "jump": "o",
      "op": "JUMP"
    },
    "4530": {
      "op": "JUMPDEST"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4533": {
      "op": "DUP1"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4536": {
      "op": "DUP1"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4541": {
      "op": "DUP7"
    },
    "4542": {
      "op": "DUP9"
    },
    "4543": {
      "op": "SUB"
    },
    "4544": {
      "op": "SLT"
    },
    "4545": {
      "op": "ISZERO"
    },
    "4546": {
      "op": "PUSH2",
      "value": "0x11C9"
    },
    "4549": {
      "op": "JUMPI"
    },
    "4550": {
      "op": "DUP1"
    },
    "4551": {
      "op": "DUP2"
    },
    "4552": {
      "op": "REVERT"
    },
    "4553": {
      "op": "JUMPDEST"
    },
    "4554": {
      "op": "PUSH2",
      "value": "0x11D2"
    },
    "4557": {
      "op": "DUP7"
    },
    "4558": {
      "op": "PUSH2",
      "value": "0x106C"
    },
    "4561": {
      "jump": "i",
      "op": "JUMP"
    },
    "4562": {
      "op": "JUMPDEST"
    },
    "4563": {
      "op": "SWAP5"
    },
    "4564": {
      "op": "POP"
    },
    "4565": {
      "op": "PUSH2",
      "value": "0x11E0"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4570": {
      "op": "DUP8"
    },
    "4571": {
      "op": "ADD"
    },
    "4572": {
      "op": "PUSH2",
      "value": "0x106C"
    },
    "4575": {
      "jump": "i",
      "op": "JUMP"
    },
    "4576": {
      "op": "JUMPDEST"
    },
    "4577": {
      "op": "SWAP4"
    },
    "4578": {
      "op": "POP"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4581": {
      "op": "DUP7"
    },
    "4582": {
      "op": "ADD"
    },
    "4583": {
      "op": "CALLDATALOAD"
    },
    "4584": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4593": {
      "op": "DUP1"
    },
    "4594": {
      "op": "DUP3"
    },
    "4595": {
      "op": "GT"
    },
    "4596": {
      "op": "ISZERO"
    },
    "4597": {
      "op": "PUSH2",
      "value": "0x11FC"
    },
    "4600": {
      "op": "JUMPI"
    },
    "4601": {
      "op": "DUP3"
    },
    "4602": {
      "op": "DUP4"
    },
    "4603": {
      "op": "REVERT"
    },
    "4604": {
      "op": "JUMPDEST"
    },
    "4605": {
      "op": "PUSH2",
      "value": "0x1208"
    },
    "4608": {
      "op": "DUP10"
    },
    "4609": {
      "op": "DUP4"
    },
    "4610": {
      "op": "DUP11"
    },
    "4611": {
      "op": "ADD"
    },
    "4612": {
      "op": "PUSH2",
      "value": "0x1083"
    },
    "4615": {
      "jump": "i",
      "op": "JUMP"
    },
    "4616": {
      "op": "JUMPDEST"
    },
    "4617": {
      "op": "SWAP5"
    },
    "4618": {
      "op": "POP"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4621": {
      "op": "DUP9"
    },
    "4622": {
      "op": "ADD"
    },
    "4623": {
      "op": "CALLDATALOAD"
    },
    "4624": {
      "op": "SWAP2"
    },
    "4625": {
      "op": "POP"
    },
    "4626": {
      "op": "DUP1"
    },
    "4627": {
      "op": "DUP3"
    },
    "4628": {
      "op": "GT"
    },
    "4629": {
      "op": "ISZERO"
    },
    "4630": {
      "op": "PUSH2",
      "value": "0x121D"
    },
    "4633": {
      "op": "JUMPI"
    },
    "4634": {
      "op": "DUP3"
    },
    "4635": {
      "op": "DUP4"
    },
    "4636": {
      "op": "REVERT"
    },
    "4637": {
      "op": "JUMPDEST"
    },
    "4638": {
      "op": "PUSH2",
      "value": "0x1229"
    },
    "4641": {
      "op": "DUP10"
    },
    "4642": {
      "op": "DUP4"
    },
    "4643": {
      "op": "DUP11"
    },
    "4644": {
      "op": "ADD"
    },
    "4645": {
      "op": "PUSH2",
      "value": "0x1083"
    },
    "4648": {
      "jump": "i",
      "op": "JUMP"
    },
    "4649": {
      "op": "JUMPDEST"
    },
    "4650": {
      "op": "SWAP4"
    },
    "4651": {
      "op": "POP"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4654": {
      "op": "DUP9"
    },
    "4655": {
      "op": "ADD"
    },
    "4656": {
      "op": "CALLDATALOAD"
    },
    "4657": {
      "op": "SWAP2"
    },
    "4658": {
      "op": "POP"
    },
    "4659": {
      "op": "DUP1"
    },
    "4660": {
      "op": "DUP3"
    },
    "4661": {
      "op": "GT"
    },
    "4662": {
      "op": "ISZERO"
    },
    "4663": {
      "op": "PUSH2",
      "value": "0x123E"
    },
    "4666": {
      "op": "JUMPI"
    },
    "4667": {
      "op": "DUP3"
    },
    "4668": {
      "op": "DUP4"
    },
    "4669": {
      "op": "REVERT"
    },
    "4670": {
      "op": "JUMPDEST"
    },
    "4671": {
      "op": "POP"
    },
    "4672": {
      "op": "PUSH2",
      "value": "0x124B"
    },
    "4675": {
      "op": "DUP9"
    },
    "4676": {
      "op": "DUP3"
    },
    "4677": {
      "op": "DUP10"
    },
    "4678": {
      "op": "ADD"
    },
    "4679": {
      "op": "PUSH2",
      "value": "0x10F7"
    },
    "4682": {
      "jump": "i",
      "op": "JUMP"
    },
    "4683": {
      "op": "JUMPDEST"
    },
    "4684": {
      "op": "SWAP2"
    },
    "4685": {
      "op": "POP"
    },
    "4686": {
      "op": "POP"
    },
    "4687": {
      "op": "SWAP3"
    },
    "4688": {
      "op": "SWAP6"
    },
    "4689": {
      "op": "POP"
    },
    "4690": {
      "op": "SWAP3"
    },
    "4691": {
      "op": "SWAP6"
    },
    "4692": {
      "op": "SWAP1"
    },
    "4693": {
      "op": "SWAP4"
    },
    "4694": {
      "op": "POP"
    },
    "4695": {
      "jump": "o",
      "op": "JUMP"
    },
    "4696": {
      "op": "JUMPDEST"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4699": {
      "op": "DUP1"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4702": {
      "op": "DUP1"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4707": {
      "op": "DUP7"
    },
    "4708": {
      "op": "DUP9"
    },
    "4709": {
      "op": "SUB"
    },
    "4710": {
      "op": "SLT"
    },
    "4711": {
      "op": "ISZERO"
    },
    "4712": {
      "op": "PUSH2",
      "value": "0x126F"
    },
    "4715": {
      "op": "JUMPI"
    },
    "4716": {
      "op": "DUP1"
    },
    "4717": {
      "op": "DUP2"
    },
    "4718": {
      "op": "REVERT"
    },
    "4719": {
      "op": "JUMPDEST"
    },
    "4720": {
      "op": "PUSH2",
      "value": "0x1278"
    },
    "4723": {
      "op": "DUP7"
    },
    "4724": {
      "op": "PUSH2",
      "value": "0x106C"
    },
    "4727": {
      "jump": "i",
      "op": "JUMP"
    },
    "4728": {
      "op": "JUMPDEST"
    },
    "4729": {
      "op": "SWAP5"
    },
    "4730": {
      "op": "POP"
    },
    "4731": {
      "op": "PUSH2",
      "value": "0x1286"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4736": {
      "op": "DUP8"
    },
    "4737": {
      "op": "ADD"
    },
    "4738": {
      "op": "PUSH2",
      "value": "0x106C"
    },
    "4741": {
      "jump": "i",
      "op": "JUMP"
    },
    "4742": {
      "op": "JUMPDEST"
    },
    "4743": {
      "op": "SWAP4"
    },
    "4744": {
      "op": "POP"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4747": {
      "op": "DUP7"
    },
    "4748": {
      "op": "ADD"
    },
    "4749": {
      "op": "CALLDATALOAD"
    },
    "4750": {
      "op": "SWAP3"
    },
    "4751": {
      "op": "POP"
    },
    "4752": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4754": {
      "op": "DUP7"
    },
    "4755": {
      "op": "ADD"
    },
    "4756": {
      "op": "CALLDATALOAD"
    },
    "4757": {
      "op": "SWAP2"
    },
    "4758": {
      "op": "POP"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4761": {
      "op": "DUP7"
    },
    "4762": {
      "op": "ADD"
    },
    "4763": {
      "op": "CALLDATALOAD"
    },
    "4764": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4773": {
      "op": "DUP2"
    },
    "4774": {
      "op": "GT"
    },
    "4775": {
      "op": "ISZERO"
    },
    "4776": {
      "op": "PUSH2",
      "value": "0x12AF"
    },
    "4779": {
      "op": "JUMPI"
    },
    "4780": {
      "op": "DUP2"
    },
    "4781": {
      "op": "DUP3"
    },
    "4782": {
      "op": "REVERT"
    },
    "4783": {
      "op": "JUMPDEST"
    },
    "4784": {
      "op": "PUSH2",
      "value": "0x124B"
    },
    "4787": {
      "op": "DUP9"
    },
    "4788": {
      "op": "DUP3"
    },
    "4789": {
      "op": "DUP10"
    },
    "4790": {
      "op": "ADD"
    },
    "4791": {
      "op": "PUSH2",
      "value": "0x10F7"
    },
    "4794": {
      "jump": "i",
      "op": "JUMP"
    },
    "4795": {
      "op": "JUMPDEST"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4798": {
      "op": "DUP1"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4801": {
      "op": "DUP4"
    },
    "4802": {
      "op": "DUP6"
    },
    "4803": {
      "op": "SUB"
    },
    "4804": {
      "op": "SLT"
    },
    "4805": {
      "op": "ISZERO"
    },
    "4806": {
      "op": "PUSH2",
      "value": "0x12CD"
    },
    "4809": {
      "op": "JUMPI"
    },
    "4810": {
      "op": "DUP2"
    },
    "4811": {
      "op": "DUP3"
    },
    "4812": {
      "op": "REVERT"
    },
    "4813": {
      "op": "JUMPDEST"
    },
    "4814": {
      "op": "PUSH2",
      "value": "0x12D6"
    },
    "4817": {
      "op": "DUP4"
    },
    "4818": {
      "op": "PUSH2",
      "value": "0x106C"
    },
    "4821": {
      "jump": "i",
      "op": "JUMP"
    },
    "4822": {
      "op": "JUMPDEST"
    },
    "4823": {
      "op": "SWAP2"
    },
    "4824": {
      "op": "POP"
    },
    "4825": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4827": {
      "op": "DUP4"
    },
    "4828": {
      "op": "ADD"
    },
    "4829": {
      "op": "CALLDATALOAD"
    },
    "4830": {
      "op": "DUP1"
    },
    "4831": {
      "op": "ISZERO"
    },
    "4832": {
      "op": "ISZERO"
    },
    "4833": {
      "op": "DUP2"
    },
    "4834": {
      "op": "EQ"
    },
    "4835": {
      "op": "PUSH2",
      "value": "0x12EA"
    },
    "4838": {
      "op": "JUMPI"
    },
    "4839": {
      "op": "DUP2"
    },
    "4840": {
      "op": "DUP3"
    },
    "4841": {
      "op": "REVERT"
    },
    "4842": {
      "op": "JUMPDEST"
    },
    "4843": {
      "op": "DUP1"
    },
    "4844": {
      "op": "SWAP2"
    },
    "4845": {
      "op": "POP"
    },
    "4846": {
      "op": "POP"
    },
    "4847": {
      "op": "SWAP3"
    },
    "4848": {
      "op": "POP"
    },
    "4849": {
      "op": "SWAP3"
    },
    "4850": {
      "op": "SWAP1"
    },
    "4851": {
      "op": "POP"
    },
    "4852": {
      "jump": "o",
      "op": "JUMP"
    },
    "4853": {
      "op": "JUMPDEST"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4856": {
      "op": "DUP1"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4859": {
      "op": "DUP4"
    },
    "4860": {
      "op": "DUP6"
    },
    "4861": {
      "op": "SUB"
    },
    "4862": {
      "op": "SLT"
    },
    "4863": {
      "op": "ISZERO"
    },
    "4864": {
      "op": "PUSH2",
      "value": "0x1307"
    },
    "4867": {
      "op": "JUMPI"
    },
    "4868": {
      "op": "DUP2"
    },
    "4869": {
      "op": "DUP3"
    },
    "4870": {
      "op": "REVERT"
    },
    "4871": {
      "op": "JUMPDEST"
    },
    "4872": {
      "op": "PUSH2",
      "value": "0x1310"
    },
    "4875": {
      "op": "DUP4"
    },
    "4876": {
      "op": "PUSH2",
      "value": "0x106C"
    },
    "4879": {
      "jump": "i",
      "op": "JUMP"
    },
    "4880": {
      "op": "JUMPDEST"
    },
    "4881": {
      "op": "SWAP5"
    },
    "4882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4884": {
      "op": "SWAP4"
    },
    "4885": {
      "op": "SWAP1"
    },
    "4886": {
      "op": "SWAP4"
    },
    "4887": {
      "op": "ADD"
    },
    "4888": {
      "op": "CALLDATALOAD"
    },
    "4889": {
      "op": "SWAP4"
    },
    "4890": {
      "op": "POP"
    },
    "4891": {
      "op": "POP"
    },
    "4892": {
      "op": "POP"
    },
    "4893": {
      "jump": "o",
      "op": "JUMP"
    },
    "4894": {
      "op": "JUMPDEST"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4897": {
      "op": "DUP1"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4900": {
      "op": "DUP4"
    },
    "4901": {
      "op": "DUP6"
    },
    "4902": {
      "op": "SUB"
    },
    "4903": {
      "op": "SLT"
    },
    "4904": {
      "op": "ISZERO"
    },
    "4905": {
      "op": "PUSH2",
      "value": "0x1330"
    },
    "4908": {
      "op": "JUMPI"
    },
    "4909": {
      "op": "DUP2"
    },
    "4910": {
      "op": "DUP3"
    },
    "4911": {
      "op": "REVERT"
    },
    "4912": {
      "op": "JUMPDEST"
    },
    "4913": {
      "op": "DUP3"
    },
    "4914": {
      "op": "CALLDATALOAD"
    },
    "4915": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4924": {
      "op": "DUP1"
    },
    "4925": {
      "op": "DUP3"
    },
    "4926": {
      "op": "GT"
    },
    "4927": {
      "op": "ISZERO"
    },
    "4928": {
      "op": "PUSH2",
      "value": "0x1347"
    },
    "4931": {
      "op": "JUMPI"
    },
    "4932": {
      "op": "DUP4"
    },
    "4933": {
      "op": "DUP5"
    },
    "4934": {
      "op": "REVERT"
    },
    "4935": {
      "op": "JUMPDEST"
    },
    "4936": {
      "op": "DUP2"
    },
    "4937": {
      "op": "DUP6"
    },
    "4938": {
      "op": "ADD"
    },
    "4939": {
      "op": "SWAP2"
    },
    "4940": {
      "op": "POP"
    },
    "4941": {
      "op": "DUP6"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4944": {
      "op": "DUP4"
    },
    "4945": {
      "op": "ADD"
    },
    "4946": {
      "op": "SLT"
    },
    "4947": {
      "op": "PUSH2",
      "value": "0x135A"
    },
    "4950": {
      "op": "JUMPI"
    },
    "4951": {
      "op": "DUP4"
    },
    "4952": {
      "op": "DUP5"
    },
    "4953": {
      "op": "REVERT"
    },
    "4954": {
      "op": "JUMPDEST"
    },
    "4955": {
      "op": "DUP2"
    },
    "4956": {
      "op": "CALLDATALOAD"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4959": {
      "op": "PUSH2",
      "value": "0x1367"
    },
    "4962": {
      "op": "DUP3"
    },
    "4963": {
      "op": "PUSH2",
      "value": "0x168C"
    },
    "4966": {
      "jump": "i",
      "op": "JUMP"
    },
    "4967": {
      "op": "JUMPDEST"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4970": {
      "op": "MLOAD"
    },
    "4971": {
      "op": "PUSH2",
      "value": "0x1374"
    },
    "4974": {
      "op": "DUP3"
    },
    "4975": {
      "op": "DUP3"
    },
    "4976": {
      "op": "PUSH2",
      "value": "0x171A"
    },
    "4979": {
      "jump": "i",
      "op": "JUMP"
    },
    "4980": {
      "op": "JUMPDEST"
    },
    "4981": {
      "op": "DUP4"
    },
    "4982": {
      "op": "DUP2"
    },
    "4983": {
      "op": "MSTORE"
    },
    "4984": {
      "op": "DUP3"
    },
    "4985": {
      "op": "DUP2"
    },
    "4986": {
      "op": "ADD"
    },
    "4987": {
      "op": "SWAP2"
    },
    "4988": {
      "op": "POP"
    },
    "4989": {
      "op": "DUP6"
    },
    "4990": {
      "op": "DUP4"
    },
    "4991": {
      "op": "ADD"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4994": {
      "op": "DUP6"
    },
    "4995": {
      "op": "SWAP1"
    },
    "4996": {
      "op": "SHL"
    },
    "4997": {
      "op": "DUP8"
    },
    "4998": {
      "op": "ADD"
    },
    "4999": {
      "op": "DUP5"
    },
    "5000": {
      "op": "ADD"
    },
    "5001": {
      "op": "DUP12"
    },
    "5002": {
      "op": "LT"
    },
    "5003": {
      "op": "ISZERO"
    },
    "5004": {
      "op": "PUSH2",
      "value": "0x1393"
    },
    "5007": {
      "op": "JUMPI"
    },
    "5008": {
      "op": "DUP9"
    },
    "5009": {
      "op": "DUP10"
    },
    "5010": {
      "op": "REVERT"
    },
    "5011": {
      "op": "JUMPDEST"
    },
    "5012": {
      "op": "DUP9"
    },
    "5013": {
      "op": "SWAP7"
    },
    "5014": {
      "op": "POP"
    },
    "5015": {
      "op": "JUMPDEST"
    },
    "5016": {
      "op": "DUP5"
    },
    "5017": {
      "op": "DUP8"
    },
    "5018": {
      "op": "LT"
    },
    "5019": {
      "op": "ISZERO"
    },
    "5020": {
      "op": "PUSH2",
      "value": "0x13BC"
    },
    "5023": {
      "op": "JUMPI"
    },
    "5024": {
      "op": "PUSH2",
      "value": "0x13A8"
    },
    "5027": {
      "op": "DUP2"
    },
    "5028": {
      "op": "PUSH2",
      "value": "0x106C"
    },
    "5031": {
      "jump": "i",
      "op": "JUMP"
    },
    "5032": {
      "op": "JUMPDEST"
    },
    "5033": {
      "op": "DUP4"
    },
    "5034": {
      "op": "MSTORE"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5037": {
      "op": "SWAP7"
    },
    "5038": {
      "op": "SWAP1"
    },
    "5039": {
      "op": "SWAP7"
    },
    "5040": {
      "op": "ADD"
    },
    "5041": {
      "op": "SWAP6"
    },
    "5042": {
      "op": "SWAP2"
    },
    "5043": {
      "op": "DUP4"
    },
    "5044": {
      "op": "ADD"
    },
    "5045": {
      "op": "SWAP2"
    },
    "5046": {
      "op": "DUP4"
    },
    "5047": {
      "op": "ADD"
    },
    "5048": {
      "op": "PUSH2",
      "value": "0x1397"
    },
    "5051": {
      "op": "JUMP"
    },
    "5052": {
      "op": "JUMPDEST"
    },
    "5053": {
      "op": "POP"
    },
    "5054": {
      "op": "SWAP7"
    },
    "5055": {
      "op": "POP"
    },
    "5056": {
      "op": "POP"
    },
    "5057": {
      "op": "DUP7"
    },
    "5058": {
      "op": "ADD"
    },
    "5059": {
      "op": "CALLDATALOAD"
    },
    "5060": {
      "op": "SWAP3"
    },
    "5061": {
      "op": "POP"
    },
    "5062": {
      "op": "POP"
    },
    "5063": {
      "op": "DUP1"
    },
    "5064": {
      "op": "DUP3"
    },
    "5065": {
      "op": "GT"
    },
    "5066": {
      "op": "ISZERO"
    },
    "5067": {
      "op": "PUSH2",
      "value": "0x13D2"
    },
    "5070": {
      "op": "JUMPI"
    },
    "5071": {
      "op": "DUP3"
    },
    "5072": {
      "op": "DUP4"
    },
    "5073": {
      "op": "REVERT"
    },
    "5074": {
      "op": "JUMPDEST"
    },
    "5075": {
      "op": "POP"
    },
    "5076": {
      "op": "PUSH2",
      "value": "0x13DF"
    },
    "5079": {
      "op": "DUP6"
    },
    "5080": {
      "op": "DUP3"
    },
    "5081": {
      "op": "DUP7"
    },
    "5082": {
      "op": "ADD"
    },
    "5083": {
      "op": "PUSH2",
      "value": "0x1083"
    },
    "5086": {
      "jump": "i",
      "op": "JUMP"
    },
    "5087": {
      "op": "JUMPDEST"
    },
    "5088": {
      "op": "SWAP2"
    },
    "5089": {
      "op": "POP"
    },
    "5090": {
      "op": "POP"
    },
    "5091": {
      "op": "SWAP3"
    },
    "5092": {
      "op": "POP"
    },
    "5093": {
      "op": "SWAP3"
    },
    "5094": {
      "op": "SWAP1"
    },
    "5095": {
      "op": "POP"
    },
    "5096": {
      "jump": "o",
      "op": "JUMP"
    },
    "5097": {
      "op": "JUMPDEST"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5102": {
      "op": "DUP3"
    },
    "5103": {
      "op": "DUP5"
    },
    "5104": {
      "op": "SUB"
    },
    "5105": {
      "op": "SLT"
    },
    "5106": {
      "op": "ISZERO"
    },
    "5107": {
      "op": "PUSH2",
      "value": "0x13FA"
    },
    "5110": {
      "op": "JUMPI"
    },
    "5111": {
      "op": "DUP1"
    },
    "5112": {
      "op": "DUP2"
    },
    "5113": {
      "op": "REVERT"
    },
    "5114": {
      "op": "JUMPDEST"
    },
    "5115": {
      "op": "DUP2"
    },
    "5116": {
      "op": "CALLDATALOAD"
    },
    "5117": {
      "op": "PUSH2",
      "value": "0x6C1"
    },
    "5120": {
      "op": "DUP2"
    },
    "5121": {
      "op": "PUSH2",
      "value": "0x1837"
    },
    "5124": {
      "jump": "i",
      "op": "JUMP"
    },
    "5125": {
      "op": "JUMPDEST"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5130": {
      "op": "DUP3"
    },
    "5131": {
      "op": "DUP5"
    },
    "5132": {
      "op": "SUB"
    },
    "5133": {
      "op": "SLT"
    },
    "5134": {
      "op": "ISZERO"
    },
    "5135": {
      "op": "PUSH2",
      "value": "0x1416"
    },
    "5138": {
      "op": "JUMPI"
    },
    "5139": {
      "op": "DUP1"
    },
    "5140": {
      "op": "DUP2"
    },
    "5141": {
      "op": "REVERT"
    },
    "5142": {
      "op": "JUMPDEST"
    },
    "5143": {
      "op": "DUP2"
    },
    "5144": {
      "op": "MLOAD"
    },
    "5145": {
      "op": "PUSH2",
      "value": "0x6C1"
    },
    "5148": {
      "op": "DUP2"
    },
    "5149": {
      "op": "PUSH2",
      "value": "0x1837"
    },
    "5152": {
      "jump": "i",
      "op": "JUMP"
    },
    "5153": {
      "op": "JUMPDEST"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5158": {
      "op": "DUP3"
    },
    "5159": {
      "op": "DUP5"
    },
    "5160": {
      "op": "SUB"
    },
    "5161": {
      "op": "SLT"
    },
    "5162": {
      "op": "ISZERO"
    },
    "5163": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "5166": {
      "op": "JUMPI"
    },
    "5167": {
      "op": "DUP1"
    },
    "5168": {
      "op": "DUP2"
    },
    "5169": {
      "op": "REVERT"
    },
    "5170": {
      "op": "JUMPDEST"
    },
    "5171": {
      "op": "POP"
    },
    "5172": {
      "op": "CALLDATALOAD"
    },
    "5173": {
      "op": "SWAP2"
    },
    "5174": {
      "op": "SWAP1"
    },
    "5175": {
      "op": "POP"
    },
    "5176": {
      "jump": "o",
      "op": "JUMP"
    },
    "5177": {
      "op": "JUMPDEST"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5180": {
      "op": "DUP2"
    },
    "5181": {
      "op": "MLOAD"
    },
    "5182": {
      "op": "DUP1"
    },
    "5183": {
      "op": "DUP5"
    },
    "5184": {
      "op": "MSTORE"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5187": {
      "op": "DUP1"
    },
    "5188": {
      "op": "DUP6"
    },
    "5189": {
      "op": "ADD"
    },
    "5190": {
      "op": "SWAP5"
    },
    "5191": {
      "op": "POP"
    },
    "5192": {
      "op": "DUP1"
    },
    "5193": {
      "op": "DUP5"
    },
    "5194": {
      "op": "ADD"
    },
    "5195": {
      "op": "DUP4"
    },
    "5196": {
      "op": "JUMPDEST"
    },
    "5197": {
      "op": "DUP4"
    },
    "5198": {
      "op": "DUP2"
    },
    "5199": {
      "op": "LT"
    },
    "5200": {
      "op": "ISZERO"
    },
    "5201": {
      "op": "PUSH2",
      "value": "0x1468"
    },
    "5204": {
      "op": "JUMPI"
    },
    "5205": {
      "op": "DUP2"
    },
    "5206": {
      "op": "MLOAD"
    },
    "5207": {
      "op": "DUP8"
    },
    "5208": {
      "op": "MSTORE"
    },
    "5209": {
      "op": "SWAP6"
    },
    "5210": {
      "op": "DUP3"
    },
    "5211": {
      "op": "ADD"
    },
    "5212": {
      "op": "SWAP6"
    },
    "5213": {
      "op": "SWAP1"
    },
    "5214": {
      "op": "DUP3"
    },
    "5215": {
      "op": "ADD"
    },
    "5216": {
      "op": "SWAP1"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5219": {
      "op": "ADD"
    },
    "5220": {
      "op": "PUSH2",
      "value": "0x144C"
    },
    "5223": {
      "op": "JUMP"
    },
    "5224": {
      "op": "JUMPDEST"
    },
    "5225": {
      "op": "POP"
    },
    "5226": {
      "op": "SWAP5"
    },
    "5227": {
      "op": "SWAP6"
    },
    "5228": {
      "op": "SWAP5"
    },
    "5229": {
      "op": "POP"
    },
    "5230": {
      "op": "POP"
    },
    "5231": {
      "op": "POP"
    },
    "5232": {
      "op": "POP"
    },
    "5233": {
      "op": "POP"
    },
    "5234": {
      "jump": "o",
      "op": "JUMP"
    },
    "5235": {
      "op": "JUMPDEST"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5238": {
      "op": "DUP2"
    },
    "5239": {
      "op": "MLOAD"
    },
    "5240": {
      "op": "DUP1"
    },
    "5241": {
      "op": "DUP5"
    },
    "5242": {
      "op": "MSTORE"
    },
    "5243": {
      "op": "DUP2"
    },
    "5244": {
      "op": "JUMPDEST"
    },
    "5245": {
      "op": "DUP2"
    },
    "5246": {
      "op": "DUP2"
    },
    "5247": {
      "op": "LT"
    },
    "5248": {
      "op": "ISZERO"
    },
    "5249": {
      "op": "PUSH2",
      "value": "0x1498"
    },
    "5252": {
      "op": "JUMPI"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5255": {
      "op": "DUP2"
    },
    "5256": {
      "op": "DUP6"
    },
    "5257": {
      "op": "ADD"
    },
    "5258": {
      "op": "DUP2"
    },
    "5259": {
      "op": "ADD"
    },
    "5260": {
      "op": "MLOAD"
    },
    "5261": {
      "op": "DUP7"
    },
    "5262": {
      "op": "DUP4"
    },
    "5263": {
      "op": "ADD"
    },
    "5264": {
      "op": "DUP3"
    },
    "5265": {
      "op": "ADD"
    },
    "5266": {
      "op": "MSTORE"
    },
    "5267": {
      "op": "ADD"
    },
    "5268": {
      "op": "PUSH2",
      "value": "0x147C"
    },
    "5271": {
      "op": "JUMP"
    },
    "5272": {
      "op": "JUMPDEST"
    },
    "5273": {
      "op": "DUP2"
    },
    "5274": {
      "op": "DUP2"
    },
    "5275": {
      "op": "GT"
    },
    "5276": {
      "op": "ISZERO"
    },
    "5277": {
      "op": "PUSH2",
      "value": "0x14A9"
    },
    "5280": {
      "op": "JUMPI"
    },
    "5281": {
      "op": "DUP3"
    },
    "5282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5284": {
      "op": "DUP4"
    },
    "5285": {
      "op": "DUP8"
    },
    "5286": {
      "op": "ADD"
    },
    "5287": {
      "op": "ADD"
    },
    "5288": {
      "op": "MSTORE"
    },
    "5289": {
      "op": "JUMPDEST"
    },
    "5290": {
      "op": "POP"
    },
    "5291": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5293": {
      "op": "ADD"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5296": {
      "op": "NOT"
    },
    "5297": {
      "op": "AND"
    },
    "5298": {
      "op": "SWAP3"
    },
    "5299": {
      "op": "SWAP1"
    },
    "5300": {
      "op": "SWAP3"
    },
    "5301": {
      "op": "ADD"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5304": {
      "op": "ADD"
    },
    "5305": {
      "op": "SWAP3"
    },
    "5306": {
      "op": "SWAP2"
    },
    "5307": {
      "op": "POP"
    },
    "5308": {
      "op": "POP"
    },
    "5309": {
      "jump": "o",
      "op": "JUMP"
    },
    "5310": {
      "op": "JUMPDEST"
    },
    "5311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5317": {
      "op": "SHL"
    },
    "5318": {
      "op": "SUB"
    },
    "5319": {
      "op": "DUP7"
    },
    "5320": {
      "op": "DUP2"
    },
    "5321": {
      "op": "AND"
    },
    "5322": {
      "op": "DUP3"
    },
    "5323": {
      "op": "MSTORE"
    },
    "5324": {
      "op": "DUP6"
    },
    "5325": {
      "op": "AND"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5328": {
      "op": "DUP3"
    },
    "5329": {
      "op": "ADD"
    },
    "5330": {
      "op": "MSTORE"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5335": {
      "op": "DUP3"
    },
    "5336": {
      "op": "ADD"
    },
    "5337": {
      "op": "DUP2"
    },
    "5338": {
      "op": "SWAP1"
    },
    "5339": {
      "op": "MSTORE"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5342": {
      "op": "SWAP1"
    },
    "5343": {
      "op": "PUSH2",
      "value": "0x14EA"
    },
    "5346": {
      "op": "SWAP1"
    },
    "5347": {
      "op": "DUP4"
    },
    "5348": {
      "op": "ADD"
    },
    "5349": {
      "op": "DUP7"
    },
    "5350": {
      "op": "PUSH2",
      "value": "0x1439"
    },
    "5353": {
      "jump": "i",
      "op": "JUMP"
    },
    "5354": {
      "op": "JUMPDEST"
    },
    "5355": {
      "op": "DUP3"
    },
    "5356": {
      "op": "DUP2"
    },
    "5357": {
      "op": "SUB"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5360": {
      "op": "DUP5"
    },
    "5361": {
      "op": "ADD"
    },
    "5362": {
      "op": "MSTORE"
    },
    "5363": {
      "op": "PUSH2",
      "value": "0x14FC"
    },
    "5366": {
      "op": "DUP2"
    },
    "5367": {
      "op": "DUP7"
    },
    "5368": {
      "op": "PUSH2",
      "value": "0x1439"
    },
    "5371": {
      "jump": "i",
      "op": "JUMP"
    },
    "5372": {
      "op": "JUMPDEST"
    },
    "5373": {
      "op": "SWAP1"
    },
    "5374": {
      "op": "POP"
    },
    "5375": {
      "op": "DUP3"
    },
    "5376": {
      "op": "DUP2"
    },
    "5377": {
      "op": "SUB"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5380": {
      "op": "DUP5"
    },
    "5381": {
      "op": "ADD"
    },
    "5382": {
      "op": "MSTORE"
    },
    "5383": {
      "op": "PUSH2",
      "value": "0x1510"
    },
    "5386": {
      "op": "DUP2"
    },
    "5387": {
      "op": "DUP6"
    },
    "5388": {
      "op": "PUSH2",
      "value": "0x1473"
    },
    "5391": {
      "jump": "i",
      "op": "JUMP"
    },
    "5392": {
      "op": "JUMPDEST"
    },
    "5393": {
      "op": "SWAP9"
    },
    "5394": {
      "op": "SWAP8"
    },
    "5395": {
      "op": "POP"
    },
    "5396": {
      "op": "POP"
    },
    "5397": {
      "op": "POP"
    },
    "5398": {
      "op": "POP"
    },
    "5399": {
      "op": "POP"
    },
    "5400": {
      "op": "POP"
    },
    "5401": {
      "op": "POP"
    },
    "5402": {
      "op": "POP"
    },
    "5403": {
      "jump": "o",
      "op": "JUMP"
    },
    "5404": {
      "op": "JUMPDEST"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5411": {
      "op": "SHL"
    },
    "5412": {
      "op": "SUB"
    },
    "5413": {
      "op": "DUP7"
    },
    "5414": {
      "op": "DUP2"
    },
    "5415": {
      "op": "AND"
    },
    "5416": {
      "op": "DUP3"
    },
    "5417": {
      "op": "MSTORE"
    },
    "5418": {
      "op": "DUP6"
    },
    "5419": {
      "op": "AND"
    },
    "5420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5422": {
      "op": "DUP3"
    },
    "5423": {
      "op": "ADD"
    },
    "5424": {
      "op": "MSTORE"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5427": {
      "op": "DUP2"
    },
    "5428": {
      "op": "ADD"
    },
    "5429": {
      "op": "DUP5"
    },
    "5430": {
      "op": "SWAP1"
    },
    "5431": {
      "op": "MSTORE"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5434": {
      "op": "DUP2"
    },
    "5435": {
      "op": "ADD"
    },
    "5436": {
      "op": "DUP4"
    },
    "5437": {
      "op": "SWAP1"
    },
    "5438": {
      "op": "MSTORE"
    },
    "5439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5443": {
      "op": "DUP3"
    },
    "5444": {
      "op": "ADD"
    },
    "5445": {
      "op": "DUP2"
    },
    "5446": {
      "op": "SWAP1"
    },
    "5447": {
      "op": "MSTORE"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5450": {
      "op": "SWAP1"
    },
    "5451": {
      "op": "PUSH2",
      "value": "0x1556"
    },
    "5454": {
      "op": "SWAP1"
    },
    "5455": {
      "op": "DUP4"
    },
    "5456": {
      "op": "ADD"
    },
    "5457": {
      "op": "DUP5"
    },
    "5458": {
      "op": "PUSH2",
      "value": "0x1473"
    },
    "5461": {
      "jump": "i",
      "op": "JUMP"
    },
    "5462": {
      "op": "JUMPDEST"
    },
    "5463": {
      "op": "SWAP8"
    },
    "5464": {
      "op": "SWAP7"
    },
    "5465": {
      "op": "POP"
    },
    "5466": {
      "op": "POP"
    },
    "5467": {
      "op": "POP"
    },
    "5468": {
      "op": "POP"
    },
    "5469": {
      "op": "POP"
    },
    "5470": {
      "op": "POP"
    },
    "5471": {
      "op": "POP"
    },
    "5472": {
      "jump": "o",
      "op": "JUMP"
    },
    "5473": {
      "op": "JUMPDEST"
    },
    "5474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5478": {
      "op": "DUP3"
    },
    "5479": {
      "op": "MSTORE"
    },
    "5480": {
      "op": "PUSH2",
      "value": "0x6C1"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5485": {
      "op": "DUP4"
    },
    "5486": {
      "op": "ADD"
    },
    "5487": {
      "op": "DUP5"
    },
    "5488": {
      "op": "PUSH2",
      "value": "0x1439"
    },
    "5491": {
      "jump": "i",
      "op": "JUMP"
    },
    "5492": {
      "op": "JUMPDEST"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5497": {
      "op": "DUP3"
    },
    "5498": {
      "op": "MSTORE"
    },
    "5499": {
      "op": "PUSH2",
      "value": "0x1587"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5504": {
      "op": "DUP4"
    },
    "5505": {
      "op": "ADD"
    },
    "5506": {
      "op": "DUP6"
    },
    "5507": {
      "op": "PUSH2",
      "value": "0x1439"
    },
    "5510": {
      "jump": "i",
      "op": "JUMP"
    },
    "5511": {
      "op": "JUMPDEST"
    },
    "5512": {
      "op": "DUP3"
    },
    "5513": {
      "op": "DUP2"
    },
    "5514": {
      "op": "SUB"
    },
    "5515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5517": {
      "op": "DUP5"
    },
    "5518": {
      "op": "ADD"
    },
    "5519": {
      "op": "MSTORE"
    },
    "5520": {
      "op": "PUSH2",
      "value": "0x1599"
    },
    "5523": {
      "op": "DUP2"
    },
    "5524": {
      "op": "DUP6"
    },
    "5525": {
      "op": "PUSH2",
      "value": "0x1439"
    },
    "5528": {
      "jump": "i",
      "op": "JUMP"
    },
    "5529": {
      "op": "JUMPDEST"
    },
    "5530": {
      "op": "SWAP6"
    },
    "5531": {
      "op": "SWAP5"
    },
    "5532": {
      "op": "POP"
    },
    "5533": {
      "op": "POP"
    },
    "5534": {
      "op": "POP"
    },
    "5535": {
      "op": "POP"
    },
    "5536": {
      "op": "POP"
    },
    "5537": {
      "jump": "o",
      "op": "JUMP"
    },
    "5538": {
      "op": "JUMPDEST"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5543": {
      "op": "DUP3"
    },
    "5544": {
      "op": "MSTORE"
    },
    "5545": {
      "op": "PUSH2",
      "value": "0x6C1"
    },
    "5548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5550": {
      "op": "DUP4"
    },
    "5551": {
      "op": "ADD"
    },
    "5552": {
      "op": "DUP5"
    },
    "5553": {
      "op": "PUSH2",
      "value": "0x1473"
    },
    "5556": {
      "jump": "i",
      "op": "JUMP"
    },
    "5557": {
      "op": "JUMPDEST"
    },
    "5558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5560": {
      "op": "DUP1"
    },
    "5561": {
      "op": "DUP3"
    },
    "5562": {
      "op": "MSTORE"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "5565": {
      "op": "SWAP1"
    },
    "5566": {
      "op": "DUP3"
    },
    "5567": {
      "op": "ADD"
    },
    "5568": {
      "op": "MSTORE"
    },
    "5569": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "5602": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5604": {
      "op": "DUP3"
    },
    "5605": {
      "op": "ADD"
    },
    "5606": {
      "op": "MSTORE"
    },
    "5607": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "5616": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5618": {
      "op": "SHL"
    },
    "5619": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5621": {
      "op": "DUP3"
    },
    "5622": {
      "op": "ADD"
    },
    "5623": {
      "op": "MSTORE"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5626": {
      "op": "ADD"
    },
    "5627": {
      "op": "SWAP1"
    },
    "5628": {
      "jump": "o",
      "op": "JUMP"
    },
    "5629": {
      "op": "JUMPDEST"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5632": {
      "op": "DUP1"
    },
    "5633": {
      "op": "DUP3"
    },
    "5634": {
      "op": "MSTORE"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "5637": {
      "op": "SWAP1"
    },
    "5638": {
      "op": "DUP3"
    },
    "5639": {
      "op": "ADD"
    },
    "5640": {
      "op": "MSTORE"
    },
    "5641": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "5674": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5676": {
      "op": "DUP3"
    },
    "5677": {
      "op": "ADD"
    },
    "5678": {
      "op": "MSTORE"
    },
    "5679": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5687": {
      "op": "SHL"
    },
    "5688": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5690": {
      "op": "DUP3"
    },
    "5691": {
      "op": "ADD"
    },
    "5692": {
      "op": "MSTORE"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5695": {
      "op": "ADD"
    },
    "5696": {
      "op": "SWAP1"
    },
    "5697": {
      "jump": "o",
      "op": "JUMP"
    },
    "5698": {
      "op": "JUMPDEST"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5701": {
      "op": "DUP1"
    },
    "5702": {
      "op": "DUP3"
    },
    "5703": {
      "op": "MSTORE"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5706": {
      "op": "SWAP1"
    },
    "5707": {
      "op": "DUP3"
    },
    "5708": {
      "op": "ADD"
    },
    "5709": {
      "op": "MSTORE"
    },
    "5710": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5745": {
      "op": "DUP3"
    },
    "5746": {
      "op": "ADD"
    },
    "5747": {
      "op": "MSTORE"
    },
    "5748": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "5761": {
      "op": "SHL"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5764": {
      "op": "DUP3"
    },
    "5765": {
      "op": "ADD"
    },
    "5766": {
      "op": "MSTORE"
    },
    "5767": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5769": {
      "op": "ADD"
    },
    "5770": {
      "op": "SWAP1"
    },
    "5771": {
      "jump": "o",
      "op": "JUMP"
    },
    "5772": {
      "op": "JUMPDEST"
    },
    "5773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5775": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5784": {
      "op": "DUP3"
    },
    "5785": {
      "op": "GT"
    },
    "5786": {
      "op": "ISZERO"
    },
    "5787": {
      "op": "PUSH2",
      "value": "0x16A6"
    },
    "5790": {
      "op": "JUMPI"
    },
    "5791": {
      "op": "PUSH2",
      "value": "0x16A6"
    },
    "5794": {
      "op": "PUSH2",
      "value": "0x1778"
    },
    "5797": {
      "jump": "i",
      "op": "JUMP"
    },
    "5798": {
      "op": "JUMPDEST"
    },
    "5799": {
      "op": "POP"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5802": {
      "op": "SHL"
    },
    "5803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5805": {
      "op": "ADD"
    },
    "5806": {
      "op": "SWAP1"
    },
    "5807": {
      "jump": "o",
      "op": "JUMP"
    },
    "5808": {
      "op": "JUMPDEST"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5811": {
      "op": "DUP3"
    },
    "5812": {
      "op": "NOT"
    },
    "5813": {
      "op": "DUP3"
    },
    "5814": {
      "op": "GT"
    },
    "5815": {
      "op": "ISZERO"
    },
    "5816": {
      "op": "PUSH2",
      "value": "0x16C3"
    },
    "5819": {
      "op": "JUMPI"
    },
    "5820": {
      "op": "PUSH2",
      "value": "0x16C3"
    },
    "5823": {
      "op": "PUSH2",
      "value": "0x1762"
    },
    "5826": {
      "jump": "i",
      "op": "JUMP"
    },
    "5827": {
      "op": "JUMPDEST"
    },
    "5828": {
      "op": "POP"
    },
    "5829": {
      "op": "ADD"
    },
    "5830": {
      "op": "SWAP1"
    },
    "5831": {
      "jump": "o",
      "op": "JUMP"
    },
    "5832": {
      "op": "JUMPDEST"
    },
    "5833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5835": {
      "op": "DUP3"
    },
    "5836": {
      "op": "DUP3"
    },
    "5837": {
      "op": "LT"
    },
    "5838": {
      "op": "ISZERO"
    },
    "5839": {
      "op": "PUSH2",
      "value": "0x16DA"
    },
    "5842": {
      "op": "JUMPI"
    },
    "5843": {
      "op": "PUSH2",
      "value": "0x16DA"
    },
    "5846": {
      "op": "PUSH2",
      "value": "0x1762"
    },
    "5849": {
      "jump": "i",
      "op": "JUMP"
    },
    "5850": {
      "op": "JUMPDEST"
    },
    "5851": {
      "op": "POP"
    },
    "5852": {
      "op": "SUB"
    },
    "5853": {
      "op": "SWAP1"
    },
    "5854": {
      "jump": "o",
      "op": "JUMP"
    },
    "5855": {
      "op": "JUMPDEST"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5858": {
      "op": "DUP2"
    },
    "5859": {
      "op": "DUP2"
    },
    "5860": {
      "op": "SHR"
    },
    "5861": {
      "op": "SWAP1"
    },
    "5862": {
      "op": "DUP3"
    },
    "5863": {
      "op": "AND"
    },
    "5864": {
      "op": "DUP1"
    },
    "5865": {
      "op": "PUSH2",
      "value": "0x16F3"
    },
    "5868": {
      "op": "JUMPI"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5871": {
      "op": "DUP3"
    },
    "5872": {
      "op": "AND"
    },
    "5873": {
      "op": "SWAP2"
    },
    "5874": {
      "op": "POP"
    },
    "5875": {
      "op": "JUMPDEST"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5878": {
      "op": "DUP3"
    },
    "5879": {
      "op": "LT"
    },
    "5880": {
      "op": "DUP2"
    },
    "5881": {
      "op": "EQ"
    },
    "5882": {
      "op": "ISZERO"
    },
    "5883": {
      "op": "PUSH2",
      "value": "0x1714"
    },
    "5886": {
      "op": "JUMPI"
    },
    "5887": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5892": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5894": {
      "op": "SHL"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5897": {
      "op": "MSTORE"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5902": {
      "op": "MSTORE"
    },
    "5903": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5907": {
      "op": "REVERT"
    },
    "5908": {
      "op": "JUMPDEST"
    },
    "5909": {
      "op": "POP"
    },
    "5910": {
      "op": "SWAP2"
    },
    "5911": {
      "op": "SWAP1"
    },
    "5912": {
      "op": "POP"
    },
    "5913": {
      "jump": "o",
      "op": "JUMP"
    },
    "5914": {
      "op": "JUMPDEST"
    },
    "5915": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5917": {
      "op": "DUP3"
    },
    "5918": {
      "op": "ADD"
    },
    "5919": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5921": {
      "op": "NOT"
    },
    "5922": {
      "op": "AND"
    },
    "5923": {
      "op": "DUP2"
    },
    "5924": {
      "op": "ADD"
    },
    "5925": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5934": {
      "op": "DUP2"
    },
    "5935": {
      "op": "GT"
    },
    "5936": {
      "op": "DUP3"
    },
    "5937": {
      "op": "DUP3"
    },
    "5938": {
      "op": "LT"
    },
    "5939": {
      "op": "OR"
    },
    "5940": {
      "op": "ISZERO"
    },
    "5941": {
      "op": "PUSH2",
      "value": "0x1740"
    },
    "5944": {
      "op": "JUMPI"
    },
    "5945": {
      "op": "PUSH2",
      "value": "0x1740"
    },
    "5948": {
      "op": "PUSH2",
      "value": "0x1778"
    },
    "5951": {
      "jump": "i",
      "op": "JUMP"
    },
    "5952": {
      "op": "JUMPDEST"
    },
    "5953": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5955": {
      "op": "MSTORE"
    },
    "5956": {
      "op": "POP"
    },
    "5957": {
      "op": "POP"
    },
    "5958": {
      "jump": "o",
      "op": "JUMP"
    },
    "5959": {
      "op": "JUMPDEST"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5964": {
      "op": "NOT"
    },
    "5965": {
      "op": "DUP3"
    },
    "5966": {
      "op": "EQ"
    },
    "5967": {
      "op": "ISZERO"
    },
    "5968": {
      "op": "PUSH2",
      "value": "0x175B"
    },
    "5971": {
      "op": "JUMPI"
    },
    "5972": {
      "op": "PUSH2",
      "value": "0x175B"
    },
    "5975": {
      "op": "PUSH2",
      "value": "0x1762"
    },
    "5978": {
      "jump": "i",
      "op": "JUMP"
    },
    "5979": {
      "op": "JUMPDEST"
    },
    "5980": {
      "op": "POP"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5983": {
      "op": "ADD"
    },
    "5984": {
      "op": "SWAP1"
    },
    "5985": {
      "jump": "o",
      "op": "JUMP"
    },
    "5986": {
      "op": "JUMPDEST"
    },
    "5987": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5994": {
      "op": "SHL"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5997": {
      "op": "MSTORE"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6000": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6002": {
      "op": "MSTORE"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6007": {
      "op": "REVERT"
    },
    "6008": {
      "op": "JUMPDEST"
    },
    "6009": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6016": {
      "op": "SHL"
    },
    "6017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6019": {
      "op": "MSTORE"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6022": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6024": {
      "op": "MSTORE"
    },
    "6025": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6029": {
      "op": "REVERT"
    },
    "6030": {
      "op": "JUMPDEST"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6033": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6035": {
      "op": "RETURNDATASIZE"
    },
    "6036": {
      "op": "GT"
    },
    "6037": {
      "op": "ISZERO"
    },
    "6038": {
      "op": "PUSH2",
      "value": "0xBB3"
    },
    "6041": {
      "op": "JUMPI"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6044": {
      "op": "DUP2"
    },
    "6045": {
      "op": "DUP3"
    },
    "6046": {
      "op": "RETURNDATACOPY"
    },
    "6047": {
      "op": "MLOAD"
    },
    "6048": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6050": {
      "op": "SHR"
    },
    "6051": {
      "op": "SWAP1"
    },
    "6052": {
      "jump": "o",
      "op": "JUMP"
    },
    "6053": {
      "op": "JUMPDEST"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6056": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6058": {
      "op": "RETURNDATASIZE"
    },
    "6059": {
      "op": "LT"
    },
    "6060": {
      "op": "ISZERO"
    },
    "6061": {
      "op": "PUSH2",
      "value": "0x17B5"
    },
    "6064": {
      "op": "JUMPI"
    },
    "6065": {
      "op": "PUSH2",
      "value": "0xBB3"
    },
    "6068": {
      "op": "JUMP"
    },
    "6069": {
      "op": "JUMPDEST"
    },
    "6070": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6072": {
      "op": "MLOAD"
    },
    "6073": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6075": {
      "op": "NOT"
    },
    "6076": {
      "op": "RETURNDATASIZE"
    },
    "6077": {
      "op": "DUP2"
    },
    "6078": {
      "op": "ADD"
    },
    "6079": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6081": {
      "op": "DUP4"
    },
    "6082": {
      "op": "RETURNDATACOPY"
    },
    "6083": {
      "op": "DUP2"
    },
    "6084": {
      "op": "MLOAD"
    },
    "6085": {
      "op": "RETURNDATASIZE"
    },
    "6086": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6095": {
      "op": "DUP2"
    },
    "6096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6098": {
      "op": "DUP5"
    },
    "6099": {
      "op": "ADD"
    },
    "6100": {
      "op": "GT"
    },
    "6101": {
      "op": "DUP2"
    },
    "6102": {
      "op": "DUP5"
    },
    "6103": {
      "op": "GT"
    },
    "6104": {
      "op": "OR"
    },
    "6105": {
      "op": "ISZERO"
    },
    "6106": {
      "op": "PUSH2",
      "value": "0x17E7"
    },
    "6109": {
      "op": "JUMPI"
    },
    "6110": {
      "op": "POP"
    },
    "6111": {
      "op": "POP"
    },
    "6112": {
      "op": "POP"
    },
    "6113": {
      "op": "POP"
    },
    "6114": {
      "op": "POP"
    },
    "6115": {
      "op": "PUSH2",
      "value": "0xBB3"
    },
    "6118": {
      "op": "JUMP"
    },
    "6119": {
      "op": "JUMPDEST"
    },
    "6120": {
      "op": "DUP3"
    },
    "6121": {
      "op": "DUP6"
    },
    "6122": {
      "op": "ADD"
    },
    "6123": {
      "op": "SWAP2"
    },
    "6124": {
      "op": "POP"
    },
    "6125": {
      "op": "DUP2"
    },
    "6126": {
      "op": "MLOAD"
    },
    "6127": {
      "op": "DUP2"
    },
    "6128": {
      "op": "DUP2"
    },
    "6129": {
      "op": "GT"
    },
    "6130": {
      "op": "ISZERO"
    },
    "6131": {
      "op": "PUSH2",
      "value": "0x1801"
    },
    "6134": {
      "op": "JUMPI"
    },
    "6135": {
      "op": "POP"
    },
    "6136": {
      "op": "POP"
    },
    "6137": {
      "op": "POP"
    },
    "6138": {
      "op": "POP"
    },
    "6139": {
      "op": "POP"
    },
    "6140": {
      "op": "POP"
    },
    "6141": {
      "op": "PUSH2",
      "value": "0xBB3"
    },
    "6144": {
      "op": "JUMP"
    },
    "6145": {
      "op": "JUMPDEST"
    },
    "6146": {
      "op": "DUP5"
    },
    "6147": {
      "op": "RETURNDATASIZE"
    },
    "6148": {
      "op": "DUP8"
    },
    "6149": {
      "op": "ADD"
    },
    "6150": {
      "op": "ADD"
    },
    "6151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6153": {
      "op": "DUP3"
    },
    "6154": {
      "op": "DUP6"
    },
    "6155": {
      "op": "ADD"
    },
    "6156": {
      "op": "ADD"
    },
    "6157": {
      "op": "GT"
    },
    "6158": {
      "op": "ISZERO"
    },
    "6159": {
      "op": "PUSH2",
      "value": "0x181D"
    },
    "6162": {
      "op": "JUMPI"
    },
    "6163": {
      "op": "POP"
    },
    "6164": {
      "op": "POP"
    },
    "6165": {
      "op": "POP"
    },
    "6166": {
      "op": "POP"
    },
    "6167": {
      "op": "POP"
    },
    "6168": {
      "op": "POP"
    },
    "6169": {
      "op": "PUSH2",
      "value": "0xBB3"
    },
    "6172": {
      "op": "JUMP"
    },
    "6173": {
      "op": "JUMPDEST"
    },
    "6174": {
      "op": "PUSH2",
      "value": "0x182C"
    },
    "6177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6179": {
      "op": "DUP3"
    },
    "6180": {
      "op": "DUP7"
    },
    "6181": {
      "op": "ADD"
    },
    "6182": {
      "op": "ADD"
    },
    "6183": {
      "op": "DUP8"
    },
    "6184": {
      "op": "PUSH2",
      "value": "0x171A"
    },
    "6187": {
      "jump": "i",
      "op": "JUMP"
    },
    "6188": {
      "op": "JUMPDEST"
    },
    "6189": {
      "op": "POP"
    },
    "6190": {
      "op": "SWAP1"
    },
    "6191": {
      "op": "SWAP5"
    },
    "6192": {
      "op": "POP"
    },
    "6193": {
      "op": "POP"
    },
    "6194": {
      "op": "POP"
    },
    "6195": {
      "op": "POP"
    },
    "6196": {
      "op": "POP"
    },
    "6197": {
      "op": "SWAP1"
    },
    "6198": {
      "jump": "o",
      "op": "JUMP"
    },
    "6199": {
      "op": "JUMPDEST"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6204": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6206": {
      "op": "SHL"
    },
    "6207": {
      "op": "SUB"
    },
    "6208": {
      "op": "NOT"
    },
    "6209": {
      "op": "DUP2"
    },
    "6210": {
      "op": "AND"
    },
    "6211": {
      "op": "DUP2"
    },
    "6212": {
      "op": "EQ"
    },
    "6213": {
      "op": "PUSH2",
      "value": "0x184D"
    },
    "6216": {
      "op": "JUMPI"
    },
    "6217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6219": {
      "op": "DUP1"
    },
    "6220": {
      "op": "REVERT"
    },
    "6221": {
      "op": "JUMPDEST"
    },
    "6222": {
      "op": "POP"
    },
    "6223": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "702bd9b20c7e62a08b4bda6f2762c7713fbf46af",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\nimport \"../../utils/structs/EnumerableSet.sol\";\n/**\n *\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n\n    using Address for address;\n    using EnumerableSet for EnumerableSet.UintSet;\n    mapping (address => EnumerableSet.UintSet) private _holderTokens;\n\n    // Mapping from token ID to account balances\n    mapping (uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping (address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor (string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155).interfaceId\n            || interfaceId == type(IERC1155MetadataURI).interfaceId\n            || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    )\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(_msgSender() != operator, \"ERC1155: setting approval status for self\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    )\n        public\n        virtual\n        override\n    {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        _balances[id][from] = fromBalance - amount;\n        _balances[id][to] += amount;\n        _holderTokens[to].add(id);\n        if (_balances[id][from]==0){\n             _holderTokens[from].remove(id);\n        }\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        public\n        virtual\n        override\n    {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            _balances[id][from] = fromBalance - amount;\n            _balances[id][to] += amount;\n            _holderTokens[to].add(id);\n            if  (_balances[id][from] == 0){\n                 _holderTokens[from].remove(id);\n            }\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][account] += amount;\n\n        _holderTokens[account].add(id);\n        emit TransferSingle(operator, address(0), account, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n             _holderTokens[to].add(ids[i]);\n        }\n        \n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `account`\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(address account, uint256 id, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 accountBalance = _balances[id][account];\n        require(accountBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        uint256 newBalance = accountBalance-amount;\n        _balances[id][account] = newBalance;\n        if (newBalance ==0) {\n            _holderTokens[account].remove(id);\n        }\n        \n        emit TransferSingle(operator, account, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n        _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\");\n\n        for (uint i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 accountBalance = _balances[id][account];\n            uint256 newBalance = accountBalance-amount;\n            require(accountBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            _balances[id][account] = newBalance;\n            if (newBalance ==0) {\n                _holderTokens[account].remove(id);\n            }\n        }\n\n        emit TransferBatch(operator, account, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        internal\n        virtual\n    { }\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    )\n        private\n    {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver(to).onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        private\n    {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view returns (uint256) {\n        return _holderTokens[owner].at(index);\n    }\n\n    function getOwnerUniqueTokens(address owner) public view returns (uint256) {\n        return _holderTokens[owner].length();\n    }\n}\n",
  "sourceMap": "544:14090:1:-:0;;;1205:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1248:13;1256:4;1248:7;:13::i;:::-;1205:63;544:14090;;7188:86;7254:13;;;;:4;;:13;;;;;:::i;:::-;;7188:86;:::o;544:14090::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;544:14090:1;;;-1:-1:-1;544:14090:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1137:10;;125:2;168;156:9;147:7;143:23;139:32;136:2;;;189:6;181;174:22;136:2;221:16;;-1:-1:-1;;;;;286:14:10;;;283:2;;;318:6;310;303:22;283:2;361:6;350:9;346:22;336:32;;406:7;399:4;395:2;391:13;387:27;377:2;;433:6;425;418:22;377:2;467;461:9;489:2;485;482:10;479:2;;;495:18;;:::i;:::-;570:2;564:9;538:2;624:13;;-1:-1:-1;;620:22:10;;;644:2;616:31;612:40;600:53;;;668:18;;;688:22;;;665:46;662:2;;;714:18;;:::i;:::-;754:10;750:2;743:22;789:2;781:6;774:18;829:7;824:2;819;815;811:11;807:20;804:33;801:2;;;855:6;847;840:22;801:2;882:6;873:15;;897:129;911:2;908:1;905:9;897:129;;;999:10;;;995:19;;989:26;968:14;;;964:23;;957:59;922:10;;;;897:129;;;1044:2;1041:1;1038:9;1035:2;;;1103:6;1098:2;1093;1085:6;1081:15;1077:24;1070:40;1035:2;1139:6;105:1046;-1:-1:-1;;;;;;;;105:1046:10:o;1156:380::-;1235:1;1231:12;;;;1278;;;1299:2;;1353:4;1345:6;1341:17;1331:27;;1299:2;1406;1398:6;1395:14;1375:18;1372:38;1369:2;;;1452:10;1447:3;1443:20;1440:1;1433:31;1487:4;1484:1;1477:15;1515:4;1512:1;1505:15;1369:2;;1211:325;;;:::o;1541:127::-;1602:10;1597:3;1593:20;1590:1;1583:31;1633:4;1630:1;1623:15;1657:4;1654:1;1647:15;1573:95;544:14090:1;;;;;;",
  "sourcePath": "contracts/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
  "type": "contract"
}