{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct MinimalForwarder.ForwardRequest",
          "name": "req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct MinimalForwarder.ForwardRequest",
          "name": "req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "125": "contracts/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
    "127": "contracts/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
    "7": "contracts/openzeppelin-contracts/contracts/metatx/MinimalForwarder.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-contracts/contracts/metatx/MinimalForwarder.sol",
    "exportedSymbols": {
      "ECDSA": [
        15525
      ],
      "EIP712": [
        15734
      ],
      "MinimalForwarder": [
        1950
      ]
    },
    "id": 1951,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1782,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "file": "../utils/cryptography/ECDSA.sol",
        "id": 1783,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1951,
        "sourceUnit": 15526,
        "src": "58:41:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "file": "../utils/cryptography/draft-EIP712.sol",
        "id": 1784,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1951,
        "sourceUnit": 15735,
        "src": "100:48:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1785,
              "name": "EIP712",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15734,
              "src": "298:6:7"
            },
            "id": 1786,
            "nodeType": "InheritanceSpecifier",
            "src": "298:6:7"
          }
        ],
        "contractDependencies": [
          15734
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1950,
        "linearizedBaseContracts": [
          1950,
          15734
        ],
        "name": "MinimalForwarder",
        "nameLocation": "278:16:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1789,
            "libraryName": {
              "id": 1787,
              "name": "ECDSA",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15525,
              "src": "317:5:7"
            },
            "nodeType": "UsingForDirective",
            "src": "311:24:7",
            "typeName": {
              "id": 1788,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "327:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "canonicalName": "MinimalForwarder.ForwardRequest",
            "id": 1802,
            "members": [
              {
                "constant": false,
                "id": 1791,
                "mutability": "mutable",
                "name": "from",
                "nameLocation": "381:4:7",
                "nodeType": "VariableDeclaration",
                "scope": 1802,
                "src": "373:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1790,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "373:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1793,
                "mutability": "mutable",
                "name": "to",
                "nameLocation": "403:2:7",
                "nodeType": "VariableDeclaration",
                "scope": 1802,
                "src": "395:10:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1792,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "395:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1795,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "423:5:7",
                "nodeType": "VariableDeclaration",
                "scope": 1802,
                "src": "415:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1794,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "415:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1797,
                "mutability": "mutable",
                "name": "gas",
                "nameLocation": "446:3:7",
                "nodeType": "VariableDeclaration",
                "scope": 1802,
                "src": "438:11:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1796,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "438:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1799,
                "mutability": "mutable",
                "name": "nonce",
                "nameLocation": "467:5:7",
                "nodeType": "VariableDeclaration",
                "scope": 1802,
                "src": "459:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1798,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "459:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1801,
                "mutability": "mutable",
                "name": "data",
                "nameLocation": "488:4:7",
                "nodeType": "VariableDeclaration",
                "scope": 1802,
                "src": "482:10:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 1800,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "482:5:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ForwardRequest",
            "nameLocation": "348:14:7",
            "nodeType": "StructDefinition",
            "scope": 1950,
            "src": "341:158:7",
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1807,
            "mutability": "constant",
            "name": "TYPEHASH",
            "nameLocation": "530:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1950,
            "src": "505:139:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1803,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "466f72776172645265717565737428616464726573732066726f6d2c6164647265737320746f2c75696e743235362076616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c6279746573206461746129",
                  "id": 1805,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "551:92:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_dd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e48",
                    "typeString": "literal_string \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)\""
                  },
                  "value": "ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_dd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e48",
                    "typeString": "literal_string \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)\""
                  }
                ],
                "id": 1804,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "541:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1806,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "541:103:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1811,
            "mutability": "mutable",
            "name": "_nonces",
            "nameLocation": "687:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1950,
            "src": "651:43:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1810,
              "keyType": {
                "id": 1808,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "659:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "651:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1809,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "670:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1818,
              "nodeType": "Block",
              "src": "751:2:7",
              "statements": []
            },
            "id": 1819,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d696e696d616c466f72776172646572",
                    "id": 1814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "722:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9e0923a39f515e9a8cebc9fb694b9abf7e4b8c3f7ab6f81b56eabdac504b08dc",
                      "typeString": "literal_string \"MinimalForwarder\""
                    },
                    "value": "MinimalForwarder"
                  },
                  {
                    "hexValue": "302e302e31",
                    "id": 1815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "742:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885",
                      "typeString": "literal_string \"0.0.1\""
                    },
                    "value": "0.0.1"
                  }
                ],
                "id": 1816,
                "modifierName": {
                  "id": 1813,
                  "name": "EIP712",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15734,
                  "src": "715:6:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "715:35:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "712:2:7"
            },
            "returnParameters": {
              "id": 1817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "751:0:7"
            },
            "scope": 1950,
            "src": "701:52:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1830,
              "nodeType": "Block",
              "src": "821:37:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1826,
                      "name": "_nonces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1811,
                      "src": "838:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1828,
                    "indexExpression": {
                      "id": 1827,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1821,
                      "src": "846:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "838:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1825,
                  "id": 1829,
                  "nodeType": "Return",
                  "src": "831:20:7"
                }
              ]
            },
            "functionSelector": "2d0335ab",
            "id": 1831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNonce",
            "nameLocation": "768:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1821,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "785:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "777:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "776:14:7"
            },
            "returnParameters": {
              "id": 1825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1824,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "812:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "811:9:7"
            },
            "scope": 1950,
            "src": "759:99:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1882,
              "nodeType": "Block",
              "src": "962:335:7",
              "statements": [
                {
                  "assignments": [
                    1842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1842,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "980:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1882,
                      "src": "972:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1841,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "972:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1868,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1866,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "1211:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1847,
                                    "name": "TYPEHASH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1807,
                                    "src": "1040:8:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1848,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1834,
                                      "src": "1062:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 1849,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "from",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1791,
                                    "src": "1062:8:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1850,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1834,
                                      "src": "1084:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 1851,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "to",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1793,
                                    "src": "1084:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1852,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1834,
                                      "src": "1104:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 1853,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1795,
                                    "src": "1104:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1854,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1834,
                                      "src": "1127:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 1855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "gas",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1797,
                                    "src": "1127:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1856,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1834,
                                      "src": "1148:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 1857,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nonce",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1799,
                                    "src": "1148:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1859,
                                          "name": "req",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1834,
                                          "src": "1181:3:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                          }
                                        },
                                        "id": 1860,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "data",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1801,
                                        "src": "1181:8:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_calldata_ptr",
                                          "typeString": "bytes calldata"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_calldata_ptr",
                                          "typeString": "bytes calldata"
                                        }
                                      ],
                                      "id": 1858,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "1171:9:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 1861,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1171:19:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1845,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "1016:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1846,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "1016:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1016:184:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1844,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "1006:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1006:195:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 1843,
                          "name": "_hashTypedDataV4",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15733,
                          "src": "989:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                            "typeString": "function (bytes32) view returns (bytes32)"
                          }
                        },
                        "id": 1864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "989:213:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 1865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15430,
                      "src": "989:221:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 1867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "989:232:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "972:249:7"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1869,
                          "name": "_nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1811,
                          "src": "1238:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1872,
                        "indexExpression": {
                          "expression": {
                            "id": 1870,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1834,
                            "src": "1246:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          "id": 1871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "from",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1791,
                          "src": "1246:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1238:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 1873,
                          "name": "req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1834,
                          "src": "1259:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                          }
                        },
                        "id": 1874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1799,
                        "src": "1259:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1238:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1876,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1842,
                        "src": "1272:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 1877,
                          "name": "req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1834,
                          "src": "1282:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                          }
                        },
                        "id": 1878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "from",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1791,
                        "src": "1282:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1272:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1238:52:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1840,
                  "id": 1881,
                  "nodeType": "Return",
                  "src": "1231:59:7"
                }
              ]
            },
            "functionSelector": "bf5d3bdb",
            "id": 1883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "873:6:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1834,
                  "mutability": "mutable",
                  "name": "req",
                  "nameLocation": "904:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "880:27:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                    "typeString": "struct MinimalForwarder.ForwardRequest"
                  },
                  "typeName": {
                    "id": 1833,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1832,
                      "name": "ForwardRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1802,
                      "src": "880:14:7"
                    },
                    "referencedDeclaration": 1802,
                    "src": "880:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForwardRequest_$1802_storage_ptr",
                      "typeString": "struct MinimalForwarder.ForwardRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1836,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "924:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "909:24:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1835,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "879:55:7"
            },
            "returnParameters": {
              "id": 1840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1839,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "956:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1838,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "955:6:7"
            },
            "scope": 1950,
            "src": "864:433:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1948,
              "nodeType": "Block",
              "src": "1419:555:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1897,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1886,
                            "src": "1444:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          {
                            "id": 1898,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1888,
                            "src": "1449:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 1896,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1883,
                          "src": "1437:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_ForwardRequest_$1802_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct MinimalForwarder.ForwardRequest calldata,bytes calldata) view returns (bool)"
                          }
                        },
                        "id": 1899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1437:22:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e696d616c466f727761726465723a207369676e617475726520646f6573206e6f74206d617463682072657175657374",
                        "id": 1900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1461:52:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae",
                          "typeString": "literal_string \"MinimalForwarder: signature does not match request\""
                        },
                        "value": "MinimalForwarder: signature does not match request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae",
                          "typeString": "literal_string \"MinimalForwarder: signature does not match request\""
                        }
                      ],
                      "id": 1895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1429:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:85:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1902,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:85:7"
                },
                {
                  "expression": {
                    "id": 1911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1903,
                        "name": "_nonces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "1524:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1906,
                      "indexExpression": {
                        "expression": {
                          "id": 1904,
                          "name": "req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1886,
                          "src": "1532:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                          }
                        },
                        "id": 1905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "from",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1791,
                        "src": "1532:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1524:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1907,
                          "name": "req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1886,
                          "src": "1544:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                          }
                        },
                        "id": 1908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1799,
                        "src": "1544:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1556:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1544:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1524:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1912,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:33:7"
                },
                {
                  "assignments": [
                    1914,
                    1916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1914,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1633:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1948,
                      "src": "1628:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1913,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1628:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1916,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "1655:10:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1948,
                      "src": "1642:23:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1915,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1642:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1933,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1927,
                              "name": "req",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1886,
                              "src": "1730:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                                "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 1928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "data",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1801,
                            "src": "1730:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 1929,
                              "name": "req",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1886,
                              "src": "1740:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                                "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 1930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "from",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1791,
                            "src": "1740:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1925,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1713:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1713:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1713:36:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 1917,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1886,
                            "src": "1669:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          "id": 1918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "to",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1793,
                          "src": "1669:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1669:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "gas",
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 1920,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1886,
                            "src": "1686:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          "id": 1921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gas",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1797,
                          "src": "1686:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1922,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1886,
                            "src": "1702:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          "id": 1923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1795,
                          "src": "1702:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1669:43:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1669:81:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1627:123:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1935,
                            "name": "gasleft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -7,
                            "src": "1903:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1903:9:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1937,
                              "name": "req",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1886,
                              "src": "1915:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                                "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 1938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gas",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1797,
                            "src": "1915:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3633",
                            "id": 1939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1925:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_63_by_1",
                              "typeString": "int_const 63"
                            },
                            "value": "63"
                          },
                          "src": "1915:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1903:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1934,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1896:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1943,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:32:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1944,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "1947:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1945,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1916,
                        "src": "1956:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "id": 1946,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1946:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "functionReturnParameters": 1894,
                  "id": 1947,
                  "nodeType": "Return",
                  "src": "1939:28:7"
                }
              ]
            },
            "functionSelector": "47153f82",
            "id": 1949,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "1312:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1886,
                  "mutability": "mutable",
                  "name": "req",
                  "nameLocation": "1344:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "1320:27:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForwardRequest_$1802_calldata_ptr",
                    "typeString": "struct MinimalForwarder.ForwardRequest"
                  },
                  "typeName": {
                    "id": 1885,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1884,
                      "name": "ForwardRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1802,
                      "src": "1320:14:7"
                    },
                    "referencedDeclaration": 1802,
                    "src": "1320:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForwardRequest_$1802_storage_ptr",
                      "typeString": "struct MinimalForwarder.ForwardRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1888,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1364:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "1349:24:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1887,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1319:55:7"
            },
            "returnParameters": {
              "id": 1894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1891,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "1399:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1890,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1893,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "1405:12:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1892,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1405:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1398:20:7"
            },
            "scope": 1950,
            "src": "1303:671:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1951,
        "src": "269:1707:7"
      }
    ],
    "src": "33:1944:7"
  },
  "bytecode": "61012060405234801561001157600080fd5b50604080518082018252601081526f26b4b734b6b0b62337b93bb0b93232b960811b6020808301918252835180850185526005815264302e302e3160d81b908201529151902060c08181527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc19916381188560e08190524660a081815286517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818901969096526060810193909352608080840192909252308382015286518084039091018152919092019094528351939092019290922090526101005260805160a05160c05160e051610100516109b06101336000396000610525015260006105740152600061054f015260006104d1015260006104fa01526109b06000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f610054366004610763565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b610095610090366004610791565b6100d3565b60405161007992919061087e565b3480156100af57600080fd5b506100c36100be366004610791565b610280565b6040519015158152602001610079565b600060606100e2858585610280565b61014e5760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f6573604482015271081b9bdd081b585d18da081c995c5d595cdd60721b60648201526084015b60405180910390fd5b61015d60808601356001610906565b60008061016d6020890189610763565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101a79190610763565b6001600160a01b0316606088013560408901356101c760a08b018b6108ba565b6101d460208d018d610763565b6040516020016101e693929190610839565b60408051601f198184030181529082905261020091610862565b600060405180830381858888f193505050503d806000811461023e576040519150601f19603f3d011682016040523d82523d6000602084013e610243565b606091505b509092509050610258603f606089013561092a565b5a1161027457634e487b7160e01b600052600160045260246000fd5b90969095509350505050565b60008061039384848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061038d92507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e4891506102f0905060208a018a610763565b61030060408b0160208c01610763565b60408b013560608c013560808d013561031c60a08f018f6108ba565b60405161032a929190610829565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e081019190915261010001604051602081830303815290604052805190602001206103fe565b90610452565b905060808501356000806103aa6020890189610763565b6001600160a01b03166001600160a01b03168152602001908152602001600020541480156103f557506103e06020860186610763565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600061044c61040b6104cd565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b600081516041146104a55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610145565b60208201516040830151606084015160001a6104c3868285856105c3565b9695505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000046141561051e57507f00000000000000000000000000000000000000000000000000000000000000006105c0565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c090920190925280519101205b90565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156106405760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610145565b8360ff16601b148061065557508360ff16601c145b6106ac5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610145565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015610700573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166103f55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610145565b600060208284031215610774578081fd5b81356001600160a01b038116811461078a578182fd5b9392505050565b6000806000604084860312156107a5578182fd5b833567ffffffffffffffff808211156107bc578384fd5b9085019060c082880312156107cf578384fd5b909350602085013590808211156107e4578384fd5b818601915086601f8301126107f7578384fd5b813581811115610805578485fd5b876020828501011115610816578485fd5b6020830194508093505050509250925092565b6000828483379101908152919050565b6000838583375060609190911b6bffffffffffffffffffffffff19169101908152601401919050565b6000825161087481846020870161094a565b9190910192915050565b600083151582526040602083015282518060408401526108a581606085016020870161094a565b601f01601f1916919091016060019392505050565b6000808335601e198436030181126108d0578283fd5b83018035915067ffffffffffffffff8211156108ea578283fd5b6020019150368190038213156108ff57600080fd5b9250929050565b6000821982111561092557634e487b7160e01b81526011600452602481fd5b500190565b60008261094557634e487b7160e01b81526012600452602481fd5b500490565b60005b8381101561096557818101518382015260200161094d565b83811115610974576000848401525b5050505056fea26469706673582212201cda302567affa3951c0186374cee29e753eb21e36112029d93657fb6e07fcb164736f6c63430008030033",
  "bytecodeSha1": "dfff405ffdd529032d8677ef6c097a4e4aa2e19f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "MinimalForwarder",
  "coverageMap": {
    "branches": {
      "125": {
        "ECDSA.recover": {
          "17": [
            1203,
            1225,
            false
          ],
          "18": [
            2923,
            3003,
            true
          ],
          "19": [
            3060,
            3067,
            true
          ],
          "20": [
            3071,
            3078,
            true
          ],
          "21": [
            3271,
            3291,
            true
          ]
        }
      },
      "127": {
        "EIP712._domainSeparatorV4": {
          "22": [
            3043,
            3076,
            false
          ]
        }
      },
      "7": {
        "MinimalForwarder.execute": {
          "16": [
            1437,
            1459,
            true
          ]
        }
      }
    },
    "statements": {
      "125": {
        "ECDSA.recover": {
          "8": [
            1241,
            1282
          ],
          "9": [
            1768,
            1797
          ],
          "13": [
            2915,
            3042
          ],
          "14": [
            3052,
            3117
          ],
          "15": [
            3263,
            3320
          ]
        },
        "ECDSA.toTypedDataHash": {
          "7": [
            4357,
            4432
          ]
        }
      },
      "127": {
        "EIP712._buildDomainSeparator": {
          "11": [
            3369,
            3568
          ]
        },
        "EIP712._domainSeparatorV4": {
          "10": [
            3092,
            3123
          ],
          "12": [
            3154,
            3225
          ]
        },
        "EIP712._hashTypedDataV4": {
          "6": [
            4296,
            4358
          ]
        }
      },
      "7": {
        "MinimalForwarder.execute": {
          "1": [
            1429,
            1514
          ],
          "2": [
            1524,
            1557
          ],
          "3": [
            1896,
            1928
          ],
          "4": [
            1939,
            1967
          ]
        },
        "MinimalForwarder.getNonce": {
          "0": [
            831,
            851
          ]
        },
        "MinimalForwarder.verify": {
          "5": [
            1231,
            1290
          ]
        }
      }
    }
  },
  "dependencies": [
    "ECDSA",
    "EIP712"
  ],
  "deployedBytecode": "6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f610054366004610763565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b610095610090366004610791565b6100d3565b60405161007992919061087e565b3480156100af57600080fd5b506100c36100be366004610791565b610280565b6040519015158152602001610079565b600060606100e2858585610280565b61014e5760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f6573604482015271081b9bdd081b585d18da081c995c5d595cdd60721b60648201526084015b60405180910390fd5b61015d60808601356001610906565b60008061016d6020890189610763565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101a79190610763565b6001600160a01b0316606088013560408901356101c760a08b018b6108ba565b6101d460208d018d610763565b6040516020016101e693929190610839565b60408051601f198184030181529082905261020091610862565b600060405180830381858888f193505050503d806000811461023e576040519150601f19603f3d011682016040523d82523d6000602084013e610243565b606091505b509092509050610258603f606089013561092a565b5a1161027457634e487b7160e01b600052600160045260246000fd5b90969095509350505050565b60008061039384848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061038d92507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e4891506102f0905060208a018a610763565b61030060408b0160208c01610763565b60408b013560608c013560808d013561031c60a08f018f6108ba565b60405161032a929190610829565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e081019190915261010001604051602081830303815290604052805190602001206103fe565b90610452565b905060808501356000806103aa6020890189610763565b6001600160a01b03166001600160a01b03168152602001908152602001600020541480156103f557506103e06020860186610763565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600061044c61040b6104cd565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b600081516041146104a55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610145565b60208201516040830151606084015160001a6104c3868285856105c3565b9695505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000046141561051e57507f00000000000000000000000000000000000000000000000000000000000000006105c0565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c090920190925280519101205b90565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156106405760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610145565b8360ff16601b148061065557508360ff16601c145b6106ac5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610145565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015610700573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166103f55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610145565b600060208284031215610774578081fd5b81356001600160a01b038116811461078a578182fd5b9392505050565b6000806000604084860312156107a5578182fd5b833567ffffffffffffffff808211156107bc578384fd5b9085019060c082880312156107cf578384fd5b909350602085013590808211156107e4578384fd5b818601915086601f8301126107f7578384fd5b813581811115610805578485fd5b876020828501011115610816578485fd5b6020830194508093505050509250925092565b6000828483379101908152919050565b6000838583375060609190911b6bffffffffffffffffffffffff19169101908152601401919050565b6000825161087481846020870161094a565b9190910192915050565b600083151582526040602083015282518060408401526108a581606085016020870161094a565b601f01601f1916919091016060019392505050565b6000808335601e198436030181126108d0578283fd5b83018035915067ffffffffffffffff8211156108ea578283fd5b6020019150368190038213156108ff57600080fd5b9250929050565b6000821982111561092557634e487b7160e01b81526011600452602481fd5b500190565b60008261094557634e487b7160e01b81526012600452602481fd5b500490565b60005b8381101561096557818101518382015260200161094d565b83811115610974576000848401525b5050505056fea26469706673582212201cda302567affa3951c0186374cee29e753eb21e36112029d93657fb6e07fcb164736f6c63430008030033",
  "deployedSourceMap": "269:1707:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;759:99;;;;;;;;;;-1:-1:-1;759:99:7;;;;;:::i;:::-;-1:-1:-1;;;;;838:13:7;812:7;838:13;;;;;;;;;;;;759:99;;;;6914:25:144;;;6902:2;6887:18;759:99:7;;;;;;;;1303:671;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;864:433::-;;;;;;;;;;-1:-1:-1;864:433:7;;;;;:::i;:::-;;:::i;:::-;;;2771:14:144;;2764:22;2746:41;;2734:2;2719:18;864:433:7;2701:92:144;1303:671:7;1399:4;1405:12;1437:22;1444:3;1449:9;;1437:6;:22::i;:::-;1429:85;;;;-1:-1:-1;;;1429:85:7;;5385:2:144;1429:85:7;;;5367:21:144;5424:2;5404:18;;;5397:30;5463:34;5443:18;;;5436:62;-1:-1:-1;;;5514:18:144;;;5507:48;5572:19;;1429:85:7;;;;;;;;;1544:13;:9;;;;1556:1;1544:13;:::i;:::-;1524:7;;1532:8;;;;:3;:8;:::i;:::-;-1:-1:-1;;;;;1524:17:7;-1:-1:-1;;;;;1524:17:7;;;;;;;;;;;;:33;;;;1628:12;1642:23;1669:3;:6;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1669:11:7;1686:7;;;;1702:9;;;;1730:8;;;;1686:3;1730:8;:::i;:::-;1740;;;;:3;:8;:::i;:::-;1713:36;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1713:36:7;;;;;;;;;;1669:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1627:123:7;;-1:-1:-1;1627:123:7;-1:-1:-1;1915:12:7;1925:2;1915:7;;;;:12;:::i;:::-;1903:9;:24;1896:32;;-1:-1:-1;;;1896:32:7;;;;;;;;;1947:7;;;;-1:-1:-1;1303:671:7;-1:-1:-1;;;;1303:671:7:o;864:433::-;956:4;972:14;989:232;1211:9;;989:232;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;989:213:7;;-1:-1:-1;541:103:7;;-1:-1:-1;1062:8:7;;-1:-1:-1;1062:8:7;;;:3;:8;:::i;:::-;1084:6;;;;;;;;:::i;:::-;1104:9;;;;1127:7;;;;1148:9;;;;1181:8;;;;1104:3;1181:8;:::i;:::-;1171:19;;;;;;;:::i;:::-;;;;;;;;;;1016:184;;;3580:25:144;;;;-1:-1:-1;;;;;3679:15:144;;;3659:18;;;3652:43;3731:15;;;;3711:18;;;3704:43;3763:18;;;3756:34;;;;3806:19;;;3799:35;3850:19;;;3843:35;3894:19;;;3887:35;;;;3552:19;;1016:184:7;;;;;;;;;;;;1006:195;;;;;;989:16;:213::i;:::-;:221;;:232::i;:::-;972:249;-1:-1:-1;1259:9:7;;;;1238:7;;1246:8;;;;1259:3;1246:8;:::i;:::-;-1:-1:-1;;;;;1238:17:7;-1:-1:-1;;;;;1238:17:7;;;;;;;;;;;;;:30;:52;;;;-1:-1:-1;1282:8:7;;;;:3;:8;:::i;:::-;-1:-1:-1;;;;;1272:18:7;:6;-1:-1:-1;;;;;1272:18:7;;1238:52;1231:59;864:433;-1:-1:-1;;;;;864:433:7:o;4200:165:127:-;4277:7;4303:55;4325:20;:18;:20::i;:::-;4347:10;4374:57:125;;-1:-1:-1;;;4374:57:125;;;2467:27:144;2510:11;;;2503:27;;;2546:12;;;2539:28;;;4338:7:125;;2583:12:144;;4374:57:125;;;;;;;;;;;;4364:68;;;;;;4357:75;;4245:194;;;;;4303:55:127;4296:62;4200:165;-1:-1:-1;;4200:165:127:o;1064:740:125:-;1142:7;1203:9;:16;1223:2;1203:22;1199:94;;1241:41;;-1:-1:-1;;;1241:41:125;;5804:2:144;1241:41:125;;;5786:21:144;5843:2;5823:18;;;5816:30;5882:33;5862:18;;;5855:61;5933:18;;1241:41:125;5776:181:144;1199:94:125;1643:4;1628:20;;1622:27;1688:4;1673:20;;1667:27;1741:4;1726:20;;1720:27;1359:9;1712:36;1775:22;1783:4;1712:36;1622:27;1667;1775:7;:22::i;:::-;1768:29;1064:740;-1:-1:-1;;;;;;1064:740:125:o;2967:275:127:-;3020:7;3060:16;3043:13;:33;3039:197;;;-1:-1:-1;3099:24:127;3092:31;;3039:197;-1:-1:-1;3399:159:127;;;3183:10;3399:159;;;;4192:25:144;;;;3195:12:127;4233:18:144;;;4226:34;3209:15:127;4276:18:144;;;4269:34;3500:13:127;4319:18:144;;;4312:34;3539:4:127;4362:19:144;;;;4355:61;;;;3399:159:127;;;;;;;;;;4164:19:144;;;;3399:159:127;;;3376:192;;;;;3039:197;2967:275;:::o;1937:1414:125:-;2022:7;2937:66;2923:80;;;2915:127;;;;-1:-1:-1;;;2915:127:125;;6164:2:144;2915:127:125;;;6146:21:144;6203:2;6183:18;;;6176:30;6242:34;6222:18;;;6215:62;-1:-1:-1;;;6293:18:144;;;6286:32;6335:19;;2915:127:125;6136:224:144;2915:127:125;3060:1;:7;;3065:2;3060:7;:18;;;;3071:1;:7;;3076:2;3071:7;3060:18;3052:65;;;;-1:-1:-1;;;3052:65:125;;6567:2:144;3052:65:125;;;6549:21:144;6606:2;6586:18;;;6579:30;6645:34;6625:18;;;6618:62;-1:-1:-1;;;6696:18:144;;;6689:32;6738:19;;3052:65:125;6539:224:144;3052:65:125;3229:24;;;3212:14;3229:24;;;;;;;;;4654:25:144;;;4727:4;4715:17;;4695:18;;;4688:45;;;;4749:18;;;4742:34;;;4792:18;;;4785:34;;;3229:24:125;;4626:19:144;;3229:24:125;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3229:24:125;;-1:-1:-1;;3229:24:125;;;-1:-1:-1;;;;;;;3271:20:125;;3263:57;;;;-1:-1:-1;;;3263:57:125;;5032:2:144;3263:57:125;;;5014:21:144;5071:2;5051:18;;;5044:30;5110:26;5090:18;;;5083:54;5154:18;;3263:57:125;5004:174:144;14:306;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:144;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:144:o;325:933::-;;;;507:2;495:9;486:7;482:23;478:32;475:2;;;528:6;520;513:22;475:2;573:9;560:23;602:18;643:2;635:6;632:14;629:2;;;664:6;656;649:22;629:2;692:22;;;;748:3;730:16;;;726:26;723:2;;;770:6;762;755:22;723:2;798;;-1:-1:-1;853:2:144;838:18;;825:32;;869:16;;;866:2;;;903:6;895;888:22;866:2;946:8;935:9;931:24;921:34;;993:7;986:4;982:2;978:13;974:27;964:2;;1020:6;1012;1005:22;964:2;1065;1052:16;1091:2;1083:6;1080:14;1077:2;;;1112:6;1104;1097:22;1077:2;1162:7;1157:2;1148:6;1144:2;1140:15;1136:24;1133:37;1130:2;;;1188:6;1180;1173:22;1130:2;1224;1220;1216:11;1206:21;;1246:6;1236:16;;;;;465:793;;;;;:::o;1263:273::-;;1446:6;1438;1433:3;1420:33;1472:16;;1497:15;;;1472:16;1410:126;-1:-1:-1;1410:126:144:o;1541:384::-;;1752:6;1744;1739:3;1726:33;-1:-1:-1;1846:2:144;1842:15;;;;-1:-1:-1;;1838:53:144;1778:16;;1827:65;;;1916:2;1908:11;;1716:209;-1:-1:-1;1716:209:144:o;1930:274::-;;2097:6;2091:13;2113:53;2159:6;2154:3;2147:4;2139:6;2135:17;2113:53;:::i;:::-;2182:16;;;;;2067:137;-1:-1:-1;;2067:137:144:o;2798:462::-;;2981:6;2974:14;2967:22;2956:9;2949:41;3026:2;3021;3010:9;3006:18;2999:30;3058:6;3052:13;3101:6;3096:2;3085:9;3081:18;3074:34;3117:66;3176:6;3171:2;3160:9;3156:18;3151:2;3143:6;3139:15;3117:66;:::i;:::-;3244:2;3223:15;-1:-1:-1;;3219:29:144;3204:45;;;;3251:2;3200:54;;2939:321;-1:-1:-1;;;2939:321:144:o;6950:533::-;;;7093:11;7080:25;7187:2;7183:7;7172:8;7156:14;7152:29;7148:43;7128:18;7124:68;7114:2;;7209:4;7203;7196:18;7114:2;7239:33;;7291:20;;;-1:-1:-1;7334:18:144;7323:30;;7320:2;;;7369:4;7363;7356:18;7320:2;7405:4;7393:17;;-1:-1:-1;7436:14:144;7432:27;;;7422:38;;7419:2;;;7473:1;7470;7463:12;7419:2;7044:439;;;;;:::o;7488:229::-;;7559:1;7555:6;7552:1;7549:13;7546:2;;;-1:-1:-1;;;7585:33:144;;7641:4;7638:1;7631:15;7671:4;7592:3;7659:17;7546:2;-1:-1:-1;7702:9:144;;7536:181::o;7722:217::-;;7788:1;7778:2;;-1:-1:-1;;;7813:31:144;;7867:4;7864:1;7857:15;7895:4;7820:1;7885:15;7778:2;-1:-1:-1;7924:9:144;;7768:171::o;7944:258::-;8016:1;8026:113;8040:6;8037:1;8034:13;8026:113;;;8116:11;;;8110:18;8097:11;;;8090:39;8062:2;8055:10;8026:113;;;8157:6;8154:1;8151:13;8148:2;;;8192:1;8183:6;8178:3;8174:16;8167:27;8148:2;;7997:205;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    269,
    1976
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D0335AB EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x47153F82 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xBF5D3BDB EQ PUSH2 0xA3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x791 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP3 SWAP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH2 0xBE CALLDATASIZE PUSH1 0x4 PUSH2 0x791 JUMP JUMPDEST PUSH2 0x280 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xE2 DUP6 DUP6 DUP6 PUSH2 0x280 JUMP JUMPDEST PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D616C466F727761726465723A207369676E617475726520646F6573 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x81B9BDD081B585D18DA081C995C5D595CDD PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16D PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP7 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x1C7 PUSH1 0xA0 DUP12 ADD DUP12 PUSH2 0x8BA JUMP JUMPDEST PUSH2 0x1D4 PUSH1 0x20 DUP14 ADD DUP14 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x200 SWAP2 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x243 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x258 PUSH1 0x3F PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0x92A JUMP JUMPDEST GAS GT PUSH2 0x274 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x393 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x38D SWAP3 POP PUSH32 0xDD8F4B70B0F4393E889BD39128A30628A78B61816A9EB8199759E7A349657E48 SWAP2 POP PUSH2 0x2F0 SWAP1 POP PUSH1 0x20 DUP11 ADD DUP11 PUSH2 0x763 JUMP JUMPDEST PUSH2 0x300 PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 DUP12 ADD CALLDATALOAD PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH1 0x80 DUP14 ADD CALLDATALOAD PUSH2 0x31C PUSH1 0xA0 DUP16 ADD DUP16 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP3 SWAP2 SWAP1 PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x3FE JUMP JUMPDEST SWAP1 PUSH2 0x452 JUMP JUMPDEST SWAP1 POP PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH1 0x0 DUP1 PUSH2 0x3AA PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ DUP1 ISZERO PUSH2 0x3F5 JUMPI POP PUSH2 0x3E0 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44C PUSH2 0x40B PUSH2 0x4CD JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x145 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x4C3 DUP7 DUP3 DUP6 DUP6 PUSH2 0x5C3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ ISZERO PUSH2 0x51E JUMPI POP PUSH32 0x0 PUSH2 0x5C0 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 DUP5 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x145 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x655 JUMPI POP DUP4 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x6AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x145 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP8 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x700 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x145 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x774 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x78A JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7A5 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x7BC JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP1 DUP6 ADD SWAP1 PUSH1 0xC0 DUP3 DUP9 SUB SLT ISZERO PUSH2 0x7CF JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x7E4 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7F7 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x805 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x816 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP6 DUP4 CALLDATACOPY POP PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x874 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x94A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO ISZERO DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x8A5 DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x94A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x8D0 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8EA JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x925 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x945 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x965 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x94D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x974 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xDA ADDRESS 0x25 PUSH8 0xAFFA3951C0186374 0xCE 0xE2 SWAP15 PUSH22 0x3EB21E36112029D93657FB6E07FCB164736F6C634300 ADDMOD SUB STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        269,
        1976
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "LT",
      "path": "7"
    },
    "9": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x34"
    },
    "12": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "SHR",
      "path": "7"
    },
    "19": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "DUP1",
      "path": "7"
    },
    "20": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2D0335AB"
    },
    "25": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "EQ",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x39"
    },
    "29": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "30": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "DUP1",
      "path": "7"
    },
    "31": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x47153F82"
    },
    "36": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "EQ",
      "path": "7"
    },
    "37": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x82"
    },
    "40": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "41": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "DUP1",
      "path": "7"
    },
    "42": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xBF5D3BDB"
    },
    "47": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "EQ",
      "path": "7"
    },
    "48": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA3"
    },
    "51": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "52": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "53": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "55": {
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "DUP1",
      "path": "7"
    },
    "56": {
      "first_revert": true,
      "fn": null,
      "offset": [
        269,
        1976
      ],
      "op": "REVERT",
      "path": "7"
    },
    "57": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "58": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "59": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "DUP1",
      "path": "7"
    },
    "60": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "61": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x45"
    },
    "64": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "67": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "DUP1",
      "path": "7"
    },
    "68": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "REVERT",
      "path": "7"
    },
    "69": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "70": {
      "op": "POP"
    },
    "71": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6F"
    },
    "74": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x54"
    },
    "77": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "78": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "80": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x763"
    },
    "83": {
      "fn": "MinimalForwarder.getNonce",
      "jump": "i",
      "offset": [
        759,
        858
      ],
      "op": "JUMP",
      "path": "7"
    },
    "84": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "85": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "87": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "89": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "91": {
      "op": "SHL"
    },
    "92": {
      "op": "SUB"
    },
    "93": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        838,
        851
      ],
      "op": "AND",
      "path": "7",
      "statement": 0
    },
    "94": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        812,
        819
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "96": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        838,
        851
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "97": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        838,
        851
      ],
      "op": "DUP2",
      "path": "7"
    },
    "98": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        838,
        851
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "99": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        838,
        851
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "101": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        838,
        851
      ],
      "op": "DUP2",
      "path": "7"
    },
    "102": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        838,
        851
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "103": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        838,
        851
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "104": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        838,
        851
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "106": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        838,
        851
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "107": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        838,
        851
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "108": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        838,
        851
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "109": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        838,
        851
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "110": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "JUMP",
      "path": "7"
    },
    "111": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "112": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "114": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "115": {
      "op": "SWAP1"
    },
    "116": {
      "op": "DUP2"
    },
    "117": {
      "op": "MSTORE"
    },
    "118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "120": {
      "op": "ADD"
    },
    "121": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "122": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "124": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "125": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "DUP1",
      "path": "7"
    },
    "126": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "127": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "SUB",
      "path": "7"
    },
    "128": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "129": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        759,
        858
      ],
      "op": "RETURN",
      "path": "7"
    },
    "130": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "131": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x95"
    },
    "134": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x90"
    },
    "137": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "138": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "140": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x791"
    },
    "143": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1303,
        1974
      ],
      "op": "JUMP",
      "path": "7"
    },
    "144": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "145": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD3"
    },
    "148": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1303,
        1974
      ],
      "op": "JUMP",
      "path": "7"
    },
    "149": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "150": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "152": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "153": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x79"
    },
    "156": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "157": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "158": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "159": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x87E"
    },
    "162": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1303,
        1974
      ],
      "op": "JUMP",
      "path": "7"
    },
    "163": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "164": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "165": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "DUP1",
      "path": "7"
    },
    "166": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "167": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAF"
    },
    "170": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "171": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "173": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "DUP1",
      "path": "7"
    },
    "174": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "REVERT",
      "path": "7"
    },
    "175": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "176": {
      "op": "POP"
    },
    "177": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC3"
    },
    "180": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBE"
    },
    "183": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "184": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "186": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x791"
    },
    "189": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        864,
        1297
      ],
      "op": "JUMP",
      "path": "7"
    },
    "190": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "191": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x280"
    },
    "194": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        864,
        1297
      ],
      "op": "JUMP",
      "path": "7"
    },
    "195": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "196": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "198": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "199": {
      "op": "SWAP1"
    },
    "200": {
      "op": "ISZERO"
    },
    "201": {
      "op": "ISZERO"
    },
    "202": {
      "op": "DUP2"
    },
    "203": {
      "op": "MSTORE"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "206": {
      "op": "ADD"
    },
    "207": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x79"
    },
    "210": {
      "op": "JUMP"
    },
    "211": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "212": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1399,
        1403
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "214": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1405,
        1417
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "216": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1437,
        1459
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 1,
      "value": "0xE2"
    },
    "219": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1444,
        1447
      ],
      "op": "DUP6",
      "path": "7"
    },
    "220": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1449,
        1458
      ],
      "op": "DUP6",
      "path": "7"
    },
    "221": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1449,
        1458
      ],
      "op": "DUP6",
      "path": "7"
    },
    "222": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1437,
        1443
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x280"
    },
    "225": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1437,
        1459
      ],
      "op": "JUMP",
      "path": "7"
    },
    "226": {
      "branch": 16,
      "fn": "MinimalForwarder.execute",
      "offset": [
        1437,
        1459
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "227": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14E"
    },
    "230": {
      "branch": 16,
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "231": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "233": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "234": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "238": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "240": {
      "op": "SHL"
    },
    "241": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "DUP2",
      "path": "7"
    },
    "242": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "245": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "247": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "DUP3",
      "path": "7"
    },
    "248": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "ADD",
      "path": "7"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "254": {
      "op": "DUP3"
    },
    "255": {
      "op": "ADD"
    },
    "256": {
      "op": "MSTORE"
    },
    "257": {
      "op": "PUSH32",
      "value": "0x4D696E696D616C466F727761726465723A207369676E617475726520646F6573"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "292": {
      "op": "DUP3"
    },
    "293": {
      "op": "ADD"
    },
    "294": {
      "op": "MSTORE"
    },
    "295": {
      "op": "PUSH18",
      "value": "0x81B9BDD081B585D18DA081C995C5D595CDD"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "316": {
      "op": "SHL"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "319": {
      "op": "DUP3"
    },
    "320": {
      "op": "ADD"
    },
    "321": {
      "op": "MSTORE"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "324": {
      "op": "ADD"
    },
    "325": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "326": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "328": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "329": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "DUP1",
      "path": "7"
    },
    "330": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "331": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "SUB",
      "path": "7"
    },
    "332": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "333": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "334": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1429,
        1514
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "335": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1544,
        1557
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 2,
      "value": "0x15D"
    },
    "338": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1544,
        1553
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "340": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1544,
        1553
      ],
      "op": "DUP7",
      "path": "7"
    },
    "341": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1544,
        1553
      ],
      "op": "ADD",
      "path": "7"
    },
    "342": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1544,
        1553
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "343": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1556,
        1557
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "345": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1544,
        1557
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x906"
    },
    "348": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1544,
        1557
      ],
      "op": "JUMP",
      "path": "7"
    },
    "349": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1544,
        1557
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "350": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1531
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "352": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1531
      ],
      "op": "DUP1",
      "path": "7"
    },
    "353": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1532,
        1540
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16D"
    },
    "356": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1532,
        1540
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "358": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1532,
        1540
      ],
      "op": "DUP10",
      "path": "7"
    },
    "359": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1532,
        1540
      ],
      "op": "ADD",
      "path": "7"
    },
    "360": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1532,
        1535
      ],
      "op": "DUP10",
      "path": "7"
    },
    "361": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1532,
        1540
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x763"
    },
    "364": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1532,
        1540
      ],
      "op": "JUMP",
      "path": "7"
    },
    "365": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1532,
        1540
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "372": {
      "op": "SHL"
    },
    "373": {
      "op": "SUB"
    },
    "374": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1541
      ],
      "op": "AND",
      "path": "7"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "381": {
      "op": "SHL"
    },
    "382": {
      "op": "SUB"
    },
    "383": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1541
      ],
      "op": "AND",
      "path": "7"
    },
    "384": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1541
      ],
      "op": "DUP2",
      "path": "7"
    },
    "385": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1541
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "386": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1541
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "388": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1541
      ],
      "op": "ADD",
      "path": "7"
    },
    "389": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1541
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "390": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1541
      ],
      "op": "DUP2",
      "path": "7"
    },
    "391": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1541
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "392": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1541
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "394": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1541
      ],
      "op": "ADD",
      "path": "7"
    },
    "395": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1541
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "397": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1541
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "398": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1557
      ],
      "op": "DUP2",
      "path": "7"
    },
    "399": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1557
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "400": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1557
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "401": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1524,
        1557
      ],
      "op": "POP",
      "path": "7"
    },
    "402": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1628,
        1640
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "404": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1642,
        1665
      ],
      "op": "DUP1",
      "path": "7"
    },
    "405": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1672
      ],
      "op": "DUP7",
      "path": "7"
    },
    "406": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1675
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "408": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1675
      ],
      "op": "ADD",
      "path": "7"
    },
    "409": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1675
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "411": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1675
      ],
      "op": "DUP2",
      "path": "7"
    },
    "412": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1675
      ],
      "op": "ADD",
      "path": "7"
    },
    "413": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1675
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "414": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1675
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A7"
    },
    "417": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1675
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "418": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1675
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "419": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1675
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x763"
    },
    "422": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1669,
        1675
      ],
      "op": "JUMP",
      "path": "7"
    },
    "423": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1675
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "430": {
      "op": "SHL"
    },
    "431": {
      "op": "SUB"
    },
    "432": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1680
      ],
      "op": "AND",
      "path": "7"
    },
    "433": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1686,
        1693
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "435": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1686,
        1693
      ],
      "op": "DUP9",
      "path": "7"
    },
    "436": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1686,
        1693
      ],
      "op": "ADD",
      "path": "7"
    },
    "437": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1686,
        1693
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "438": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1702,
        1711
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "440": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1702,
        1711
      ],
      "op": "DUP10",
      "path": "7"
    },
    "441": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1702,
        1711
      ],
      "op": "ADD",
      "path": "7"
    },
    "442": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1702,
        1711
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "443": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1730,
        1738
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C7"
    },
    "446": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1730,
        1738
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA0"
    },
    "448": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1730,
        1738
      ],
      "op": "DUP12",
      "path": "7"
    },
    "449": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1730,
        1738
      ],
      "op": "ADD",
      "path": "7"
    },
    "450": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1686,
        1689
      ],
      "op": "DUP12",
      "path": "7"
    },
    "451": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1730,
        1738
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8BA"
    },
    "454": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1730,
        1738
      ],
      "op": "JUMP",
      "path": "7"
    },
    "455": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1730,
        1738
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "456": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1740,
        1748
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D4"
    },
    "459": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1740,
        1748
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "461": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1740,
        1748
      ],
      "op": "DUP14",
      "path": "7"
    },
    "462": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1740,
        1748
      ],
      "op": "ADD",
      "path": "7"
    },
    "463": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1740,
        1743
      ],
      "op": "DUP14",
      "path": "7"
    },
    "464": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1740,
        1748
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x763"
    },
    "467": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1740,
        1748
      ],
      "op": "JUMP",
      "path": "7"
    },
    "468": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1740,
        1748
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "469": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "471": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "472": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "474": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "ADD",
      "path": "7"
    },
    "475": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "478": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "479": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "480": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "481": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "482": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x839"
    },
    "485": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1713,
        1749
      ],
      "op": "JUMP",
      "path": "7"
    },
    "486": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "487": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "489": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "DUP1",
      "path": "7"
    },
    "490": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "493": {
      "op": "NOT"
    },
    "494": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "DUP2",
      "path": "7"
    },
    "495": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "DUP5",
      "path": "7"
    },
    "496": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "SUB",
      "path": "7"
    },
    "497": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "ADD",
      "path": "7"
    },
    "498": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "DUP2",
      "path": "7"
    },
    "499": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "500": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "501": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "DUP3",
      "path": "7"
    },
    "502": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "503": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1713,
        1749
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "504": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x200"
    },
    "507": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "508": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x862"
    },
    "511": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1669,
        1750
      ],
      "op": "JUMP",
      "path": "7"
    },
    "512": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "513": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "515": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "517": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "518": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "DUP1",
      "path": "7"
    },
    "519": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "DUP4",
      "path": "7"
    },
    "520": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "SUB",
      "path": "7"
    },
    "521": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "DUP2",
      "path": "7"
    },
    "522": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "DUP6",
      "path": "7"
    },
    "523": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "DUP9",
      "path": "7"
    },
    "524": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "DUP9",
      "path": "7"
    },
    "525": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "CALL",
      "path": "7"
    },
    "526": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "527": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "POP",
      "path": "7"
    },
    "528": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "POP",
      "path": "7"
    },
    "529": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "POP",
      "path": "7"
    },
    "530": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "POP",
      "path": "7"
    },
    "531": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "532": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "DUP1",
      "path": "7"
    },
    "533": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "535": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "DUP2",
      "path": "7"
    },
    "536": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "EQ",
      "path": "7"
    },
    "537": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x23E"
    },
    "540": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "541": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "543": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "544": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "545": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "POP",
      "path": "7"
    },
    "546": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "548": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "NOT",
      "path": "7"
    },
    "549": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "551": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "552": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "ADD",
      "path": "7"
    },
    "553": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "AND",
      "path": "7"
    },
    "554": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "DUP3",
      "path": "7"
    },
    "555": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "ADD",
      "path": "7"
    },
    "556": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "558": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "559": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "560": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "DUP3",
      "path": "7"
    },
    "561": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "562": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "563": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "565": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "567": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "DUP5",
      "path": "7"
    },
    "568": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "ADD",
      "path": "7"
    },
    "569": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "570": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x243"
    },
    "573": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "JUMP",
      "path": "7"
    },
    "574": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "575": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "577": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "578": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "POP",
      "path": "7"
    },
    "579": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1669,
        1750
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1627,
        1750
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "582": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1627,
        1750
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1627,
        1750
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "585": {
      "op": "POP"
    },
    "586": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1915,
        1927
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 3,
      "value": "0x258"
    },
    "589": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1925,
        1927
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "591": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1915,
        1922
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "593": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1915,
        1922
      ],
      "op": "DUP10",
      "path": "7"
    },
    "594": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1915,
        1922
      ],
      "op": "ADD",
      "path": "7"
    },
    "595": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1915,
        1922
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "596": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1915,
        1927
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x92A"
    },
    "599": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1915,
        1927
      ],
      "op": "JUMP",
      "path": "7"
    },
    "600": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1915,
        1927
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "601": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1903,
        1912
      ],
      "op": "GAS",
      "path": "7"
    },
    "602": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1903,
        1927
      ],
      "op": "GT",
      "path": "7"
    },
    "603": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1896,
        1928
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x274"
    },
    "606": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1896,
        1928
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "607": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "612": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "614": {
      "op": "SHL"
    },
    "615": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1896,
        1928
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "617": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1896,
        1928
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "618": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1896,
        1928
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "620": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1896,
        1928
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "622": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1896,
        1928
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "623": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1896,
        1928
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "625": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1896,
        1928
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "627": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1896,
        1928
      ],
      "op": "REVERT",
      "path": "7"
    },
    "628": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1896,
        1928
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "629": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1947,
        1954
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 4
    },
    "630": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1947,
        1954
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "631": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1947,
        1954
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "632": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1947,
        1954
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "633": {
      "op": "POP"
    },
    "634": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1303,
        1974
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "635": {
      "op": "POP"
    },
    "636": {
      "op": "POP"
    },
    "637": {
      "op": "POP"
    },
    "638": {
      "op": "POP"
    },
    "639": {
      "fn": "MinimalForwarder.execute",
      "jump": "o",
      "offset": [
        1303,
        1974
      ],
      "op": "JUMP",
      "path": "7"
    },
    "640": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "641": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        956,
        960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "643": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        972,
        986
      ],
      "op": "DUP1",
      "path": "7"
    },
    "644": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x393"
    },
    "647": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1211,
        1220
      ],
      "op": "DUP5",
      "path": "7"
    },
    "648": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1211,
        1220
      ],
      "op": "DUP5",
      "path": "7"
    },
    "649": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "DUP1",
      "path": "7"
    },
    "650": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "DUP1",
      "path": "7"
    },
    "651": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "653": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "ADD",
      "path": "7"
    },
    "654": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "656": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "DUP1",
      "path": "7"
    },
    "657": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "658": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "DIV",
      "path": "7"
    },
    "659": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "MUL",
      "path": "7"
    },
    "660": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "662": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "ADD",
      "path": "7"
    },
    "663": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "665": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "666": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "667": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "DUP2",
      "path": "7"
    },
    "668": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "ADD",
      "path": "7"
    },
    "669": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "671": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "672": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "DUP1",
      "path": "7"
    },
    "673": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "674": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "675": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "676": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "677": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "DUP2",
      "path": "7"
    },
    "678": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "DUP2",
      "path": "7"
    },
    "679": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "680": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "682": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "ADD",
      "path": "7"
    },
    "683": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "DUP4",
      "path": "7"
    },
    "684": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "DUP4",
      "path": "7"
    },
    "685": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "DUP1",
      "path": "7"
    },
    "686": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "DUP3",
      "path": "7"
    },
    "687": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "DUP5",
      "path": "7"
    },
    "688": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "CALLDATACOPY",
      "path": "7"
    },
    "689": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "691": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "692": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "ADD",
      "path": "7"
    },
    "693": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "694": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "695": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "696": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1202
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38D"
    },
    "701": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1202
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "702": {
      "op": "POP"
    },
    "703": {
      "offset": [
        541,
        644
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDD8F4B70B0F4393E889BD39128A30628A78B61816A9EB8199759E7A349657E48"
    },
    "736": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        541,
        644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "737": {
      "op": "POP"
    },
    "738": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1070
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2F0"
    },
    "741": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1070
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "742": {
      "op": "POP"
    },
    "743": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1070
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "745": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1070
      ],
      "op": "DUP11",
      "path": "7"
    },
    "746": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1070
      ],
      "op": "ADD",
      "path": "7"
    },
    "747": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1065
      ],
      "op": "DUP11",
      "path": "7"
    },
    "748": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1070
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x763"
    },
    "751": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1062,
        1070
      ],
      "op": "JUMP",
      "path": "7"
    },
    "752": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1070
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "753": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1084,
        1090
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x300"
    },
    "756": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1084,
        1090
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "758": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1084,
        1090
      ],
      "op": "DUP12",
      "path": "7"
    },
    "759": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1084,
        1090
      ],
      "op": "ADD",
      "path": "7"
    },
    "760": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1084,
        1090
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "762": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1084,
        1090
      ],
      "op": "DUP13",
      "path": "7"
    },
    "763": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1084,
        1090
      ],
      "op": "ADD",
      "path": "7"
    },
    "764": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1084,
        1090
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x763"
    },
    "767": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1084,
        1090
      ],
      "op": "JUMP",
      "path": "7"
    },
    "768": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1084,
        1090
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "769": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1104,
        1113
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "771": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1104,
        1113
      ],
      "op": "DUP12",
      "path": "7"
    },
    "772": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1104,
        1113
      ],
      "op": "ADD",
      "path": "7"
    },
    "773": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1104,
        1113
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "774": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1127,
        1134
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "776": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1127,
        1134
      ],
      "op": "DUP13",
      "path": "7"
    },
    "777": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1127,
        1134
      ],
      "op": "ADD",
      "path": "7"
    },
    "778": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1127,
        1134
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "779": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1148,
        1157
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "781": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1148,
        1157
      ],
      "op": "DUP14",
      "path": "7"
    },
    "782": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1148,
        1157
      ],
      "op": "ADD",
      "path": "7"
    },
    "783": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1148,
        1157
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "784": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1181,
        1189
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x31C"
    },
    "787": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1181,
        1189
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA0"
    },
    "789": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1181,
        1189
      ],
      "op": "DUP16",
      "path": "7"
    },
    "790": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1181,
        1189
      ],
      "op": "ADD",
      "path": "7"
    },
    "791": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1104,
        1107
      ],
      "op": "DUP16",
      "path": "7"
    },
    "792": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1181,
        1189
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8BA"
    },
    "795": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1181,
        1189
      ],
      "op": "JUMP",
      "path": "7"
    },
    "796": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1181,
        1189
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "797": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "799": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "800": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32A"
    },
    "803": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "804": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "805": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "806": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x829"
    },
    "809": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1171,
        1190
      ],
      "op": "JUMP",
      "path": "7"
    },
    "810": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "811": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "813": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "DUP1",
      "path": "7"
    },
    "814": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "815": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "816": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "DUP3",
      "path": "7"
    },
    "817": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "818": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "SUB",
      "path": "7"
    },
    "819": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "DUP3",
      "path": "7"
    },
    "820": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1171,
        1190
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "821": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "823": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "DUP4",
      "path": "7"
    },
    "824": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "ADD",
      "path": "7"
    },
    "825": {
      "op": "SWAP9"
    },
    "826": {
      "op": "SWAP1"
    },
    "827": {
      "op": "SWAP9"
    },
    "828": {
      "op": "MSTORE"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "835": {
      "op": "SHL"
    },
    "836": {
      "op": "SUB"
    },
    "837": {
      "op": "SWAP7"
    },
    "838": {
      "op": "DUP8"
    },
    "839": {
      "op": "AND"
    },
    "840": {
      "op": "SWAP1"
    },
    "841": {
      "op": "DUP3"
    },
    "842": {
      "op": "ADD"
    },
    "843": {
      "op": "MSTORE"
    },
    "844": {
      "op": "SWAP5"
    },
    "845": {
      "op": "SWAP1"
    },
    "846": {
      "op": "SWAP4"
    },
    "847": {
      "op": "AND"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "850": {
      "op": "DUP6"
    },
    "851": {
      "op": "ADD"
    },
    "852": {
      "op": "MSTORE"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "855": {
      "op": "DUP5"
    },
    "856": {
      "op": "ADD"
    },
    "857": {
      "op": "SWAP2"
    },
    "858": {
      "op": "SWAP1"
    },
    "859": {
      "op": "SWAP2"
    },
    "860": {
      "op": "MSTORE"
    },
    "861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "863": {
      "op": "DUP4"
    },
    "864": {
      "op": "ADD"
    },
    "865": {
      "op": "MSTORE"
    },
    "866": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "868": {
      "op": "DUP3"
    },
    "869": {
      "op": "ADD"
    },
    "870": {
      "op": "MSTORE"
    },
    "871": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "873": {
      "op": "DUP2"
    },
    "874": {
      "op": "ADD"
    },
    "875": {
      "op": "SWAP2"
    },
    "876": {
      "op": "SWAP1"
    },
    "877": {
      "op": "SWAP2"
    },
    "878": {
      "op": "MSTORE"
    },
    "879": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "882": {
      "op": "ADD"
    },
    "883": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "885": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "886": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "888": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "DUP2",
      "path": "7"
    },
    "889": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "DUP4",
      "path": "7"
    },
    "890": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "SUB",
      "path": "7"
    },
    "891": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "SUB",
      "path": "7"
    },
    "892": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "DUP2",
      "path": "7"
    },
    "893": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "894": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "895": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "897": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1016,
        1200
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "898": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1006,
        1201
      ],
      "op": "DUP1",
      "path": "7"
    },
    "899": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1006,
        1201
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "900": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1006,
        1201
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "901": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1006,
        1201
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "903": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1006,
        1201
      ],
      "op": "ADD",
      "path": "7"
    },
    "904": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1006,
        1201
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "905": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1005
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3FE"
    },
    "908": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        989,
        1202
      ],
      "op": "JUMP",
      "path": "7"
    },
    "909": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1202
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "910": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1210
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "911": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1210
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x452"
    },
    "914": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        989,
        1221
      ],
      "op": "JUMP",
      "path": "7"
    },
    "915": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        989,
        1221
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "916": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        972,
        1221
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "917": {
      "op": "POP"
    },
    "918": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1259,
        1268
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x80"
    },
    "920": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1259,
        1268
      ],
      "op": "DUP6",
      "path": "7"
    },
    "921": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1259,
        1268
      ],
      "op": "ADD",
      "path": "7"
    },
    "922": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1259,
        1268
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "923": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1245
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "925": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1245
      ],
      "op": "DUP1",
      "path": "7"
    },
    "926": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1246,
        1254
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3AA"
    },
    "929": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1246,
        1254
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "931": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1246,
        1254
      ],
      "op": "DUP10",
      "path": "7"
    },
    "932": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1246,
        1254
      ],
      "op": "ADD",
      "path": "7"
    },
    "933": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1259,
        1262
      ],
      "op": "DUP10",
      "path": "7"
    },
    "934": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1246,
        1254
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x763"
    },
    "937": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1246,
        1254
      ],
      "op": "JUMP",
      "path": "7"
    },
    "938": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1246,
        1254
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "945": {
      "op": "SHL"
    },
    "946": {
      "op": "SUB"
    },
    "947": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1255
      ],
      "op": "AND",
      "path": "7"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "954": {
      "op": "SHL"
    },
    "955": {
      "op": "SUB"
    },
    "956": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1255
      ],
      "op": "AND",
      "path": "7"
    },
    "957": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1255
      ],
      "op": "DUP2",
      "path": "7"
    },
    "958": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1255
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "959": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1255
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "961": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1255
      ],
      "op": "ADD",
      "path": "7"
    },
    "962": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1255
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "963": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1255
      ],
      "op": "DUP2",
      "path": "7"
    },
    "964": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1255
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "965": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1255
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "967": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1255
      ],
      "op": "ADD",
      "path": "7"
    },
    "968": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1255
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "970": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1255
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "971": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1255
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "972": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1268
      ],
      "op": "EQ",
      "path": "7"
    },
    "973": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1290
      ],
      "op": "DUP1",
      "path": "7"
    },
    "974": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1290
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "975": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1290
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F5"
    },
    "978": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1290
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "979": {
      "op": "POP"
    },
    "980": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1282,
        1290
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3E0"
    },
    "983": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1282,
        1290
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "985": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1282,
        1290
      ],
      "op": "DUP7",
      "path": "7"
    },
    "986": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1282,
        1290
      ],
      "op": "ADD",
      "path": "7"
    },
    "987": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1282,
        1285
      ],
      "op": "DUP7",
      "path": "7"
    },
    "988": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1282,
        1290
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x763"
    },
    "991": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1282,
        1290
      ],
      "op": "JUMP",
      "path": "7"
    },
    "992": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1282,
        1290
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "999": {
      "op": "SHL"
    },
    "1000": {
      "op": "SUB"
    },
    "1001": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1272,
        1290
      ],
      "op": "AND",
      "path": "7"
    },
    "1002": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1272,
        1278
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1009": {
      "op": "SHL"
    },
    "1010": {
      "op": "SUB"
    },
    "1011": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1272,
        1290
      ],
      "op": "AND",
      "path": "7"
    },
    "1012": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1272,
        1290
      ],
      "op": "EQ",
      "path": "7"
    },
    "1013": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1238,
        1290
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1014": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1231,
        1290
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1015": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        864,
        1297
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1016": {
      "op": "POP"
    },
    "1017": {
      "op": "POP"
    },
    "1018": {
      "op": "POP"
    },
    "1019": {
      "op": "POP"
    },
    "1020": {
      "op": "POP"
    },
    "1021": {
      "fn": "MinimalForwarder.verify",
      "jump": "o",
      "offset": [
        864,
        1297
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1022": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4200,
        4365
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "1023": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4277,
        4284
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x0"
    },
    "1025": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4303,
        4358
      ],
      "op": "PUSH2",
      "path": "127",
      "statement": 6,
      "value": "0x44C"
    },
    "1028": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4325,
        4345
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x40B"
    },
    "1031": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4325,
        4343
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x4CD"
    },
    "1034": {
      "fn": "EIP712._hashTypedDataV4",
      "jump": "i",
      "offset": [
        4325,
        4345
      ],
      "op": "JUMP",
      "path": "127"
    },
    "1035": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4325,
        4345
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "1036": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4347,
        4357
      ],
      "op": "DUP4",
      "path": "127"
    },
    "1037": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "PUSH1",
      "path": "125",
      "statement": 7,
      "value": "0x40"
    },
    "1039": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1040": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1045": {
      "op": "SHL"
    },
    "1046": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x20"
    },
    "1048": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "DUP3",
      "path": "125"
    },
    "1049": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "ADD",
      "path": "125"
    },
    "1050": {
      "op": "MSTORE"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1053": {
      "op": "DUP2"
    },
    "1054": {
      "op": "ADD"
    },
    "1055": {
      "op": "DUP4"
    },
    "1056": {
      "op": "SWAP1"
    },
    "1057": {
      "op": "MSTORE"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1060": {
      "op": "DUP2"
    },
    "1061": {
      "op": "ADD"
    },
    "1062": {
      "op": "DUP3"
    },
    "1063": {
      "op": "SWAP1"
    },
    "1064": {
      "op": "MSTORE"
    },
    "1065": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4338,
        4345
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x0"
    },
    "1067": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4338,
        4345
      ],
      "op": "SWAP1",
      "path": "125"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "1070": {
      "op": "ADD"
    },
    "1071": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x40"
    },
    "1073": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1074": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x20"
    },
    "1076": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "DUP2",
      "path": "125"
    },
    "1077": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "DUP4",
      "path": "125"
    },
    "1078": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "SUB",
      "path": "125"
    },
    "1079": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "SUB",
      "path": "125"
    },
    "1080": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "DUP2",
      "path": "125"
    },
    "1081": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "MSTORE",
      "path": "125"
    },
    "1082": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "SWAP1",
      "path": "125"
    },
    "1083": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x40"
    },
    "1085": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4374,
        4431
      ],
      "op": "MSTORE",
      "path": "125"
    },
    "1086": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4364,
        4432
      ],
      "op": "DUP1",
      "path": "125"
    },
    "1087": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4364,
        4432
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1088": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4364,
        4432
      ],
      "op": "SWAP1",
      "path": "125"
    },
    "1089": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4364,
        4432
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x20"
    },
    "1091": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4364,
        4432
      ],
      "op": "ADD",
      "path": "125"
    },
    "1092": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4364,
        4432
      ],
      "op": "KECCAK256",
      "path": "125"
    },
    "1093": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4357,
        4432
      ],
      "op": "SWAP1",
      "path": "125"
    },
    "1094": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4357,
        4432
      ],
      "op": "POP",
      "path": "125"
    },
    "1095": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4245,
        4439
      ],
      "op": "SWAP3",
      "path": "125"
    },
    "1096": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4245,
        4439
      ],
      "op": "SWAP2",
      "path": "125"
    },
    "1097": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4245,
        4439
      ],
      "op": "POP",
      "path": "125"
    },
    "1098": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4245,
        4439
      ],
      "op": "POP",
      "path": "125"
    },
    "1099": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        4245,
        4439
      ],
      "op": "JUMP",
      "path": "125"
    },
    "1100": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4303,
        4358
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "1101": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4296,
        4358
      ],
      "op": "SWAP3",
      "path": "127"
    },
    "1102": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4200,
        4365
      ],
      "op": "SWAP2",
      "path": "127"
    },
    "1103": {
      "op": "POP"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "fn": "EIP712._hashTypedDataV4",
      "jump": "o",
      "offset": [
        4200,
        4365
      ],
      "op": "JUMP",
      "path": "127"
    },
    "1106": {
      "fn": "ECDSA.recover",
      "offset": [
        1064,
        1804
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "1107": {
      "fn": "ECDSA.recover",
      "offset": [
        1142,
        1149
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x0"
    },
    "1109": {
      "fn": "ECDSA.recover",
      "offset": [
        1203,
        1212
      ],
      "op": "DUP2",
      "path": "125"
    },
    "1110": {
      "fn": "ECDSA.recover",
      "offset": [
        1203,
        1219
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1111": {
      "fn": "ECDSA.recover",
      "offset": [
        1223,
        1225
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x41"
    },
    "1113": {
      "branch": 17,
      "fn": "ECDSA.recover",
      "offset": [
        1203,
        1225
      ],
      "op": "EQ",
      "path": "125"
    },
    "1114": {
      "fn": "ECDSA.recover",
      "offset": [
        1199,
        1293
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x4A5"
    },
    "1117": {
      "branch": 17,
      "fn": "ECDSA.recover",
      "offset": [
        1199,
        1293
      ],
      "op": "JUMPI",
      "path": "125"
    },
    "1118": {
      "fn": "ECDSA.recover",
      "offset": [
        1241,
        1282
      ],
      "op": "PUSH1",
      "path": "125",
      "statement": 8,
      "value": "0x40"
    },
    "1120": {
      "fn": "ECDSA.recover",
      "offset": [
        1241,
        1282
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1121": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1127": {
      "op": "SHL"
    },
    "1128": {
      "fn": "ECDSA.recover",
      "offset": [
        1241,
        1282
      ],
      "op": "DUP2",
      "path": "125"
    },
    "1129": {
      "fn": "ECDSA.recover",
      "offset": [
        1241,
        1282
      ],
      "op": "MSTORE",
      "path": "125"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1132": {
      "fn": "ECDSA.recover",
      "offset": [
        1241,
        1282
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x4"
    },
    "1134": {
      "fn": "ECDSA.recover",
      "offset": [
        1241,
        1282
      ],
      "op": "DUP3",
      "path": "125"
    },
    "1135": {
      "fn": "ECDSA.recover",
      "offset": [
        1241,
        1282
      ],
      "op": "ADD",
      "path": "125"
    },
    "1136": {
      "op": "MSTORE"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1141": {
      "op": "DUP3"
    },
    "1142": {
      "op": "ADD"
    },
    "1143": {
      "op": "MSTORE"
    },
    "1144": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1179": {
      "op": "DUP3"
    },
    "1180": {
      "op": "ADD"
    },
    "1181": {
      "op": "MSTORE"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1184": {
      "op": "ADD"
    },
    "1185": {
      "fn": "ECDSA.recover",
      "offset": [
        1241,
        1282
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x145"
    },
    "1188": {
      "op": "JUMP"
    },
    "1189": {
      "fn": "ECDSA.recover",
      "offset": [
        1199,
        1293
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "1190": {
      "fn": "ECDSA.recover",
      "offset": [
        1643,
        1647
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x20"
    },
    "1192": {
      "fn": "ECDSA.recover",
      "offset": [
        1628,
        1648
      ],
      "op": "DUP3",
      "path": "125"
    },
    "1193": {
      "fn": "ECDSA.recover",
      "offset": [
        1628,
        1648
      ],
      "op": "ADD",
      "path": "125"
    },
    "1194": {
      "fn": "ECDSA.recover",
      "offset": [
        1622,
        1649
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1195": {
      "fn": "ECDSA.recover",
      "offset": [
        1688,
        1692
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x40"
    },
    "1197": {
      "fn": "ECDSA.recover",
      "offset": [
        1673,
        1693
      ],
      "op": "DUP4",
      "path": "125"
    },
    "1198": {
      "fn": "ECDSA.recover",
      "offset": [
        1673,
        1693
      ],
      "op": "ADD",
      "path": "125"
    },
    "1199": {
      "fn": "ECDSA.recover",
      "offset": [
        1667,
        1694
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1200": {
      "fn": "ECDSA.recover",
      "offset": [
        1741,
        1745
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x60"
    },
    "1202": {
      "fn": "ECDSA.recover",
      "offset": [
        1726,
        1746
      ],
      "op": "DUP5",
      "path": "125"
    },
    "1203": {
      "fn": "ECDSA.recover",
      "offset": [
        1726,
        1746
      ],
      "op": "ADD",
      "path": "125"
    },
    "1204": {
      "fn": "ECDSA.recover",
      "offset": [
        1720,
        1747
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1205": {
      "fn": "ECDSA.recover",
      "offset": [
        1359,
        1368
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x0"
    },
    "1207": {
      "fn": "ECDSA.recover",
      "offset": [
        1712,
        1748
      ],
      "op": "BYTE",
      "path": "125"
    },
    "1208": {
      "fn": "ECDSA.recover",
      "offset": [
        1775,
        1797
      ],
      "op": "PUSH2",
      "path": "125",
      "statement": 9,
      "value": "0x4C3"
    },
    "1211": {
      "fn": "ECDSA.recover",
      "offset": [
        1783,
        1787
      ],
      "op": "DUP7",
      "path": "125"
    },
    "1212": {
      "fn": "ECDSA.recover",
      "offset": [
        1712,
        1748
      ],
      "op": "DUP3",
      "path": "125"
    },
    "1213": {
      "fn": "ECDSA.recover",
      "offset": [
        1622,
        1649
      ],
      "op": "DUP6",
      "path": "125"
    },
    "1214": {
      "fn": "ECDSA.recover",
      "offset": [
        1667,
        1694
      ],
      "op": "DUP6",
      "path": "125"
    },
    "1215": {
      "fn": "ECDSA.recover",
      "offset": [
        1775,
        1782
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x5C3"
    },
    "1218": {
      "fn": "ECDSA.recover",
      "jump": "i",
      "offset": [
        1775,
        1797
      ],
      "op": "JUMP",
      "path": "125"
    },
    "1219": {
      "fn": "ECDSA.recover",
      "offset": [
        1775,
        1797
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "1220": {
      "fn": "ECDSA.recover",
      "offset": [
        1768,
        1797
      ],
      "op": "SWAP7",
      "path": "125"
    },
    "1221": {
      "fn": "ECDSA.recover",
      "offset": [
        1064,
        1804
      ],
      "op": "SWAP6",
      "path": "125"
    },
    "1222": {
      "op": "POP"
    },
    "1223": {
      "op": "POP"
    },
    "1224": {
      "op": "POP"
    },
    "1225": {
      "op": "POP"
    },
    "1226": {
      "op": "POP"
    },
    "1227": {
      "op": "POP"
    },
    "1228": {
      "fn": "ECDSA.recover",
      "jump": "o",
      "offset": [
        1064,
        1804
      ],
      "op": "JUMP",
      "path": "125"
    },
    "1229": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        2967,
        3242
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "1230": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3020,
        3027
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x0"
    },
    "1232": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3060,
        3076
      ],
      "op": "PUSH32",
      "path": "127",
      "value": "0x0"
    },
    "1265": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3043,
        3056
      ],
      "op": "CHAINID",
      "path": "127"
    },
    "1266": {
      "branch": 22,
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3043,
        3076
      ],
      "op": "EQ",
      "path": "127"
    },
    "1267": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3039,
        3236
      ],
      "op": "ISZERO",
      "path": "127"
    },
    "1268": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3039,
        3236
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x51E"
    },
    "1271": {
      "branch": 22,
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3039,
        3236
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "1272": {
      "op": "POP"
    },
    "1273": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3099,
        3123
      ],
      "op": "PUSH32",
      "path": "127",
      "statement": 10,
      "value": "0x0"
    },
    "1306": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3092,
        3123
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x5C0"
    },
    "1309": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3092,
        3123
      ],
      "op": "JUMP",
      "path": "127"
    },
    "1310": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3039,
        3236
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "1311": {
      "op": "POP"
    },
    "1312": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "PUSH1",
      "path": "127",
      "statement": 11,
      "value": "0x40"
    },
    "1314": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "DUP1",
      "path": "127"
    },
    "1315": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "MLOAD",
      "path": "127"
    },
    "1316": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3183,
        3193
      ],
      "op": "PUSH32",
      "path": "127",
      "statement": 12,
      "value": "0x0"
    },
    "1349": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x20"
    },
    "1351": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "DUP1",
      "path": "127"
    },
    "1352": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "DUP4",
      "path": "127"
    },
    "1353": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "ADD",
      "path": "127"
    },
    "1354": {
      "op": "SWAP2"
    },
    "1355": {
      "op": "SWAP1"
    },
    "1356": {
      "op": "SWAP2"
    },
    "1357": {
      "op": "MSTORE"
    },
    "1358": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3195,
        3207
      ],
      "op": "PUSH32",
      "path": "127",
      "value": "0x0"
    },
    "1391": {
      "op": "DUP3"
    },
    "1392": {
      "op": "DUP5"
    },
    "1393": {
      "op": "ADD"
    },
    "1394": {
      "op": "MSTORE"
    },
    "1395": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3209,
        3224
      ],
      "op": "PUSH32",
      "path": "127",
      "value": "0x0"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1430": {
      "op": "DUP4"
    },
    "1431": {
      "op": "ADD"
    },
    "1432": {
      "op": "MSTORE"
    },
    "1433": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3500,
        3513
      ],
      "op": "CHAINID",
      "path": "127"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1436": {
      "op": "DUP4"
    },
    "1437": {
      "op": "ADD"
    },
    "1438": {
      "op": "MSTORE"
    },
    "1439": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3539,
        3543
      ],
      "op": "ADDRESS",
      "path": "127"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1442": {
      "op": "DUP1"
    },
    "1443": {
      "op": "DUP5"
    },
    "1444": {
      "op": "ADD"
    },
    "1445": {
      "op": "SWAP2"
    },
    "1446": {
      "op": "SWAP1"
    },
    "1447": {
      "op": "SWAP2"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "DUP4",
      "path": "127"
    },
    "1450": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "MLOAD",
      "path": "127"
    },
    "1451": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "DUP1",
      "path": "127"
    },
    "1452": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "DUP5",
      "path": "127"
    },
    "1453": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "SUB",
      "path": "127"
    },
    "1454": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "1455": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "SWAP2",
      "path": "127"
    },
    "1456": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "ADD",
      "path": "127"
    },
    "1457": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "DUP2",
      "path": "127"
    },
    "1458": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "MSTORE",
      "path": "127"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1461": {
      "op": "SWAP1"
    },
    "1462": {
      "op": "SWAP3"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "1465": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "SWAP3",
      "path": "127"
    },
    "1466": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3399,
        3558
      ],
      "op": "MSTORE",
      "path": "127"
    },
    "1467": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3376,
        3568
      ],
      "op": "DUP1",
      "path": "127"
    },
    "1468": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3376,
        3568
      ],
      "op": "MLOAD",
      "path": "127"
    },
    "1469": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3376,
        3568
      ],
      "op": "SWAP2",
      "path": "127"
    },
    "1470": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3376,
        3568
      ],
      "op": "ADD",
      "path": "127"
    },
    "1471": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3376,
        3568
      ],
      "op": "KECCAK256",
      "path": "127"
    },
    "1472": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3039,
        3236
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "1473": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        2967,
        3242
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "1474": {
      "fn": "EIP712._domainSeparatorV4",
      "jump": "o",
      "offset": [
        2967,
        3242
      ],
      "op": "JUMP",
      "path": "127"
    },
    "1475": {
      "fn": "ECDSA.recover",
      "offset": [
        1937,
        3351
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "1476": {
      "fn": "ECDSA.recover",
      "offset": [
        2022,
        2029
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x0"
    },
    "1478": {
      "fn": "ECDSA.recover",
      "offset": [
        2937,
        3003
      ],
      "op": "PUSH32",
      "path": "125",
      "statement": 13,
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
    },
    "1511": {
      "fn": "ECDSA.recover",
      "offset": [
        2923,
        3003
      ],
      "op": "DUP3",
      "path": "125"
    },
    "1512": {
      "fn": "ECDSA.recover",
      "offset": [
        2923,
        3003
      ],
      "op": "GT",
      "path": "125"
    },
    "1513": {
      "branch": 18,
      "fn": "ECDSA.recover",
      "offset": [
        2923,
        3003
      ],
      "op": "ISZERO",
      "path": "125"
    },
    "1514": {
      "fn": "ECDSA.recover",
      "offset": [
        2915,
        3042
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x640"
    },
    "1517": {
      "branch": 18,
      "fn": "ECDSA.recover",
      "offset": [
        2915,
        3042
      ],
      "op": "JUMPI",
      "path": "125"
    },
    "1518": {
      "fn": "ECDSA.recover",
      "offset": [
        2915,
        3042
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x40"
    },
    "1520": {
      "fn": "ECDSA.recover",
      "offset": [
        2915,
        3042
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1521": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1527": {
      "op": "SHL"
    },
    "1528": {
      "fn": "ECDSA.recover",
      "offset": [
        2915,
        3042
      ],
      "op": "DUP2",
      "path": "125"
    },
    "1529": {
      "fn": "ECDSA.recover",
      "offset": [
        2915,
        3042
      ],
      "op": "MSTORE",
      "path": "125"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1532": {
      "fn": "ECDSA.recover",
      "offset": [
        2915,
        3042
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x4"
    },
    "1534": {
      "fn": "ECDSA.recover",
      "offset": [
        2915,
        3042
      ],
      "op": "DUP3",
      "path": "125"
    },
    "1535": {
      "fn": "ECDSA.recover",
      "offset": [
        2915,
        3042
      ],
      "op": "ADD",
      "path": "125"
    },
    "1536": {
      "op": "MSTORE"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1541": {
      "op": "DUP3"
    },
    "1542": {
      "op": "ADD"
    },
    "1543": {
      "op": "MSTORE"
    },
    "1544": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265202773272076616C"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1579": {
      "op": "DUP3"
    },
    "1580": {
      "op": "ADD"
    },
    "1581": {
      "op": "MSTORE"
    },
    "1582": {
      "op": "PUSH2",
      "value": "0x7565"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1587": {
      "op": "SHL"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1590": {
      "op": "DUP3"
    },
    "1591": {
      "op": "ADD"
    },
    "1592": {
      "op": "MSTORE"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1595": {
      "op": "ADD"
    },
    "1596": {
      "fn": "ECDSA.recover",
      "offset": [
        2915,
        3042
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x145"
    },
    "1599": {
      "op": "JUMP"
    },
    "1600": {
      "fn": "ECDSA.recover",
      "offset": [
        2915,
        3042
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "1601": {
      "fn": "ECDSA.recover",
      "offset": [
        3060,
        3061
      ],
      "op": "DUP4",
      "path": "125",
      "statement": 14
    },
    "1602": {
      "fn": "ECDSA.recover",
      "offset": [
        3060,
        3067
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0xFF"
    },
    "1604": {
      "fn": "ECDSA.recover",
      "offset": [
        3060,
        3067
      ],
      "op": "AND",
      "path": "125"
    },
    "1605": {
      "fn": "ECDSA.recover",
      "offset": [
        3065,
        3067
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x1B"
    },
    "1607": {
      "branch": 19,
      "fn": "ECDSA.recover",
      "offset": [
        3060,
        3067
      ],
      "op": "EQ",
      "path": "125"
    },
    "1608": {
      "fn": "ECDSA.recover",
      "offset": [
        3060,
        3078
      ],
      "op": "DUP1",
      "path": "125"
    },
    "1609": {
      "fn": "ECDSA.recover",
      "offset": [
        3060,
        3078
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x655"
    },
    "1612": {
      "branch": 19,
      "fn": "ECDSA.recover",
      "offset": [
        3060,
        3078
      ],
      "op": "JUMPI",
      "path": "125"
    },
    "1613": {
      "fn": "ECDSA.recover",
      "offset": [
        3060,
        3078
      ],
      "op": "POP",
      "path": "125"
    },
    "1614": {
      "fn": "ECDSA.recover",
      "offset": [
        3071,
        3072
      ],
      "op": "DUP4",
      "path": "125"
    },
    "1615": {
      "fn": "ECDSA.recover",
      "offset": [
        3071,
        3078
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0xFF"
    },
    "1617": {
      "fn": "ECDSA.recover",
      "offset": [
        3071,
        3078
      ],
      "op": "AND",
      "path": "125"
    },
    "1618": {
      "fn": "ECDSA.recover",
      "offset": [
        3076,
        3078
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x1C"
    },
    "1620": {
      "branch": 20,
      "fn": "ECDSA.recover",
      "offset": [
        3071,
        3078
      ],
      "op": "EQ",
      "path": "125"
    },
    "1621": {
      "fn": "ECDSA.recover",
      "offset": [
        3060,
        3078
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "1622": {
      "fn": "ECDSA.recover",
      "offset": [
        3052,
        3117
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x6AC"
    },
    "1625": {
      "branch": 20,
      "fn": "ECDSA.recover",
      "offset": [
        3052,
        3117
      ],
      "op": "JUMPI",
      "path": "125"
    },
    "1626": {
      "fn": "ECDSA.recover",
      "offset": [
        3052,
        3117
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x40"
    },
    "1628": {
      "fn": "ECDSA.recover",
      "offset": [
        3052,
        3117
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1629": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "fn": "ECDSA.recover",
      "offset": [
        3052,
        3117
      ],
      "op": "DUP2",
      "path": "125"
    },
    "1637": {
      "fn": "ECDSA.recover",
      "offset": [
        3052,
        3117
      ],
      "op": "MSTORE",
      "path": "125"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1640": {
      "fn": "ECDSA.recover",
      "offset": [
        3052,
        3117
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x4"
    },
    "1642": {
      "fn": "ECDSA.recover",
      "offset": [
        3052,
        3117
      ],
      "op": "DUP3",
      "path": "125"
    },
    "1643": {
      "fn": "ECDSA.recover",
      "offset": [
        3052,
        3117
      ],
      "op": "ADD",
      "path": "125"
    },
    "1644": {
      "op": "MSTORE"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1649": {
      "op": "DUP3"
    },
    "1650": {
      "op": "ADD"
    },
    "1651": {
      "op": "MSTORE"
    },
    "1652": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265202776272076616C"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1687": {
      "op": "DUP3"
    },
    "1688": {
      "op": "ADD"
    },
    "1689": {
      "op": "MSTORE"
    },
    "1690": {
      "op": "PUSH2",
      "value": "0x7565"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1695": {
      "op": "SHL"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1698": {
      "op": "DUP3"
    },
    "1699": {
      "op": "ADD"
    },
    "1700": {
      "op": "MSTORE"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1703": {
      "op": "ADD"
    },
    "1704": {
      "fn": "ECDSA.recover",
      "offset": [
        3052,
        3117
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x145"
    },
    "1707": {
      "op": "JUMP"
    },
    "1708": {
      "fn": "ECDSA.recover",
      "offset": [
        3052,
        3117
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "1709": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x40"
    },
    "1711": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "DUP1",
      "path": "125"
    },
    "1712": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1713": {
      "fn": "ECDSA.recover",
      "offset": [
        3212,
        3226
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x0"
    },
    "1715": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "DUP1",
      "path": "125"
    },
    "1716": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "DUP3",
      "path": "125"
    },
    "1717": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "MSTORE",
      "path": "125"
    },
    "1718": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x20"
    },
    "1720": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "DUP3",
      "path": "125"
    },
    "1721": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "ADD",
      "path": "125"
    },
    "1722": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "DUP1",
      "path": "125"
    },
    "1723": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "DUP5",
      "path": "125"
    },
    "1724": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "MSTORE",
      "path": "125"
    },
    "1725": {
      "op": "DUP9"
    },
    "1726": {
      "op": "SWAP1"
    },
    "1727": {
      "op": "MSTORE"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1730": {
      "op": "DUP8"
    },
    "1731": {
      "op": "AND"
    },
    "1732": {
      "op": "SWAP3"
    },
    "1733": {
      "op": "DUP3"
    },
    "1734": {
      "op": "ADD"
    },
    "1735": {
      "op": "SWAP3"
    },
    "1736": {
      "op": "SWAP1"
    },
    "1737": {
      "op": "SWAP3"
    },
    "1738": {
      "op": "MSTORE"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1741": {
      "op": "DUP2"
    },
    "1742": {
      "op": "ADD"
    },
    "1743": {
      "op": "DUP6"
    },
    "1744": {
      "op": "SWAP1"
    },
    "1745": {
      "op": "MSTORE"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1748": {
      "op": "DUP2"
    },
    "1749": {
      "op": "ADD"
    },
    "1750": {
      "op": "DUP5"
    },
    "1751": {
      "op": "SWAP1"
    },
    "1752": {
      "op": "MSTORE"
    },
    "1753": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x1"
    },
    "1755": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "SWAP1",
      "path": "125"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1758": {
      "op": "ADD"
    },
    "1759": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x20"
    },
    "1761": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x40"
    },
    "1763": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1764": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x20"
    },
    "1766": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "DUP2",
      "path": "125"
    },
    "1767": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "SUB",
      "path": "125"
    },
    "1768": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "SWAP1",
      "path": "125"
    },
    "1769": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "DUP1",
      "path": "125"
    },
    "1770": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "DUP5",
      "path": "125"
    },
    "1771": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "SUB",
      "path": "125"
    },
    "1772": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "SWAP1",
      "path": "125"
    },
    "1773": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "DUP6",
      "path": "125"
    },
    "1774": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "GAS",
      "path": "125"
    },
    "1775": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "STATICCALL",
      "path": "125"
    },
    "1776": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "ISZERO",
      "path": "125"
    },
    "1777": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "DUP1",
      "path": "125"
    },
    "1778": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "ISZERO",
      "path": "125"
    },
    "1779": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x700"
    },
    "1782": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "JUMPI",
      "path": "125"
    },
    "1783": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "RETURNDATASIZE",
      "path": "125"
    },
    "1784": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x0"
    },
    "1786": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "DUP1",
      "path": "125"
    },
    "1787": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "RETURNDATACOPY",
      "path": "125"
    },
    "1788": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "RETURNDATASIZE",
      "path": "125"
    },
    "1789": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x0"
    },
    "1791": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "REVERT",
      "path": "125"
    },
    "1792": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "op": "POP"
    },
    "1795": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x40"
    },
    "1797": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1800": {
      "op": "NOT"
    },
    "1801": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "ADD",
      "path": "125"
    },
    "1802": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1803": {
      "fn": "ECDSA.recover",
      "offset": [
        3229,
        3253
      ],
      "op": "SWAP2",
      "path": "125"
    },
    "1804": {
      "op": "POP"
    },
    "1805": {
      "op": "POP"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1812": {
      "op": "SHL"
    },
    "1813": {
      "op": "SUB"
    },
    "1814": {
      "fn": "ECDSA.recover",
      "offset": [
        3271,
        3291
      ],
      "op": "DUP2",
      "path": "125",
      "statement": 15
    },
    "1815": {
      "branch": 21,
      "fn": "ECDSA.recover",
      "offset": [
        3271,
        3291
      ],
      "op": "AND",
      "path": "125"
    },
    "1816": {
      "fn": "ECDSA.recover",
      "offset": [
        3263,
        3320
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x3F5"
    },
    "1819": {
      "branch": 21,
      "fn": "ECDSA.recover",
      "offset": [
        3263,
        3320
      ],
      "op": "JUMPI",
      "path": "125"
    },
    "1820": {
      "fn": "ECDSA.recover",
      "offset": [
        3263,
        3320
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x40"
    },
    "1822": {
      "fn": "ECDSA.recover",
      "offset": [
        3263,
        3320
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "1823": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1829": {
      "op": "SHL"
    },
    "1830": {
      "fn": "ECDSA.recover",
      "offset": [
        3263,
        3320
      ],
      "op": "DUP2",
      "path": "125"
    },
    "1831": {
      "fn": "ECDSA.recover",
      "offset": [
        3263,
        3320
      ],
      "op": "MSTORE",
      "path": "125"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1834": {
      "fn": "ECDSA.recover",
      "offset": [
        3263,
        3320
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x4"
    },
    "1836": {
      "fn": "ECDSA.recover",
      "offset": [
        3263,
        3320
      ],
      "op": "DUP3",
      "path": "125"
    },
    "1837": {
      "fn": "ECDSA.recover",
      "offset": [
        3263,
        3320
      ],
      "op": "ADD",
      "path": "125"
    },
    "1838": {
      "op": "MSTORE"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1843": {
      "op": "DUP3"
    },
    "1844": {
      "op": "ADD"
    },
    "1845": {
      "op": "MSTORE"
    },
    "1846": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E61747572650000000000000000"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1881": {
      "op": "DUP3"
    },
    "1882": {
      "op": "ADD"
    },
    "1883": {
      "op": "MSTORE"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1886": {
      "op": "ADD"
    },
    "1887": {
      "fn": "ECDSA.recover",
      "offset": [
        3263,
        3320
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x145"
    },
    "1890": {
      "op": "JUMP"
    },
    "1891": {
      "op": "JUMPDEST"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1896": {
      "op": "DUP3"
    },
    "1897": {
      "op": "DUP5"
    },
    "1898": {
      "op": "SUB"
    },
    "1899": {
      "op": "SLT"
    },
    "1900": {
      "op": "ISZERO"
    },
    "1901": {
      "op": "PUSH2",
      "value": "0x774"
    },
    "1904": {
      "op": "JUMPI"
    },
    "1905": {
      "op": "DUP1"
    },
    "1906": {
      "op": "DUP2"
    },
    "1907": {
      "op": "REVERT"
    },
    "1908": {
      "op": "JUMPDEST"
    },
    "1909": {
      "op": "DUP2"
    },
    "1910": {
      "op": "CALLDATALOAD"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1917": {
      "op": "SHL"
    },
    "1918": {
      "op": "SUB"
    },
    "1919": {
      "op": "DUP2"
    },
    "1920": {
      "op": "AND"
    },
    "1921": {
      "op": "DUP2"
    },
    "1922": {
      "op": "EQ"
    },
    "1923": {
      "op": "PUSH2",
      "value": "0x78A"
    },
    "1926": {
      "op": "JUMPI"
    },
    "1927": {
      "op": "DUP2"
    },
    "1928": {
      "op": "DUP3"
    },
    "1929": {
      "op": "REVERT"
    },
    "1930": {
      "op": "JUMPDEST"
    },
    "1931": {
      "op": "SWAP4"
    },
    "1932": {
      "op": "SWAP3"
    },
    "1933": {
      "op": "POP"
    },
    "1934": {
      "op": "POP"
    },
    "1935": {
      "op": "POP"
    },
    "1936": {
      "jump": "o",
      "op": "JUMP"
    },
    "1937": {
      "op": "JUMPDEST"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1940": {
      "op": "DUP1"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1945": {
      "op": "DUP5"
    },
    "1946": {
      "op": "DUP7"
    },
    "1947": {
      "op": "SUB"
    },
    "1948": {
      "op": "SLT"
    },
    "1949": {
      "op": "ISZERO"
    },
    "1950": {
      "op": "PUSH2",
      "value": "0x7A5"
    },
    "1953": {
      "op": "JUMPI"
    },
    "1954": {
      "op": "DUP2"
    },
    "1955": {
      "op": "DUP3"
    },
    "1956": {
      "op": "REVERT"
    },
    "1957": {
      "op": "JUMPDEST"
    },
    "1958": {
      "op": "DUP4"
    },
    "1959": {
      "op": "CALLDATALOAD"
    },
    "1960": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1969": {
      "op": "DUP1"
    },
    "1970": {
      "op": "DUP3"
    },
    "1971": {
      "op": "GT"
    },
    "1972": {
      "op": "ISZERO"
    },
    "1973": {
      "op": "PUSH2",
      "value": "0x7BC"
    },
    "1976": {
      "op": "JUMPI"
    },
    "1977": {
      "op": "DUP4"
    },
    "1978": {
      "op": "DUP5"
    },
    "1979": {
      "op": "REVERT"
    },
    "1980": {
      "op": "JUMPDEST"
    },
    "1981": {
      "op": "SWAP1"
    },
    "1982": {
      "op": "DUP6"
    },
    "1983": {
      "op": "ADD"
    },
    "1984": {
      "op": "SWAP1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1987": {
      "op": "DUP3"
    },
    "1988": {
      "op": "DUP9"
    },
    "1989": {
      "op": "SUB"
    },
    "1990": {
      "op": "SLT"
    },
    "1991": {
      "op": "ISZERO"
    },
    "1992": {
      "op": "PUSH2",
      "value": "0x7CF"
    },
    "1995": {
      "op": "JUMPI"
    },
    "1996": {
      "op": "DUP4"
    },
    "1997": {
      "op": "DUP5"
    },
    "1998": {
      "op": "REVERT"
    },
    "1999": {
      "op": "JUMPDEST"
    },
    "2000": {
      "op": "SWAP1"
    },
    "2001": {
      "op": "SWAP4"
    },
    "2002": {
      "op": "POP"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2005": {
      "op": "DUP6"
    },
    "2006": {
      "op": "ADD"
    },
    "2007": {
      "op": "CALLDATALOAD"
    },
    "2008": {
      "op": "SWAP1"
    },
    "2009": {
      "op": "DUP1"
    },
    "2010": {
      "op": "DUP3"
    },
    "2011": {
      "op": "GT"
    },
    "2012": {
      "op": "ISZERO"
    },
    "2013": {
      "op": "PUSH2",
      "value": "0x7E4"
    },
    "2016": {
      "op": "JUMPI"
    },
    "2017": {
      "op": "DUP4"
    },
    "2018": {
      "op": "DUP5"
    },
    "2019": {
      "op": "REVERT"
    },
    "2020": {
      "op": "JUMPDEST"
    },
    "2021": {
      "op": "DUP2"
    },
    "2022": {
      "op": "DUP7"
    },
    "2023": {
      "op": "ADD"
    },
    "2024": {
      "op": "SWAP2"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "op": "DUP7"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2029": {
      "op": "DUP4"
    },
    "2030": {
      "op": "ADD"
    },
    "2031": {
      "op": "SLT"
    },
    "2032": {
      "op": "PUSH2",
      "value": "0x7F7"
    },
    "2035": {
      "op": "JUMPI"
    },
    "2036": {
      "op": "DUP4"
    },
    "2037": {
      "op": "DUP5"
    },
    "2038": {
      "op": "REVERT"
    },
    "2039": {
      "op": "JUMPDEST"
    },
    "2040": {
      "op": "DUP2"
    },
    "2041": {
      "op": "CALLDATALOAD"
    },
    "2042": {
      "op": "DUP2"
    },
    "2043": {
      "op": "DUP2"
    },
    "2044": {
      "op": "GT"
    },
    "2045": {
      "op": "ISZERO"
    },
    "2046": {
      "op": "PUSH2",
      "value": "0x805"
    },
    "2049": {
      "op": "JUMPI"
    },
    "2050": {
      "op": "DUP5"
    },
    "2051": {
      "op": "DUP6"
    },
    "2052": {
      "op": "REVERT"
    },
    "2053": {
      "op": "JUMPDEST"
    },
    "2054": {
      "op": "DUP8"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2057": {
      "op": "DUP3"
    },
    "2058": {
      "op": "DUP6"
    },
    "2059": {
      "op": "ADD"
    },
    "2060": {
      "op": "ADD"
    },
    "2061": {
      "op": "GT"
    },
    "2062": {
      "op": "ISZERO"
    },
    "2063": {
      "op": "PUSH2",
      "value": "0x816"
    },
    "2066": {
      "op": "JUMPI"
    },
    "2067": {
      "op": "DUP5"
    },
    "2068": {
      "op": "DUP6"
    },
    "2069": {
      "op": "REVERT"
    },
    "2070": {
      "op": "JUMPDEST"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2073": {
      "op": "DUP4"
    },
    "2074": {
      "op": "ADD"
    },
    "2075": {
      "op": "SWAP5"
    },
    "2076": {
      "op": "POP"
    },
    "2077": {
      "op": "DUP1"
    },
    "2078": {
      "op": "SWAP4"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "op": "POP"
    },
    "2082": {
      "op": "POP"
    },
    "2083": {
      "op": "SWAP3"
    },
    "2084": {
      "op": "POP"
    },
    "2085": {
      "op": "SWAP3"
    },
    "2086": {
      "op": "POP"
    },
    "2087": {
      "op": "SWAP3"
    },
    "2088": {
      "jump": "o",
      "op": "JUMP"
    },
    "2089": {
      "op": "JUMPDEST"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2092": {
      "op": "DUP3"
    },
    "2093": {
      "op": "DUP5"
    },
    "2094": {
      "op": "DUP4"
    },
    "2095": {
      "op": "CALLDATACOPY"
    },
    "2096": {
      "op": "SWAP2"
    },
    "2097": {
      "op": "ADD"
    },
    "2098": {
      "op": "SWAP1"
    },
    "2099": {
      "op": "DUP2"
    },
    "2100": {
      "op": "MSTORE"
    },
    "2101": {
      "op": "SWAP2"
    },
    "2102": {
      "op": "SWAP1"
    },
    "2103": {
      "op": "POP"
    },
    "2104": {
      "jump": "o",
      "op": "JUMP"
    },
    "2105": {
      "op": "JUMPDEST"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2108": {
      "op": "DUP4"
    },
    "2109": {
      "op": "DUP6"
    },
    "2110": {
      "op": "DUP4"
    },
    "2111": {
      "op": "CALLDATACOPY"
    },
    "2112": {
      "op": "POP"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2115": {
      "op": "SWAP2"
    },
    "2116": {
      "op": "SWAP1"
    },
    "2117": {
      "op": "SWAP2"
    },
    "2118": {
      "op": "SHL"
    },
    "2119": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2132": {
      "op": "NOT"
    },
    "2133": {
      "op": "AND"
    },
    "2134": {
      "op": "SWAP2"
    },
    "2135": {
      "op": "ADD"
    },
    "2136": {
      "op": "SWAP1"
    },
    "2137": {
      "op": "DUP2"
    },
    "2138": {
      "op": "MSTORE"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2141": {
      "op": "ADD"
    },
    "2142": {
      "op": "SWAP2"
    },
    "2143": {
      "op": "SWAP1"
    },
    "2144": {
      "op": "POP"
    },
    "2145": {
      "jump": "o",
      "op": "JUMP"
    },
    "2146": {
      "op": "JUMPDEST"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2149": {
      "op": "DUP3"
    },
    "2150": {
      "op": "MLOAD"
    },
    "2151": {
      "op": "PUSH2",
      "value": "0x874"
    },
    "2154": {
      "op": "DUP2"
    },
    "2155": {
      "op": "DUP5"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2158": {
      "op": "DUP8"
    },
    "2159": {
      "op": "ADD"
    },
    "2160": {
      "op": "PUSH2",
      "value": "0x94A"
    },
    "2163": {
      "jump": "i",
      "op": "JUMP"
    },
    "2164": {
      "op": "JUMPDEST"
    },
    "2165": {
      "op": "SWAP2"
    },
    "2166": {
      "op": "SWAP1"
    },
    "2167": {
      "op": "SWAP2"
    },
    "2168": {
      "op": "ADD"
    },
    "2169": {
      "op": "SWAP3"
    },
    "2170": {
      "op": "SWAP2"
    },
    "2171": {
      "op": "POP"
    },
    "2172": {
      "op": "POP"
    },
    "2173": {
      "jump": "o",
      "op": "JUMP"
    },
    "2174": {
      "op": "JUMPDEST"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2177": {
      "op": "DUP4"
    },
    "2178": {
      "op": "ISZERO"
    },
    "2179": {
      "op": "ISZERO"
    },
    "2180": {
      "op": "DUP3"
    },
    "2181": {
      "op": "MSTORE"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2186": {
      "op": "DUP4"
    },
    "2187": {
      "op": "ADD"
    },
    "2188": {
      "op": "MSTORE"
    },
    "2189": {
      "op": "DUP3"
    },
    "2190": {
      "op": "MLOAD"
    },
    "2191": {
      "op": "DUP1"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2194": {
      "op": "DUP5"
    },
    "2195": {
      "op": "ADD"
    },
    "2196": {
      "op": "MSTORE"
    },
    "2197": {
      "op": "PUSH2",
      "value": "0x8A5"
    },
    "2200": {
      "op": "DUP2"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2203": {
      "op": "DUP6"
    },
    "2204": {
      "op": "ADD"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2207": {
      "op": "DUP8"
    },
    "2208": {
      "op": "ADD"
    },
    "2209": {
      "op": "PUSH2",
      "value": "0x94A"
    },
    "2212": {
      "jump": "i",
      "op": "JUMP"
    },
    "2213": {
      "op": "JUMPDEST"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2216": {
      "op": "ADD"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2219": {
      "op": "NOT"
    },
    "2220": {
      "op": "AND"
    },
    "2221": {
      "op": "SWAP2"
    },
    "2222": {
      "op": "SWAP1"
    },
    "2223": {
      "op": "SWAP2"
    },
    "2224": {
      "op": "ADD"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2227": {
      "op": "ADD"
    },
    "2228": {
      "op": "SWAP4"
    },
    "2229": {
      "op": "SWAP3"
    },
    "2230": {
      "op": "POP"
    },
    "2231": {
      "op": "POP"
    },
    "2232": {
      "op": "POP"
    },
    "2233": {
      "jump": "o",
      "op": "JUMP"
    },
    "2234": {
      "op": "JUMPDEST"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2237": {
      "op": "DUP1"
    },
    "2238": {
      "op": "DUP4"
    },
    "2239": {
      "op": "CALLDATALOAD"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2242": {
      "op": "NOT"
    },
    "2243": {
      "op": "DUP5"
    },
    "2244": {
      "op": "CALLDATASIZE"
    },
    "2245": {
      "op": "SUB"
    },
    "2246": {
      "op": "ADD"
    },
    "2247": {
      "op": "DUP2"
    },
    "2248": {
      "op": "SLT"
    },
    "2249": {
      "op": "PUSH2",
      "value": "0x8D0"
    },
    "2252": {
      "op": "JUMPI"
    },
    "2253": {
      "op": "DUP3"
    },
    "2254": {
      "op": "DUP4"
    },
    "2255": {
      "op": "REVERT"
    },
    "2256": {
      "op": "JUMPDEST"
    },
    "2257": {
      "op": "DUP4"
    },
    "2258": {
      "op": "ADD"
    },
    "2259": {
      "op": "DUP1"
    },
    "2260": {
      "op": "CALLDATALOAD"
    },
    "2261": {
      "op": "SWAP2"
    },
    "2262": {
      "op": "POP"
    },
    "2263": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2272": {
      "op": "DUP3"
    },
    "2273": {
      "op": "GT"
    },
    "2274": {
      "op": "ISZERO"
    },
    "2275": {
      "op": "PUSH2",
      "value": "0x8EA"
    },
    "2278": {
      "op": "JUMPI"
    },
    "2279": {
      "op": "DUP3"
    },
    "2280": {
      "op": "DUP4"
    },
    "2281": {
      "op": "REVERT"
    },
    "2282": {
      "op": "JUMPDEST"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2285": {
      "op": "ADD"
    },
    "2286": {
      "op": "SWAP2"
    },
    "2287": {
      "op": "POP"
    },
    "2288": {
      "op": "CALLDATASIZE"
    },
    "2289": {
      "op": "DUP2"
    },
    "2290": {
      "op": "SWAP1"
    },
    "2291": {
      "op": "SUB"
    },
    "2292": {
      "op": "DUP3"
    },
    "2293": {
      "op": "SGT"
    },
    "2294": {
      "op": "ISZERO"
    },
    "2295": {
      "op": "PUSH2",
      "value": "0x8FF"
    },
    "2298": {
      "op": "JUMPI"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2301": {
      "op": "DUP1"
    },
    "2302": {
      "op": "REVERT"
    },
    "2303": {
      "op": "JUMPDEST"
    },
    "2304": {
      "op": "SWAP3"
    },
    "2305": {
      "op": "POP"
    },
    "2306": {
      "op": "SWAP3"
    },
    "2307": {
      "op": "SWAP1"
    },
    "2308": {
      "op": "POP"
    },
    "2309": {
      "jump": "o",
      "op": "JUMP"
    },
    "2310": {
      "op": "JUMPDEST"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2313": {
      "op": "DUP3"
    },
    "2314": {
      "op": "NOT"
    },
    "2315": {
      "op": "DUP3"
    },
    "2316": {
      "op": "GT"
    },
    "2317": {
      "op": "ISZERO"
    },
    "2318": {
      "op": "PUSH2",
      "value": "0x925"
    },
    "2321": {
      "op": "JUMPI"
    },
    "2322": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2329": {
      "op": "SHL"
    },
    "2330": {
      "op": "DUP2"
    },
    "2331": {
      "op": "MSTORE"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2336": {
      "op": "MSTORE"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2339": {
      "op": "DUP2"
    },
    "2340": {
      "op": "REVERT"
    },
    "2341": {
      "op": "JUMPDEST"
    },
    "2342": {
      "op": "POP"
    },
    "2343": {
      "op": "ADD"
    },
    "2344": {
      "op": "SWAP1"
    },
    "2345": {
      "jump": "o",
      "op": "JUMP"
    },
    "2346": {
      "op": "JUMPDEST"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2349": {
      "op": "DUP3"
    },
    "2350": {
      "op": "PUSH2",
      "value": "0x945"
    },
    "2353": {
      "op": "JUMPI"
    },
    "2354": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2361": {
      "op": "SHL"
    },
    "2362": {
      "op": "DUP2"
    },
    "2363": {
      "op": "MSTORE"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2368": {
      "op": "MSTORE"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2371": {
      "op": "DUP2"
    },
    "2372": {
      "op": "REVERT"
    },
    "2373": {
      "op": "JUMPDEST"
    },
    "2374": {
      "op": "POP"
    },
    "2375": {
      "op": "DIV"
    },
    "2376": {
      "op": "SWAP1"
    },
    "2377": {
      "jump": "o",
      "op": "JUMP"
    },
    "2378": {
      "op": "JUMPDEST"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2381": {
      "op": "JUMPDEST"
    },
    "2382": {
      "op": "DUP4"
    },
    "2383": {
      "op": "DUP2"
    },
    "2384": {
      "op": "LT"
    },
    "2385": {
      "op": "ISZERO"
    },
    "2386": {
      "op": "PUSH2",
      "value": "0x965"
    },
    "2389": {
      "op": "JUMPI"
    },
    "2390": {
      "op": "DUP2"
    },
    "2391": {
      "op": "DUP2"
    },
    "2392": {
      "op": "ADD"
    },
    "2393": {
      "op": "MLOAD"
    },
    "2394": {
      "op": "DUP4"
    },
    "2395": {
      "op": "DUP3"
    },
    "2396": {
      "op": "ADD"
    },
    "2397": {
      "op": "MSTORE"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2400": {
      "op": "ADD"
    },
    "2401": {
      "op": "PUSH2",
      "value": "0x94D"
    },
    "2404": {
      "op": "JUMP"
    },
    "2405": {
      "op": "JUMPDEST"
    },
    "2406": {
      "op": "DUP4"
    },
    "2407": {
      "op": "DUP2"
    },
    "2408": {
      "op": "GT"
    },
    "2409": {
      "op": "ISZERO"
    },
    "2410": {
      "op": "PUSH2",
      "value": "0x974"
    },
    "2413": {
      "op": "JUMPI"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2416": {
      "op": "DUP5"
    },
    "2417": {
      "op": "DUP5"
    },
    "2418": {
      "op": "ADD"
    },
    "2419": {
      "op": "MSTORE"
    },
    "2420": {
      "op": "JUMPDEST"
    },
    "2421": {
      "op": "POP"
    },
    "2422": {
      "op": "POP"
    },
    "2423": {
      "op": "POP"
    },
    "2424": {
      "op": "POP"
    },
    "2425": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "a0ef361bd9d2a57dbd6b6a1307d3957af40631d2",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/cryptography/ECDSA.sol\";\nimport \"../utils/cryptography/draft-EIP712.sol\";\n\n/*\n * @dev Simple minimal forwarder to be used together with an ERC2771 compatible contract. See {ERC2771Context}.\n */\ncontract MinimalForwarder is EIP712 {\n    using ECDSA for bytes32;\n\n    struct ForwardRequest {\n        address from;\n        address to;\n        uint256 value;\n        uint256 gas;\n        uint256 nonce;\n        bytes data;\n    }\n\n    bytes32 private constant TYPEHASH = keccak256(\"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)\");\n\n    mapping(address => uint256) private _nonces;\n\n    constructor() EIP712(\"MinimalForwarder\", \"0.0.1\") {}\n\n    function getNonce(address from) public view returns (uint256) {\n        return _nonces[from];\n    }\n\n    function verify(ForwardRequest calldata req, bytes calldata signature) public view returns (bool) {\n        address signer = _hashTypedDataV4(keccak256(abi.encode(\n            TYPEHASH,\n            req.from,\n            req.to,\n            req.value,\n            req.gas,\n            req.nonce,\n            keccak256(req.data)\n        ))).recover(signature);\n        return _nonces[req.from] == req.nonce && signer == req.from;\n    }\n\n    function execute(ForwardRequest calldata req, bytes calldata signature) public payable returns (bool, bytes memory) {\n        require(verify(req, signature), \"MinimalForwarder: signature does not match request\");\n        _nonces[req.from] = req.nonce + 1;\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = req.to.call{gas: req.gas, value: req.value}(abi.encodePacked(req.data, req.from));\n        // Validate that the relayer has sent enough gas for the call.\n        // See https://ronan.eth.link/blog/ethereum-gas-dangers/\n        assert(gasleft() > req.gas / 63);\n\n        return (success, returndata);\n    }\n}\n",
  "sourceMap": "269:1707:7:-:0;;;701:52;;;;;;;;;-1:-1:-1;2339:542:127;;;;;;;;;;;-1:-1:-1;;;2339:542:127;;;;;;;;;;;;;;;;;-1:-1:-1;;;2339:542:127;;;;2425:22;;;;2640:25;;;;2481;2675:31;;;;2735:13;2716:32;;;;3399:159;;2535:95;3399:159;;;273:25:144;;;314:18;;;307:34;;;;357:18;;;350:34;;;;400:18;;;;393:34;;;;3539:4:127;443:19:144;;;436:61;3399:159:127;;;;;;;;;;245:19:144;;;;3399:159:127;;;3376:192;;;;;;;;;;2758:85;;2853:21;;269:1707:7;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin-contracts/contracts/metatx/MinimalForwarder.sol",
  "type": "contract"
}