{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beneficiary_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "101": "contracts/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
    "102": "contracts/openzeppelin-contracts/contracts/token/ERC20/utils/TokenTimelock.sol",
    "119": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
    "91": "contracts/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC20/utils/TokenTimelock.sol",
    "exportedSymbols": {
      "Address": [
        14906
      ],
      "IERC20": [
        10266
      ],
      "SafeERC20": [
        11368
      ],
      "TokenTimelock": [
        11483
      ]
    },
    "id": 11484,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11370,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:102"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 11371,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11484,
        "sourceUnit": 11369,
        "src": "58:25:102",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11372,
          "nodeType": "StructuredDocumentation",
          "src": "85:221:102",
          "text": " @dev A token holder contract that will allow a beneficiary to extract the\n tokens after a given release time.\n Useful for simple vesting schedules like \"advisors get all of their tokens\n after 1 year\"."
        },
        "fullyImplemented": true,
        "id": 11483,
        "linearizedBaseContracts": [
          11483
        ],
        "name": "TokenTimelock",
        "nameLocation": "316:13:102",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11376,
            "libraryName": {
              "id": 11373,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11368,
              "src": "342:9:102"
            },
            "nodeType": "UsingForDirective",
            "src": "336:27:102",
            "typeName": {
              "id": 11375,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11374,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10266,
                "src": "356:6:102"
              },
              "referencedDeclaration": 10266,
              "src": "356:6:102",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$10266",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 11379,
            "mutability": "immutable",
            "name": "_token",
            "nameLocation": "439:6:102",
            "nodeType": "VariableDeclaration",
            "scope": 11483,
            "src": "414:31:102",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$10266",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 11378,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11377,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10266,
                "src": "414:6:102"
              },
              "referencedDeclaration": 10266,
              "src": "414:6:102",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$10266",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11381,
            "mutability": "immutable",
            "name": "_beneficiary",
            "nameLocation": "531:12:102",
            "nodeType": "VariableDeclaration",
            "scope": 11483,
            "src": "505:38:102",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11380,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:102",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11383,
            "mutability": "immutable",
            "name": "_releaseTime",
            "nameLocation": "623:12:102",
            "nodeType": "VariableDeclaration",
            "scope": 11483,
            "src": "597:38:102",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11382,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "597:7:102",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 11413,
              "nodeType": "Block",
              "src": "714:263:102",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11394,
                          "name": "releaseTime_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11390,
                          "src": "786:12:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 11395,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "801:5:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 11396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "801:15:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "786:30:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206265666f72652063757272656e742074696d65",
                        "id": 11398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "818:52:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        },
                        "value": "TokenTimelock: release time is before current time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        }
                      ],
                      "id": 11393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "778:7:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "778:93:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11400,
                  "nodeType": "ExpressionStatement",
                  "src": "778:93:102"
                },
                {
                  "expression": {
                    "id": 11403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11401,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11379,
                      "src": "881:6:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$10266",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11402,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11386,
                      "src": "890:6:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$10266",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "881:15:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10266",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 11404,
                  "nodeType": "ExpressionStatement",
                  "src": "881:15:102"
                },
                {
                  "expression": {
                    "id": 11407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11405,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11381,
                      "src": "906:12:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11406,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11388,
                      "src": "921:12:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "906:27:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11408,
                  "nodeType": "ExpressionStatement",
                  "src": "906:27:102"
                },
                {
                  "expression": {
                    "id": 11411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11409,
                      "name": "_releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11383,
                      "src": "943:12:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11410,
                      "name": "releaseTime_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11390,
                      "src": "958:12:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "943:27:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11412,
                  "nodeType": "ExpressionStatement",
                  "src": "943:27:102"
                }
              ]
            },
            "id": 11414,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11386,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "662:6:102",
                  "nodeType": "VariableDeclaration",
                  "scope": 11414,
                  "src": "655:13:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10266",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11385,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11384,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10266,
                      "src": "655:6:102"
                    },
                    "referencedDeclaration": 10266,
                    "src": "655:6:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10266",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11388,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nameLocation": "678:12:102",
                  "nodeType": "VariableDeclaration",
                  "scope": 11414,
                  "src": "670:20:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:7:102",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11390,
                  "mutability": "mutable",
                  "name": "releaseTime_",
                  "nameLocation": "700:12:102",
                  "nodeType": "VariableDeclaration",
                  "scope": 11414,
                  "src": "692:20:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:59:102"
            },
            "returnParameters": {
              "id": 11392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "714:0:102"
            },
            "scope": 11483,
            "src": "642:335:102",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11423,
              "nodeType": "Block",
              "src": "1090:30:102",
              "statements": [
                {
                  "expression": {
                    "id": 11421,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11379,
                    "src": "1107:6:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10266",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 11420,
                  "id": 11422,
                  "nodeType": "Return",
                  "src": "1100:13:102"
                }
              ]
            },
            "documentation": {
              "id": 11415,
              "nodeType": "StructuredDocumentation",
              "src": "983:48:102",
              "text": " @return the token being held."
            },
            "functionSelector": "fc0c546a",
            "id": 11424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nameLocation": "1045:5:102",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:2:102"
            },
            "returnParameters": {
              "id": 11420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11419,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11424,
                  "src": "1082:6:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10266",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11418,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11417,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10266,
                      "src": "1082:6:102"
                    },
                    "referencedDeclaration": 10266,
                    "src": "1082:6:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10266",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1081:8:102"
            },
            "scope": 11483,
            "src": "1036:84:102",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11432,
              "nodeType": "Block",
              "src": "1249:36:102",
              "statements": [
                {
                  "expression": {
                    "id": 11430,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11381,
                    "src": "1266:12:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11429,
                  "id": 11431,
                  "nodeType": "Return",
                  "src": "1259:19:102"
                }
              ]
            },
            "documentation": {
              "id": 11425,
              "nodeType": "StructuredDocumentation",
              "src": "1126:57:102",
              "text": " @return the beneficiary of the tokens."
            },
            "functionSelector": "38af3eed",
            "id": 11433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nameLocation": "1197:11:102",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1208:2:102"
            },
            "returnParameters": {
              "id": 11429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11428,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11433,
                  "src": "1240:7:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:102",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1239:9:102"
            },
            "scope": 11483,
            "src": "1188:97:102",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11441,
              "nodeType": "Block",
              "src": "1422:36:102",
              "statements": [
                {
                  "expression": {
                    "id": 11439,
                    "name": "_releaseTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11383,
                    "src": "1439:12:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11438,
                  "id": 11440,
                  "nodeType": "Return",
                  "src": "1432:19:102"
                }
              ]
            },
            "documentation": {
              "id": 11434,
              "nodeType": "StructuredDocumentation",
              "src": "1291:65:102",
              "text": " @return the time when the tokens are released."
            },
            "functionSelector": "b91d4001",
            "id": 11442,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseTime",
            "nameLocation": "1370:11:102",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1381:2:102"
            },
            "returnParameters": {
              "id": 11438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11437,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11442,
                  "src": "1413:7:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1412:9:102"
            },
            "scope": 11483,
            "src": "1361:97:102",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11481,
              "nodeType": "Block",
              "src": "1579:348:102",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 11447,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1651:5:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 11448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1651:15:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11449,
                            "name": "releaseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11442,
                            "src": "1670:11:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 11450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1670:13:102",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1651:32:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65",
                        "id": 11452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1685:52:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        },
                        "value": "TokenTimelock: current time is before release time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        }
                      ],
                      "id": 11446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1643:7:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1643:95:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11454,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:95:102"
                },
                {
                  "assignments": [
                    11456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11456,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1757:6:102",
                      "nodeType": "VariableDeclaration",
                      "scope": 11481,
                      "src": "1749:14:102",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11455,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1749:7:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11465,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11462,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1792:4:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenTimelock_$11483",
                              "typeString": "contract TokenTimelock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenTimelock_$11483",
                              "typeString": "contract TokenTimelock"
                            }
                          ],
                          "id": 11461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1784:7:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11460,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1784:7:102",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1784:13:102",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11457,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11424,
                          "src": "1766:5:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$10266_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 11458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1766:7:102",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10266",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10205,
                      "src": "1766:17:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:32:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1749:49:102"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11467,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11456,
                          "src": "1816:6:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 11468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1825:1:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1816:10:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365",
                        "id": 11470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1828:37:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        },
                        "value": "TokenTimelock: no tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        }
                      ],
                      "id": 11466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1808:7:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1808:58:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11472,
                  "nodeType": "ExpressionStatement",
                  "src": "1808:58:102"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11476,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11433,
                          "src": "1898:11:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 11477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1898:13:102",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11478,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11456,
                        "src": "1913:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11473,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11424,
                          "src": "1877:5:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$10266_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 11474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1877:7:102",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10266",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11175,
                      "src": "1877:20:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$10266_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$10266_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 11479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:43:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11480,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:43:102"
                }
              ]
            },
            "documentation": {
              "id": 11443,
              "nodeType": "StructuredDocumentation",
              "src": "1464:76:102",
              "text": " @notice Transfers tokens held by timelock to beneficiary."
            },
            "functionSelector": "86d1a69f",
            "id": 11482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nameLocation": "1554:7:102",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1561:2:102"
            },
            "returnParameters": {
              "id": 11445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1579:0:102"
            },
            "scope": 11483,
            "src": "1545:382:102",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 11484,
        "src": "307:1622:102"
      }
    ],
    "src": "33:1897:102"
  },
  "bytecode": "60e060405234801561001057600080fd5b506040516107c63803806107c683398101604081905261002f916100c0565b42811161009d5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206260448201527165666f72652063757272656e742074696d6560701b606482015260840160405180910390fd5b6001600160601b0319606093841b81166080529190921b1660a05260c05261011a565b6000806000606084860312156100d4578283fd5b83516100df81610102565b60208501519093506100f081610102565b80925050604084015190509250925092565b6001600160a01b038116811461011757600080fd5b50565b60805160601c60a05160601c60c05161065f61016760003960008181609f015260f0015260008181605301526102a701526000818160ca015281816101820152610285015261065f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f14610090578063b91d40011461009a578063fc0c546a146100c8575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100986100ee565b005b6040517f00000000000000000000000000000000000000000000000000000000000000008152602001610087565b7f0000000000000000000000000000000000000000000000000000000000000000610073565b7f000000000000000000000000000000000000000000000000000000000000000042101561017e5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260448201527165666f72652072656c656173652074696d6560701b60648201526084015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156101e257600080fd5b505afa1580156101f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021a9190610592565b9050600081116102785760405162461bcd60e51b815260206004820152602360248201527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560448201526261736560e81b6064820152608401610175565b6102cc6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836102cf565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610321908490610326565b505050565b600061037b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103f89092919063ffffffff16565b80519091501561032157808060200190518101906103999190610572565b6103215760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610175565b60606104078484600085610411565b90505b9392505050565b6060824710156104725760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610175565b843b6104c05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610175565b600080866001600160a01b031685876040516104dc91906105aa565b60006040518083038185875af1925050503d8060008114610519576040519150601f19603f3d011682016040523d82523d6000602084013e61051e565b606091505b509150915061052e828286610539565b979650505050505050565b6060831561054857508161040a565b8251156105585782518084602001fd5b8160405162461bcd60e51b815260040161017591906105c6565b600060208284031215610583578081fd5b8151801515811461040a578182fd5b6000602082840312156105a3578081fd5b5051919050565b600082516105bc8184602087016105f9565b9190910192915050565b60006020825282518060208401526105e58160408501602087016105f9565b601f01601f19169190910160400192915050565b60005b838110156106145781810151838201526020016105fc565b83811115610623576000848401525b5050505056fea26469706673582212207e8e04107c70bf499b6949d425088a4f5272ecb2ff3ef8523e163bb9d85c32c764736f6c63430008030033",
  "bytecodeSha1": "0be4c42a4d239973628ff451058d951cfedd8519",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "TokenTimelock",
  "coverageMap": {
    "branches": {
      "101": {
        "SafeERC20._callOptionalReturn": {
          "19": [
            3550,
            3571,
            false
          ],
          "20": [
            3679,
            3709,
            true
          ]
        }
      },
      "102": {
        "TokenTimelock.release": {
          "14": [
            1651,
            1683,
            true
          ],
          "15": [
            1816,
            1826,
            true
          ]
        }
      },
      "119": {
        "Address._verifyCallResult": {
          "17": [
            7226,
            7233,
            false
          ],
          "18": [
            7367,
            7388,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "16": [
            4759,
            4789,
            true
          ]
        }
      },
      "91": {}
    },
    "statements": {
      "101": {
        "SafeERC20._callOptionalReturn": {
          "7": [
            3671,
            3756
          ]
        },
        "SafeERC20.safeTransfer": {
          "6": [
            716,
            802
          ]
        }
      },
      "102": {
        "TokenTimelock.beneficiary": {
          "0": [
            1259,
            1278
          ]
        },
        "TokenTimelock.release": {
          "3": [
            1643,
            1738
          ],
          "4": [
            1808,
            1866
          ],
          "5": [
            1877,
            1920
          ]
        },
        "TokenTimelock.releaseTime": {
          "1": [
            1432,
            1451
          ]
        },
        "TokenTimelock.token": {
          "2": [
            1100,
            1113
          ]
        }
      },
      "119": {
        "Address._verifyCallResult": {
          "12": [
            7249,
            7266
          ],
          "13": [
            7757,
            7777
          ]
        },
        "Address.functionCall": {
          "8": [
            3700,
            3759
          ]
        },
        "Address.functionCallWithValue": {
          "9": [
            4751,
            4832
          ],
          "10": [
            4842,
            4902
          ],
          "11": [
            5057,
            5116
          ]
        }
      },
      "91": {}
    }
  },
  "dependencies": [
    "Address",
    "IERC20",
    "SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f14610090578063b91d40011461009a578063fc0c546a146100c8575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100986100ee565b005b6040517f00000000000000000000000000000000000000000000000000000000000000008152602001610087565b7f0000000000000000000000000000000000000000000000000000000000000000610073565b7f000000000000000000000000000000000000000000000000000000000000000042101561017e5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260448201527165666f72652072656c656173652074696d6560701b60648201526084015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156101e257600080fd5b505afa1580156101f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021a9190610592565b9050600081116102785760405162461bcd60e51b815260206004820152602360248201527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560448201526261736560e81b6064820152608401610175565b6102cc6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836102cf565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610321908490610326565b505050565b600061037b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103f89092919063ffffffff16565b80519091501561032157808060200190518101906103999190610572565b6103215760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610175565b60606104078484600085610411565b90505b9392505050565b6060824710156104725760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610175565b843b6104c05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610175565b600080866001600160a01b031685876040516104dc91906105aa565b60006040518083038185875af1925050503d8060008114610519576040519150601f19603f3d011682016040523d82523d6000602084013e61051e565b606091505b509150915061052e828286610539565b979650505050505050565b6060831561054857508161040a565b8251156105585782518084602001fd5b8160405162461bcd60e51b815260040161017591906105c6565b600060208284031215610583578081fd5b8151801515811461040a578182fd5b6000602082840312156105a3578081fd5b5051919050565b600082516105bc8184602087016105f9565b9190910192915050565b60006020825282518060208401526105e58160408501602087016105f9565b601f01601f19169190910160400192915050565b60005b838110156106145781810151838201526020016105fc565b83811115610623576000848401525b5050505056fea26469706673582212207e8e04107c70bf499b6949d425088a4f5272ecb2ff3ef8523e163bb9d85c32c764736f6c63430008030033",
  "deployedSourceMap": "307:1622:102:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1188:97;1266:12;1188:97;;;-1:-1:-1;;;;;958:32:144;;;940:51;;928:2;913:18;1188:97:102;;;;;;;;1545:382;;;:::i;:::-;;1361:97;;;1439:12;4038:25:144;;4026:2;4011:18;1361:97:102;3993:76:144;1036:84:102;1107:6;1036:84;;1545:382;1439:12;1651:15;:32;;1643:95;;;;-1:-1:-1;;;1643:95:102;;2095:2:144;1643:95:102;;;2077:21:144;2134:2;2114:18;;;2107:30;2173:34;2153:18;;;2146:62;-1:-1:-1;;;2224:18:144;;;2217:48;2282:19;;1643:95:102;;;;;;;;;1749:14;1107:6;1766:32;;-1:-1:-1;;;1766:32:102;;1792:4;1766:32;;;940:51:144;-1:-1:-1;;;;;1766:17:102;;;;;;;913:18:144;;1766:32:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1749:49;;1825:1;1816:6;:10;1808:58;;;;-1:-1:-1;;;1808:58:102;;3690:2:144;1808:58:102;;;3672:21:144;3729:2;3709:18;;;3702:30;3768:34;3748:18;;;3741:62;-1:-1:-1;;;3819:18:144;;;3812:33;3862:19;;1808:58:102;3662:225:144;1808:58:102;1877:43;-1:-1:-1;;;;;1107:6:102;1877:20;1266:12;1913:6;1877:20;:43::i;:::-;1545:382;:::o;634:175:101:-;743:58;;;-1:-1:-1;;;;;1194:32:144;;743:58:101;;;1176:51:144;1243:18;;;;1236:34;;;743:58:101;;;;;;;;;;1149:18:144;;;;743:58:101;;;;;;;;-1:-1:-1;;;;;743:58:101;-1:-1:-1;;;743:58:101;;;716:86;;736:5;;716:19;:86::i;:::-;634:175;;;:::o;3022:751::-;3441:23;3467:69;3495:4;3467:69;;;;;;;;;;;;;;;;;3475:5;-1:-1:-1;;;;;3467:27:101;;;:69;;;;;:::i;:::-;3550:17;;3441:95;;-1:-1:-1;3550:21:101;3546:221;;3690:10;3679:30;;;;;;;;;;;;:::i;:::-;3671:85;;;;-1:-1:-1;;;3671:85:101;;3279:2:144;3671:85:101;;;3261:21:144;3318:2;3298:18;;;3291:30;3357:34;3337:18;;;3330:62;-1:-1:-1;;;3408:18:144;;;3401:40;3458:19;;3671:85:101;3251:232:144;3573:193:119;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3707:21;:52::i;:::-;3700:59;;3573:193;;;;;;:::o;4600:523::-;4727:12;4784:5;4759:21;:30;;4751:81;;;;-1:-1:-1;;;4751:81:119;;2514:2:144;4751:81:119;;;2496:21:144;2553:2;2533:18;;;2526:30;2592:34;2572:18;;;2565:62;-1:-1:-1;;;2643:18:144;;;2636:36;2689:19;;4751:81:119;2486:228:144;4751:81:119;1078:20;;4842:60;;;;-1:-1:-1;;;4842:60:119;;2921:2:144;4842:60:119;;;2903:21:144;2960:2;2940:18;;;2933:30;2999:31;2979:18;;;2972:59;3048:18;;4842:60:119;2893:179:144;4842:60:119;4973:12;4987:23;5014:6;-1:-1:-1;;;;;5014:11:119;5034:5;5042:4;5014:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;4600:523;-1:-1:-1;;;;;;;4600:523:119:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:119;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;-1:-1:-1;;;7757:20:119;;;;;;;;:::i;14:297:144:-;;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;192:9;186:16;245:5;238:13;231:21;224:5;221:32;211:2;;272:6;264;257:22;316:194;;439:2;427:9;418:7;414:23;410:32;407:2;;;460:6;452;445:22;407:2;-1:-1:-1;488:16:144;;397:113;-1:-1:-1;397:113:144:o;515:274::-;;682:6;676:13;698:53;744:6;739:3;732:4;724:6;720:17;698:53;:::i;:::-;767:16;;;;;652:137;-1:-1:-1;;652:137:144:o;1505:383::-;;1654:2;1643:9;1636:21;1686:6;1680:13;1729:6;1724:2;1713:9;1709:18;1702:34;1745:66;1804:6;1799:2;1788:9;1784:18;1779:2;1771:6;1767:15;1745:66;:::i;:::-;1872:2;1851:15;-1:-1:-1;;1847:29:144;1832:45;;;;1879:2;1828:54;;1626:262;-1:-1:-1;;1626:262:144:o;4074:258::-;4146:1;4156:113;4170:6;4167:1;4164:13;4156:113;;;4246:11;;;4240:18;4227:11;;;4220:39;4192:2;4185:10;4156:113;;;4287:6;4284:1;4281:13;4278:2;;;4322:1;4313:6;4308:3;4304:16;4297:27;4278:2;;4127:205;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \"advisors get all of their tokens after 1 year\".",
    "kind": "dev",
    "methods": {
      "beneficiary()": {
        "returns": {
          "_0": "the beneficiary of the tokens."
        }
      },
      "release()": {
        "notice": "Transfers tokens held by timelock to beneficiary."
      },
      "releaseTime()": {
        "returns": {
          "_0": "the time when the tokens are released."
        }
      },
      "token()": {
        "returns": {
          "_0": "the token being held."
        }
      }
    },
    "version": 1
  },
  "offset": [
    307,
    1929
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0xB91D4001 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xC8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH2 0xEE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x87 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x73 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E54696D656C6F636B3A2063757272656E742074696D652069732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x65666F72652072656C656173652074696D65 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x592 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x278 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E54696D656C6F636B3A206E6F20746F6B656E7320746F2072656C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x617365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP4 PUSH2 0x2CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x321 SWAP1 DUP5 SWAP1 PUSH2 0x326 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3F8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x321 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x321 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x175 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x407 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x411 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x472 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x175 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x175 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x51E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x52E DUP3 DUP3 DUP7 PUSH2 0x539 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x548 JUMPI POP DUP2 PUSH2 0x40A JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x558 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x583 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x40A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A3 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x5BC DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x5F9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5E5 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x614 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5FC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x623 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x8E04107C70BF499B6949D425088A4F5272ECB2FF3EF8523E163BB9D85C32C7 PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        307,
        1929
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "MSTORE",
      "path": "102"
    },
    "5": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "CALLVALUE",
      "path": "102"
    },
    "6": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "DUP1",
      "path": "102"
    },
    "7": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "ISZERO",
      "path": "102"
    },
    "8": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "JUMPI",
      "path": "102"
    },
    "12": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "DUP1",
      "path": "102"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "REVERT",
      "path": "102"
    },
    "16": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "17": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "POP",
      "path": "102"
    },
    "18": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "CALLDATASIZE",
      "path": "102"
    },
    "21": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "LT",
      "path": "102"
    },
    "22": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "JUMPI",
      "path": "102"
    },
    "26": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "CALLDATALOAD",
      "path": "102"
    },
    "29": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "SHR",
      "path": "102"
    },
    "32": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "DUP1",
      "path": "102"
    },
    "33": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH4",
      "path": "102",
      "value": "0x38AF3EED"
    },
    "38": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "EQ",
      "path": "102"
    },
    "39": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "JUMPI",
      "path": "102"
    },
    "43": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "DUP1",
      "path": "102"
    },
    "44": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH4",
      "path": "102",
      "value": "0x86D1A69F"
    },
    "49": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "EQ",
      "path": "102"
    },
    "50": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x90"
    },
    "53": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "JUMPI",
      "path": "102"
    },
    "54": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "DUP1",
      "path": "102"
    },
    "55": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH4",
      "path": "102",
      "value": "0xB91D4001"
    },
    "60": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "EQ",
      "path": "102"
    },
    "61": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x9A"
    },
    "64": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "JUMPI",
      "path": "102"
    },
    "65": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "DUP1",
      "path": "102"
    },
    "66": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH4",
      "path": "102",
      "value": "0xFC0C546A"
    },
    "71": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "EQ",
      "path": "102"
    },
    "72": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0xC8"
    },
    "75": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "JUMPI",
      "path": "102"
    },
    "76": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "77": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "DUP1",
      "path": "102"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        307,
        1929
      ],
      "op": "REVERT",
      "path": "102"
    },
    "81": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1188,
        1285
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "82": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1266,
        1278
      ],
      "op": "PUSH32",
      "path": "102",
      "statement": 0,
      "value": "0x0"
    },
    "115": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1188,
        1285
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "116": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1188,
        1285
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x40"
    },
    "118": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1188,
        1285
      ],
      "op": "MLOAD",
      "path": "102"
    },
    "119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "125": {
      "op": "SHL"
    },
    "126": {
      "op": "SUB"
    },
    "127": {
      "op": "SWAP1"
    },
    "128": {
      "op": "SWAP2"
    },
    "129": {
      "op": "AND"
    },
    "130": {
      "op": "DUP2"
    },
    "131": {
      "op": "MSTORE"
    },
    "132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "134": {
      "op": "ADD"
    },
    "135": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1188,
        1285
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "136": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1188,
        1285
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x40"
    },
    "138": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1188,
        1285
      ],
      "op": "MLOAD",
      "path": "102"
    },
    "139": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1188,
        1285
      ],
      "op": "DUP1",
      "path": "102"
    },
    "140": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1188,
        1285
      ],
      "op": "SWAP2",
      "path": "102"
    },
    "141": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1188,
        1285
      ],
      "op": "SUB",
      "path": "102"
    },
    "142": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1188,
        1285
      ],
      "op": "SWAP1",
      "path": "102"
    },
    "143": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1188,
        1285
      ],
      "op": "RETURN",
      "path": "102"
    },
    "144": {
      "fn": "TokenTimelock.release",
      "offset": [
        1545,
        1927
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "145": {
      "fn": "TokenTimelock.release",
      "offset": [
        1545,
        1927
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x98"
    },
    "148": {
      "fn": "TokenTimelock.release",
      "offset": [
        1545,
        1927
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0xEE"
    },
    "151": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1545,
        1927
      ],
      "op": "JUMP",
      "path": "102"
    },
    "152": {
      "fn": "TokenTimelock.release",
      "offset": [
        1545,
        1927
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "153": {
      "fn": "TokenTimelock.release",
      "offset": [
        1545,
        1927
      ],
      "op": "STOP",
      "path": "102"
    },
    "154": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1361,
        1458
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "155": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1361,
        1458
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x40"
    },
    "157": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1361,
        1458
      ],
      "op": "MLOAD",
      "path": "102"
    },
    "158": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1439,
        1451
      ],
      "op": "PUSH32",
      "path": "102",
      "statement": 1,
      "value": "0x0"
    },
    "191": {
      "op": "DUP2"
    },
    "192": {
      "op": "MSTORE"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "195": {
      "op": "ADD"
    },
    "196": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1361,
        1458
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x87"
    },
    "199": {
      "op": "JUMP"
    },
    "200": {
      "fn": "TokenTimelock.token",
      "offset": [
        1036,
        1120
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "201": {
      "fn": "TokenTimelock.token",
      "offset": [
        1107,
        1113
      ],
      "op": "PUSH32",
      "path": "102",
      "statement": 2,
      "value": "0x0"
    },
    "234": {
      "fn": "TokenTimelock.token",
      "offset": [
        1036,
        1120
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x73"
    },
    "237": {
      "fn": "TokenTimelock.token",
      "offset": [
        1036,
        1120
      ],
      "op": "JUMP",
      "path": "102"
    },
    "238": {
      "fn": "TokenTimelock.release",
      "offset": [
        1545,
        1927
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "239": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1439,
        1451
      ],
      "op": "PUSH32",
      "path": "102",
      "value": "0x0"
    },
    "272": {
      "fn": "TokenTimelock.release",
      "offset": [
        1651,
        1666
      ],
      "op": "TIMESTAMP",
      "path": "102",
      "statement": 3
    },
    "273": {
      "fn": "TokenTimelock.release",
      "offset": [
        1651,
        1683
      ],
      "op": "LT",
      "path": "102"
    },
    "274": {
      "branch": 14,
      "fn": "TokenTimelock.release",
      "offset": [
        1651,
        1683
      ],
      "op": "ISZERO",
      "path": "102"
    },
    "275": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x17E"
    },
    "278": {
      "branch": 14,
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "JUMPI",
      "path": "102"
    },
    "279": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x40"
    },
    "281": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "MLOAD",
      "path": "102"
    },
    "282": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "286": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "288": {
      "op": "SHL"
    },
    "289": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "DUP2",
      "path": "102"
    },
    "290": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "MSTORE",
      "path": "102"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "293": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x4"
    },
    "295": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "DUP3",
      "path": "102"
    },
    "296": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "ADD",
      "path": "102"
    },
    "297": {
      "op": "MSTORE"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "302": {
      "op": "DUP3"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "op": "MSTORE"
    },
    "305": {
      "op": "PUSH32",
      "value": "0x546F6B656E54696D656C6F636B3A2063757272656E742074696D652069732062"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "340": {
      "op": "DUP3"
    },
    "341": {
      "op": "ADD"
    },
    "342": {
      "op": "MSTORE"
    },
    "343": {
      "op": "PUSH18",
      "value": "0x65666F72652072656C656173652074696D65"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "364": {
      "op": "SHL"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "367": {
      "op": "DUP3"
    },
    "368": {
      "op": "ADD"
    },
    "369": {
      "op": "MSTORE"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "372": {
      "op": "ADD"
    },
    "373": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "374": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x40"
    },
    "376": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "MLOAD",
      "path": "102"
    },
    "377": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "DUP1",
      "path": "102"
    },
    "378": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "SWAP2",
      "path": "102"
    },
    "379": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "SUB",
      "path": "102"
    },
    "380": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "SWAP1",
      "path": "102"
    },
    "381": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "102"
    },
    "382": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1738
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "383": {
      "fn": "TokenTimelock.release",
      "offset": [
        1749,
        1763
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x0"
    },
    "385": {
      "fn": "TokenTimelock.token",
      "offset": [
        1107,
        1113
      ],
      "op": "PUSH32",
      "path": "102",
      "value": "0x0"
    },
    "418": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x40"
    },
    "420": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "MLOAD",
      "path": "102"
    },
    "421": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "428": {
      "op": "SHL"
    },
    "429": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP2",
      "path": "102"
    },
    "430": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "MSTORE",
      "path": "102"
    },
    "431": {
      "fn": "TokenTimelock.release",
      "offset": [
        1792,
        1796
      ],
      "op": "ADDRESS",
      "path": "102"
    },
    "432": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x4"
    },
    "434": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP3",
      "path": "102"
    },
    "435": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "ADD",
      "path": "102"
    },
    "436": {
      "op": "MSTORE"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "443": {
      "op": "SHL"
    },
    "444": {
      "op": "SUB"
    },
    "445": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1783
      ],
      "op": "SWAP2",
      "path": "102"
    },
    "446": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1783
      ],
      "op": "SWAP1",
      "path": "102"
    },
    "447": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1783
      ],
      "op": "SWAP2",
      "path": "102"
    },
    "448": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1783
      ],
      "op": "AND",
      "path": "102"
    },
    "449": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1783
      ],
      "op": "SWAP1",
      "path": "102"
    },
    "450": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1783
      ],
      "op": "PUSH4",
      "path": "102",
      "value": "0x70A08231"
    },
    "455": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1783
      ],
      "op": "SWAP1",
      "path": "102"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "458": {
      "op": "ADD"
    },
    "459": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x20"
    },
    "461": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x40"
    },
    "463": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "MLOAD",
      "path": "102"
    },
    "464": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP1",
      "path": "102"
    },
    "465": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP4",
      "path": "102"
    },
    "466": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "SUB",
      "path": "102"
    },
    "467": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP2",
      "path": "102"
    },
    "468": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP7",
      "path": "102"
    },
    "469": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP1",
      "path": "102"
    },
    "470": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "EXTCODESIZE",
      "path": "102"
    },
    "471": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "ISZERO",
      "path": "102"
    },
    "472": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP1",
      "path": "102"
    },
    "473": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "ISZERO",
      "path": "102"
    },
    "474": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x1E2"
    },
    "477": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "JUMPI",
      "path": "102"
    },
    "478": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x0"
    },
    "480": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP1",
      "path": "102"
    },
    "481": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "REVERT",
      "path": "102"
    },
    "482": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "483": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "POP",
      "path": "102"
    },
    "484": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "GAS",
      "path": "102"
    },
    "485": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "STATICCALL",
      "path": "102"
    },
    "486": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "ISZERO",
      "path": "102"
    },
    "487": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP1",
      "path": "102"
    },
    "488": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "ISZERO",
      "path": "102"
    },
    "489": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x1F6"
    },
    "492": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "JUMPI",
      "path": "102"
    },
    "493": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "RETURNDATASIZE",
      "path": "102"
    },
    "494": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x0"
    },
    "496": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP1",
      "path": "102"
    },
    "497": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "RETURNDATACOPY",
      "path": "102"
    },
    "498": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "RETURNDATASIZE",
      "path": "102"
    },
    "499": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x0"
    },
    "501": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "REVERT",
      "path": "102"
    },
    "502": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "503": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "POP",
      "path": "102"
    },
    "504": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "POP",
      "path": "102"
    },
    "505": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "POP",
      "path": "102"
    },
    "506": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "POP",
      "path": "102"
    },
    "507": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x40"
    },
    "509": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "MLOAD",
      "path": "102"
    },
    "510": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "RETURNDATASIZE",
      "path": "102"
    },
    "511": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x1F"
    },
    "513": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "NOT",
      "path": "102"
    },
    "514": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x1F"
    },
    "516": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP3",
      "path": "102"
    },
    "517": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "ADD",
      "path": "102"
    },
    "518": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "AND",
      "path": "102"
    },
    "519": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP3",
      "path": "102"
    },
    "520": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "ADD",
      "path": "102"
    },
    "521": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP1",
      "path": "102"
    },
    "522": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x40"
    },
    "524": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "MSTORE",
      "path": "102"
    },
    "525": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "POP",
      "path": "102"
    },
    "526": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "DUP2",
      "path": "102"
    },
    "527": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "ADD",
      "path": "102"
    },
    "528": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "SWAP1",
      "path": "102"
    },
    "529": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x21A"
    },
    "532": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "SWAP2",
      "path": "102"
    },
    "533": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "SWAP1",
      "path": "102"
    },
    "534": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x592"
    },
    "537": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1766,
        1798
      ],
      "op": "JUMP",
      "path": "102"
    },
    "538": {
      "fn": "TokenTimelock.release",
      "offset": [
        1766,
        1798
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "539": {
      "fn": "TokenTimelock.release",
      "offset": [
        1749,
        1798
      ],
      "op": "SWAP1",
      "path": "102"
    },
    "540": {
      "fn": "TokenTimelock.release",
      "offset": [
        1749,
        1798
      ],
      "op": "POP",
      "path": "102"
    },
    "541": {
      "fn": "TokenTimelock.release",
      "offset": [
        1825,
        1826
      ],
      "op": "PUSH1",
      "path": "102",
      "statement": 4,
      "value": "0x0"
    },
    "543": {
      "fn": "TokenTimelock.release",
      "offset": [
        1816,
        1822
      ],
      "op": "DUP2",
      "path": "102"
    },
    "544": {
      "branch": 15,
      "fn": "TokenTimelock.release",
      "offset": [
        1816,
        1826
      ],
      "op": "GT",
      "path": "102"
    },
    "545": {
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1866
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x278"
    },
    "548": {
      "branch": 15,
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1866
      ],
      "op": "JUMPI",
      "path": "102"
    },
    "549": {
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1866
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x40"
    },
    "551": {
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1866
      ],
      "op": "MLOAD",
      "path": "102"
    },
    "552": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "556": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "558": {
      "op": "SHL"
    },
    "559": {
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1866
      ],
      "op": "DUP2",
      "path": "102"
    },
    "560": {
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1866
      ],
      "op": "MSTORE",
      "path": "102"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "563": {
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1866
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x4"
    },
    "565": {
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1866
      ],
      "op": "DUP3",
      "path": "102"
    },
    "566": {
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1866
      ],
      "op": "ADD",
      "path": "102"
    },
    "567": {
      "op": "MSTORE"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "572": {
      "op": "DUP3"
    },
    "573": {
      "op": "ADD"
    },
    "574": {
      "op": "MSTORE"
    },
    "575": {
      "op": "PUSH32",
      "value": "0x546F6B656E54696D656C6F636B3A206E6F20746F6B656E7320746F2072656C65"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "610": {
      "op": "DUP3"
    },
    "611": {
      "op": "ADD"
    },
    "612": {
      "op": "MSTORE"
    },
    "613": {
      "op": "PUSH3",
      "value": "0x617365"
    },
    "617": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "619": {
      "op": "SHL"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "622": {
      "op": "DUP3"
    },
    "623": {
      "op": "ADD"
    },
    "624": {
      "op": "MSTORE"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "627": {
      "op": "ADD"
    },
    "628": {
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1866
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x175"
    },
    "631": {
      "op": "JUMP"
    },
    "632": {
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1866
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "633": {
      "fn": "TokenTimelock.release",
      "offset": [
        1877,
        1920
      ],
      "op": "PUSH2",
      "path": "102",
      "statement": 5,
      "value": "0x2CC"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "op": "SUB"
    },
    "644": {
      "fn": "TokenTimelock.token",
      "offset": [
        1107,
        1113
      ],
      "op": "PUSH32",
      "path": "102",
      "value": "0x0"
    },
    "677": {
      "fn": "TokenTimelock.release",
      "offset": [
        1877,
        1897
      ],
      "op": "AND",
      "path": "102"
    },
    "678": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1266,
        1278
      ],
      "op": "PUSH32",
      "path": "102",
      "value": "0x0"
    },
    "711": {
      "fn": "TokenTimelock.release",
      "offset": [
        1913,
        1919
      ],
      "op": "DUP4",
      "path": "102"
    },
    "712": {
      "fn": "TokenTimelock.release",
      "offset": [
        1877,
        1897
      ],
      "op": "PUSH2",
      "path": "102",
      "value": "0x2CF"
    },
    "715": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1877,
        1920
      ],
      "op": "JUMP",
      "path": "102"
    },
    "716": {
      "fn": "TokenTimelock.release",
      "offset": [
        1877,
        1920
      ],
      "op": "JUMPDEST",
      "path": "102"
    },
    "717": {
      "fn": "TokenTimelock.release",
      "offset": [
        1545,
        1927
      ],
      "op": "POP",
      "path": "102"
    },
    "718": {
      "fn": "TokenTimelock.release",
      "jump": "o",
      "offset": [
        1545,
        1927
      ],
      "op": "JUMP",
      "path": "102"
    },
    "719": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "JUMPDEST",
      "path": "101"
    },
    "720": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "101",
      "statement": 6,
      "value": "0x40"
    },
    "722": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP1",
      "path": "101"
    },
    "723": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "101"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "730": {
      "op": "SHL"
    },
    "731": {
      "op": "SUB"
    },
    "732": {
      "op": "DUP5"
    },
    "733": {
      "op": "AND"
    },
    "734": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "101",
      "value": "0x24"
    },
    "736": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP3",
      "path": "101"
    },
    "737": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "101"
    },
    "738": {
      "op": "MSTORE"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "741": {
      "op": "DUP1"
    },
    "742": {
      "op": "DUP3"
    },
    "743": {
      "op": "ADD"
    },
    "744": {
      "op": "DUP5"
    },
    "745": {
      "op": "SWAP1"
    },
    "746": {
      "op": "MSTORE"
    },
    "747": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP3",
      "path": "101"
    },
    "748": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "101"
    },
    "749": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP1",
      "path": "101"
    },
    "750": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP4",
      "path": "101"
    },
    "751": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SUB",
      "path": "101"
    },
    "752": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "101"
    },
    "753": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP2",
      "path": "101"
    },
    "754": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "101"
    },
    "755": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP2",
      "path": "101"
    },
    "756": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "101"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "759": {
      "op": "SWAP1"
    },
    "760": {
      "op": "SWAP2"
    },
    "761": {
      "op": "ADD"
    },
    "762": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "101"
    },
    "763": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP2",
      "path": "101"
    },
    "764": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "101"
    },
    "765": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "101",
      "value": "0x20"
    },
    "767": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP2",
      "path": "101"
    },
    "768": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "101"
    },
    "769": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP1",
      "path": "101"
    },
    "770": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "101"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "op": "SUB"
    },
    "779": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "AND",
      "path": "101"
    },
    "780": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "785": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "787": {
      "op": "SHL"
    },
    "788": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "OR",
      "path": "101"
    },
    "789": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "101"
    },
    "790": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "101"
    },
    "791": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "PUSH2",
      "path": "101",
      "value": "0x321"
    },
    "794": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "SWAP1",
      "path": "101"
    },
    "795": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        736,
        741
      ],
      "op": "DUP5",
      "path": "101"
    },
    "796": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        736,
        741
      ],
      "op": "SWAP1",
      "path": "101"
    },
    "797": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        735
      ],
      "op": "PUSH2",
      "path": "101",
      "value": "0x326"
    },
    "800": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        716,
        802
      ],
      "op": "JUMP",
      "path": "101"
    },
    "801": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "JUMPDEST",
      "path": "101"
    },
    "802": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "101"
    },
    "803": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "101"
    },
    "804": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "101"
    },
    "805": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        634,
        809
      ],
      "op": "JUMP",
      "path": "101"
    },
    "806": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3022,
        3773
      ],
      "op": "JUMPDEST",
      "path": "101"
    },
    "807": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3464
      ],
      "op": "PUSH1",
      "path": "101",
      "value": "0x0"
    },
    "809": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH2",
      "path": "101",
      "value": "0x37B"
    },
    "812": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3499
      ],
      "op": "DUP3",
      "path": "101"
    },
    "813": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "101",
      "value": "0x40"
    },
    "815": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MLOAD",
      "path": "101"
    },
    "816": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "101"
    },
    "817": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "101",
      "value": "0x40"
    },
    "819": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "101"
    },
    "820": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "101",
      "value": "0x40"
    },
    "822": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "101"
    },
    "823": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "101"
    },
    "824": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "101",
      "value": "0x20"
    },
    "826": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "101"
    },
    "827": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "101"
    },
    "828": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "101",
      "value": "0x20"
    },
    "830": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "101"
    },
    "831": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH32",
      "path": "101",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "864": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "101"
    },
    "865": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "101"
    },
    "866": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "POP",
      "path": "101"
    },
    "867": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3475,
        3480
      ],
      "op": "DUP6",
      "path": "101"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "874": {
      "op": "SHL"
    },
    "875": {
      "op": "SUB"
    },
    "876": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "AND",
      "path": "101"
    },
    "877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "PUSH2",
      "path": "101",
      "value": "0x3F8"
    },
    "880": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "SWAP1",
      "path": "101"
    },
    "881": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP3",
      "path": "101"
    },
    "882": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP2",
      "path": "101"
    },
    "883": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP1",
      "path": "101"
    },
    "884": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH4",
      "path": "101",
      "value": "0xFFFFFFFF"
    },
    "889": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "AND",
      "path": "101"
    },
    "890": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMP",
      "path": "101"
    },
    "891": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMPDEST",
      "path": "101"
    },
    "892": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "DUP1",
      "path": "101"
    },
    "893": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "MLOAD",
      "path": "101"
    },
    "894": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP1",
      "path": "101"
    },
    "895": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP2",
      "path": "101"
    },
    "896": {
      "op": "POP"
    },
    "897": {
      "branch": 19,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3571
      ],
      "op": "ISZERO",
      "path": "101"
    },
    "898": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "PUSH2",
      "path": "101",
      "value": "0x321"
    },
    "901": {
      "branch": 19,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "JUMPI",
      "path": "101"
    },
    "902": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3690,
        3700
      ],
      "op": "DUP1",
      "path": "101",
      "statement": 7
    },
    "903": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP1",
      "path": "101"
    },
    "904": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH1",
      "path": "101",
      "value": "0x20"
    },
    "906": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "101"
    },
    "907": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "101"
    },
    "908": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "MLOAD",
      "path": "101"
    },
    "909": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP2",
      "path": "101"
    },
    "910": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "101"
    },
    "911": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "101"
    },
    "912": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "101",
      "value": "0x399"
    },
    "915": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP2",
      "path": "101"
    },
    "916": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "101"
    },
    "917": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "101",
      "value": "0x572"
    },
    "920": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMP",
      "path": "101"
    },
    "921": {
      "branch": 20,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMPDEST",
      "path": "101"
    },
    "922": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "101",
      "value": "0x321"
    },
    "925": {
      "branch": 20,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "JUMPI",
      "path": "101"
    },
    "926": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "101",
      "value": "0x40"
    },
    "928": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MLOAD",
      "path": "101"
    },
    "929": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "933": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "935": {
      "op": "SHL"
    },
    "936": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP2",
      "path": "101"
    },
    "937": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MSTORE",
      "path": "101"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "940": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "101",
      "value": "0x4"
    },
    "942": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP3",
      "path": "101"
    },
    "943": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "ADD",
      "path": "101"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "949": {
      "op": "DUP3"
    },
    "950": {
      "op": "ADD"
    },
    "951": {
      "op": "MSTORE"
    },
    "952": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "987": {
      "op": "DUP3"
    },
    "988": {
      "op": "ADD"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "1003": {
      "op": "SHL"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1006": {
      "op": "DUP3"
    },
    "1007": {
      "op": "ADD"
    },
    "1008": {
      "op": "MSTORE"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "101",
      "value": "0x175"
    },
    "1015": {
      "op": "JUMP"
    },
    "1016": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1017": {
      "fn": "Address.functionCall",
      "offset": [
        3676,
        3688
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x60"
    },
    "1019": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "PUSH2",
      "path": "119",
      "statement": 8,
      "value": "0x407"
    },
    "1022": {
      "fn": "Address.functionCall",
      "offset": [
        3729,
        3735
      ],
      "op": "DUP5",
      "path": "119"
    },
    "1023": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3741
      ],
      "op": "DUP5",
      "path": "119"
    },
    "1024": {
      "fn": "Address.functionCall",
      "offset": [
        3743,
        3744
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "1026": {
      "fn": "Address.functionCall",
      "offset": [
        3746,
        3758
      ],
      "op": "DUP6",
      "path": "119"
    },
    "1027": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3728
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x411"
    },
    "1030": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3707,
        3759
      ],
      "op": "JUMP",
      "path": "119"
    },
    "1031": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1032": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3759
      ],
      "op": "SWAP1",
      "path": "119"
    },
    "1033": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3759
      ],
      "op": "POP",
      "path": "119"
    },
    "1034": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1035": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "SWAP4",
      "path": "119"
    },
    "1036": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "SWAP3",
      "path": "119"
    },
    "1037": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "POP",
      "path": "119"
    },
    "1038": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "POP",
      "path": "119"
    },
    "1039": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "POP",
      "path": "119"
    },
    "1040": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMP",
      "path": "119"
    },
    "1041": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1042": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4727,
        4739
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x60"
    },
    "1044": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4784,
        4789
      ],
      "op": "DUP3",
      "path": "119",
      "statement": 9
    },
    "1045": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4780
      ],
      "op": "SELFBALANCE",
      "path": "119"
    },
    "1046": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "LT",
      "path": "119"
    },
    "1047": {
      "branch": 16,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "ISZERO",
      "path": "119"
    },
    "1048": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x472"
    },
    "1051": {
      "branch": 16,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "1052": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "1054": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "1055": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1061": {
      "op": "SHL"
    },
    "1062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP2",
      "path": "119"
    },
    "1063": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1066": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x4"
    },
    "1068": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP3",
      "path": "119"
    },
    "1069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "ADD",
      "path": "119"
    },
    "1070": {
      "op": "MSTORE"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1075": {
      "op": "DUP3"
    },
    "1076": {
      "op": "ADD"
    },
    "1077": {
      "op": "MSTORE"
    },
    "1078": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "1125": {
      "op": "SHL"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1128": {
      "op": "DUP3"
    },
    "1129": {
      "op": "ADD"
    },
    "1130": {
      "op": "MSTORE"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1133": {
      "op": "ADD"
    },
    "1134": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x175"
    },
    "1137": {
      "op": "JUMP"
    },
    "1138": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1139": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "DUP5",
      "path": "119"
    },
    "1140": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "119"
    },
    "1141": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "119",
      "statement": 10,
      "value": "0x4C0"
    },
    "1144": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "1145": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "1147": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "1148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1154": {
      "op": "SHL"
    },
    "1155": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP2",
      "path": "119"
    },
    "1156": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1159": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x4"
    },
    "1161": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP3",
      "path": "119"
    },
    "1162": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "ADD",
      "path": "119"
    },
    "1163": {
      "op": "MSTORE"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1168": {
      "op": "DUP3"
    },
    "1169": {
      "op": "ADD"
    },
    "1170": {
      "op": "MSTORE"
    },
    "1171": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1206": {
      "op": "DUP3"
    },
    "1207": {
      "op": "ADD"
    },
    "1208": {
      "op": "MSTORE"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1211": {
      "op": "ADD"
    },
    "1212": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x175"
    },
    "1215": {
      "op": "JUMP"
    },
    "1216": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1217": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4973,
        4985
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "1219": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4987,
        5010
      ],
      "op": "DUP1",
      "path": "119"
    },
    "1220": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5020
      ],
      "op": "DUP7",
      "path": "119"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1227": {
      "op": "SHL"
    },
    "1228": {
      "op": "SUB"
    },
    "1229": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5025
      ],
      "op": "AND",
      "path": "119"
    },
    "1230": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5034,
        5039
      ],
      "op": "DUP6",
      "path": "119"
    },
    "1231": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5046
      ],
      "op": "DUP8",
      "path": "119"
    },
    "1232": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "1234": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "1235": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x4DC"
    },
    "1238": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "1239": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP1",
      "path": "119"
    },
    "1240": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x5AA"
    },
    "1243": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "119"
    },
    "1244": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1245": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "1247": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "1249": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "1250": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "119"
    },
    "1251": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP4",
      "path": "119"
    },
    "1252": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SUB",
      "path": "119"
    },
    "1253": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "119"
    },
    "1254": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP6",
      "path": "119"
    },
    "1255": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP8",
      "path": "119"
    },
    "1256": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "GAS",
      "path": "119"
    },
    "1257": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "CALL",
      "path": "119"
    },
    "1258": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP3",
      "path": "119"
    },
    "1259": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "119"
    },
    "1260": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "119"
    },
    "1261": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "119"
    },
    "1262": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "1263": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "119"
    },
    "1264": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "1266": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "119"
    },
    "1267": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "EQ",
      "path": "119"
    },
    "1268": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x519"
    },
    "1271": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "1272": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "1274": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "1275": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "1276": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "119"
    },
    "1277": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x1F"
    },
    "1279": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "NOT",
      "path": "119"
    },
    "1280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x3F"
    },
    "1282": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "1283": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "119"
    },
    "1284": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "AND",
      "path": "119"
    },
    "1285": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "119"
    },
    "1286": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "119"
    },
    "1287": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "1289": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "1290": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "1291": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "119"
    },
    "1292": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "1293": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "119"
    },
    "1294": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x0"
    },
    "1296": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x20"
    },
    "1298": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP5",
      "path": "119"
    },
    "1299": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "119"
    },
    "1300": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATACOPY",
      "path": "119"
    },
    "1301": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x51E"
    },
    "1304": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "119"
    },
    "1305": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1306": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x60"
    },
    "1308": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "1309": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "119"
    },
    "1310": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1311": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "119"
    },
    "1312": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "1313": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "119"
    },
    "1314": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "1315": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "119"
    },
    "1316": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "PUSH2",
      "path": "119",
      "statement": 11,
      "value": "0x52E"
    },
    "1319": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5082,
        5089
      ],
      "op": "DUP3",
      "path": "119"
    },
    "1320": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5091,
        5101
      ],
      "op": "DUP3",
      "path": "119"
    },
    "1321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5103,
        5115
      ],
      "op": "DUP7",
      "path": "119"
    },
    "1322": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5081
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x539"
    },
    "1325": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMP",
      "path": "119"
    },
    "1326": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1327": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5057,
        5116
      ],
      "op": "SWAP8",
      "path": "119"
    },
    "1328": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "SWAP7",
      "path": "119"
    },
    "1329": {
      "op": "POP"
    },
    "1330": {
      "op": "POP"
    },
    "1331": {
      "op": "POP"
    },
    "1332": {
      "op": "POP"
    },
    "1333": {
      "op": "POP"
    },
    "1334": {
      "op": "POP"
    },
    "1335": {
      "op": "POP"
    },
    "1336": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMP",
      "path": "119"
    },
    "1337": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7083,
        7808
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1338": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7198,
        7210
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x60"
    },
    "1340": {
      "branch": 17,
      "fn": "Address._verifyCallResult",
      "offset": [
        7226,
        7233
      ],
      "op": "DUP4",
      "path": "119"
    },
    "1341": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "ISZERO",
      "path": "119"
    },
    "1342": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x548"
    },
    "1345": {
      "branch": 17,
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "1346": {
      "op": "POP"
    },
    "1347": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7256,
        7266
      ],
      "op": "DUP2",
      "path": "119",
      "statement": 12
    },
    "1348": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x40A"
    },
    "1351": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "JUMP",
      "path": "119"
    },
    "1352": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1353": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "DUP3",
      "path": "119"
    },
    "1354": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "1355": {
      "branch": 18,
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7388
      ],
      "op": "ISZERO",
      "path": "119"
    },
    "1356": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x558"
    },
    "1359": {
      "branch": 18,
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPI",
      "path": "119"
    },
    "1360": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7625,
        7635
      ],
      "op": "DUP3",
      "path": "119"
    },
    "1361": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7619,
        7636
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "1362": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7685,
        7700
      ],
      "op": "DUP1",
      "path": "119"
    },
    "1363": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7682
      ],
      "op": "DUP5",
      "path": "119"
    },
    "1364": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7668,
        7670
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x20"
    },
    "1366": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7664,
        7683
      ],
      "op": "ADD",
      "path": "119"
    },
    "1367": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7657,
        7701
      ],
      "op": "REVERT",
      "path": "119"
    },
    "1368": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7574,
        7719
      ],
      "op": "JUMPDEST",
      "path": "119"
    },
    "1369": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7764,
        7776
      ],
      "op": "DUP2",
      "path": "119",
      "statement": 13
    },
    "1370": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x40"
    },
    "1372": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MLOAD",
      "path": "119"
    },
    "1373": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1379": {
      "op": "SHL"
    },
    "1380": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "DUP2",
      "path": "119"
    },
    "1381": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MSTORE",
      "path": "119"
    },
    "1382": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "119",
      "value": "0x4"
    },
    "1384": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "ADD",
      "path": "119"
    },
    "1385": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x175"
    },
    "1388": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP2",
      "path": "119"
    },
    "1389": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP1",
      "path": "119"
    },
    "1390": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "119",
      "value": "0x5C6"
    },
    "1393": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7757,
        7777
      ],
      "op": "JUMP",
      "path": "119"
    },
    "1394": {
      "op": "JUMPDEST"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1399": {
      "op": "DUP3"
    },
    "1400": {
      "op": "DUP5"
    },
    "1401": {
      "op": "SUB"
    },
    "1402": {
      "op": "SLT"
    },
    "1403": {
      "op": "ISZERO"
    },
    "1404": {
      "op": "PUSH2",
      "value": "0x583"
    },
    "1407": {
      "op": "JUMPI"
    },
    "1408": {
      "op": "DUP1"
    },
    "1409": {
      "op": "DUP2"
    },
    "1410": {
      "op": "REVERT"
    },
    "1411": {
      "op": "JUMPDEST"
    },
    "1412": {
      "op": "DUP2"
    },
    "1413": {
      "op": "MLOAD"
    },
    "1414": {
      "op": "DUP1"
    },
    "1415": {
      "op": "ISZERO"
    },
    "1416": {
      "op": "ISZERO"
    },
    "1417": {
      "op": "DUP2"
    },
    "1418": {
      "op": "EQ"
    },
    "1419": {
      "op": "PUSH2",
      "value": "0x40A"
    },
    "1422": {
      "op": "JUMPI"
    },
    "1423": {
      "op": "DUP2"
    },
    "1424": {
      "op": "DUP3"
    },
    "1425": {
      "op": "REVERT"
    },
    "1426": {
      "op": "JUMPDEST"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1431": {
      "op": "DUP3"
    },
    "1432": {
      "op": "DUP5"
    },
    "1433": {
      "op": "SUB"
    },
    "1434": {
      "op": "SLT"
    },
    "1435": {
      "op": "ISZERO"
    },
    "1436": {
      "op": "PUSH2",
      "value": "0x5A3"
    },
    "1439": {
      "op": "JUMPI"
    },
    "1440": {
      "op": "DUP1"
    },
    "1441": {
      "op": "DUP2"
    },
    "1442": {
      "op": "REVERT"
    },
    "1443": {
      "op": "JUMPDEST"
    },
    "1444": {
      "op": "POP"
    },
    "1445": {
      "op": "MLOAD"
    },
    "1446": {
      "op": "SWAP2"
    },
    "1447": {
      "op": "SWAP1"
    },
    "1448": {
      "op": "POP"
    },
    "1449": {
      "jump": "o",
      "op": "JUMP"
    },
    "1450": {
      "op": "JUMPDEST"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1453": {
      "op": "DUP3"
    },
    "1454": {
      "op": "MLOAD"
    },
    "1455": {
      "op": "PUSH2",
      "value": "0x5BC"
    },
    "1458": {
      "op": "DUP2"
    },
    "1459": {
      "op": "DUP5"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1462": {
      "op": "DUP8"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "op": "PUSH2",
      "value": "0x5F9"
    },
    "1467": {
      "jump": "i",
      "op": "JUMP"
    },
    "1468": {
      "op": "JUMPDEST"
    },
    "1469": {
      "op": "SWAP2"
    },
    "1470": {
      "op": "SWAP1"
    },
    "1471": {
      "op": "SWAP2"
    },
    "1472": {
      "op": "ADD"
    },
    "1473": {
      "op": "SWAP3"
    },
    "1474": {
      "op": "SWAP2"
    },
    "1475": {
      "op": "POP"
    },
    "1476": {
      "op": "POP"
    },
    "1477": {
      "jump": "o",
      "op": "JUMP"
    },
    "1478": {
      "op": "JUMPDEST"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1483": {
      "op": "DUP3"
    },
    "1484": {
      "op": "MSTORE"
    },
    "1485": {
      "op": "DUP3"
    },
    "1486": {
      "op": "MLOAD"
    },
    "1487": {
      "op": "DUP1"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1490": {
      "op": "DUP5"
    },
    "1491": {
      "op": "ADD"
    },
    "1492": {
      "op": "MSTORE"
    },
    "1493": {
      "op": "PUSH2",
      "value": "0x5E5"
    },
    "1496": {
      "op": "DUP2"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1499": {
      "op": "DUP6"
    },
    "1500": {
      "op": "ADD"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1503": {
      "op": "DUP8"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "PUSH2",
      "value": "0x5F9"
    },
    "1508": {
      "jump": "i",
      "op": "JUMP"
    },
    "1509": {
      "op": "JUMPDEST"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1512": {
      "op": "ADD"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1515": {
      "op": "NOT"
    },
    "1516": {
      "op": "AND"
    },
    "1517": {
      "op": "SWAP2"
    },
    "1518": {
      "op": "SWAP1"
    },
    "1519": {
      "op": "SWAP2"
    },
    "1520": {
      "op": "ADD"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1523": {
      "op": "ADD"
    },
    "1524": {
      "op": "SWAP3"
    },
    "1525": {
      "op": "SWAP2"
    },
    "1526": {
      "op": "POP"
    },
    "1527": {
      "op": "POP"
    },
    "1528": {
      "jump": "o",
      "op": "JUMP"
    },
    "1529": {
      "op": "JUMPDEST"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1532": {
      "op": "JUMPDEST"
    },
    "1533": {
      "op": "DUP4"
    },
    "1534": {
      "op": "DUP2"
    },
    "1535": {
      "op": "LT"
    },
    "1536": {
      "op": "ISZERO"
    },
    "1537": {
      "op": "PUSH2",
      "value": "0x614"
    },
    "1540": {
      "op": "JUMPI"
    },
    "1541": {
      "op": "DUP2"
    },
    "1542": {
      "op": "DUP2"
    },
    "1543": {
      "op": "ADD"
    },
    "1544": {
      "op": "MLOAD"
    },
    "1545": {
      "op": "DUP4"
    },
    "1546": {
      "op": "DUP3"
    },
    "1547": {
      "op": "ADD"
    },
    "1548": {
      "op": "MSTORE"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1551": {
      "op": "ADD"
    },
    "1552": {
      "op": "PUSH2",
      "value": "0x5FC"
    },
    "1555": {
      "op": "JUMP"
    },
    "1556": {
      "op": "JUMPDEST"
    },
    "1557": {
      "op": "DUP4"
    },
    "1558": {
      "op": "DUP2"
    },
    "1559": {
      "op": "GT"
    },
    "1560": {
      "op": "ISZERO"
    },
    "1561": {
      "op": "PUSH2",
      "value": "0x623"
    },
    "1564": {
      "op": "JUMPI"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1567": {
      "op": "DUP5"
    },
    "1568": {
      "op": "DUP5"
    },
    "1569": {
      "op": "ADD"
    },
    "1570": {
      "op": "MSTORE"
    },
    "1571": {
      "op": "JUMPDEST"
    },
    "1572": {
      "op": "POP"
    },
    "1573": {
      "op": "POP"
    },
    "1574": {
      "op": "POP"
    },
    "1575": {
      "op": "POP"
    },
    "1576": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "36b774f8ec6e7ed7d17673fd34c85d77f951d86e",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./SafeERC20.sol\";\n\n/**\n * @dev A token holder contract that will allow a beneficiary to extract the\n * tokens after a given release time.\n *\n * Useful for simple vesting schedules like \"advisors get all of their tokens\n * after 1 year\".\n */\ncontract TokenTimelock {\n    using SafeERC20 for IERC20;\n\n    // ERC20 basic token contract being held\n    IERC20 immutable private _token;\n\n    // beneficiary of tokens after they are released\n    address immutable private _beneficiary;\n\n    // timestamp when token release is enabled\n    uint256 immutable private _releaseTime;\n\n    constructor (IERC20 token_, address beneficiary_, uint256 releaseTime_) {\n        // solhint-disable-next-line not-rely-on-time\n        require(releaseTime_ > block.timestamp, \"TokenTimelock: release time is before current time\");\n        _token = token_;\n        _beneficiary = beneficiary_;\n        _releaseTime = releaseTime_;\n    }\n\n    /**\n     * @return the token being held.\n     */\n    function token() public view virtual returns (IERC20) {\n        return _token;\n    }\n\n    /**\n     * @return the beneficiary of the tokens.\n     */\n    function beneficiary() public view virtual returns (address) {\n        return _beneficiary;\n    }\n\n    /**\n     * @return the time when the tokens are released.\n     */\n    function releaseTime() public view virtual returns (uint256) {\n        return _releaseTime;\n    }\n\n    /**\n     * @notice Transfers tokens held by timelock to beneficiary.\n     */\n    function release() public virtual {\n        // solhint-disable-next-line not-rely-on-time\n        require(block.timestamp >= releaseTime(), \"TokenTimelock: current time is before release time\");\n\n        uint256 amount = token().balanceOf(address(this));\n        require(amount > 0, \"TokenTimelock: no tokens to release\");\n\n        token().safeTransfer(beneficiary(), amount);\n    }\n}\n",
  "sourceMap": "307:1622:102:-:0;;;642:335;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;801:15;786:12;:30;778:93;;;;-1:-1:-1;;;778:93:102;;693:2:144;778:93:102;;;675:21:144;732:2;712:18;;;705:30;771:34;751:18;;;744:62;-1:-1:-1;;;822:18:144;;;815:48;880:19;;778:93:102;;;;;;;;-1:-1:-1;;;;;;881:15:102;;;;;;;;906:27;;;;;;;943;;307:1622;;14:472:144;;;;187:2;175:9;166:7;162:23;158:32;155:2;;;208:6;200;193:22;155:2;245:9;239:16;264:31;289:5;264:31;:::i;:::-;364:2;349:18;;343:25;314:5;;-1:-1:-1;377:33:144;343:25;377:33;:::i;:::-;429:7;419:17;;;476:2;465:9;461:18;455:25;445:35;;145:341;;;;;:::o;910:131::-;-1:-1:-1;;;;;985:31:144;;975:42;;965:2;;1031:1;1028;1021:12;965:2;955:86;:::o;:::-;307:1622:102;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin-contracts/contracts/token/ERC20/utils/TokenTimelock.sol",
  "type": "contract"
}