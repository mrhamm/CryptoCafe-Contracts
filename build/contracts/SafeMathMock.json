{
  "abi": [
    {
      "inputs": [],
      "name": "addMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "divMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "divWithMessage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doAdd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doDiv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doMod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doMul",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doSub",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "modMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "modWithMessage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mulMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "subWithMessage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryAdd",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryDiv",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryMod",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryMul",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "trySub",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "140": "contracts/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
    "65": "contracts/openzeppelin-contracts/contracts/mocks/SafeMathMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-contracts/contracts/mocks/SafeMathMock.sol",
    "exportedSymbols": {
      "SafeMath": [
        17200
      ],
      "SafeMathMock": [
        6845
      ]
    },
    "id": 6846,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6461,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:65"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
        "file": "../utils/math/SafeMath.sol",
        "id": 6462,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6846,
        "sourceUnit": 17201,
        "src": "58:36:65",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6845,
        "linearizedBaseContracts": [
          6845
        ],
        "name": "SafeMathMock",
        "nameLocation": "105:12:65",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6479,
              "nodeType": "Block",
              "src": "209:45:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6475,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6464,
                        "src": "242:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6476,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6466,
                        "src": "245:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6473,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17200,
                        "src": "226:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16923,
                      "src": "226:15:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 6477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "226:21:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 6472,
                  "id": 6478,
                  "nodeType": "Return",
                  "src": "219:28:65"
                }
              ]
            },
            "functionSelector": "884557bf",
            "id": 6480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryAdd",
            "nameLocation": "133:6:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6464,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "148:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6480,
                  "src": "140:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "140:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6466,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "159:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6480,
                  "src": "151:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "139:22:65"
            },
            "returnParameters": {
              "id": 6472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6469,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "188:4:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6480,
                  "src": "183:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6468,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "183:4:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6471,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "202:5:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6480,
                  "src": "194:13:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "182:26:65"
            },
            "scope": 6845,
            "src": "124:130:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6497,
              "nodeType": "Block",
              "src": "345:45:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6493,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6482,
                        "src": "378:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6494,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6484,
                        "src": "381:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6491,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17200,
                        "src": "362:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "trySub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16951,
                      "src": "362:15:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 6495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "362:21:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 6490,
                  "id": 6496,
                  "nodeType": "Return",
                  "src": "355:28:65"
                }
              ]
            },
            "functionSelector": "a29962b1",
            "id": 6498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "trySub",
            "nameLocation": "269:6:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6482,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "284:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6498,
                  "src": "276:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6484,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "295:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6498,
                  "src": "287:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "275:22:65"
            },
            "returnParameters": {
              "id": 6490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6487,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "324:4:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6498,
                  "src": "319:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6486,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:4:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6489,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "338:5:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6498,
                  "src": "330:13:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "318:26:65"
            },
            "scope": 6845,
            "src": "260:130:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6515,
              "nodeType": "Block",
              "src": "481:45:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6511,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6500,
                        "src": "514:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6512,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6502,
                        "src": "517:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6509,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17200,
                        "src": "498:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryMul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16993,
                      "src": "498:15:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 6513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:21:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 6508,
                  "id": 6514,
                  "nodeType": "Return",
                  "src": "491:28:65"
                }
              ]
            },
            "functionSelector": "6281efa4",
            "id": 6516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryMul",
            "nameLocation": "405:6:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6500,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "420:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6516,
                  "src": "412:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6502,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "431:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6516,
                  "src": "423:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:22:65"
            },
            "returnParameters": {
              "id": 6508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6505,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "460:4:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6516,
                  "src": "455:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6504,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:4:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6507,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "474:5:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6516,
                  "src": "466:13:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "454:26:65"
            },
            "scope": 6845,
            "src": "396:130:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6533,
              "nodeType": "Block",
              "src": "617:45:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6529,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6518,
                        "src": "650:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6530,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6520,
                        "src": "653:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6527,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17200,
                        "src": "634:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryDiv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17021,
                      "src": "634:15:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 6531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "634:21:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 6526,
                  "id": 6532,
                  "nodeType": "Return",
                  "src": "627:28:65"
                }
              ]
            },
            "functionSelector": "736ecb18",
            "id": 6534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryDiv",
            "nameLocation": "541:6:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6518,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "556:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6534,
                  "src": "548:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6520,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "567:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6534,
                  "src": "559:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:22:65"
            },
            "returnParameters": {
              "id": 6526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6523,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "596:4:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6534,
                  "src": "591:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6522,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:4:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6525,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "610:5:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6534,
                  "src": "602:13:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "602:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "590:26:65"
            },
            "scope": 6845,
            "src": "532:130:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6551,
              "nodeType": "Block",
              "src": "753:45:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6547,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6536,
                        "src": "786:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6548,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6538,
                        "src": "789:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6545,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17200,
                        "src": "770:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryMod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17049,
                      "src": "770:15:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 6549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "770:21:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 6544,
                  "id": 6550,
                  "nodeType": "Return",
                  "src": "763:28:65"
                }
              ]
            },
            "functionSelector": "38dc0867",
            "id": 6552,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryMod",
            "nameLocation": "677:6:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6536,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "692:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6552,
                  "src": "684:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6538,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "703:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6552,
                  "src": "695:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "683:22:65"
            },
            "returnParameters": {
              "id": 6544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6541,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "732:4:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6552,
                  "src": "727:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6540,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:4:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6543,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "746:5:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6552,
                  "src": "738:13:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "726:26:65"
            },
            "scope": 6845,
            "src": "668:130:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6567,
              "nodeType": "Block",
              "src": "958:42:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6563,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6554,
                        "src": "988:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6564,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6556,
                        "src": "991:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6561,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17200,
                        "src": "975:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17064,
                      "src": "975:12:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "975:18:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6560,
                  "id": 6566,
                  "nodeType": "Return",
                  "src": "968:25:65"
                }
              ]
            },
            "functionSelector": "dcc721d2",
            "id": 6568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doAdd",
            "nameLocation": "900:5:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6554,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "914:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6568,
                  "src": "906:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6556,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "925:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6568,
                  "src": "917:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:22:65"
            },
            "returnParameters": {
              "id": 6560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6559,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6568,
                  "src": "949:7:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "948:9:65"
            },
            "scope": 6845,
            "src": "891:109:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6583,
              "nodeType": "Block",
              "src": "1073:42:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6579,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6570,
                        "src": "1103:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6580,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6572,
                        "src": "1106:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6577,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17200,
                        "src": "1090:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17079,
                      "src": "1090:12:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:18:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6576,
                  "id": 6582,
                  "nodeType": "Return",
                  "src": "1083:25:65"
                }
              ]
            },
            "functionSelector": "6c7ac637",
            "id": 6584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doSub",
            "nameLocation": "1015:5:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6570,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1029:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6584,
                  "src": "1021:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6572,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1040:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6584,
                  "src": "1032:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1020:22:65"
            },
            "returnParameters": {
              "id": 6576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6575,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6584,
                  "src": "1064:7:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1064:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1063:9:65"
            },
            "scope": 6845,
            "src": "1006:109:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6599,
              "nodeType": "Block",
              "src": "1188:42:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6595,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6586,
                        "src": "1218:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6596,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6588,
                        "src": "1221:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6593,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17200,
                        "src": "1205:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17094,
                      "src": "1205:12:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:18:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6592,
                  "id": 6598,
                  "nodeType": "Return",
                  "src": "1198:25:65"
                }
              ]
            },
            "functionSelector": "fb119198",
            "id": 6600,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doMul",
            "nameLocation": "1130:5:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6586,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1144:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6600,
                  "src": "1136:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6588,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1155:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6600,
                  "src": "1147:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1135:22:65"
            },
            "returnParameters": {
              "id": 6592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6591,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6600,
                  "src": "1179:7:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1178:9:65"
            },
            "scope": 6845,
            "src": "1121:109:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6615,
              "nodeType": "Block",
              "src": "1303:42:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6611,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6602,
                        "src": "1333:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6612,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6604,
                        "src": "1336:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6609,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17200,
                        "src": "1320:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17109,
                      "src": "1320:12:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1320:18:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6608,
                  "id": 6614,
                  "nodeType": "Return",
                  "src": "1313:25:65"
                }
              ]
            },
            "functionSelector": "fc0ce503",
            "id": 6616,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doDiv",
            "nameLocation": "1245:5:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6602,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1259:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6616,
                  "src": "1251:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6604,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1270:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6616,
                  "src": "1262:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1250:22:65"
            },
            "returnParameters": {
              "id": 6608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6607,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6616,
                  "src": "1294:7:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1294:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1293:9:65"
            },
            "scope": 6845,
            "src": "1236:109:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6631,
              "nodeType": "Block",
              "src": "1418:42:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6627,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6618,
                        "src": "1448:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6628,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6620,
                        "src": "1451:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6625,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17200,
                        "src": "1435:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17124,
                      "src": "1435:12:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1435:18:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6624,
                  "id": 6630,
                  "nodeType": "Return",
                  "src": "1428:25:65"
                }
              ]
            },
            "functionSelector": "869f602f",
            "id": 6632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doMod",
            "nameLocation": "1360:5:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6618,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1374:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6632,
                  "src": "1366:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6620,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1385:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6632,
                  "src": "1377:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1365:22:65"
            },
            "returnParameters": {
              "id": 6624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6623,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6632,
                  "src": "1409:7:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1408:9:65"
            },
            "scope": 6845,
            "src": "1351:109:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6650,
              "nodeType": "Block",
              "src": "1570:56:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6645,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6634,
                        "src": "1600:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6646,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6636,
                        "src": "1603:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6647,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6638,
                        "src": "1606:12:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 6643,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17200,
                        "src": "1587:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17149,
                      "src": "1587:12:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 6648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1587:32:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6642,
                  "id": 6649,
                  "nodeType": "Return",
                  "src": "1580:39:65"
                }
              ]
            },
            "functionSelector": "9f5cec89",
            "id": 6651,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subWithMessage",
            "nameLocation": "1475:14:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6634,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1498:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6651,
                  "src": "1490:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6636,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1509:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6651,
                  "src": "1501:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1501:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6638,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "1526:12:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6651,
                  "src": "1512:26:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6637,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1512:6:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1489:50:65"
            },
            "returnParameters": {
              "id": 6642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6641,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6651,
                  "src": "1561:7:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1560:9:65"
            },
            "scope": 6845,
            "src": "1466:160:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6669,
              "nodeType": "Block",
              "src": "1736:56:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6664,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6653,
                        "src": "1766:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6665,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6655,
                        "src": "1769:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6666,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6657,
                        "src": "1772:12:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 6662,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17200,
                        "src": "1753:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17174,
                      "src": "1753:12:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 6667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1753:32:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6661,
                  "id": 6668,
                  "nodeType": "Return",
                  "src": "1746:39:65"
                }
              ]
            },
            "functionSelector": "3449b5fb",
            "id": 6670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divWithMessage",
            "nameLocation": "1641:14:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6653,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1664:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6670,
                  "src": "1656:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1656:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6655,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1675:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6670,
                  "src": "1667:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6657,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "1692:12:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6670,
                  "src": "1678:26:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6656,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:6:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1655:50:65"
            },
            "returnParameters": {
              "id": 6661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6660,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6670,
                  "src": "1727:7:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1726:9:65"
            },
            "scope": 6845,
            "src": "1632:160:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6688,
              "nodeType": "Block",
              "src": "1902:56:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6683,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6672,
                        "src": "1932:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6684,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6674,
                        "src": "1935:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6685,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6676,
                        "src": "1938:12:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 6681,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17200,
                        "src": "1919:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17199,
                      "src": "1919:12:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 6686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1919:32:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6680,
                  "id": 6687,
                  "nodeType": "Return",
                  "src": "1912:39:65"
                }
              ]
            },
            "functionSelector": "a155bd62",
            "id": 6689,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "modWithMessage",
            "nameLocation": "1807:14:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6672,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1830:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6689,
                  "src": "1822:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6674,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1841:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6689,
                  "src": "1833:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1833:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6676,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "1858:12:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6689,
                  "src": "1844:26:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6675,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1844:6:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1821:50:65"
            },
            "returnParameters": {
              "id": 6680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6679,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6689,
                  "src": "1893:7:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1893:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1892:9:65"
            },
            "scope": 6845,
            "src": "1798:160:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6719,
              "nodeType": "Block",
              "src": "2024:307:65",
              "statements": [
                {
                  "assignments": [
                    6695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6695,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2042:6:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 6719,
                      "src": "2034:14:65",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6694,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2034:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6697,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 6696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2051:2:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2034:19:65"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2128:22:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2130:18:65",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2143:4:65",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2137:5:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2137:11:65"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2130:3:65"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6692,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2130:3:65",
                      "valueSize": 1
                    }
                  ],
                  "id": 6698,
                  "nodeType": "InlineAssembly",
                  "src": "2119:31:65"
                },
                {
                  "body": {
                    "id": 6716,
                    "nodeType": "Block",
                    "src": "2196:23:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 6712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2211:1:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 6713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2214:1:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 6709,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17200,
                              "src": "2198:8:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 6711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17064,
                            "src": "2198:12:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2198:18:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6715,
                        "nodeType": "ExpressionStatement",
                        "src": "2198:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6703,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6700,
                      "src": "2179:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6704,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6695,
                      "src": "2183:6:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2179:10:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6717,
                  "initializationExpression": {
                    "assignments": [
                      6700
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6700,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2172:1:65",
                        "nodeType": "VariableDeclaration",
                        "scope": 6717,
                        "src": "2164:9:65",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6699,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2164:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6702,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2176:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2164:13:65"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 6707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2191:3:65",
                      "subExpression": {
                        "id": 6706,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6700,
                        "src": "2193:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6708,
                    "nodeType": "ExpressionStatement",
                    "src": "2191:3:65"
                  },
                  "nodeType": "ForStatement",
                  "src": "2159:60:65"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2293:32:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2295:28:65",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2312:4:65",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2306:5:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2306:11:65"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "2319:3:65"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2302:3:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2302:21:65"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2295:3:65"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6692,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2295:3:65",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6692,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2319:3:65",
                      "valueSize": 1
                    }
                  ],
                  "id": 6718,
                  "nodeType": "InlineAssembly",
                  "src": "2284:41:65"
                }
              ]
            },
            "functionSelector": "fb24c860",
            "id": 6720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMemoryCheck",
            "nameLocation": "1973:14:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1987:2:65"
            },
            "returnParameters": {
              "id": 6693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6692,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "2019:3:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6720,
                  "src": "2011:11:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2011:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2010:13:65"
            },
            "scope": 6845,
            "src": "1964:367:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6750,
              "nodeType": "Block",
              "src": "2397:307:65",
              "statements": [
                {
                  "assignments": [
                    6726
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6726,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2415:6:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 6750,
                      "src": "2407:14:65",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6725,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2407:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6728,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 6727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2424:2:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2407:19:65"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2501:22:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2503:18:65",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2516:4:65",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2510:5:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2510:11:65"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2503:3:65"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6723,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2503:3:65",
                      "valueSize": 1
                    }
                  ],
                  "id": 6729,
                  "nodeType": "InlineAssembly",
                  "src": "2492:31:65"
                },
                {
                  "body": {
                    "id": 6747,
                    "nodeType": "Block",
                    "src": "2569:23:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 6743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2584:1:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 6744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2587:1:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 6740,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17200,
                              "src": "2571:8:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 6742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17079,
                            "src": "2571:12:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2571:18:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6746,
                        "nodeType": "ExpressionStatement",
                        "src": "2571:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6734,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6731,
                      "src": "2552:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6735,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6726,
                      "src": "2556:6:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2552:10:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6748,
                  "initializationExpression": {
                    "assignments": [
                      6731
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6731,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2545:1:65",
                        "nodeType": "VariableDeclaration",
                        "scope": 6748,
                        "src": "2537:9:65",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6730,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2537:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6733,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2549:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2537:13:65"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 6738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2564:3:65",
                      "subExpression": {
                        "id": 6737,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6731,
                        "src": "2566:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6739,
                    "nodeType": "ExpressionStatement",
                    "src": "2564:3:65"
                  },
                  "nodeType": "ForStatement",
                  "src": "2532:60:65"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2666:32:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2668:28:65",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2685:4:65",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2679:5:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2679:11:65"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "2692:3:65"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2675:3:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2675:21:65"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2668:3:65"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6723,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2668:3:65",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6723,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2692:3:65",
                      "valueSize": 1
                    }
                  ],
                  "id": 6749,
                  "nodeType": "InlineAssembly",
                  "src": "2657:41:65"
                }
              ]
            },
            "functionSelector": "fb999ded",
            "id": 6751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subMemoryCheck",
            "nameLocation": "2346:14:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2360:2:65"
            },
            "returnParameters": {
              "id": 6724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6723,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "2392:3:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6751,
                  "src": "2384:11:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2384:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2383:13:65"
            },
            "scope": 6845,
            "src": "2337:367:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6781,
              "nodeType": "Block",
              "src": "2770:307:65",
              "statements": [
                {
                  "assignments": [
                    6757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6757,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2788:6:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 6781,
                      "src": "2780:14:65",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6756,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2780:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6759,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 6758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2797:2:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2780:19:65"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2874:22:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2876:18:65",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2889:4:65",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2883:5:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2883:11:65"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2876:3:65"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6754,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2876:3:65",
                      "valueSize": 1
                    }
                  ],
                  "id": 6760,
                  "nodeType": "InlineAssembly",
                  "src": "2865:31:65"
                },
                {
                  "body": {
                    "id": 6778,
                    "nodeType": "Block",
                    "src": "2942:23:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 6774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2957:1:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 6775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2960:1:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 6771,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17200,
                              "src": "2944:8:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 6773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17094,
                            "src": "2944:12:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2944:18:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6777,
                        "nodeType": "ExpressionStatement",
                        "src": "2944:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6765,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6762,
                      "src": "2925:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6766,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6757,
                      "src": "2929:6:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2925:10:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6779,
                  "initializationExpression": {
                    "assignments": [
                      6762
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6762,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2918:1:65",
                        "nodeType": "VariableDeclaration",
                        "scope": 6779,
                        "src": "2910:9:65",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6761,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2910:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6764,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2922:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2910:13:65"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 6769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2937:3:65",
                      "subExpression": {
                        "id": 6768,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6762,
                        "src": "2939:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6770,
                    "nodeType": "ExpressionStatement",
                    "src": "2937:3:65"
                  },
                  "nodeType": "ForStatement",
                  "src": "2905:60:65"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3039:32:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3041:28:65",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3058:4:65",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3052:5:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3052:11:65"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "3065:3:65"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "3048:3:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3048:21:65"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3041:3:65"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6754,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3041:3:65",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6754,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3065:3:65",
                      "valueSize": 1
                    }
                  ],
                  "id": 6780,
                  "nodeType": "InlineAssembly",
                  "src": "3030:41:65"
                }
              ]
            },
            "functionSelector": "7e86d25c",
            "id": 6782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mulMemoryCheck",
            "nameLocation": "2719:14:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2733:2:65"
            },
            "returnParameters": {
              "id": 6755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6754,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "2765:3:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6782,
                  "src": "2757:11:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2756:13:65"
            },
            "scope": 6845,
            "src": "2710:367:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6812,
              "nodeType": "Block",
              "src": "3143:307:65",
              "statements": [
                {
                  "assignments": [
                    6788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6788,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "3161:6:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 6812,
                      "src": "3153:14:65",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6787,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3153:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6790,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 6789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3170:2:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3153:19:65"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3247:22:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3249:18:65",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3262:4:65",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3256:5:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3256:11:65"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3249:3:65"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6785,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3249:3:65",
                      "valueSize": 1
                    }
                  ],
                  "id": 6791,
                  "nodeType": "InlineAssembly",
                  "src": "3238:31:65"
                },
                {
                  "body": {
                    "id": 6809,
                    "nodeType": "Block",
                    "src": "3315:23:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 6805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3330:1:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 6806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3333:1:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 6802,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17200,
                              "src": "3317:8:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 6804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17109,
                            "src": "3317:12:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3317:18:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6808,
                        "nodeType": "ExpressionStatement",
                        "src": "3317:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6796,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6793,
                      "src": "3298:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6797,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6788,
                      "src": "3302:6:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3298:10:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6810,
                  "initializationExpression": {
                    "assignments": [
                      6793
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6793,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3291:1:65",
                        "nodeType": "VariableDeclaration",
                        "scope": 6810,
                        "src": "3283:9:65",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6792,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3283:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6795,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3295:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3283:13:65"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 6800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3310:3:65",
                      "subExpression": {
                        "id": 6799,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6793,
                        "src": "3312:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6801,
                    "nodeType": "ExpressionStatement",
                    "src": "3310:3:65"
                  },
                  "nodeType": "ForStatement",
                  "src": "3278:60:65"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3412:32:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3414:28:65",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3431:4:65",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3425:5:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3425:11:65"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "3438:3:65"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "3421:3:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3421:21:65"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3414:3:65"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6785,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3414:3:65",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6785,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3438:3:65",
                      "valueSize": 1
                    }
                  ],
                  "id": 6811,
                  "nodeType": "InlineAssembly",
                  "src": "3403:41:65"
                }
              ]
            },
            "functionSelector": "c460ae04",
            "id": 6813,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divMemoryCheck",
            "nameLocation": "3092:14:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3106:2:65"
            },
            "returnParameters": {
              "id": 6786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6785,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "3138:3:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6813,
                  "src": "3130:11:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3130:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3129:13:65"
            },
            "scope": 6845,
            "src": "3083:367:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6843,
              "nodeType": "Block",
              "src": "3516:307:65",
              "statements": [
                {
                  "assignments": [
                    6819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6819,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "3534:6:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 6843,
                      "src": "3526:14:65",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6818,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3526:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6821,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 6820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3543:2:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3526:19:65"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3620:22:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3622:18:65",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3635:4:65",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3629:5:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3629:11:65"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3622:3:65"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6816,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3622:3:65",
                      "valueSize": 1
                    }
                  ],
                  "id": 6822,
                  "nodeType": "InlineAssembly",
                  "src": "3611:31:65"
                },
                {
                  "body": {
                    "id": 6840,
                    "nodeType": "Block",
                    "src": "3688:23:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 6836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3703:1:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 6837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3706:1:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 6833,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17200,
                              "src": "3690:8:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$17200_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 6835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17124,
                            "src": "3690:12:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3690:18:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6839,
                        "nodeType": "ExpressionStatement",
                        "src": "3690:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6827,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6824,
                      "src": "3671:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6828,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6819,
                      "src": "3675:6:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3671:10:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6841,
                  "initializationExpression": {
                    "assignments": [
                      6824
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6824,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3664:1:65",
                        "nodeType": "VariableDeclaration",
                        "scope": 6841,
                        "src": "3656:9:65",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6823,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3656:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6826,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3668:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3656:13:65"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 6831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3683:3:65",
                      "subExpression": {
                        "id": 6830,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6824,
                        "src": "3685:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6832,
                    "nodeType": "ExpressionStatement",
                    "src": "3683:3:65"
                  },
                  "nodeType": "ForStatement",
                  "src": "3651:60:65"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3785:32:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3787:28:65",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3804:4:65",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3798:5:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3798:11:65"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "3811:3:65"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "3794:3:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3794:21:65"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3787:3:65"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6816,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3787:3:65",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6816,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3811:3:65",
                      "valueSize": 1
                    }
                  ],
                  "id": 6842,
                  "nodeType": "InlineAssembly",
                  "src": "3776:41:65"
                }
              ]
            },
            "functionSelector": "6f91e802",
            "id": 6844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "modMemoryCheck",
            "nameLocation": "3465:14:65",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3479:2:65"
            },
            "returnParameters": {
              "id": 6817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6816,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "3511:3:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "3503:11:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3503:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3502:13:65"
            },
            "scope": 6845,
            "src": "3456:367:65",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6846,
        "src": "96:3730:65"
      }
    ],
    "src": "33:3794:65"
  },
  "bytecode": "608060405234801561001057600080fd5b50610852806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639f5cec89116100a2578063dcc721d211610071578063dcc721d21461021b578063fb1191981461022e578063fb24c86014610241578063fb999ded14610249578063fc0ce5031461025157610116565b80639f5cec89146101da578063a155bd62146101ed578063a29962b114610200578063c460ae041461021357610116565b80636f91e802116100e95780636f91e80214610191578063736ecb18146101995780637e86d25c146101ac578063869f602f146101b4578063884557bf146101c757610116565b80633449b5fb1461011b57806338dc0867146101415780636281efa41461016b5780636c7ac6371461017e575b600080fd5b61012e610129366004610637565b610264565b6040519081526020015b60405180910390f35b61015461014f366004610616565b610279565b604080519215158352602083019190915201610138565b610154610179366004610616565b610292565b61012e61018c366004610616565b61029f565b61012e6102b2565b6101546101a7366004610616565b6102e7565b61012e6102f4565b61012e6101c2366004610616565b610320565b6101546101d5366004610616565b61032c565b61012e6101e8366004610637565b610339565b61012e6101fb366004610637565b610346565b61015461020e366004610616565b610353565b61012e610360565b61012e610229366004610616565b61038c565b61012e61023c366004610616565b610398565b61012e6103a4565b61012e6103d0565b61012e61025f366004610616565b6103fc565b6000610271848484610408565b949350505050565b6000806102868484610459565b915091505b9250929050565b6000806102868484610497565b60006102ab83836104eb565b9392505050565b604051602060005b818110156102de576102cd6001806104f7565b506102d7816107ab565b90506102ba565b50506040510390565b6000806102868484610503565b604051602060005b818110156102de5761030f600180610541565b50610319816107ab565b90506102fc565b60006102ab83836104f7565b600080610286848461054d565b6000610271848484610568565b6000610271848484610594565b60008061028684846105dc565b604051602060005b818110156102de5761037b6001806105fe565b50610385816107ab565b9050610368565b60006102ab838361060a565b60006102ab8383610541565b604051602060005b818110156102de576103bf60018061060a565b506103c9816107ab565b90506103ac565b604051602060005b818110156102de576103eb6001806104eb565b506103f5816107ab565b90506103d8565b60006102ab83836105fe565b600081836104325760405162461bcd60e51b815260040161042991906106f6565b60405180910390fd5b5082848161045057634e487b7160e01b600052601260045260246000fd5b04949350505050565b6000808261046c5750600090508061028b565b600183858161048b57634e487b7160e01b600052601260045260246000fd5b06915091509250929050565b600080836104ab575060019050600061028b565b838302838582816104cc57634e487b7160e01b600052601260045260246000fd5b04146104df57600080925092505061028b565b60019590945092505050565b60006102ab8284610794565b60006102ab82846107c6565b600080826105165750600090508061028b565b600183858161053557634e487b7160e01b600052601260045260246000fd5b04915091509250929050565b60006102ab8284610775565b600080838301848110156104df57600080925092505061028b565b6000818484111561058c5760405162461bcd60e51b815260040161042991906106f6565b505050900390565b600081836105b55760405162461bcd60e51b815260040161042991906106f6565b508284816105d357634e487b7160e01b600052601260045260246000fd5b06949350505050565b600080838311156105f25750600090508061028b565b50600193919092039150565b60006102ab8284610761565b60006102ab8284610749565b60008060408385031215610628578182fd5b50508035926020909101359150565b60008060006060848603121561064b578081fd5b8335925060208401359150604084013567ffffffffffffffff80821115610670578283fd5b818601915086601f830112610683578283fd5b81358181111561069557610695610806565b604051601f8201601f19908116603f011681019083821181831017156106bd576106bd610806565b816040528281528960208487010111156106d5578586fd5b82602086016020830137856020848301015280955050505050509250925092565b6000602080835283518082850152825b8181101561072257858101830151858201604001528201610706565b818111156107335783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561075c5761075c6107da565b500190565b600082610770576107706107f0565b500490565b600081600019048311821515161561078f5761078f6107da565b500290565b6000828210156107a6576107a66107da565b500390565b60006000198214156107bf576107bf6107da565b5060010190565b6000826107d5576107d56107f0565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220cbe6d17acb851eb0ffd98767db975704848d26408c802c62d6cde696e9051a2564736f6c63430008030033",
  "bytecodeSha1": "b384cb1e9844a394eaeed28b19219271d9e243e1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "SafeMathMock",
  "coverageMap": {
    "branches": {
      "140": {
        "SafeMath.div": {
          "44": [
            5921,
            5926,
            true
          ]
        },
        "SafeMath.mod": {
          "51": [
            6767,
            6772,
            true
          ]
        },
        "SafeMath.sub": {
          "50": [
            5013,
            5019,
            true
          ]
        },
        "SafeMath.tryAdd": {
          "49": [
            702,
            707,
            false
          ]
        },
        "SafeMath.tryDiv": {
          "48": [
            2012,
            2018,
            false
          ]
        },
        "SafeMath.tryMod": {
          "45": [
            2361,
            2367,
            false
          ]
        },
        "SafeMath.tryMul": {
          "46": [
            1600,
            1606,
            false
          ],
          "47": [
            1673,
            1683,
            false
          ]
        },
        "SafeMath.trySub": {
          "52": [
            1033,
            1038,
            false
          ]
        }
      },
      "65": {}
    },
    "statements": {
      "140": {
        "SafeMath.add": {
          "43": [
            2749,
            2761
          ]
        },
        "SafeMath.div": {
          "23": [
            5913,
            5941
          ],
          "24": [
            5955,
            5967
          ],
          "42": [
            3844,
            3856
          ]
        },
        "SafeMath.mod": {
          "31": [
            4393,
            4405
          ],
          "38": [
            6759,
            6787
          ],
          "39": [
            6801,
            6813
          ]
        },
        "SafeMath.mul": {
          "34": [
            3459,
            3471
          ]
        },
        "SafeMath.sub": {
          "30": [
            3116,
            3128
          ],
          "36": [
            5005,
            5034
          ],
          "37": [
            5048,
            5060
          ]
        },
        "SafeMath.tryAdd": {
          "35": [
            709,
            726
          ]
        },
        "SafeMath.tryDiv": {
          "32": [
            2020,
            2037
          ],
          "33": [
            2051,
            2071
          ]
        },
        "SafeMath.tryMod": {
          "25": [
            2369,
            2386
          ],
          "26": [
            2400,
            2420
          ]
        },
        "SafeMath.tryMul": {
          "27": [
            1608,
            1624
          ],
          "28": [
            1685,
            1702
          ],
          "29": [
            1716,
            1732
          ]
        },
        "SafeMath.trySub": {
          "40": [
            1040,
            1057
          ],
          "41": [
            1071,
            1091
          ]
        }
      },
      "65": {
        "SafeMathMock.addMemoryCheck": {
          "18": [
            2198,
            2216
          ],
          "19": [
            2191,
            2194
          ]
        },
        "SafeMathMock.divMemoryCheck": {
          "14": [
            3317,
            3335
          ],
          "15": [
            3310,
            3313
          ]
        },
        "SafeMathMock.divWithMessage": {
          "0": [
            1746,
            1785
          ]
        },
        "SafeMathMock.doAdd": {
          "16": [
            968,
            993
          ]
        },
        "SafeMathMock.doDiv": {
          "22": [
            1313,
            1338
          ]
        },
        "SafeMathMock.doMod": {
          "9": [
            1428,
            1453
          ]
        },
        "SafeMathMock.doMul": {
          "17": [
            1198,
            1223
          ]
        },
        "SafeMathMock.doSub": {
          "3": [
            1083,
            1108
          ]
        },
        "SafeMathMock.modMemoryCheck": {
          "4": [
            3690,
            3708
          ],
          "5": [
            3683,
            3686
          ]
        },
        "SafeMathMock.modWithMessage": {
          "12": [
            1912,
            1951
          ]
        },
        "SafeMathMock.mulMemoryCheck": {
          "7": [
            2944,
            2962
          ],
          "8": [
            2937,
            2940
          ]
        },
        "SafeMathMock.subMemoryCheck": {
          "20": [
            2571,
            2589
          ],
          "21": [
            2564,
            2567
          ]
        },
        "SafeMathMock.subWithMessage": {
          "11": [
            1580,
            1619
          ]
        },
        "SafeMathMock.tryAdd": {
          "10": [
            219,
            247
          ]
        },
        "SafeMathMock.tryDiv": {
          "6": [
            627,
            655
          ]
        },
        "SafeMathMock.tryMod": {
          "1": [
            763,
            791
          ]
        },
        "SafeMathMock.tryMul": {
          "2": [
            491,
            519
          ]
        },
        "SafeMathMock.trySub": {
          "13": [
            355,
            383
          ]
        }
      }
    }
  },
  "dependencies": [
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c80639f5cec89116100a2578063dcc721d211610071578063dcc721d21461021b578063fb1191981461022e578063fb24c86014610241578063fb999ded14610249578063fc0ce5031461025157610116565b80639f5cec89146101da578063a155bd62146101ed578063a29962b114610200578063c460ae041461021357610116565b80636f91e802116100e95780636f91e80214610191578063736ecb18146101995780637e86d25c146101ac578063869f602f146101b4578063884557bf146101c757610116565b80633449b5fb1461011b57806338dc0867146101415780636281efa41461016b5780636c7ac6371461017e575b600080fd5b61012e610129366004610637565b610264565b6040519081526020015b60405180910390f35b61015461014f366004610616565b610279565b604080519215158352602083019190915201610138565b610154610179366004610616565b610292565b61012e61018c366004610616565b61029f565b61012e6102b2565b6101546101a7366004610616565b6102e7565b61012e6102f4565b61012e6101c2366004610616565b610320565b6101546101d5366004610616565b61032c565b61012e6101e8366004610637565b610339565b61012e6101fb366004610637565b610346565b61015461020e366004610616565b610353565b61012e610360565b61012e610229366004610616565b61038c565b61012e61023c366004610616565b610398565b61012e6103a4565b61012e6103d0565b61012e61025f366004610616565b6103fc565b6000610271848484610408565b949350505050565b6000806102868484610459565b915091505b9250929050565b6000806102868484610497565b60006102ab83836104eb565b9392505050565b604051602060005b818110156102de576102cd6001806104f7565b506102d7816107ab565b90506102ba565b50506040510390565b6000806102868484610503565b604051602060005b818110156102de5761030f600180610541565b50610319816107ab565b90506102fc565b60006102ab83836104f7565b600080610286848461054d565b6000610271848484610568565b6000610271848484610594565b60008061028684846105dc565b604051602060005b818110156102de5761037b6001806105fe565b50610385816107ab565b9050610368565b60006102ab838361060a565b60006102ab8383610541565b604051602060005b818110156102de576103bf60018061060a565b506103c9816107ab565b90506103ac565b604051602060005b818110156102de576103eb6001806104eb565b506103f5816107ab565b90506103d8565b60006102ab83836105fe565b600081836104325760405162461bcd60e51b815260040161042991906106f6565b60405180910390fd5b5082848161045057634e487b7160e01b600052601260045260246000fd5b04949350505050565b6000808261046c5750600090508061028b565b600183858161048b57634e487b7160e01b600052601260045260246000fd5b06915091509250929050565b600080836104ab575060019050600061028b565b838302838582816104cc57634e487b7160e01b600052601260045260246000fd5b04146104df57600080925092505061028b565b60019590945092505050565b60006102ab8284610794565b60006102ab82846107c6565b600080826105165750600090508061028b565b600183858161053557634e487b7160e01b600052601260045260246000fd5b04915091509250929050565b60006102ab8284610775565b600080838301848110156104df57600080925092505061028b565b6000818484111561058c5760405162461bcd60e51b815260040161042991906106f6565b505050900390565b600081836105b55760405162461bcd60e51b815260040161042991906106f6565b508284816105d357634e487b7160e01b600052601260045260246000fd5b06949350505050565b600080838311156105f25750600090508061028b565b50600193919092039150565b60006102ab8284610761565b60006102ab8284610749565b60008060408385031215610628578182fd5b50508035926020909101359150565b60008060006060848603121561064b578081fd5b8335925060208401359150604084013567ffffffffffffffff80821115610670578283fd5b818601915086601f830112610683578283fd5b81358181111561069557610695610806565b604051601f8201601f19908116603f011681019083821181831017156106bd576106bd610806565b816040528281528960208487010111156106d5578586fd5b82602086016020830137856020848301015280955050505050509250925092565b6000602080835283518082850152825b8181101561072257858101830151858201604001528201610706565b818111156107335783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561075c5761075c6107da565b500190565b600082610770576107706107f0565b500490565b600081600019048311821515161561078f5761078f6107da565b500290565b6000828210156107a6576107a66107da565b500390565b60006000198214156107bf576107bf6107da565b5060010190565b6000826107d5576107d56107f0565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220cbe6d17acb851eb0ffd98767db975704848d26408c802c62d6cde696e9051a2564736f6c63430008030033",
  "deployedSourceMap": "96:3730:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1632:160;;;;;;:::i;:::-;;:::i;:::-;;;2402:25:144;;;2390:2;2375:18;1632:160:65;;;;;;;;668:130;;;;;;:::i;:::-;;:::i;:::-;;;;1578:14:144;;1571:22;1553:41;;1625:2;1610:18;;1603:34;;;;1526:18;668:130:65;1508:135:144;396:130:65;;;;;;:::i;:::-;;:::i;1006:109::-;;;;;;:::i;:::-;;:::i;3456:367::-;;;:::i;532:130::-;;;;;;:::i;:::-;;:::i;2710:367::-;;;:::i;1351:109::-;;;;;;:::i;:::-;;:::i;124:130::-;;;;;;:::i;:::-;;:::i;1466:160::-;;;;;;:::i;:::-;;:::i;1798:::-;;;;;;:::i;:::-;;:::i;260:130::-;;;;;;:::i;:::-;;:::i;3083:367::-;;;:::i;891:109::-;;;;;;:::i;:::-;;:::i;1121:::-;;;;;;:::i;:::-;;:::i;1964:367::-;;;:::i;2337:::-;;;:::i;1236:109::-;;;;;;:::i;:::-;;:::i;1632:160::-;1727:7;1753:32;1766:1;1769;1772:12;1753;:32::i;:::-;1746:39;1632:160;-1:-1:-1;;;;1632:160:65:o;668:130::-;727:9;738:13;770:21;786:1;789;770:15;:21::i;:::-;763:28;;;;668:130;;;;;;:::o;396:::-;455:9;466:13;498:21;514:1;517;498:15;:21::i;1006:109::-;1064:7;1090:18;1103:1;1106;1090:12;:18::i;:::-;1083:25;1006:109;-1:-1:-1;;;1006:109:65:o;3456:367::-;3635:4;3629:11;3543:2;3503:11;3651:60;3675:6;3671:1;:10;3651:60;;;3690:18;3703:1;3706;3690:12;:18::i;:::-;-1:-1:-1;3683:3:65;;;:::i;:::-;;;3651:60;;;-1:-1:-1;;3804:4:65;3798:11;3794:21;;3785:32::o;532:130::-;591:9;602:13;634:21;650:1;653;634:15;:21::i;2710:367::-;2889:4;2883:11;2797:2;2757:11;2905:60;2929:6;2925:1;:10;2905:60;;;2944:18;2957:1;2960;2944:12;:18::i;:::-;-1:-1:-1;2937:3:65;;;:::i;:::-;;;2905:60;;1351:109;1409:7;1435:18;1448:1;1451;1435:12;:18::i;124:130::-;183:9;194:13;226:21;242:1;245;226:15;:21::i;1466:160::-;1561:7;1587:32;1600:1;1603;1606:12;1587;:32::i;1798:160::-;1893:7;1919:32;1932:1;1935;1938:12;1919;:32::i;260:130::-;319:9;330:13;362:21;378:1;381;362:15;:21::i;3083:367::-;3262:4;3256:11;3170:2;3130:11;3278:60;3302:6;3298:1;:10;3278:60;;;3317:18;3330:1;3333;3317:12;:18::i;:::-;-1:-1:-1;3310:3:65;;;:::i;:::-;;;3278:60;;891:109;949:7;975:18;988:1;991;975:12;:18::i;1121:109::-;1179:7;1205:18;1218:1;1221;1205:12;:18::i;1964:367::-;2143:4;2137:11;2051:2;2011:11;2159:60;2183:6;2179:1;:10;2159:60;;;2198:18;2211:1;2214;2198:12;:18::i;:::-;-1:-1:-1;2191:3:65;;;:::i;:::-;;;2159:60;;2337:367;2516:4;2510:11;2424:2;2384:11;2532:60;2556:6;2552:1;:10;2532:60;;;2571:18;2584:1;2587;2571:12;:18::i;:::-;-1:-1:-1;2564:3:65;;;:::i;:::-;;;2532:60;;1236:109;1294:7;1320:18;1333:1;1336;1320:12;:18::i;5784:200:140:-;5870:7;5928:12;5921:5;5913:28;;;;-1:-1:-1;;;5913:28:140;;;;;;;;:::i;:::-;;;;;;;;;;5966:1;5962;:5;;;-1:-1:-1;;;5962:5:140;;;;;;;;;;;5784:200;-1:-1:-1;;;;5784:200:140:o;2247:190::-;2308:4;;2361:6;2357:29;;-1:-1:-1;2377:5:140;;-1:-1:-1;2377:5:140;2369:17;;2357:29;2408:4;2418:1;2414;:5;;;-1:-1:-1;;;2414:5:140;;;;;;;;;;2400:20;;;;2247:190;;;;;:::o;1256:493::-;1317:4;;1600:6;1596:28;;-1:-1:-1;1616:4:140;;-1:-1:-1;1622:1:140;1608:16;;1596:28;1650:5;;;1654:1;1650;:5;:1;1673:5;;-1:-1:-1;;;1673:5:140;;;;;;;;;;:10;1669:33;;1693:5;1700:1;1685:17;;;;;;;1669:33;1724:4;;1730:1;;-1:-1:-1;1256:493:140;-1:-1:-1;;;1256:493:140:o;3039:96::-;3097:7;3123:5;3127:1;3123;:5;:::i;4316:96::-;4374:7;4400:5;4404:1;4400;:5;:::i;1898:190::-;1959:4;;2012:6;2008:29;;-1:-1:-1;2028:5:140;;-1:-1:-1;2028:5:140;2020:17;;2008:29;2059:4;2069:1;2065;:5;;;-1:-1:-1;;;2065:5:140;;;;;;;;;;2051:20;;;;1898:190;;;;;:::o;3382:96::-;3440:7;3466:5;3470:1;3466;:5;:::i;557:216::-;618:4;;679:5;;;702;;;698:28;;;717:5;724:1;709:17;;;;;;;4876:201;4962:7;5021:12;5013:6;;;;5005:29;;;;-1:-1:-1;;;5005:29:140;;;;;;;;:::i;:::-;-1:-1:-1;;;5055:5:140;;;4876:201::o;6630:200::-;6716:7;6774:12;6767:5;6759:28;;;;-1:-1:-1;;;6759:28:140;;;;;;;;:::i;:::-;;6812:1;6808;:5;;;-1:-1:-1;;;6808:5:140;;;;;;;;;;;6630:200;-1:-1:-1;;;;6630:200:140:o;919:189::-;980:4;986:7;1037:1;1033;:5;1029:28;;;-1:-1:-1;1048:5:140;;-1:-1:-1;1048:5:140;1040:17;;1029:28;-1:-1:-1;1079:4:140;;1085:5;;;;;-1:-1:-1;919:189:140:o;3767:96::-;3825:7;3851:5;3855:1;3851;:5;:::i;2672:96::-;2730:7;2756:5;2760:1;2756;:5;:::i;14:258:144:-;;;143:2;131:9;122:7;118:23;114:32;111:2;;;164:6;156;149:22;111:2;-1:-1:-1;;192:23:144;;;262:2;247:18;;;234:32;;-1:-1:-1;101:171:144:o;277:1103::-;;;;433:2;421:9;412:7;408:23;404:32;401:2;;;454:6;446;439:22;401:2;495:9;482:23;472:33;;552:2;541:9;537:18;524:32;514:42;;607:2;596:9;592:18;579:32;630:18;671:2;663:6;660:14;657:2;;;692:6;684;677:22;657:2;735:6;724:9;720:22;710:32;;780:7;773:4;769:2;765:13;761:27;751:2;;807:6;799;792:22;751:2;848;835:16;870:2;866;863:10;860:2;;;876:18;;:::i;:::-;951:2;945:9;919:2;1005:13;;-1:-1:-1;;1001:22:144;;;1025:2;997:31;993:40;981:53;;;1049:18;;;1069:22;;;1046:46;1043:2;;;1095:18;;:::i;:::-;1135:10;1131:2;1124:22;1170:2;1162:6;1155:18;1210:7;1205:2;1200;1196;1192:11;1188:20;1185:33;1182:2;;;1236:6;1228;1221:22;1182:2;1297;1292;1288;1284:11;1279:2;1271:6;1267:15;1254:46;1342:6;1337:2;1332;1324:6;1320:15;1316:24;1309:40;1368:6;1358:16;;;;;;;391:989;;;;;:::o;1648:603::-;;1789:2;1818;1807:9;1800:21;1850:6;1844:13;1893:6;1888:2;1877:9;1873:18;1866:34;1918:4;1931:140;1945:6;1942:1;1939:13;1931:140;;;2040:14;;;2036:23;;2030:30;2006:17;;;2025:2;2002:26;1995:66;1960:10;;1931:140;;;2089:6;2086:1;2083:13;2080:2;;;2159:4;2154:2;2145:6;2134:9;2130:22;2126:31;2119:45;2080:2;-1:-1:-1;2235:2:144;2214:15;-1:-1:-1;;2210:29:144;2195:45;;;;2242:2;2191:54;;1769:482;-1:-1:-1;;;1769:482:144:o;2438:128::-;;2509:1;2505:6;2502:1;2499:13;2496:2;;;2515:18;;:::i;:::-;-1:-1:-1;2551:9:144;;2486:80::o;2571:120::-;;2637:1;2627:2;;2642:18;;:::i;:::-;-1:-1:-1;2676:9:144;;2617:74::o;2696:168::-;;2802:1;2798;2794:6;2790:14;2787:1;2784:21;2779:1;2772:9;2765:17;2761:45;2758:2;;;2809:18;;:::i;:::-;-1:-1:-1;2849:9:144;;2748:116::o;2869:125::-;;2937:1;2934;2931:8;2928:2;;;2942:18;;:::i;:::-;-1:-1:-1;2979:9:144;;2918:76::o;2999:135::-;;-1:-1:-1;;3059:17:144;;3056:2;;;3079:18;;:::i;:::-;-1:-1:-1;3126:1:144;3115:13;;3046:88::o;3139:112::-;;3197:1;3187:2;;3202:18;;:::i;:::-;-1:-1:-1;3236:9:144;;3177:74::o;3256:127::-;3317:10;3312:3;3308:20;3305:1;3298:31;3348:4;3345:1;3338:15;3372:4;3369:1;3362:15;3388:127;3449:10;3444:3;3440:20;3437:1;3430:31;3480:4;3477:1;3470:15;3504:4;3501:1;3494:15;3520:127;3581:10;3576:3;3572:20;3569:1;3562:31;3612:4;3609:1;3602:15;3636:4;3633:1;3626:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    96,
    3826
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F5CEC89 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDCC721D2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDCC721D2 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xFB119198 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xFB24C860 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xFB999DED EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xFC0CE503 EQ PUSH2 0x251 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x9F5CEC89 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xA155BD62 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xA29962B1 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xC460AE04 EQ PUSH2 0x213 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6F91E802 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x6F91E802 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x736ECB18 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x7E86D25C EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x869F602F EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x884557BF EQ PUSH2 0x1C7 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x3449B5FB EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x38DC0867 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x6281EFA4 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x6C7AC637 EQ PUSH2 0x17E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x637 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x138 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0x12E PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x320 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x637 JUMP JUMPDEST PUSH2 0x339 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x637 JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x360 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x38C JUMP JUMPDEST PUSH2 0x12E PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x3D0 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271 DUP5 DUP5 DUP5 PUSH2 0x408 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x459 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x497 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x4EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x2CD PUSH1 0x1 DUP1 PUSH2 0x4F7 JUMP JUMPDEST POP PUSH2 0x2D7 DUP2 PUSH2 0x7AB JUMP JUMPDEST SWAP1 POP PUSH2 0x2BA JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x503 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x30F PUSH1 0x1 DUP1 PUSH2 0x541 JUMP JUMPDEST POP PUSH2 0x319 DUP2 PUSH2 0x7AB JUMP JUMPDEST SWAP1 POP PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x54D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271 DUP5 DUP5 DUP5 PUSH2 0x568 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271 DUP5 DUP5 DUP5 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x37B PUSH1 0x1 DUP1 PUSH2 0x5FE JUMP JUMPDEST POP PUSH2 0x385 DUP2 PUSH2 0x7AB JUMP JUMPDEST SWAP1 POP PUSH2 0x368 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x3BF PUSH1 0x1 DUP1 PUSH2 0x60A JUMP JUMPDEST POP PUSH2 0x3C9 DUP2 PUSH2 0x7AB JUMP JUMPDEST SWAP1 POP PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x3EB PUSH1 0x1 DUP1 PUSH2 0x4EB JUMP JUMPDEST POP PUSH2 0x3F5 DUP2 PUSH2 0x7AB JUMP JUMPDEST SWAP1 POP PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x450 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x46C JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x48B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MOD SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0x4AB JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x28B JUMP JUMPDEST DUP4 DUP4 MUL DUP4 DUP6 DUP3 DUP2 PUSH2 0x4CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV EQ PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x28B JUMP JUMPDEST PUSH1 0x1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x516 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x535 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x775 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 ADD DUP5 DUP2 LT ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x28B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x6F6 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x6F6 JUMP JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x5D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MOD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x5F2 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x28B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x628 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x64B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x670 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x683 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x695 JUMPI PUSH2 0x695 PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x6BD JUMPI PUSH2 0x6BD PUSH2 0x806 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x6D5 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP6 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x722 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x706 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x733 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x75C JUMPI PUSH2 0x75C PUSH2 0x7DA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x770 JUMPI PUSH2 0x770 PUSH2 0x7F0 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x78F JUMPI PUSH2 0x78F PUSH2 0x7DA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x7A6 JUMPI PUSH2 0x7A6 PUSH2 0x7DA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x7BF JUMPI PUSH2 0x7BF PUSH2 0x7DA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x7D5 JUMPI PUSH2 0x7D5 PUSH2 0x7F0 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xE6 0xD1 PUSH27 0xCB851EB0FFD98767DB975704848D26408C802C62D6CDE696E9051A 0x25 PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        96,
        3826
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "MSTORE",
      "path": "65"
    },
    "5": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "CALLVALUE",
      "path": "65"
    },
    "6": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "7": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "ISZERO",
      "path": "65"
    },
    "8": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "12": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "REVERT",
      "path": "65"
    },
    "16": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "17": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "POP",
      "path": "65"
    },
    "18": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "CALLDATASIZE",
      "path": "65"
    },
    "21": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "LT",
      "path": "65"
    },
    "22": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "26": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "CALLDATALOAD",
      "path": "65"
    },
    "29": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "SHR",
      "path": "65"
    },
    "32": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "33": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0x9F5CEC89"
    },
    "38": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "GT",
      "path": "65"
    },
    "39": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "43": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "44": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0xDCC721D2"
    },
    "49": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "GT",
      "path": "65"
    },
    "50": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "54": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "55": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0xDCC721D2"
    },
    "60": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "61": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x21B"
    },
    "64": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "65": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "66": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0xFB119198"
    },
    "71": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "72": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x22E"
    },
    "75": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "76": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "77": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0xFB24C860"
    },
    "82": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "83": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x241"
    },
    "86": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "87": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "88": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0xFB999DED"
    },
    "93": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "94": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x249"
    },
    "97": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "98": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "99": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0xFC0CE503"
    },
    "104": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "105": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x251"
    },
    "108": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "109": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x116"
    },
    "112": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMP",
      "path": "65"
    },
    "113": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "114": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "115": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0x9F5CEC89"
    },
    "120": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "121": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x1DA"
    },
    "124": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "125": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "126": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0xA155BD62"
    },
    "131": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "132": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x1ED"
    },
    "135": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "136": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "137": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0xA29962B1"
    },
    "142": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "143": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x200"
    },
    "146": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "147": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "148": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0xC460AE04"
    },
    "153": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "154": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x213"
    },
    "157": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "158": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x116"
    },
    "161": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMP",
      "path": "65"
    },
    "162": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "163": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "164": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0x6F91E802"
    },
    "169": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "GT",
      "path": "65"
    },
    "170": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "174": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "175": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0x6F91E802"
    },
    "180": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "181": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x191"
    },
    "184": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "185": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "186": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0x736ECB18"
    },
    "191": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "192": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x199"
    },
    "195": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "196": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "197": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0x7E86D25C"
    },
    "202": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "203": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x1AC"
    },
    "206": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "207": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "208": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0x869F602F"
    },
    "213": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "214": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x1B4"
    },
    "217": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "218": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "219": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0x884557BF"
    },
    "224": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "225": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x1C7"
    },
    "228": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "229": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x116"
    },
    "232": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMP",
      "path": "65"
    },
    "233": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "234": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "235": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0x3449B5FB"
    },
    "240": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "241": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "245": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "246": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0x38DC0867"
    },
    "251": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "252": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x141"
    },
    "255": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "256": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "257": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0x6281EFA4"
    },
    "262": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "263": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x16B"
    },
    "266": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "267": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "268": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH4",
      "path": "65",
      "value": "0x6C7AC637"
    },
    "273": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "EQ",
      "path": "65"
    },
    "274": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x17E"
    },
    "277": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "278": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "279": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "DUP1",
      "path": "65"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        96,
        3826
      ],
      "op": "REVERT",
      "path": "65"
    },
    "283": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "284": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x12E"
    },
    "287": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x129"
    },
    "290": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "CALLDATASIZE",
      "path": "65"
    },
    "291": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x4"
    },
    "293": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x637"
    },
    "296": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "i",
      "offset": [
        1632,
        1792
      ],
      "op": "JUMP",
      "path": "65"
    },
    "297": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "298": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x264"
    },
    "301": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "i",
      "offset": [
        1632,
        1792
      ],
      "op": "JUMP",
      "path": "65"
    },
    "302": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "303": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x40"
    },
    "305": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "MLOAD",
      "path": "65"
    },
    "306": {
      "op": "SWAP1"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "313": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x40"
    },
    "315": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "MLOAD",
      "path": "65"
    },
    "316": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "DUP1",
      "path": "65"
    },
    "317": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "SWAP2",
      "path": "65"
    },
    "318": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "SUB",
      "path": "65"
    },
    "319": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "SWAP1",
      "path": "65"
    },
    "320": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "RETURN",
      "path": "65"
    },
    "321": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "322": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x154"
    },
    "325": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x14F"
    },
    "328": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "CALLDATASIZE",
      "path": "65"
    },
    "329": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x4"
    },
    "331": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x616"
    },
    "334": {
      "fn": "SafeMathMock.tryMod",
      "jump": "i",
      "offset": [
        668,
        798
      ],
      "op": "JUMP",
      "path": "65"
    },
    "335": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "336": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x279"
    },
    "339": {
      "fn": "SafeMathMock.tryMod",
      "jump": "i",
      "offset": [
        668,
        798
      ],
      "op": "JUMP",
      "path": "65"
    },
    "340": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "341": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x40"
    },
    "343": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "DUP1",
      "path": "65"
    },
    "344": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "MLOAD",
      "path": "65"
    },
    "345": {
      "op": "SWAP3"
    },
    "346": {
      "op": "ISZERO"
    },
    "347": {
      "op": "ISZERO"
    },
    "348": {
      "op": "DUP4"
    },
    "349": {
      "op": "MSTORE"
    },
    "350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "352": {
      "op": "DUP4"
    },
    "353": {
      "op": "ADD"
    },
    "354": {
      "op": "SWAP2"
    },
    "355": {
      "op": "SWAP1"
    },
    "356": {
      "op": "SWAP2"
    },
    "357": {
      "op": "MSTORE"
    },
    "358": {
      "op": "ADD"
    },
    "359": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x138"
    },
    "362": {
      "op": "JUMP"
    },
    "363": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "364": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x154"
    },
    "367": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x179"
    },
    "370": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "CALLDATASIZE",
      "path": "65"
    },
    "371": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x4"
    },
    "373": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x616"
    },
    "376": {
      "fn": "SafeMathMock.tryMul",
      "jump": "i",
      "offset": [
        396,
        526
      ],
      "op": "JUMP",
      "path": "65"
    },
    "377": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "378": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x292"
    },
    "381": {
      "fn": "SafeMathMock.tryMul",
      "jump": "i",
      "offset": [
        396,
        526
      ],
      "op": "JUMP",
      "path": "65"
    },
    "382": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "383": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x12E"
    },
    "386": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x18C"
    },
    "389": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "CALLDATASIZE",
      "path": "65"
    },
    "390": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x4"
    },
    "392": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x616"
    },
    "395": {
      "fn": "SafeMathMock.doSub",
      "jump": "i",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMP",
      "path": "65"
    },
    "396": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "397": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x29F"
    },
    "400": {
      "fn": "SafeMathMock.doSub",
      "jump": "i",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMP",
      "path": "65"
    },
    "401": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3456,
        3823
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "402": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3456,
        3823
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x12E"
    },
    "405": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3456,
        3823
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x2B2"
    },
    "408": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "i",
      "offset": [
        3456,
        3823
      ],
      "op": "JUMP",
      "path": "65"
    },
    "409": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "410": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x154"
    },
    "413": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x1A7"
    },
    "416": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "CALLDATASIZE",
      "path": "65"
    },
    "417": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x4"
    },
    "419": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x616"
    },
    "422": {
      "fn": "SafeMathMock.tryDiv",
      "jump": "i",
      "offset": [
        532,
        662
      ],
      "op": "JUMP",
      "path": "65"
    },
    "423": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "424": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x2E7"
    },
    "427": {
      "fn": "SafeMathMock.tryDiv",
      "jump": "i",
      "offset": [
        532,
        662
      ],
      "op": "JUMP",
      "path": "65"
    },
    "428": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2710,
        3077
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "429": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2710,
        3077
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x12E"
    },
    "432": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2710,
        3077
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x2F4"
    },
    "435": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "jump": "i",
      "offset": [
        2710,
        3077
      ],
      "op": "JUMP",
      "path": "65"
    },
    "436": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "437": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x12E"
    },
    "440": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x1C2"
    },
    "443": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "CALLDATASIZE",
      "path": "65"
    },
    "444": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x4"
    },
    "446": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x616"
    },
    "449": {
      "fn": "SafeMathMock.doMod",
      "jump": "i",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMP",
      "path": "65"
    },
    "450": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "451": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x320"
    },
    "454": {
      "fn": "SafeMathMock.doMod",
      "jump": "i",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMP",
      "path": "65"
    },
    "455": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "456": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x154"
    },
    "459": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x1D5"
    },
    "462": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "CALLDATASIZE",
      "path": "65"
    },
    "463": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x4"
    },
    "465": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x616"
    },
    "468": {
      "fn": "SafeMathMock.tryAdd",
      "jump": "i",
      "offset": [
        124,
        254
      ],
      "op": "JUMP",
      "path": "65"
    },
    "469": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "470": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x32C"
    },
    "473": {
      "fn": "SafeMathMock.tryAdd",
      "jump": "i",
      "offset": [
        124,
        254
      ],
      "op": "JUMP",
      "path": "65"
    },
    "474": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1626
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "475": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1626
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x12E"
    },
    "478": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1626
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x1E8"
    },
    "481": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1626
      ],
      "op": "CALLDATASIZE",
      "path": "65"
    },
    "482": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1626
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x4"
    },
    "484": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1626
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x637"
    },
    "487": {
      "fn": "SafeMathMock.subWithMessage",
      "jump": "i",
      "offset": [
        1466,
        1626
      ],
      "op": "JUMP",
      "path": "65"
    },
    "488": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1626
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "489": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1626
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x339"
    },
    "492": {
      "fn": "SafeMathMock.subWithMessage",
      "jump": "i",
      "offset": [
        1466,
        1626
      ],
      "op": "JUMP",
      "path": "65"
    },
    "493": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1798,
        1958
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "494": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1798,
        1958
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x12E"
    },
    "497": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1798,
        1958
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x1FB"
    },
    "500": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1798,
        1958
      ],
      "op": "CALLDATASIZE",
      "path": "65"
    },
    "501": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1798,
        1958
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x4"
    },
    "503": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1798,
        1958
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x637"
    },
    "506": {
      "fn": "SafeMathMock.modWithMessage",
      "jump": "i",
      "offset": [
        1798,
        1958
      ],
      "op": "JUMP",
      "path": "65"
    },
    "507": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1798,
        1958
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "508": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1798,
        1958
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x346"
    },
    "511": {
      "fn": "SafeMathMock.modWithMessage",
      "jump": "i",
      "offset": [
        1798,
        1958
      ],
      "op": "JUMP",
      "path": "65"
    },
    "512": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "513": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x154"
    },
    "516": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x20E"
    },
    "519": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "CALLDATASIZE",
      "path": "65"
    },
    "520": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x4"
    },
    "522": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x616"
    },
    "525": {
      "fn": "SafeMathMock.trySub",
      "jump": "i",
      "offset": [
        260,
        390
      ],
      "op": "JUMP",
      "path": "65"
    },
    "526": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "527": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x353"
    },
    "530": {
      "fn": "SafeMathMock.trySub",
      "jump": "i",
      "offset": [
        260,
        390
      ],
      "op": "JUMP",
      "path": "65"
    },
    "531": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3083,
        3450
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "532": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3083,
        3450
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x12E"
    },
    "535": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3083,
        3450
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x360"
    },
    "538": {
      "fn": "SafeMathMock.divMemoryCheck",
      "jump": "i",
      "offset": [
        3083,
        3450
      ],
      "op": "JUMP",
      "path": "65"
    },
    "539": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "540": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x12E"
    },
    "543": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x229"
    },
    "546": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "CALLDATASIZE",
      "path": "65"
    },
    "547": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x4"
    },
    "549": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x616"
    },
    "552": {
      "fn": "SafeMathMock.doAdd",
      "jump": "i",
      "offset": [
        891,
        1000
      ],
      "op": "JUMP",
      "path": "65"
    },
    "553": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "554": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x38C"
    },
    "557": {
      "fn": "SafeMathMock.doAdd",
      "jump": "i",
      "offset": [
        891,
        1000
      ],
      "op": "JUMP",
      "path": "65"
    },
    "558": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "559": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x12E"
    },
    "562": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x23C"
    },
    "565": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "CALLDATASIZE",
      "path": "65"
    },
    "566": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x4"
    },
    "568": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x616"
    },
    "571": {
      "fn": "SafeMathMock.doMul",
      "jump": "i",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMP",
      "path": "65"
    },
    "572": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "573": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x398"
    },
    "576": {
      "fn": "SafeMathMock.doMul",
      "jump": "i",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMP",
      "path": "65"
    },
    "577": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        1964,
        2331
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "578": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        1964,
        2331
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x12E"
    },
    "581": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        1964,
        2331
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x3A4"
    },
    "584": {
      "fn": "SafeMathMock.addMemoryCheck",
      "jump": "i",
      "offset": [
        1964,
        2331
      ],
      "op": "JUMP",
      "path": "65"
    },
    "585": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2337,
        2704
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "586": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2337,
        2704
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x12E"
    },
    "589": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2337,
        2704
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x3D0"
    },
    "592": {
      "fn": "SafeMathMock.subMemoryCheck",
      "jump": "i",
      "offset": [
        2337,
        2704
      ],
      "op": "JUMP",
      "path": "65"
    },
    "593": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "594": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x12E"
    },
    "597": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x25F"
    },
    "600": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "CALLDATASIZE",
      "path": "65"
    },
    "601": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x4"
    },
    "603": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x616"
    },
    "606": {
      "fn": "SafeMathMock.doDiv",
      "jump": "i",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMP",
      "path": "65"
    },
    "607": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "608": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x3FC"
    },
    "611": {
      "fn": "SafeMathMock.doDiv",
      "jump": "i",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMP",
      "path": "65"
    },
    "612": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "613": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1727,
        1734
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "615": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1753,
        1785
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 0,
      "value": "0x271"
    },
    "618": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1766,
        1767
      ],
      "op": "DUP5",
      "path": "65"
    },
    "619": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1769,
        1770
      ],
      "op": "DUP5",
      "path": "65"
    },
    "620": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1772,
        1784
      ],
      "op": "DUP5",
      "path": "65"
    },
    "621": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1753,
        1765
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x408"
    },
    "624": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "i",
      "offset": [
        1753,
        1785
      ],
      "op": "JUMP",
      "path": "65"
    },
    "625": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1753,
        1785
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "626": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1746,
        1785
      ],
      "op": "SWAP5",
      "path": "65"
    },
    "627": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1632,
        1792
      ],
      "op": "SWAP4",
      "path": "65"
    },
    "628": {
      "op": "POP"
    },
    "629": {
      "op": "POP"
    },
    "630": {
      "op": "POP"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "o",
      "offset": [
        1632,
        1792
      ],
      "op": "JUMP",
      "path": "65"
    },
    "633": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "634": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        727,
        736
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "636": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        738,
        751
      ],
      "op": "DUP1",
      "path": "65"
    },
    "637": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        770,
        791
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 1,
      "value": "0x286"
    },
    "640": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        786,
        787
      ],
      "op": "DUP5",
      "path": "65"
    },
    "641": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        789,
        790
      ],
      "op": "DUP5",
      "path": "65"
    },
    "642": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        770,
        785
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x459"
    },
    "645": {
      "fn": "SafeMathMock.tryMod",
      "jump": "i",
      "offset": [
        770,
        791
      ],
      "op": "JUMP",
      "path": "65"
    },
    "646": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        770,
        791
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "647": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        763,
        791
      ],
      "op": "SWAP2",
      "path": "65"
    },
    "648": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        763,
        791
      ],
      "op": "POP",
      "path": "65"
    },
    "649": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        763,
        791
      ],
      "op": "SWAP2",
      "path": "65"
    },
    "650": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        763,
        791
      ],
      "op": "POP",
      "path": "65"
    },
    "651": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "652": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "SWAP3",
      "path": "65"
    },
    "653": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "POP",
      "path": "65"
    },
    "654": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "SWAP3",
      "path": "65"
    },
    "655": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "SWAP1",
      "path": "65"
    },
    "656": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "POP",
      "path": "65"
    },
    "657": {
      "fn": "SafeMathMock.tryMod",
      "jump": "o",
      "offset": [
        668,
        798
      ],
      "op": "JUMP",
      "path": "65"
    },
    "658": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "659": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        455,
        464
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "661": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        466,
        479
      ],
      "op": "DUP1",
      "path": "65"
    },
    "662": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        498,
        519
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 2,
      "value": "0x286"
    },
    "665": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        514,
        515
      ],
      "op": "DUP5",
      "path": "65"
    },
    "666": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        517,
        518
      ],
      "op": "DUP5",
      "path": "65"
    },
    "667": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        498,
        513
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x497"
    },
    "670": {
      "fn": "SafeMathMock.tryMul",
      "jump": "i",
      "offset": [
        498,
        519
      ],
      "op": "JUMP",
      "path": "65"
    },
    "671": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "672": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1064,
        1071
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "674": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1090,
        1108
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 3,
      "value": "0x2AB"
    },
    "677": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1103,
        1104
      ],
      "op": "DUP4",
      "path": "65"
    },
    "678": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1106,
        1107
      ],
      "op": "DUP4",
      "path": "65"
    },
    "679": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1090,
        1102
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x4EB"
    },
    "682": {
      "fn": "SafeMathMock.doSub",
      "jump": "i",
      "offset": [
        1090,
        1108
      ],
      "op": "JUMP",
      "path": "65"
    },
    "683": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1090,
        1108
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "684": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1083,
        1108
      ],
      "op": "SWAP4",
      "path": "65"
    },
    "685": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "SWAP3",
      "path": "65"
    },
    "686": {
      "op": "POP"
    },
    "687": {
      "op": "POP"
    },
    "688": {
      "op": "POP"
    },
    "689": {
      "fn": "SafeMathMock.doSub",
      "jump": "o",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMP",
      "path": "65"
    },
    "690": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3456,
        3823
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "691": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3635,
        3639
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x40"
    },
    "693": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3629,
        3640
      ],
      "op": "MLOAD",
      "path": "65"
    },
    "694": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3543,
        3545
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x20"
    },
    "696": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3503,
        3514
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "698": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3651,
        3711
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "699": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3675,
        3681
      ],
      "op": "DUP2",
      "path": "65"
    },
    "700": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3671,
        3672
      ],
      "op": "DUP2",
      "path": "65"
    },
    "701": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3671,
        3681
      ],
      "op": "LT",
      "path": "65"
    },
    "702": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3651,
        3711
      ],
      "op": "ISZERO",
      "path": "65"
    },
    "703": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3651,
        3711
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x2DE"
    },
    "706": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3651,
        3711
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "707": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3690,
        3708
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 4,
      "value": "0x2CD"
    },
    "710": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3703,
        3704
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x1"
    },
    "712": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3706,
        3707
      ],
      "op": "DUP1",
      "path": "65"
    },
    "713": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3690,
        3702
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x4F7"
    },
    "716": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "i",
      "offset": [
        3690,
        3708
      ],
      "op": "JUMP",
      "path": "65"
    },
    "717": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3690,
        3708
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "718": {
      "op": "POP"
    },
    "719": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3683,
        3686
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 5,
      "value": "0x2D7"
    },
    "722": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3683,
        3686
      ],
      "op": "DUP2",
      "path": "65"
    },
    "723": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3683,
        3686
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x7AB"
    },
    "726": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "i",
      "offset": [
        3683,
        3686
      ],
      "op": "JUMP",
      "path": "65"
    },
    "727": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3683,
        3686
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "728": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3683,
        3686
      ],
      "op": "SWAP1",
      "path": "65"
    },
    "729": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3683,
        3686
      ],
      "op": "POP",
      "path": "65"
    },
    "730": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3651,
        3711
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x2BA"
    },
    "733": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3651,
        3711
      ],
      "op": "JUMP",
      "path": "65"
    },
    "734": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3651,
        3711
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "735": {
      "op": "POP"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3804,
        3808
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x40"
    },
    "739": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3798,
        3809
      ],
      "op": "MLOAD",
      "path": "65"
    },
    "740": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3794,
        3815
      ],
      "op": "SUB",
      "path": "65"
    },
    "741": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3794,
        3815
      ],
      "op": "SWAP1",
      "path": "65"
    },
    "742": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "o",
      "offset": [
        3785,
        3817
      ],
      "op": "JUMP",
      "path": "65"
    },
    "743": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "744": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        591,
        600
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "746": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        602,
        615
      ],
      "op": "DUP1",
      "path": "65"
    },
    "747": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        634,
        655
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 6,
      "value": "0x286"
    },
    "750": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        650,
        651
      ],
      "op": "DUP5",
      "path": "65"
    },
    "751": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        653,
        654
      ],
      "op": "DUP5",
      "path": "65"
    },
    "752": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        634,
        649
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x503"
    },
    "755": {
      "fn": "SafeMathMock.tryDiv",
      "jump": "i",
      "offset": [
        634,
        655
      ],
      "op": "JUMP",
      "path": "65"
    },
    "756": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2710,
        3077
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "757": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2889,
        2893
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x40"
    },
    "759": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2883,
        2894
      ],
      "op": "MLOAD",
      "path": "65"
    },
    "760": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2797,
        2799
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x20"
    },
    "762": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2757,
        2768
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "764": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2905,
        2965
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "765": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2929,
        2935
      ],
      "op": "DUP2",
      "path": "65"
    },
    "766": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2925,
        2926
      ],
      "op": "DUP2",
      "path": "65"
    },
    "767": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2925,
        2935
      ],
      "op": "LT",
      "path": "65"
    },
    "768": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2905,
        2965
      ],
      "op": "ISZERO",
      "path": "65"
    },
    "769": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2905,
        2965
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x2DE"
    },
    "772": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2905,
        2965
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "773": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2944,
        2962
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 7,
      "value": "0x30F"
    },
    "776": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2957,
        2958
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x1"
    },
    "778": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2960,
        2961
      ],
      "op": "DUP1",
      "path": "65"
    },
    "779": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2944,
        2956
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x541"
    },
    "782": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "jump": "i",
      "offset": [
        2944,
        2962
      ],
      "op": "JUMP",
      "path": "65"
    },
    "783": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2944,
        2962
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "784": {
      "op": "POP"
    },
    "785": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2937,
        2940
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 8,
      "value": "0x319"
    },
    "788": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2937,
        2940
      ],
      "op": "DUP2",
      "path": "65"
    },
    "789": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2937,
        2940
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x7AB"
    },
    "792": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "jump": "i",
      "offset": [
        2937,
        2940
      ],
      "op": "JUMP",
      "path": "65"
    },
    "793": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2937,
        2940
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "794": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2937,
        2940
      ],
      "op": "SWAP1",
      "path": "65"
    },
    "795": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2937,
        2940
      ],
      "op": "POP",
      "path": "65"
    },
    "796": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2905,
        2965
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x2FC"
    },
    "799": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2905,
        2965
      ],
      "op": "JUMP",
      "path": "65"
    },
    "800": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "801": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1409,
        1416
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "803": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1435,
        1453
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 9,
      "value": "0x2AB"
    },
    "806": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1448,
        1449
      ],
      "op": "DUP4",
      "path": "65"
    },
    "807": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1451,
        1452
      ],
      "op": "DUP4",
      "path": "65"
    },
    "808": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1435,
        1447
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x4F7"
    },
    "811": {
      "fn": "SafeMathMock.doMod",
      "jump": "i",
      "offset": [
        1435,
        1453
      ],
      "op": "JUMP",
      "path": "65"
    },
    "812": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "813": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        183,
        192
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "815": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        194,
        207
      ],
      "op": "DUP1",
      "path": "65"
    },
    "816": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        226,
        247
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 10,
      "value": "0x286"
    },
    "819": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        242,
        243
      ],
      "op": "DUP5",
      "path": "65"
    },
    "820": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        245,
        246
      ],
      "op": "DUP5",
      "path": "65"
    },
    "821": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        226,
        241
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x54D"
    },
    "824": {
      "fn": "SafeMathMock.tryAdd",
      "jump": "i",
      "offset": [
        226,
        247
      ],
      "op": "JUMP",
      "path": "65"
    },
    "825": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1626
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "826": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1561,
        1568
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "828": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1587,
        1619
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 11,
      "value": "0x271"
    },
    "831": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1600,
        1601
      ],
      "op": "DUP5",
      "path": "65"
    },
    "832": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1603,
        1604
      ],
      "op": "DUP5",
      "path": "65"
    },
    "833": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1606,
        1618
      ],
      "op": "DUP5",
      "path": "65"
    },
    "834": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1587,
        1599
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x568"
    },
    "837": {
      "fn": "SafeMathMock.subWithMessage",
      "jump": "i",
      "offset": [
        1587,
        1619
      ],
      "op": "JUMP",
      "path": "65"
    },
    "838": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1798,
        1958
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "839": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1893,
        1900
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "841": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1919,
        1951
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 12,
      "value": "0x271"
    },
    "844": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1932,
        1933
      ],
      "op": "DUP5",
      "path": "65"
    },
    "845": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1935,
        1936
      ],
      "op": "DUP5",
      "path": "65"
    },
    "846": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1938,
        1950
      ],
      "op": "DUP5",
      "path": "65"
    },
    "847": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1919,
        1931
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x594"
    },
    "850": {
      "fn": "SafeMathMock.modWithMessage",
      "jump": "i",
      "offset": [
        1919,
        1951
      ],
      "op": "JUMP",
      "path": "65"
    },
    "851": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "852": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        319,
        328
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "854": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        330,
        343
      ],
      "op": "DUP1",
      "path": "65"
    },
    "855": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        362,
        383
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 13,
      "value": "0x286"
    },
    "858": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        378,
        379
      ],
      "op": "DUP5",
      "path": "65"
    },
    "859": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        381,
        382
      ],
      "op": "DUP5",
      "path": "65"
    },
    "860": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        362,
        377
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x5DC"
    },
    "863": {
      "fn": "SafeMathMock.trySub",
      "jump": "i",
      "offset": [
        362,
        383
      ],
      "op": "JUMP",
      "path": "65"
    },
    "864": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3083,
        3450
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "865": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3262,
        3266
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x40"
    },
    "867": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3256,
        3267
      ],
      "op": "MLOAD",
      "path": "65"
    },
    "868": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3170,
        3172
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x20"
    },
    "870": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3130,
        3141
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "872": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3278,
        3338
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "873": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3302,
        3308
      ],
      "op": "DUP2",
      "path": "65"
    },
    "874": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3298,
        3299
      ],
      "op": "DUP2",
      "path": "65"
    },
    "875": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3298,
        3308
      ],
      "op": "LT",
      "path": "65"
    },
    "876": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3278,
        3338
      ],
      "op": "ISZERO",
      "path": "65"
    },
    "877": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3278,
        3338
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x2DE"
    },
    "880": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3278,
        3338
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "881": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3317,
        3335
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 14,
      "value": "0x37B"
    },
    "884": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3330,
        3331
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x1"
    },
    "886": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3333,
        3334
      ],
      "op": "DUP1",
      "path": "65"
    },
    "887": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3317,
        3329
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x5FE"
    },
    "890": {
      "fn": "SafeMathMock.divMemoryCheck",
      "jump": "i",
      "offset": [
        3317,
        3335
      ],
      "op": "JUMP",
      "path": "65"
    },
    "891": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3317,
        3335
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "892": {
      "op": "POP"
    },
    "893": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3310,
        3313
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 15,
      "value": "0x385"
    },
    "896": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3310,
        3313
      ],
      "op": "DUP2",
      "path": "65"
    },
    "897": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3310,
        3313
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x7AB"
    },
    "900": {
      "fn": "SafeMathMock.divMemoryCheck",
      "jump": "i",
      "offset": [
        3310,
        3313
      ],
      "op": "JUMP",
      "path": "65"
    },
    "901": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3310,
        3313
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "902": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3310,
        3313
      ],
      "op": "SWAP1",
      "path": "65"
    },
    "903": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3310,
        3313
      ],
      "op": "POP",
      "path": "65"
    },
    "904": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3278,
        3338
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x368"
    },
    "907": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3278,
        3338
      ],
      "op": "JUMP",
      "path": "65"
    },
    "908": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "909": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        949,
        956
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "911": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        975,
        993
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 16,
      "value": "0x2AB"
    },
    "914": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        988,
        989
      ],
      "op": "DUP4",
      "path": "65"
    },
    "915": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        991,
        992
      ],
      "op": "DUP4",
      "path": "65"
    },
    "916": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        975,
        987
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x60A"
    },
    "919": {
      "fn": "SafeMathMock.doAdd",
      "jump": "i",
      "offset": [
        975,
        993
      ],
      "op": "JUMP",
      "path": "65"
    },
    "920": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "921": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1179,
        1186
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "923": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1205,
        1223
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 17,
      "value": "0x2AB"
    },
    "926": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1218,
        1219
      ],
      "op": "DUP4",
      "path": "65"
    },
    "927": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1221,
        1222
      ],
      "op": "DUP4",
      "path": "65"
    },
    "928": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1205,
        1217
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x541"
    },
    "931": {
      "fn": "SafeMathMock.doMul",
      "jump": "i",
      "offset": [
        1205,
        1223
      ],
      "op": "JUMP",
      "path": "65"
    },
    "932": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        1964,
        2331
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "933": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2143,
        2147
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x40"
    },
    "935": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2137,
        2148
      ],
      "op": "MLOAD",
      "path": "65"
    },
    "936": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2051,
        2053
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x20"
    },
    "938": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2011,
        2022
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "940": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2159,
        2219
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "941": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2183,
        2189
      ],
      "op": "DUP2",
      "path": "65"
    },
    "942": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2179,
        2180
      ],
      "op": "DUP2",
      "path": "65"
    },
    "943": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2179,
        2189
      ],
      "op": "LT",
      "path": "65"
    },
    "944": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2159,
        2219
      ],
      "op": "ISZERO",
      "path": "65"
    },
    "945": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2159,
        2219
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x2DE"
    },
    "948": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2159,
        2219
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "949": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2198,
        2216
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 18,
      "value": "0x3BF"
    },
    "952": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2211,
        2212
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x1"
    },
    "954": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2214,
        2215
      ],
      "op": "DUP1",
      "path": "65"
    },
    "955": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2198,
        2210
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x60A"
    },
    "958": {
      "fn": "SafeMathMock.addMemoryCheck",
      "jump": "i",
      "offset": [
        2198,
        2216
      ],
      "op": "JUMP",
      "path": "65"
    },
    "959": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2198,
        2216
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "960": {
      "op": "POP"
    },
    "961": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2191,
        2194
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 19,
      "value": "0x3C9"
    },
    "964": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2191,
        2194
      ],
      "op": "DUP2",
      "path": "65"
    },
    "965": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2191,
        2194
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x7AB"
    },
    "968": {
      "fn": "SafeMathMock.addMemoryCheck",
      "jump": "i",
      "offset": [
        2191,
        2194
      ],
      "op": "JUMP",
      "path": "65"
    },
    "969": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2191,
        2194
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "970": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2191,
        2194
      ],
      "op": "SWAP1",
      "path": "65"
    },
    "971": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2191,
        2194
      ],
      "op": "POP",
      "path": "65"
    },
    "972": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2159,
        2219
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x3AC"
    },
    "975": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2159,
        2219
      ],
      "op": "JUMP",
      "path": "65"
    },
    "976": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2337,
        2704
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "977": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2516,
        2520
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x40"
    },
    "979": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2510,
        2521
      ],
      "op": "MLOAD",
      "path": "65"
    },
    "980": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2424,
        2426
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x20"
    },
    "982": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2384,
        2395
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "984": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2532,
        2592
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "985": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2556,
        2562
      ],
      "op": "DUP2",
      "path": "65"
    },
    "986": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2552,
        2553
      ],
      "op": "DUP2",
      "path": "65"
    },
    "987": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2552,
        2562
      ],
      "op": "LT",
      "path": "65"
    },
    "988": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2532,
        2592
      ],
      "op": "ISZERO",
      "path": "65"
    },
    "989": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2532,
        2592
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x2DE"
    },
    "992": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2532,
        2592
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "993": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2571,
        2589
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 20,
      "value": "0x3EB"
    },
    "996": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2584,
        2585
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x1"
    },
    "998": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2587,
        2588
      ],
      "op": "DUP1",
      "path": "65"
    },
    "999": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2571,
        2583
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x4EB"
    },
    "1002": {
      "fn": "SafeMathMock.subMemoryCheck",
      "jump": "i",
      "offset": [
        2571,
        2589
      ],
      "op": "JUMP",
      "path": "65"
    },
    "1003": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2571,
        2589
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2564,
        2567
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 21,
      "value": "0x3F5"
    },
    "1008": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2564,
        2567
      ],
      "op": "DUP2",
      "path": "65"
    },
    "1009": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2564,
        2567
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x7AB"
    },
    "1012": {
      "fn": "SafeMathMock.subMemoryCheck",
      "jump": "i",
      "offset": [
        2564,
        2567
      ],
      "op": "JUMP",
      "path": "65"
    },
    "1013": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2564,
        2567
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "1014": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2564,
        2567
      ],
      "op": "SWAP1",
      "path": "65"
    },
    "1015": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2564,
        2567
      ],
      "op": "POP",
      "path": "65"
    },
    "1016": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2532,
        2592
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x3D8"
    },
    "1019": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2532,
        2592
      ],
      "op": "JUMP",
      "path": "65"
    },
    "1020": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "1021": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1294,
        1301
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "1023": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1320,
        1338
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 22,
      "value": "0x2AB"
    },
    "1026": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1333,
        1334
      ],
      "op": "DUP4",
      "path": "65"
    },
    "1027": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1336,
        1337
      ],
      "op": "DUP4",
      "path": "65"
    },
    "1028": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1320,
        1332
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x5FE"
    },
    "1031": {
      "fn": "SafeMathMock.doDiv",
      "jump": "i",
      "offset": [
        1320,
        1338
      ],
      "op": "JUMP",
      "path": "65"
    },
    "1032": {
      "fn": "SafeMath.div",
      "offset": [
        5784,
        5984
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1033": {
      "fn": "SafeMath.div",
      "offset": [
        5870,
        5877
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1035": {
      "fn": "SafeMath.div",
      "offset": [
        5928,
        5940
      ],
      "op": "DUP2",
      "path": "140",
      "statement": 23
    },
    "1036": {
      "branch": 44,
      "fn": "SafeMath.div",
      "offset": [
        5921,
        5926
      ],
      "op": "DUP4",
      "path": "140"
    },
    "1037": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x432"
    },
    "1040": {
      "branch": 44,
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "1041": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x40"
    },
    "1043": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "MLOAD",
      "path": "140"
    },
    "1044": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "DUP2",
      "path": "140"
    },
    "1052": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "1053": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x4"
    },
    "1055": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "ADD",
      "path": "140"
    },
    "1056": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x429"
    },
    "1059": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "SWAP2",
      "path": "140"
    },
    "1060": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "1061": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x6F6"
    },
    "1064": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        5913,
        5941
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1065": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1066": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x40"
    },
    "1068": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "MLOAD",
      "path": "140"
    },
    "1069": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "DUP1",
      "path": "140"
    },
    "1070": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "SWAP2",
      "path": "140"
    },
    "1071": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "SUB",
      "path": "140"
    },
    "1072": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "1073": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "140"
    },
    "1074": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1075": {
      "fn": "SafeMath.div",
      "offset": [
        5913,
        5941
      ],
      "op": "POP",
      "path": "140"
    },
    "1076": {
      "fn": "SafeMath.div",
      "offset": [
        5966,
        5967
      ],
      "op": "DUP3",
      "path": "140",
      "statement": 24
    },
    "1077": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5963
      ],
      "op": "DUP5",
      "path": "140"
    },
    "1078": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5967
      ],
      "op": "DUP2",
      "path": "140"
    },
    "1079": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5967
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x450"
    },
    "1082": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5967
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "1083": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1090": {
      "op": "SHL"
    },
    "1091": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5967
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1093": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5967
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "1094": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5967
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x12"
    },
    "1096": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5967
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x4"
    },
    "1098": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5967
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "1099": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5967
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x24"
    },
    "1101": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5967
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1103": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5967
      ],
      "op": "REVERT",
      "path": "140"
    },
    "1104": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5967
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1105": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5967
      ],
      "op": "DIV",
      "path": "140"
    },
    "1106": {
      "fn": "SafeMath.div",
      "offset": [
        5962,
        5967
      ],
      "op": "SWAP5",
      "path": "140"
    },
    "1107": {
      "fn": "SafeMath.div",
      "offset": [
        5784,
        5984
      ],
      "op": "SWAP4",
      "path": "140"
    },
    "1108": {
      "op": "POP"
    },
    "1109": {
      "op": "POP"
    },
    "1110": {
      "op": "POP"
    },
    "1111": {
      "op": "POP"
    },
    "1112": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        5784,
        5984
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1113": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2247,
        2437
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1114": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2308,
        2312
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1116": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2308,
        2312
      ],
      "op": "DUP1",
      "path": "140"
    },
    "1117": {
      "branch": 45,
      "fn": "SafeMath.tryMod",
      "offset": [
        2361,
        2367
      ],
      "op": "DUP3",
      "path": "140"
    },
    "1118": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2357,
        2386
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x46C"
    },
    "1121": {
      "branch": 45,
      "fn": "SafeMath.tryMod",
      "offset": [
        2357,
        2386
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "1122": {
      "op": "POP"
    },
    "1123": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2377,
        2382
      ],
      "op": "PUSH1",
      "path": "140",
      "statement": 25,
      "value": "0x0"
    },
    "1125": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2377,
        2382
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "1126": {
      "op": "POP"
    },
    "1127": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2377,
        2382
      ],
      "op": "DUP1",
      "path": "140"
    },
    "1128": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2369,
        2386
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x28B"
    },
    "1131": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2369,
        2386
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1132": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2357,
        2386
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1133": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2408,
        2412
      ],
      "op": "PUSH1",
      "path": "140",
      "statement": 26,
      "value": "0x1"
    },
    "1135": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2418,
        2419
      ],
      "op": "DUP4",
      "path": "140"
    },
    "1136": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2415
      ],
      "op": "DUP6",
      "path": "140"
    },
    "1137": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "DUP2",
      "path": "140"
    },
    "1138": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x48B"
    },
    "1141": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "1142": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1149": {
      "op": "SHL"
    },
    "1150": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1152": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "1153": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x12"
    },
    "1155": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x4"
    },
    "1157": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "1158": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x24"
    },
    "1160": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1162": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "REVERT",
      "path": "140"
    },
    "1163": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1164": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "MOD",
      "path": "140"
    },
    "1165": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2400,
        2420
      ],
      "op": "SWAP2",
      "path": "140"
    },
    "1166": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2400,
        2420
      ],
      "op": "POP",
      "path": "140"
    },
    "1167": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2400,
        2420
      ],
      "op": "SWAP2",
      "path": "140"
    },
    "1168": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2400,
        2420
      ],
      "op": "POP",
      "path": "140"
    },
    "1169": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2247,
        2437
      ],
      "op": "SWAP3",
      "path": "140"
    },
    "1170": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2247,
        2437
      ],
      "op": "POP",
      "path": "140"
    },
    "1171": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2247,
        2437
      ],
      "op": "SWAP3",
      "path": "140"
    },
    "1172": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2247,
        2437
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "1173": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2247,
        2437
      ],
      "op": "POP",
      "path": "140"
    },
    "1174": {
      "fn": "SafeMath.tryMod",
      "jump": "o",
      "offset": [
        2247,
        2437
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1175": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1256,
        1749
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1176": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1317,
        1321
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1178": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1317,
        1321
      ],
      "op": "DUP1",
      "path": "140"
    },
    "1179": {
      "branch": 46,
      "fn": "SafeMath.tryMul",
      "offset": [
        1600,
        1606
      ],
      "op": "DUP4",
      "path": "140"
    },
    "1180": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1596,
        1624
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x4AB"
    },
    "1183": {
      "branch": 46,
      "fn": "SafeMath.tryMul",
      "offset": [
        1596,
        1624
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "1184": {
      "op": "POP"
    },
    "1185": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1616,
        1620
      ],
      "op": "PUSH1",
      "path": "140",
      "statement": 27,
      "value": "0x1"
    },
    "1187": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1616,
        1620
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "1188": {
      "op": "POP"
    },
    "1189": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1622,
        1623
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1191": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1608,
        1624
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x28B"
    },
    "1194": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1608,
        1624
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1195": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1596,
        1624
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1196": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1650,
        1655
      ],
      "op": "DUP4",
      "path": "140"
    },
    "1197": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1650,
        1655
      ],
      "op": "DUP4",
      "path": "140"
    },
    "1198": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1650,
        1655
      ],
      "op": "MUL",
      "path": "140"
    },
    "1199": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1654,
        1655
      ],
      "op": "DUP4",
      "path": "140"
    },
    "1200": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1650,
        1651
      ],
      "op": "DUP6",
      "path": "140"
    },
    "1201": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1650,
        1655
      ],
      "op": "DUP3",
      "path": "140"
    },
    "1202": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1650,
        1651
      ],
      "op": "DUP2",
      "path": "140"
    },
    "1203": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x4CC"
    },
    "1206": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "1207": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1214": {
      "op": "SHL"
    },
    "1215": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1217": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "1218": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x12"
    },
    "1220": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x4"
    },
    "1222": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "1223": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x24"
    },
    "1225": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1227": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "REVERT",
      "path": "140"
    },
    "1228": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1229": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "DIV",
      "path": "140"
    },
    "1230": {
      "branch": 47,
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1683
      ],
      "op": "EQ",
      "path": "140"
    },
    "1231": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1669,
        1702
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x4DF"
    },
    "1234": {
      "branch": 47,
      "fn": "SafeMath.tryMul",
      "offset": [
        1669,
        1702
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "1235": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1693,
        1698
      ],
      "op": "PUSH1",
      "path": "140",
      "statement": 28,
      "value": "0x0"
    },
    "1237": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1700,
        1701
      ],
      "op": "DUP1",
      "path": "140"
    },
    "1238": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1702
      ],
      "op": "SWAP3",
      "path": "140"
    },
    "1239": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1702
      ],
      "op": "POP",
      "path": "140"
    },
    "1240": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1702
      ],
      "op": "SWAP3",
      "path": "140"
    },
    "1241": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1702
      ],
      "op": "POP",
      "path": "140"
    },
    "1242": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1702
      ],
      "op": "POP",
      "path": "140"
    },
    "1243": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1702
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x28B"
    },
    "1246": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1702
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1247": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1669,
        1702
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1248": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1724,
        1728
      ],
      "op": "PUSH1",
      "path": "140",
      "statement": 29,
      "value": "0x1"
    },
    "1250": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1724,
        1728
      ],
      "op": "SWAP6",
      "path": "140"
    },
    "1251": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1730,
        1731
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "1252": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1730,
        1731
      ],
      "op": "SWAP5",
      "path": "140"
    },
    "1253": {
      "op": "POP"
    },
    "1254": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1256,
        1749
      ],
      "op": "SWAP3",
      "path": "140"
    },
    "1255": {
      "op": "POP"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "op": "POP"
    },
    "1258": {
      "fn": "SafeMath.tryMul",
      "jump": "o",
      "offset": [
        1256,
        1749
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1259": {
      "fn": "SafeMath.sub",
      "offset": [
        3039,
        3135
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1260": {
      "fn": "SafeMath.sub",
      "offset": [
        3097,
        3104
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1262": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH2",
      "path": "140",
      "statement": 30,
      "value": "0x2AB"
    },
    "1265": {
      "fn": "SafeMath.sub",
      "offset": [
        3127,
        3128
      ],
      "op": "DUP3",
      "path": "140"
    },
    "1266": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3124
      ],
      "op": "DUP5",
      "path": "140"
    },
    "1267": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x794"
    },
    "1270": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3123,
        3128
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1271": {
      "fn": "SafeMath.mod",
      "offset": [
        4316,
        4412
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1272": {
      "fn": "SafeMath.mod",
      "offset": [
        4374,
        4381
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1274": {
      "fn": "SafeMath.mod",
      "offset": [
        4400,
        4405
      ],
      "op": "PUSH2",
      "path": "140",
      "statement": 31,
      "value": "0x2AB"
    },
    "1277": {
      "fn": "SafeMath.mod",
      "offset": [
        4404,
        4405
      ],
      "op": "DUP3",
      "path": "140"
    },
    "1278": {
      "fn": "SafeMath.mod",
      "offset": [
        4400,
        4401
      ],
      "op": "DUP5",
      "path": "140"
    },
    "1279": {
      "fn": "SafeMath.mod",
      "offset": [
        4400,
        4405
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x7C6"
    },
    "1282": {
      "fn": "SafeMath.mod",
      "jump": "i",
      "offset": [
        4400,
        4405
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1283": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1898,
        2088
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1284": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1959,
        1963
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1286": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1959,
        1963
      ],
      "op": "DUP1",
      "path": "140"
    },
    "1287": {
      "branch": 48,
      "fn": "SafeMath.tryDiv",
      "offset": [
        2012,
        2018
      ],
      "op": "DUP3",
      "path": "140"
    },
    "1288": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2008,
        2037
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x516"
    },
    "1291": {
      "branch": 48,
      "fn": "SafeMath.tryDiv",
      "offset": [
        2008,
        2037
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "1292": {
      "op": "POP"
    },
    "1293": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2028,
        2033
      ],
      "op": "PUSH1",
      "path": "140",
      "statement": 32,
      "value": "0x0"
    },
    "1295": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2028,
        2033
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "1296": {
      "op": "POP"
    },
    "1297": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2028,
        2033
      ],
      "op": "DUP1",
      "path": "140"
    },
    "1298": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2020,
        2037
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x28B"
    },
    "1301": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2020,
        2037
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1302": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2008,
        2037
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1303": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2059,
        2063
      ],
      "op": "PUSH1",
      "path": "140",
      "statement": 33,
      "value": "0x1"
    },
    "1305": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2069,
        2070
      ],
      "op": "DUP4",
      "path": "140"
    },
    "1306": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2066
      ],
      "op": "DUP6",
      "path": "140"
    },
    "1307": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "DUP2",
      "path": "140"
    },
    "1308": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x535"
    },
    "1311": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "1312": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1319": {
      "op": "SHL"
    },
    "1320": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1322": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "1323": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x12"
    },
    "1325": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x4"
    },
    "1327": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "1328": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x24"
    },
    "1330": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1332": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "REVERT",
      "path": "140"
    },
    "1333": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1334": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "DIV",
      "path": "140"
    },
    "1335": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2051,
        2071
      ],
      "op": "SWAP2",
      "path": "140"
    },
    "1336": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2051,
        2071
      ],
      "op": "POP",
      "path": "140"
    },
    "1337": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2051,
        2071
      ],
      "op": "SWAP2",
      "path": "140"
    },
    "1338": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2051,
        2071
      ],
      "op": "POP",
      "path": "140"
    },
    "1339": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1898,
        2088
      ],
      "op": "SWAP3",
      "path": "140"
    },
    "1340": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1898,
        2088
      ],
      "op": "POP",
      "path": "140"
    },
    "1341": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1898,
        2088
      ],
      "op": "SWAP3",
      "path": "140"
    },
    "1342": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1898,
        2088
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "1343": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1898,
        2088
      ],
      "op": "POP",
      "path": "140"
    },
    "1344": {
      "fn": "SafeMath.tryDiv",
      "jump": "o",
      "offset": [
        1898,
        2088
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1345": {
      "fn": "SafeMath.mul",
      "offset": [
        3382,
        3478
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1346": {
      "fn": "SafeMath.mul",
      "offset": [
        3440,
        3447
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1348": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH2",
      "path": "140",
      "statement": 34,
      "value": "0x2AB"
    },
    "1351": {
      "fn": "SafeMath.mul",
      "offset": [
        3470,
        3471
      ],
      "op": "DUP3",
      "path": "140"
    },
    "1352": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3467
      ],
      "op": "DUP5",
      "path": "140"
    },
    "1353": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x775"
    },
    "1356": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3466,
        3471
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1357": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        557,
        773
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1358": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        618,
        622
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1360": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        618,
        622
      ],
      "op": "DUP1",
      "path": "140"
    },
    "1361": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        679,
        684
      ],
      "op": "DUP4",
      "path": "140"
    },
    "1362": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        679,
        684
      ],
      "op": "DUP4",
      "path": "140"
    },
    "1363": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        679,
        684
      ],
      "op": "ADD",
      "path": "140"
    },
    "1364": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        702,
        707
      ],
      "op": "DUP5",
      "path": "140"
    },
    "1365": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        702,
        707
      ],
      "op": "DUP2",
      "path": "140"
    },
    "1366": {
      "branch": 49,
      "fn": "SafeMath.tryAdd",
      "offset": [
        702,
        707
      ],
      "op": "LT",
      "path": "140"
    },
    "1367": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        698,
        726
      ],
      "op": "ISZERO",
      "path": "140"
    },
    "1368": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        698,
        726
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x4DF"
    },
    "1371": {
      "branch": 49,
      "fn": "SafeMath.tryAdd",
      "offset": [
        698,
        726
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "1372": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        717,
        722
      ],
      "op": "PUSH1",
      "path": "140",
      "statement": 35,
      "value": "0x0"
    },
    "1374": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        724,
        725
      ],
      "op": "DUP1",
      "path": "140"
    },
    "1375": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        709,
        726
      ],
      "op": "SWAP3",
      "path": "140"
    },
    "1376": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        709,
        726
      ],
      "op": "POP",
      "path": "140"
    },
    "1377": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        709,
        726
      ],
      "op": "SWAP3",
      "path": "140"
    },
    "1378": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        709,
        726
      ],
      "op": "POP",
      "path": "140"
    },
    "1379": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        709,
        726
      ],
      "op": "POP",
      "path": "140"
    },
    "1380": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        709,
        726
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x28B"
    },
    "1383": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        709,
        726
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1384": {
      "fn": "SafeMath.sub",
      "offset": [
        4876,
        5077
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1385": {
      "fn": "SafeMath.sub",
      "offset": [
        4962,
        4969
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1387": {
      "fn": "SafeMath.sub",
      "offset": [
        5021,
        5033
      ],
      "op": "DUP2",
      "path": "140",
      "statement": 36
    },
    "1388": {
      "fn": "SafeMath.sub",
      "offset": [
        5013,
        5019
      ],
      "op": "DUP5",
      "path": "140"
    },
    "1389": {
      "fn": "SafeMath.sub",
      "offset": [
        5013,
        5019
      ],
      "op": "DUP5",
      "path": "140"
    },
    "1390": {
      "fn": "SafeMath.sub",
      "offset": [
        5013,
        5019
      ],
      "op": "GT",
      "path": "140"
    },
    "1391": {
      "branch": 50,
      "fn": "SafeMath.sub",
      "offset": [
        5013,
        5019
      ],
      "op": "ISZERO",
      "path": "140"
    },
    "1392": {
      "fn": "SafeMath.sub",
      "offset": [
        5005,
        5034
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x58C"
    },
    "1395": {
      "branch": 50,
      "fn": "SafeMath.sub",
      "offset": [
        5005,
        5034
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "1396": {
      "fn": "SafeMath.sub",
      "offset": [
        5005,
        5034
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x40"
    },
    "1398": {
      "fn": "SafeMath.sub",
      "offset": [
        5005,
        5034
      ],
      "op": "MLOAD",
      "path": "140"
    },
    "1399": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1405": {
      "op": "SHL"
    },
    "1406": {
      "fn": "SafeMath.sub",
      "offset": [
        5005,
        5034
      ],
      "op": "DUP2",
      "path": "140"
    },
    "1407": {
      "fn": "SafeMath.sub",
      "offset": [
        5005,
        5034
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "1408": {
      "fn": "SafeMath.sub",
      "offset": [
        5005,
        5034
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x4"
    },
    "1410": {
      "fn": "SafeMath.sub",
      "offset": [
        5005,
        5034
      ],
      "op": "ADD",
      "path": "140"
    },
    "1411": {
      "fn": "SafeMath.sub",
      "offset": [
        5005,
        5034
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x429"
    },
    "1414": {
      "fn": "SafeMath.sub",
      "offset": [
        5005,
        5034
      ],
      "op": "SWAP2",
      "path": "140"
    },
    "1415": {
      "fn": "SafeMath.sub",
      "offset": [
        5005,
        5034
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "1416": {
      "fn": "SafeMath.sub",
      "offset": [
        5005,
        5034
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x6F6"
    },
    "1419": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        5005,
        5034
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1420": {
      "fn": "SafeMath.sub",
      "offset": [
        5005,
        5034
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1421": {
      "op": "POP"
    },
    "1422": {
      "op": "POP"
    },
    "1423": {
      "op": "POP"
    },
    "1424": {
      "fn": "SafeMath.sub",
      "offset": [
        5055,
        5060
      ],
      "op": "SWAP1",
      "path": "140",
      "statement": 37
    },
    "1425": {
      "fn": "SafeMath.sub",
      "offset": [
        5055,
        5060
      ],
      "op": "SUB",
      "path": "140"
    },
    "1426": {
      "fn": "SafeMath.sub",
      "offset": [
        5055,
        5060
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "1427": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        4876,
        5077
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1428": {
      "fn": "SafeMath.mod",
      "offset": [
        6630,
        6830
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1429": {
      "fn": "SafeMath.mod",
      "offset": [
        6716,
        6723
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1431": {
      "fn": "SafeMath.mod",
      "offset": [
        6774,
        6786
      ],
      "op": "DUP2",
      "path": "140",
      "statement": 38
    },
    "1432": {
      "branch": 51,
      "fn": "SafeMath.mod",
      "offset": [
        6767,
        6772
      ],
      "op": "DUP4",
      "path": "140"
    },
    "1433": {
      "fn": "SafeMath.mod",
      "offset": [
        6759,
        6787
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x5B5"
    },
    "1436": {
      "branch": 51,
      "fn": "SafeMath.mod",
      "offset": [
        6759,
        6787
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "1437": {
      "fn": "SafeMath.mod",
      "offset": [
        6759,
        6787
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x40"
    },
    "1439": {
      "fn": "SafeMath.mod",
      "offset": [
        6759,
        6787
      ],
      "op": "MLOAD",
      "path": "140"
    },
    "1440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "fn": "SafeMath.mod",
      "offset": [
        6759,
        6787
      ],
      "op": "DUP2",
      "path": "140"
    },
    "1448": {
      "fn": "SafeMath.mod",
      "offset": [
        6759,
        6787
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "1449": {
      "fn": "SafeMath.mod",
      "offset": [
        6759,
        6787
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x4"
    },
    "1451": {
      "fn": "SafeMath.mod",
      "offset": [
        6759,
        6787
      ],
      "op": "ADD",
      "path": "140"
    },
    "1452": {
      "fn": "SafeMath.mod",
      "offset": [
        6759,
        6787
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x429"
    },
    "1455": {
      "fn": "SafeMath.mod",
      "offset": [
        6759,
        6787
      ],
      "op": "SWAP2",
      "path": "140"
    },
    "1456": {
      "fn": "SafeMath.mod",
      "offset": [
        6759,
        6787
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "1457": {
      "fn": "SafeMath.mod",
      "offset": [
        6759,
        6787
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x6F6"
    },
    "1460": {
      "fn": "SafeMath.mod",
      "jump": "i",
      "offset": [
        6759,
        6787
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1461": {
      "fn": "SafeMath.mod",
      "offset": [
        6759,
        6787
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1462": {
      "fn": "SafeMath.mod",
      "offset": [
        6759,
        6787
      ],
      "op": "POP",
      "path": "140"
    },
    "1463": {
      "fn": "SafeMath.mod",
      "offset": [
        6812,
        6813
      ],
      "op": "DUP3",
      "path": "140",
      "statement": 39
    },
    "1464": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6809
      ],
      "op": "DUP5",
      "path": "140"
    },
    "1465": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6813
      ],
      "op": "DUP2",
      "path": "140"
    },
    "1466": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6813
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x5D3"
    },
    "1469": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6813
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "1470": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1477": {
      "op": "SHL"
    },
    "1478": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6813
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1480": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6813
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "1481": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6813
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x12"
    },
    "1483": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6813
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x4"
    },
    "1485": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6813
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "1486": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6813
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x24"
    },
    "1488": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6813
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1490": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6813
      ],
      "op": "REVERT",
      "path": "140"
    },
    "1491": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6813
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1492": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6813
      ],
      "op": "MOD",
      "path": "140"
    },
    "1493": {
      "fn": "SafeMath.mod",
      "offset": [
        6808,
        6813
      ],
      "op": "SWAP5",
      "path": "140"
    },
    "1494": {
      "fn": "SafeMath.mod",
      "offset": [
        6630,
        6830
      ],
      "op": "SWAP4",
      "path": "140"
    },
    "1495": {
      "op": "POP"
    },
    "1496": {
      "op": "POP"
    },
    "1497": {
      "op": "POP"
    },
    "1498": {
      "op": "POP"
    },
    "1499": {
      "fn": "SafeMath.mod",
      "jump": "o",
      "offset": [
        6630,
        6830
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1500": {
      "fn": "SafeMath.trySub",
      "offset": [
        919,
        1108
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1501": {
      "fn": "SafeMath.trySub",
      "offset": [
        980,
        984
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1503": {
      "fn": "SafeMath.trySub",
      "offset": [
        986,
        993
      ],
      "op": "DUP1",
      "path": "140"
    },
    "1504": {
      "fn": "SafeMath.trySub",
      "offset": [
        1037,
        1038
      ],
      "op": "DUP4",
      "path": "140"
    },
    "1505": {
      "fn": "SafeMath.trySub",
      "offset": [
        1033,
        1034
      ],
      "op": "DUP4",
      "path": "140"
    },
    "1506": {
      "branch": 52,
      "fn": "SafeMath.trySub",
      "offset": [
        1033,
        1038
      ],
      "op": "GT",
      "path": "140"
    },
    "1507": {
      "fn": "SafeMath.trySub",
      "offset": [
        1029,
        1057
      ],
      "op": "ISZERO",
      "path": "140"
    },
    "1508": {
      "fn": "SafeMath.trySub",
      "offset": [
        1029,
        1057
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x5F2"
    },
    "1511": {
      "branch": 52,
      "fn": "SafeMath.trySub",
      "offset": [
        1029,
        1057
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "1512": {
      "op": "POP"
    },
    "1513": {
      "fn": "SafeMath.trySub",
      "offset": [
        1048,
        1053
      ],
      "op": "PUSH1",
      "path": "140",
      "statement": 40,
      "value": "0x0"
    },
    "1515": {
      "fn": "SafeMath.trySub",
      "offset": [
        1048,
        1053
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "1516": {
      "op": "POP"
    },
    "1517": {
      "fn": "SafeMath.trySub",
      "offset": [
        1048,
        1053
      ],
      "op": "DUP1",
      "path": "140"
    },
    "1518": {
      "fn": "SafeMath.trySub",
      "offset": [
        1040,
        1057
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x28B"
    },
    "1521": {
      "fn": "SafeMath.trySub",
      "offset": [
        1040,
        1057
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1522": {
      "fn": "SafeMath.trySub",
      "offset": [
        1029,
        1057
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1523": {
      "op": "POP"
    },
    "1524": {
      "fn": "SafeMath.trySub",
      "offset": [
        1079,
        1083
      ],
      "op": "PUSH1",
      "path": "140",
      "statement": 41,
      "value": "0x1"
    },
    "1526": {
      "fn": "SafeMath.trySub",
      "offset": [
        1079,
        1083
      ],
      "op": "SWAP4",
      "path": "140"
    },
    "1527": {
      "fn": "SafeMath.trySub",
      "offset": [
        1085,
        1090
      ],
      "op": "SWAP2",
      "path": "140"
    },
    "1528": {
      "fn": "SafeMath.trySub",
      "offset": [
        1085,
        1090
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "1529": {
      "fn": "SafeMath.trySub",
      "offset": [
        1085,
        1090
      ],
      "op": "SWAP3",
      "path": "140"
    },
    "1530": {
      "fn": "SafeMath.trySub",
      "offset": [
        1085,
        1090
      ],
      "op": "SUB",
      "path": "140"
    },
    "1531": {
      "fn": "SafeMath.trySub",
      "offset": [
        1085,
        1090
      ],
      "op": "SWAP2",
      "path": "140"
    },
    "1532": {
      "op": "POP"
    },
    "1533": {
      "fn": "SafeMath.trySub",
      "jump": "o",
      "offset": [
        919,
        1108
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1534": {
      "fn": "SafeMath.div",
      "offset": [
        3767,
        3863
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1535": {
      "fn": "SafeMath.div",
      "offset": [
        3825,
        3832
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1537": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH2",
      "path": "140",
      "statement": 42,
      "value": "0x2AB"
    },
    "1540": {
      "fn": "SafeMath.div",
      "offset": [
        3855,
        3856
      ],
      "op": "DUP3",
      "path": "140"
    },
    "1541": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3852
      ],
      "op": "DUP5",
      "path": "140"
    },
    "1542": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x761"
    },
    "1545": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3851,
        3856
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1546": {
      "fn": "SafeMath.add",
      "offset": [
        2672,
        2768
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "1547": {
      "fn": "SafeMath.add",
      "offset": [
        2730,
        2737
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "1549": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH2",
      "path": "140",
      "statement": 43,
      "value": "0x2AB"
    },
    "1552": {
      "fn": "SafeMath.add",
      "offset": [
        2760,
        2761
      ],
      "op": "DUP3",
      "path": "140"
    },
    "1553": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2757
      ],
      "op": "DUP5",
      "path": "140"
    },
    "1554": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x749"
    },
    "1557": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2756,
        2761
      ],
      "op": "JUMP",
      "path": "140"
    },
    "1558": {
      "op": "JUMPDEST"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1561": {
      "op": "DUP1"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1564": {
      "op": "DUP4"
    },
    "1565": {
      "op": "DUP6"
    },
    "1566": {
      "op": "SUB"
    },
    "1567": {
      "op": "SLT"
    },
    "1568": {
      "op": "ISZERO"
    },
    "1569": {
      "op": "PUSH2",
      "value": "0x628"
    },
    "1572": {
      "op": "JUMPI"
    },
    "1573": {
      "op": "DUP2"
    },
    "1574": {
      "op": "DUP3"
    },
    "1575": {
      "op": "REVERT"
    },
    "1576": {
      "op": "JUMPDEST"
    },
    "1577": {
      "op": "POP"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "op": "DUP1"
    },
    "1580": {
      "op": "CALLDATALOAD"
    },
    "1581": {
      "op": "SWAP3"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1584": {
      "op": "SWAP1"
    },
    "1585": {
      "op": "SWAP2"
    },
    "1586": {
      "op": "ADD"
    },
    "1587": {
      "op": "CALLDATALOAD"
    },
    "1588": {
      "op": "SWAP2"
    },
    "1589": {
      "op": "POP"
    },
    "1590": {
      "jump": "o",
      "op": "JUMP"
    },
    "1591": {
      "op": "JUMPDEST"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1594": {
      "op": "DUP1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1599": {
      "op": "DUP5"
    },
    "1600": {
      "op": "DUP7"
    },
    "1601": {
      "op": "SUB"
    },
    "1602": {
      "op": "SLT"
    },
    "1603": {
      "op": "ISZERO"
    },
    "1604": {
      "op": "PUSH2",
      "value": "0x64B"
    },
    "1607": {
      "op": "JUMPI"
    },
    "1608": {
      "op": "DUP1"
    },
    "1609": {
      "op": "DUP2"
    },
    "1610": {
      "op": "REVERT"
    },
    "1611": {
      "op": "JUMPDEST"
    },
    "1612": {
      "op": "DUP4"
    },
    "1613": {
      "op": "CALLDATALOAD"
    },
    "1614": {
      "op": "SWAP3"
    },
    "1615": {
      "op": "POP"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1618": {
      "op": "DUP5"
    },
    "1619": {
      "op": "ADD"
    },
    "1620": {
      "op": "CALLDATALOAD"
    },
    "1621": {
      "op": "SWAP2"
    },
    "1622": {
      "op": "POP"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1625": {
      "op": "DUP5"
    },
    "1626": {
      "op": "ADD"
    },
    "1627": {
      "op": "CALLDATALOAD"
    },
    "1628": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1637": {
      "op": "DUP1"
    },
    "1638": {
      "op": "DUP3"
    },
    "1639": {
      "op": "GT"
    },
    "1640": {
      "op": "ISZERO"
    },
    "1641": {
      "op": "PUSH2",
      "value": "0x670"
    },
    "1644": {
      "op": "JUMPI"
    },
    "1645": {
      "op": "DUP3"
    },
    "1646": {
      "op": "DUP4"
    },
    "1647": {
      "op": "REVERT"
    },
    "1648": {
      "op": "JUMPDEST"
    },
    "1649": {
      "op": "DUP2"
    },
    "1650": {
      "op": "DUP7"
    },
    "1651": {
      "op": "ADD"
    },
    "1652": {
      "op": "SWAP2"
    },
    "1653": {
      "op": "POP"
    },
    "1654": {
      "op": "DUP7"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1657": {
      "op": "DUP4"
    },
    "1658": {
      "op": "ADD"
    },
    "1659": {
      "op": "SLT"
    },
    "1660": {
      "op": "PUSH2",
      "value": "0x683"
    },
    "1663": {
      "op": "JUMPI"
    },
    "1664": {
      "op": "DUP3"
    },
    "1665": {
      "op": "DUP4"
    },
    "1666": {
      "op": "REVERT"
    },
    "1667": {
      "op": "JUMPDEST"
    },
    "1668": {
      "op": "DUP2"
    },
    "1669": {
      "op": "CALLDATALOAD"
    },
    "1670": {
      "op": "DUP2"
    },
    "1671": {
      "op": "DUP2"
    },
    "1672": {
      "op": "GT"
    },
    "1673": {
      "op": "ISZERO"
    },
    "1674": {
      "op": "PUSH2",
      "value": "0x695"
    },
    "1677": {
      "op": "JUMPI"
    },
    "1678": {
      "op": "PUSH2",
      "value": "0x695"
    },
    "1681": {
      "op": "PUSH2",
      "value": "0x806"
    },
    "1684": {
      "jump": "i",
      "op": "JUMP"
    },
    "1685": {
      "op": "JUMPDEST"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1688": {
      "op": "MLOAD"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1691": {
      "op": "DUP3"
    },
    "1692": {
      "op": "ADD"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1695": {
      "op": "NOT"
    },
    "1696": {
      "op": "SWAP1"
    },
    "1697": {
      "op": "DUP2"
    },
    "1698": {
      "op": "AND"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1701": {
      "op": "ADD"
    },
    "1702": {
      "op": "AND"
    },
    "1703": {
      "op": "DUP2"
    },
    "1704": {
      "op": "ADD"
    },
    "1705": {
      "op": "SWAP1"
    },
    "1706": {
      "op": "DUP4"
    },
    "1707": {
      "op": "DUP3"
    },
    "1708": {
      "op": "GT"
    },
    "1709": {
      "op": "DUP2"
    },
    "1710": {
      "op": "DUP4"
    },
    "1711": {
      "op": "LT"
    },
    "1712": {
      "op": "OR"
    },
    "1713": {
      "op": "ISZERO"
    },
    "1714": {
      "op": "PUSH2",
      "value": "0x6BD"
    },
    "1717": {
      "op": "JUMPI"
    },
    "1718": {
      "op": "PUSH2",
      "value": "0x6BD"
    },
    "1721": {
      "op": "PUSH2",
      "value": "0x806"
    },
    "1724": {
      "jump": "i",
      "op": "JUMP"
    },
    "1725": {
      "op": "JUMPDEST"
    },
    "1726": {
      "op": "DUP2"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1729": {
      "op": "MSTORE"
    },
    "1730": {
      "op": "DUP3"
    },
    "1731": {
      "op": "DUP2"
    },
    "1732": {
      "op": "MSTORE"
    },
    "1733": {
      "op": "DUP10"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1736": {
      "op": "DUP5"
    },
    "1737": {
      "op": "DUP8"
    },
    "1738": {
      "op": "ADD"
    },
    "1739": {
      "op": "ADD"
    },
    "1740": {
      "op": "GT"
    },
    "1741": {
      "op": "ISZERO"
    },
    "1742": {
      "op": "PUSH2",
      "value": "0x6D5"
    },
    "1745": {
      "op": "JUMPI"
    },
    "1746": {
      "op": "DUP6"
    },
    "1747": {
      "op": "DUP7"
    },
    "1748": {
      "op": "REVERT"
    },
    "1749": {
      "op": "JUMPDEST"
    },
    "1750": {
      "op": "DUP3"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1753": {
      "op": "DUP7"
    },
    "1754": {
      "op": "ADD"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1757": {
      "op": "DUP4"
    },
    "1758": {
      "op": "ADD"
    },
    "1759": {
      "op": "CALLDATACOPY"
    },
    "1760": {
      "op": "DUP6"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1763": {
      "op": "DUP5"
    },
    "1764": {
      "op": "DUP4"
    },
    "1765": {
      "op": "ADD"
    },
    "1766": {
      "op": "ADD"
    },
    "1767": {
      "op": "MSTORE"
    },
    "1768": {
      "op": "DUP1"
    },
    "1769": {
      "op": "SWAP6"
    },
    "1770": {
      "op": "POP"
    },
    "1771": {
      "op": "POP"
    },
    "1772": {
      "op": "POP"
    },
    "1773": {
      "op": "POP"
    },
    "1774": {
      "op": "POP"
    },
    "1775": {
      "op": "POP"
    },
    "1776": {
      "op": "SWAP3"
    },
    "1777": {
      "op": "POP"
    },
    "1778": {
      "op": "SWAP3"
    },
    "1779": {
      "op": "POP"
    },
    "1780": {
      "op": "SWAP3"
    },
    "1781": {
      "jump": "o",
      "op": "JUMP"
    },
    "1782": {
      "op": "JUMPDEST"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1787": {
      "op": "DUP1"
    },
    "1788": {
      "op": "DUP4"
    },
    "1789": {
      "op": "MSTORE"
    },
    "1790": {
      "op": "DUP4"
    },
    "1791": {
      "op": "MLOAD"
    },
    "1792": {
      "op": "DUP1"
    },
    "1793": {
      "op": "DUP3"
    },
    "1794": {
      "op": "DUP6"
    },
    "1795": {
      "op": "ADD"
    },
    "1796": {
      "op": "MSTORE"
    },
    "1797": {
      "op": "DUP3"
    },
    "1798": {
      "op": "JUMPDEST"
    },
    "1799": {
      "op": "DUP2"
    },
    "1800": {
      "op": "DUP2"
    },
    "1801": {
      "op": "LT"
    },
    "1802": {
      "op": "ISZERO"
    },
    "1803": {
      "op": "PUSH2",
      "value": "0x722"
    },
    "1806": {
      "op": "JUMPI"
    },
    "1807": {
      "op": "DUP6"
    },
    "1808": {
      "op": "DUP2"
    },
    "1809": {
      "op": "ADD"
    },
    "1810": {
      "op": "DUP4"
    },
    "1811": {
      "op": "ADD"
    },
    "1812": {
      "op": "MLOAD"
    },
    "1813": {
      "op": "DUP6"
    },
    "1814": {
      "op": "DUP3"
    },
    "1815": {
      "op": "ADD"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1818": {
      "op": "ADD"
    },
    "1819": {
      "op": "MSTORE"
    },
    "1820": {
      "op": "DUP3"
    },
    "1821": {
      "op": "ADD"
    },
    "1822": {
      "op": "PUSH2",
      "value": "0x706"
    },
    "1825": {
      "op": "JUMP"
    },
    "1826": {
      "op": "JUMPDEST"
    },
    "1827": {
      "op": "DUP2"
    },
    "1828": {
      "op": "DUP2"
    },
    "1829": {
      "op": "GT"
    },
    "1830": {
      "op": "ISZERO"
    },
    "1831": {
      "op": "PUSH2",
      "value": "0x733"
    },
    "1834": {
      "op": "JUMPI"
    },
    "1835": {
      "op": "DUP4"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1838": {
      "op": "DUP4"
    },
    "1839": {
      "op": "DUP8"
    },
    "1840": {
      "op": "ADD"
    },
    "1841": {
      "op": "ADD"
    },
    "1842": {
      "op": "MSTORE"
    },
    "1843": {
      "op": "JUMPDEST"
    },
    "1844": {
      "op": "POP"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1847": {
      "op": "ADD"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1850": {
      "op": "NOT"
    },
    "1851": {
      "op": "AND"
    },
    "1852": {
      "op": "SWAP3"
    },
    "1853": {
      "op": "SWAP1"
    },
    "1854": {
      "op": "SWAP3"
    },
    "1855": {
      "op": "ADD"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1858": {
      "op": "ADD"
    },
    "1859": {
      "op": "SWAP4"
    },
    "1860": {
      "op": "SWAP3"
    },
    "1861": {
      "op": "POP"
    },
    "1862": {
      "op": "POP"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "jump": "o",
      "op": "JUMP"
    },
    "1865": {
      "op": "JUMPDEST"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1868": {
      "op": "DUP3"
    },
    "1869": {
      "op": "NOT"
    },
    "1870": {
      "op": "DUP3"
    },
    "1871": {
      "op": "GT"
    },
    "1872": {
      "op": "ISZERO"
    },
    "1873": {
      "op": "PUSH2",
      "value": "0x75C"
    },
    "1876": {
      "op": "JUMPI"
    },
    "1877": {
      "op": "PUSH2",
      "value": "0x75C"
    },
    "1880": {
      "op": "PUSH2",
      "value": "0x7DA"
    },
    "1883": {
      "jump": "i",
      "op": "JUMP"
    },
    "1884": {
      "op": "JUMPDEST"
    },
    "1885": {
      "op": "POP"
    },
    "1886": {
      "op": "ADD"
    },
    "1887": {
      "op": "SWAP1"
    },
    "1888": {
      "jump": "o",
      "op": "JUMP"
    },
    "1889": {
      "op": "JUMPDEST"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1892": {
      "op": "DUP3"
    },
    "1893": {
      "op": "PUSH2",
      "value": "0x770"
    },
    "1896": {
      "op": "JUMPI"
    },
    "1897": {
      "op": "PUSH2",
      "value": "0x770"
    },
    "1900": {
      "op": "PUSH2",
      "value": "0x7F0"
    },
    "1903": {
      "jump": "i",
      "op": "JUMP"
    },
    "1904": {
      "op": "JUMPDEST"
    },
    "1905": {
      "op": "POP"
    },
    "1906": {
      "op": "DIV"
    },
    "1907": {
      "op": "SWAP1"
    },
    "1908": {
      "jump": "o",
      "op": "JUMP"
    },
    "1909": {
      "op": "JUMPDEST"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1912": {
      "op": "DUP2"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1915": {
      "op": "NOT"
    },
    "1916": {
      "op": "DIV"
    },
    "1917": {
      "op": "DUP4"
    },
    "1918": {
      "op": "GT"
    },
    "1919": {
      "op": "DUP3"
    },
    "1920": {
      "op": "ISZERO"
    },
    "1921": {
      "op": "ISZERO"
    },
    "1922": {
      "op": "AND"
    },
    "1923": {
      "op": "ISZERO"
    },
    "1924": {
      "op": "PUSH2",
      "value": "0x78F"
    },
    "1927": {
      "op": "JUMPI"
    },
    "1928": {
      "op": "PUSH2",
      "value": "0x78F"
    },
    "1931": {
      "op": "PUSH2",
      "value": "0x7DA"
    },
    "1934": {
      "jump": "i",
      "op": "JUMP"
    },
    "1935": {
      "op": "JUMPDEST"
    },
    "1936": {
      "op": "POP"
    },
    "1937": {
      "op": "MUL"
    },
    "1938": {
      "op": "SWAP1"
    },
    "1939": {
      "jump": "o",
      "op": "JUMP"
    },
    "1940": {
      "op": "JUMPDEST"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1943": {
      "op": "DUP3"
    },
    "1944": {
      "op": "DUP3"
    },
    "1945": {
      "op": "LT"
    },
    "1946": {
      "op": "ISZERO"
    },
    "1947": {
      "op": "PUSH2",
      "value": "0x7A6"
    },
    "1950": {
      "op": "JUMPI"
    },
    "1951": {
      "op": "PUSH2",
      "value": "0x7A6"
    },
    "1954": {
      "op": "PUSH2",
      "value": "0x7DA"
    },
    "1957": {
      "jump": "i",
      "op": "JUMP"
    },
    "1958": {
      "op": "JUMPDEST"
    },
    "1959": {
      "op": "POP"
    },
    "1960": {
      "op": "SUB"
    },
    "1961": {
      "op": "SWAP1"
    },
    "1962": {
      "jump": "o",
      "op": "JUMP"
    },
    "1963": {
      "op": "JUMPDEST"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1968": {
      "op": "NOT"
    },
    "1969": {
      "op": "DUP3"
    },
    "1970": {
      "op": "EQ"
    },
    "1971": {
      "op": "ISZERO"
    },
    "1972": {
      "op": "PUSH2",
      "value": "0x7BF"
    },
    "1975": {
      "op": "JUMPI"
    },
    "1976": {
      "op": "PUSH2",
      "value": "0x7BF"
    },
    "1979": {
      "op": "PUSH2",
      "value": "0x7DA"
    },
    "1982": {
      "jump": "i",
      "op": "JUMP"
    },
    "1983": {
      "op": "JUMPDEST"
    },
    "1984": {
      "op": "POP"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "ADD"
    },
    "1988": {
      "op": "SWAP1"
    },
    "1989": {
      "jump": "o",
      "op": "JUMP"
    },
    "1990": {
      "op": "JUMPDEST"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1993": {
      "op": "DUP3"
    },
    "1994": {
      "op": "PUSH2",
      "value": "0x7D5"
    },
    "1997": {
      "op": "JUMPI"
    },
    "1998": {
      "op": "PUSH2",
      "value": "0x7D5"
    },
    "2001": {
      "op": "PUSH2",
      "value": "0x7F0"
    },
    "2004": {
      "jump": "i",
      "op": "JUMP"
    },
    "2005": {
      "op": "JUMPDEST"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "op": "MOD"
    },
    "2008": {
      "op": "SWAP1"
    },
    "2009": {
      "jump": "o",
      "op": "JUMP"
    },
    "2010": {
      "op": "JUMPDEST"
    },
    "2011": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2018": {
      "op": "SHL"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2021": {
      "op": "MSTORE"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2026": {
      "op": "MSTORE"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2031": {
      "op": "REVERT"
    },
    "2032": {
      "op": "JUMPDEST"
    },
    "2033": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2040": {
      "op": "SHL"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2043": {
      "op": "MSTORE"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2048": {
      "op": "MSTORE"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2053": {
      "op": "REVERT"
    },
    "2054": {
      "op": "JUMPDEST"
    },
    "2055": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2062": {
      "op": "SHL"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2065": {
      "op": "MSTORE"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2070": {
      "op": "MSTORE"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2075": {
      "op": "REVERT"
    }
  },
  "sha1": "1fb930264f110cd0f1fc5abb99e1422298ad7713",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/math/SafeMath.sol\";\n\ncontract SafeMathMock {\n    function tryAdd(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryAdd(a, b);\n    }\n\n    function trySub(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.trySub(a, b);\n    }\n\n    function tryMul(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryMul(a, b);\n    }\n\n    function tryDiv(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryDiv(a, b);\n    }\n\n    function tryMod(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryMod(a, b);\n    }\n\n    // using the do* naming convention to avoid warnings due to clashing opcode names\n\n    function doAdd(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.add(a, b);\n    }\n\n    function doSub(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.sub(a, b);\n    }\n\n    function doMul(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.mul(a, b);\n    }\n\n    function doDiv(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.div(a, b);\n    }\n\n    function doMod(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.mod(a, b);\n    }\n\n    function subWithMessage(uint256 a, uint256 b, string memory errorMessage) public pure returns (uint256) {\n        return SafeMath.sub(a, b, errorMessage);\n    }\n\n    function divWithMessage(uint256 a, uint256 b, string memory errorMessage) public pure returns (uint256) {\n        return SafeMath.div(a, b, errorMessage);\n    }\n\n    function modWithMessage(uint256 a, uint256 b, string memory errorMessage) public pure returns (uint256) {\n        return SafeMath.mod(a, b, errorMessage);\n    }\n\n    function addMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := mload(0x40) }\n        for (uint256 i = 0; i < length; ++i) { SafeMath.add(1, 1); }\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := sub(mload(0x40), mem) }\n    }\n\n    function subMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := mload(0x40) }\n        for (uint256 i = 0; i < length; ++i) { SafeMath.sub(1, 1); }\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := sub(mload(0x40), mem) }\n    }\n\n    function mulMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := mload(0x40) }\n        for (uint256 i = 0; i < length; ++i) { SafeMath.mul(1, 1); }\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := sub(mload(0x40), mem) }\n    }\n\n    function divMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := mload(0x40) }\n        for (uint256 i = 0; i < length; ++i) { SafeMath.div(1, 1); }\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := sub(mload(0x40), mem) }\n    }\n\n    function modMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := mload(0x40) }\n        for (uint256 i = 0; i < length; ++i) { SafeMath.mod(1, 1); }\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := sub(mload(0x40), mem) }\n    }\n\n}\n",
  "sourceMap": "96:3730:65:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin-contracts/contracts/mocks/SafeMathMock.sol",
  "type": "contract"
}