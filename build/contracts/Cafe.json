{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri_",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "_timescale",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_createCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feedCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_grindReward",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "feedingTimes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "starterId",
          "type": "uint256"
        }
      ],
      "name": "autoFeed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "recipeId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "starterBatch",
          "type": "uint256[]"
        }
      ],
      "name": "bakeExistingRecipe",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createStarter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "recipeId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "eatBakedGood",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feedCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "feedStarter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flourSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "starterId",
          "type": "uint256"
        }
      ],
      "name": "getChildCount",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "starterId",
          "type": "uint256"
        }
      ],
      "name": "getCreationTime",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "starterId",
          "type": "uint256"
        }
      ],
      "name": "getCreatorAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "recipeId",
          "type": "uint256"
        }
      ],
      "name": "getFlourRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "getGrindReset",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "recipeId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getIngredientByIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "recipeId",
          "type": "uint256"
        }
      ],
      "name": "getIngredientCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "starterId",
          "type": "uint256"
        }
      ],
      "name": "getIsAutoFed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "recipeId",
          "type": "uint256"
        }
      ],
      "name": "getNumberEaten",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getOwnerUniqueRecipes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getOwnerUniqueTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "getPlayerScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "recipeId",
          "type": "uint256"
        }
      ],
      "name": "getRecipeCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "recipeId",
          "type": "uint256"
        }
      ],
      "name": "getRecipeName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "recipeId",
          "type": "uint256"
        }
      ],
      "name": "getRecipeScore",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "starterId",
          "type": "uint256"
        }
      ],
      "name": "getTimeOfDeath",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "recipeId",
          "type": "uint256"
        }
      ],
      "name": "getTimesBaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "grindFlour",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "grindReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "isPlayerAutoFeeding",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "itemsBaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "playerHighScore",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "flourRequired",
          "type": "uint256"
        },
        {
          "internalType": "uint32[]",
          "name": "ages",
          "type": "uint32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "starterBatch",
          "type": "uint256[]"
        }
      ],
      "name": "publishNewRecipe",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "recipeHighScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "recipeOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recipesPublished",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "splitStarter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "starterHighScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "starterHighScoreAges",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startersCreated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "starterId",
          "type": "uint256"
        }
      ],
      "name": "stopAutoFeed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timescale",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Cafe.sol",
    "1": "contracts/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
    "2": "contracts/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
    "3": "contracts/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
    "4": "contracts/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
    "5": "contracts/openzeppelin-contracts/contracts/utils/Address.sol",
    "6": "contracts/openzeppelin-contracts/contracts/utils/Context.sol",
    "7": "contracts/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
    "8": "contracts/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
    "9": "contracts/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol"
  },
  "ast": {
    "absolutePath": "contracts/Cafe.sol",
    "exportedSymbols": {
      "Address": [
        3831
      ],
      "Cafe": [
        1676
      ],
      "Context": [
        3854
      ],
      "ERC1155": [
        2844
      ],
      "ERC165": [
        3878
      ],
      "EnumerableSet": [
        3357
      ],
      "IERC1155": [
        3479
      ],
      "IERC1155MetadataURI": [
        3535
      ],
      "IERC1155Receiver": [
        3520
      ],
      "IERC165": [
        3890
      ]
    },
    "id": 1677,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "file": "./openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1677,
        "sourceUnit": 2845,
        "src": "25:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "file": "./openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1677,
        "sourceUnit": 3358,
        "src": "96:76:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "ERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2844,
              "src": "194:7:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "194:7:0"
          }
        ],
        "contractDependencies": [
          2844,
          3479,
          3535,
          3854,
          3878,
          3890
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1676,
        "linearizedBaseContracts": [
          1676,
          2844,
          3535,
          3479,
          3878,
          3890,
          3854
        ],
        "name": "Cafe",
        "nameLocation": "186:4:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9,
            "libraryName": {
              "id": 6,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3357,
              "src": "215:13:0"
            },
            "nodeType": "UsingForDirective",
            "src": "209:46:0",
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "EnumerableSet.UintSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3257,
                "src": "233:21:0"
              },
              "referencedDeclaration": 3257,
              "src": "233:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$3257_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            }
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "405:193:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26,
                        "name": "uri_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "423:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 25,
                      "name": "_setURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2223,
                      "src": "415:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "415:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "415:13:0"
                },
                {
                  "expression": {
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29,
                      "name": "timescale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "438:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30,
                      "name": "_timescale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "450:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "438:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "438:22:0"
                },
                {
                  "expression": {
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33,
                      "name": "devAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "470:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 34,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "481:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 35,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "481:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "470:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "470:21:0"
                },
                {
                  "expression": {
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38,
                      "name": "createCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "501:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39,
                      "name": "_createCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "514:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "501:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "501:24:0"
                },
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42,
                      "name": "feedCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "535:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 43,
                      "name": "_feedCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "546:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "535:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "535:20:0"
                },
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "grindReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "565:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47,
                      "name": "_grindReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "579:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "565:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "565:26:0"
                }
              ]
            },
            "id": 51,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 22,
                    "name": "uri_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "399:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 23,
                "modifierName": {
                  "id": 21,
                  "name": "ERC1155",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2844,
                  "src": "391:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "391:13:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "uri_",
                  "nameLocation": "297:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "283:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "283:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "_timescale",
                  "nameLocation": "310:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "303:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "_createCost",
                  "nameLocation": "330:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "322:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "_feedCost",
                  "nameLocation": "351:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "343:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "_grindReward",
                  "nameLocation": "370:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "362:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "282:101:0"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:0:0"
            },
            "scope": 1676,
            "src": "270:328:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 52,
              "nodeType": "StructuredDocumentation",
              "src": "603:280:0",
              "text": "@dev These are the constructor parameters.  Create/feed Costs are the flour required to create and feed starters.  \nTimescale represents the timescale at which starters die, feed reset time, and  grindFlour cooldown\ngrindReward is the reward for grinding flour"
            },
            "functionSelector": "ba0bd64a",
            "id": 54,
            "mutability": "mutable",
            "name": "createCost",
            "nameLocation": "903:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "888:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 53,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "888:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a07b6a42",
            "id": 56,
            "mutability": "mutable",
            "name": "feedCost",
            "nameLocation": "934:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "919:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 55,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "919:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "956ac17a",
            "id": 58,
            "mutability": "mutable",
            "name": "timescale",
            "nameLocation": "962:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "948:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 57,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "948:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a7c62323",
            "id": 60,
            "mutability": "mutable",
            "name": "grindReward",
            "nameLocation": "992:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "977:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "977:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Cafe.Sourdough",
            "id": 73,
            "members": [
              {
                "constant": false,
                "id": 62,
                "mutability": "mutable",
                "name": "_timeOfDeath",
                "nameLocation": "1406:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1399:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 61,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1399:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 64,
                "mutability": "mutable",
                "name": "_childCount",
                "nameLocation": "1434:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1428:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 63,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1428:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66,
                "mutability": "mutable",
                "name": "_creationTime",
                "nameLocation": "1462:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1455:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 65,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1455:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68,
                "mutability": "mutable",
                "name": "_creator",
                "nameLocation": "1493:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1485:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 67,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1485:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70,
                "mutability": "mutable",
                "name": "_beingAutoFed",
                "nameLocation": "1516:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1511:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 69,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1511:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "_splitCooldown",
                "nameLocation": "1546:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1539:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 71,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1539:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Sourdough",
            "nameLocation": "1380:9:0",
            "nodeType": "StructDefinition",
            "scope": 1676,
            "src": "1373:198:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Cafe.Recipe",
            "id": 89,
            "members": [
              {
                "constant": false,
                "id": 75,
                "mutability": "mutable",
                "name": "_name",
                "nameLocation": "1806:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "1799:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 74,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1799:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 77,
                "mutability": "mutable",
                "name": "_flourRequired",
                "nameLocation": "1829:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "1821:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 76,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1821:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "_ages",
                "nameLocation": "1862:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "1853:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                  "typeString": "uint32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 78,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 79,
                  "nodeType": "ArrayTypeName",
                  "src": "1853:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                    "typeString": "uint32[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "_creator",
                "nameLocation": "1885:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "1877:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 81,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1877:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "_timesBaked",
                "nameLocation": "1911:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "1903:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 83,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1903:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "_numberEaten",
                "nameLocation": "1940:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "1932:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1932:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "mutability": "mutable",
                "name": "_score",
                "nameLocation": "1969:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "1962:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 87,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1962:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Recipe",
            "nameLocation": "1783:6:0",
            "nodeType": "StructDefinition",
            "scope": 1676,
            "src": "1776:215:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 90,
              "nodeType": "StructuredDocumentation",
              "src": "1992:270:0",
              "text": "@dev flourId denotes the id of the fungible FLOUR token\ndividerIndex separates fully-non-fungible starter ingredients and semi-fungible baked goods\nflourId is the index of the fungible flour asset\ngrindCooldown determine whether or not an address can grind flour"
            },
            "functionSelector": "3ad10ef6",
            "id": 96,
            "mutability": "mutable",
            "name": "devAddress",
            "nameLocation": "2282:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "2267:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 91,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2267:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 94,
                  "name": "this",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -28,
                  "src": "2303:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Cafe_$1676",
                    "typeString": "contract Cafe"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_contract$_Cafe_$1676",
                    "typeString": "contract Cafe"
                  }
                ],
                "id": 93,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2295:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 92,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2295:7:0",
                  "typeDescriptions": {}
                }
              },
              "id": 95,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2295:13:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 99,
            "mutability": "mutable",
            "name": "flourId",
            "nameLocation": "2322:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "2314:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 97,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2314:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 98,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2332:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 102,
            "mutability": "mutable",
            "name": "dividerIndex",
            "nameLocation": "2347:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "2339:100:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2339:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
              "id": 101,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2362:77:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                "typeString": "int_const 5789...(69 digits omitted)...9968"
              },
              "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 107,
            "mutability": "mutable",
            "name": "Sourdoughs",
            "nameLocation": "2476:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "2445:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
              "typeString": "mapping(uint256 => struct Cafe.Sourdough)"
            },
            "typeName": {
              "id": 106,
              "keyType": {
                "id": 103,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2454:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2445:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                "typeString": "mapping(uint256 => struct Cafe.Sourdough)"
              },
              "valueType": {
                "id": 105,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 104,
                  "name": "Sourdough",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73,
                  "src": "2465:9:0"
                },
                "referencedDeclaration": 73,
                "src": "2465:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Sourdough_$73_storage_ptr",
                  "typeString": "struct Cafe.Sourdough"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 111,
            "mutability": "mutable",
            "name": "grindCooldown",
            "nameLocation": "2519:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "2492:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
              "typeString": "mapping(address => uint32)"
            },
            "typeName": {
              "id": 110,
              "keyType": {
                "id": 108,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2500:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2492:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                "typeString": "mapping(address => uint32)"
              },
              "valueType": {
                "id": 109,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "2511:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 116,
            "mutability": "mutable",
            "name": "BakedGoods",
            "nameLocation": "2566:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "2539:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
              "typeString": "mapping(uint256 => struct Cafe.Recipe)"
            },
            "typeName": {
              "id": 115,
              "keyType": {
                "id": 112,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2547:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2539:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                "typeString": "mapping(uint256 => struct Cafe.Recipe)"
              },
              "valueType": {
                "id": 114,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 113,
                  "name": "Recipe",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89,
                  "src": "2558:6:0"
                },
                "referencedDeclaration": 89,
                "src": "2558:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Recipe_$89_storage_ptr",
                  "typeString": "struct Cafe.Recipe"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 121,
            "mutability": "mutable",
            "name": "_ownerRecipes",
            "nameLocation": "2633:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "2582:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3257_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "typeName": {
              "id": 120,
              "keyType": {
                "id": 117,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2590:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2582:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3257_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.UintSet)"
              },
              "valueType": {
                "id": 119,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 118,
                  "name": "EnumerableSet.UintSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3257,
                  "src": "2602:21:0"
                },
                "referencedDeclaration": 3257,
                "src": "2602:21:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UintSet_$3257_storage_ptr",
                  "typeString": "struct EnumerableSet.UintSet"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 125,
            "mutability": "mutable",
            "name": "totalScore",
            "nameLocation": "2680:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "2652:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 124,
              "keyType": {
                "id": 122,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2660:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2652:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 123,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2671:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 129,
            "mutability": "mutable",
            "name": "isAutoFeeding",
            "nameLocation": "2721:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "2696:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 128,
              "keyType": {
                "id": 126,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2704:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2696:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 127,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2715:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 130,
              "nodeType": "StructuredDocumentation",
              "src": "2737:27:0",
              "text": "@dev highscores here "
            },
            "functionSelector": "4c777cac",
            "id": 134,
            "mutability": "mutable",
            "name": "starterHighScoreAges",
            "nameLocation": "2787:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "2769:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint32_$11_storage",
              "typeString": "uint32[11]"
            },
            "typeName": {
              "baseType": {
                "id": 131,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "2769:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "id": 133,
              "length": {
                "hexValue": "3131",
                "id": 132,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2776:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_11_by_1",
                  "typeString": "int_const 11"
                },
                "value": "11"
              },
              "nodeType": "ArrayTypeName",
              "src": "2769:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint32_$11_storage_ptr",
                "typeString": "uint32[11]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3b1066f",
            "id": 138,
            "mutability": "mutable",
            "name": "starterHighScore",
            "nameLocation": "2832:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "2813:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$11_storage",
              "typeString": "uint256[11]"
            },
            "typeName": {
              "baseType": {
                "id": 135,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2813:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 137,
              "length": {
                "hexValue": "3131",
                "id": 136,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2821:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_11_by_1",
                  "typeString": "int_const 11"
                },
                "value": "11"
              },
              "nodeType": "ArrayTypeName",
              "src": "2813:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$11_storage_ptr",
                "typeString": "uint256[11]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e11fd028",
            "id": 142,
            "mutability": "mutable",
            "name": "recipeHighScore",
            "nameLocation": "2873:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "2854:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$11_storage",
              "typeString": "uint256[11]"
            },
            "typeName": {
              "baseType": {
                "id": 139,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2854:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 141,
              "length": {
                "hexValue": "3131",
                "id": 140,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2862:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_11_by_1",
                  "typeString": "int_const 11"
                },
                "value": "11"
              },
              "nodeType": "ArrayTypeName",
              "src": "2854:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$11_storage_ptr",
                "typeString": "uint256[11]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "214fa99b",
            "id": 146,
            "mutability": "mutable",
            "name": "playerHighScore",
            "nameLocation": "2913:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "2894:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$11_storage",
              "typeString": "address[11]"
            },
            "typeName": {
              "baseType": {
                "id": 143,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2894:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 145,
              "length": {
                "hexValue": "3131",
                "id": 144,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2902:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_11_by_1",
                  "typeString": "int_const 11"
                },
                "value": "11"
              },
              "nodeType": "ArrayTypeName",
              "src": "2894:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$11_storage_ptr",
                "typeString": "address[11]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 147,
              "nodeType": "StructuredDocumentation",
              "src": "2943:24:0",
              "text": "@dev total stats"
            },
            "functionSelector": "c889d089",
            "id": 150,
            "mutability": "mutable",
            "name": "flourSupply",
            "nameLocation": "2988:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "2973:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 148,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2973:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 149,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3002:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2b944ddf",
            "id": 153,
            "mutability": "mutable",
            "name": "startersCreated",
            "nameLocation": "3024:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "3009:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 151,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3009:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 152,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3042:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c2c894a",
            "id": 156,
            "mutability": "mutable",
            "name": "itemsBaked",
            "nameLocation": "3064:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "3049:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 154,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3049:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 155,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3077:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f6d989f2",
            "id": 159,
            "mutability": "mutable",
            "name": "recipesPublished",
            "nameLocation": "3099:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 1676,
            "src": "3084:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 157,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3084:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 158,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3118:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "3219:266:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 164,
                            "name": "grindCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "3245:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                              "typeString": "mapping(address => uint32)"
                            }
                          },
                          "id": 167,
                          "indexExpression": {
                            "expression": {
                              "id": 165,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3259:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3259:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3245:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 168,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3271:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3271:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3245:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646964207468697320616c726561647920746f64617921",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3287:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_554e41daa92b08b9145a4da050ec3ce6b74d9488dcd38cf1c67bc908aa0751a6",
                          "typeString": "literal_string \"You did this already today!\""
                        },
                        "value": "You did this already today!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_554e41daa92b08b9145a4da050ec3ce6b74d9488dcd38cf1c67bc908aa0751a6",
                          "typeString": "literal_string \"You did this already today!\""
                        }
                      ],
                      "id": 163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3237:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3237:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "3237:80:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 175,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3333:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3333:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 177,
                        "name": "flourId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "3344:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 178,
                        "name": "grindReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "3353:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3366:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 174,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2305,
                      "src": "3327:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3327:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "3327:42:0"
                },
                {
                  "expression": {
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 182,
                      "name": "flourSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "3379:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 183,
                      "name": "grindReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "3394:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3379:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "3379:26:0"
                },
                {
                  "expression": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 186,
                        "name": "grindCooldown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "3415:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                          "typeString": "mapping(address => uint32)"
                        }
                      },
                      "id": 189,
                      "indexExpression": {
                        "expression": {
                          "id": 187,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3429:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3429:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3415:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 192,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3450:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3450:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 194,
                            "name": "timescale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "3468:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "3450:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3443:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3443:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3443:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3415:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "3415:63:0"
                }
              ]
            },
            "documentation": {
              "id": 160,
              "nodeType": "StructuredDocumentation",
              "src": "3122:63:0",
              "text": "@dev Credits the user FLOUR every 24 hours if submitted"
            },
            "functionSelector": "a3486758",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "grindFlour",
            "nameLocation": "3199:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3209:2:0"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3219:0:0"
            },
            "scope": 1676,
            "src": "3190:295:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "3608:133:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 210,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3636:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3636:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 212,
                              "name": "flourId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "3647:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 209,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1802,
                            "src": "3626:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3626:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 214,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "3657:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3626:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3618:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3618:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3618:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 219,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "3680:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 220,
                        "name": "flourId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "3688:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 221,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "3696:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 218,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2507,
                      "src": "3674:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3674:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "3674:29:0"
                },
                {
                  "expression": {
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 224,
                      "name": "flourSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "3713:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 225,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "3728:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3713:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "3713:21:0"
                }
              ]
            },
            "documentation": {
              "id": 201,
              "nodeType": "StructuredDocumentation",
              "src": "3487:54:0",
              "text": "@dev Internally used to get rid of flour tokens "
            },
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnFlour",
            "nameLocation": "3555:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3574:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "3566:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3566:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3591:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "3583:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3583:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3565:33:0"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3608:0:0"
            },
            "scope": 1676,
            "src": "3546:195:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "3878:401:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 236,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3899:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3899:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 238,
                        "name": "createCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "3912:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 235,
                      "name": "_burnFlour",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "3888:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3888:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "3888:35:0"
                },
                {
                  "assignments": [
                    242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 242,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "3943:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 296,
                      "src": "3935:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 241,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3935:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 246,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 243,
                      "name": "startersCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "3953:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3970:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3953:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3935:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 248,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3988:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3988:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "30",
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4000:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 251,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 242,
                          "src": "4002:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4000:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4011:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4013:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 247,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2305,
                      "src": "3982:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3982:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "3982:34:0"
                },
                {
                  "assignments": [
                    259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 259,
                      "mutability": "mutable",
                      "name": "sourdough",
                      "nameLocation": "4043:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 296,
                      "src": "4026:26:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sourdough_$73_memory_ptr",
                        "typeString": "struct Cafe.Sourdough"
                      },
                      "typeName": {
                        "id": 258,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 257,
                          "name": "Sourdough",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 73,
                          "src": "4026:9:0"
                        },
                        "referencedDeclaration": 73,
                        "src": "4026:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sourdough_$73_storage_ptr",
                          "typeString": "struct Cafe.Sourdough"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 283,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 263,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4072:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4072:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 265,
                              "name": "timescale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "4090:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "4072:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4065:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 261,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4065:6:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4065:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4101:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 271,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4110:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4110:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4103:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 269,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4103:6:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4103:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 274,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4127:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4127:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4138:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 279,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4151:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4151:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4144:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 277,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4144:6:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4144:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 260,
                      "name": "Sourdough",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "4055:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Sourdough_$73_storage_ptr_$",
                        "typeString": "type(struct Cafe.Sourdough storage pointer)"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4055:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Sourdough_$73_memory_ptr",
                      "typeString": "struct Cafe.Sourdough memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4026:142:0"
                },
                {
                  "expression": {
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 284,
                      "name": "startersCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "4187:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4204:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4187:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "4187:18:0"
                },
                {
                  "expression": {
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 288,
                        "name": "Sourdoughs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "4215:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                        }
                      },
                      "id": 290,
                      "indexExpression": {
                        "id": 289,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "4226:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4215:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                        "typeString": "struct Cafe.Sourdough storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 291,
                      "name": "sourdough",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "4237:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sourdough_$73_memory_ptr",
                        "typeString": "struct Cafe.Sourdough memory"
                      }
                    },
                    "src": "4215:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                      "typeString": "struct Cafe.Sourdough storage ref"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "4215:31:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4263:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 234,
                  "id": 295,
                  "nodeType": "Return",
                  "src": "4256:11:0"
                }
              ]
            },
            "documentation": {
              "id": 230,
              "nodeType": "StructuredDocumentation",
              "src": "3743:83:0",
              "text": "@dev Makes a new nonfungible starter with age attributes by burning 50 FLOUR "
            },
            "functionSelector": "07047482",
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createStarter",
            "nameLocation": "3840:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3853:2:0"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "3872:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3872:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3871:6:0"
            },
            "scope": 1676,
            "src": "3831:448:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "4414:576:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 307,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4442:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4442:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 309,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 300,
                              "src": "4453:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 306,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1802,
                            "src": "4432:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4432:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4465:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4432:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973204964206e756d626572206973206e6f74206173736f6369617465642077697468206f6e65206f6620796f75722073746172746572732c20706c6561736520747279207769746820612076616c69642069642e",
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4469:89:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b290af29f0bc043f10836831f7059907e4f28aac69820fcff0eb128e2c1f9cb",
                          "typeString": "literal_string \"This Id number is not associated with one of your starters, please try with a valid id.\""
                        },
                        "value": "This Id number is not associated with one of your starters, please try with a valid id."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b290af29f0bc043f10836831f7059907e4f28aac69820fcff0eb128e2c1f9cb",
                          "typeString": "literal_string \"This Id number is not associated with one of your starters, please try with a valid id.\""
                        }
                      ],
                      "id": 305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4424:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4424:135:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "4424:135:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 317,
                              "name": "Sourdoughs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "4577:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                                "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                              }
                            },
                            "id": 319,
                            "indexExpression": {
                              "id": 318,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 300,
                              "src": "4588:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4577:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                              "typeString": "struct Cafe.Sourdough storage ref"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_timeOfDeath",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62,
                          "src": "4577:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 321,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4613:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4613:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4577:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f757220737461727465722069732064656164212020596f752073686f756c6420686176652066656420697420736f6f6e6572203a28202e",
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4630:59:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9fe4b935e6dff9cd7ebc576e5b97152ac202920befbdc858ce0bc25c23f5b85",
                          "typeString": "literal_string \"Your starter is dead!  You should have fed it sooner :( .\""
                        },
                        "value": "Your starter is dead!  You should have fed it sooner :( ."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9fe4b935e6dff9cd7ebc576e5b97152ac202920befbdc858ce0bc25c23f5b85",
                          "typeString": "literal_string \"Your starter is dead!  You should have fed it sooner :( .\""
                        }
                      ],
                      "id": 316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4569:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4569:121:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "4569:121:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 328,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4711:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4711:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 330,
                        "name": "feedCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "4723:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 327,
                      "name": "_burnFlour",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "4700:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4700:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "4700:32:0"
                },
                {
                  "expression": {
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 333,
                          "name": "Sourdoughs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "4742:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                            "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                          }
                        },
                        "id": 335,
                        "indexExpression": {
                          "id": 334,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "4753:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4742:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                          "typeString": "struct Cafe.Sourdough storage ref"
                        }
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_timeOfDeath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "4742:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 339,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4784:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4784:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 341,
                            "name": "timescale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "4802:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "4784:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4777:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4777:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4777:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4742:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "4742:70:0"
                },
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 346,
                        "name": "Sourdoughs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "4825:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                        }
                      },
                      "id": 348,
                      "indexExpression": {
                        "id": 347,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "4836:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4825:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                        "typeString": "struct Cafe.Sourdough storage ref"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_beingAutoFed",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 70,
                    "src": "4825:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 358,
                  "nodeType": "IfStatement",
                  "src": "4822:102:0",
                  "trueBody": {
                    "id": 357,
                    "nodeType": "Block",
                    "src": "4859:65:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 350,
                                "name": "Sourdoughs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 107,
                                "src": "4873:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                                  "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                                }
                              },
                              "id": 352,
                              "indexExpression": {
                                "id": 351,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 300,
                                "src": "4884:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4873:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                                "typeString": "struct Cafe.Sourdough storage ref"
                              }
                            },
                            "id": 353,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_beingAutoFed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 70,
                            "src": "4873:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4908:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4873:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 356,
                        "nodeType": "ExpressionStatement",
                        "src": "4873:40:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 360,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "4953:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 359,
                      "name": "_updateStarterScore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1132,
                      "src": "4933:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4933:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "4933:28:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4979:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 304,
                  "id": 364,
                  "nodeType": "Return",
                  "src": "4972:11:0"
                }
              ]
            },
            "documentation": {
              "id": 298,
              "nodeType": "StructuredDocumentation",
              "src": "4280:69:0",
              "text": "@dev Burns 50 FLOUR and resets the time of death for your token"
            },
            "functionSelector": "fc4f816c",
            "id": 366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "feedStarter",
            "nameLocation": "4363:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4383:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "4375:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4375:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4374:17:0"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "4408:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4408:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4407:6:0"
            },
            "scope": 1676,
            "src": "4354:636:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 452,
              "nodeType": "Block",
              "src": "5159:688:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 376,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5188:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5188:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 378,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 369,
                              "src": "5199:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 375,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1802,
                            "src": "5178:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5178:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5209:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5178:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973204964206e756d626572206973206e6f74206173736f6369617465642077697468206f6e65206f6620796f75722073746172746572732c20706c6561736520747279207769746820612076616c69642069642e",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5212:89:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b290af29f0bc043f10836831f7059907e4f28aac69820fcff0eb128e2c1f9cb",
                          "typeString": "literal_string \"This Id number is not associated with one of your starters, please try with a valid id.\""
                        },
                        "value": "This Id number is not associated with one of your starters, please try with a valid id."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b290af29f0bc043f10836831f7059907e4f28aac69820fcff0eb128e2c1f9cb",
                          "typeString": "literal_string \"This Id number is not associated with one of your starters, please try with a valid id.\""
                        }
                      ],
                      "id": 374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5170:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5170:132:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "5170:132:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 386,
                              "name": "Sourdoughs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "5320:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                                "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                              }
                            },
                            "id": 388,
                            "indexExpression": {
                              "id": 387,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 369,
                              "src": "5331:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5320:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                              "typeString": "struct Cafe.Sourdough storage ref"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_splitCooldown",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72,
                          "src": "5320:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 390,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5358:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5358:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5320:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520686176652073706c697420746865207374617274657220616c726561647920746f6461792120576169742074696c2720746f6d6f72726f77",
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5374:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935816350a7272c19750df9bd3d2c2569de14ea456df0a3f4aac35a6362af102",
                          "typeString": "literal_string \"You have split the starter already today! Wait til' tomorrow\""
                        },
                        "value": "You have split the starter already today! Wait til' tomorrow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935816350a7272c19750df9bd3d2c2569de14ea456df0a3f4aac35a6362af102",
                          "typeString": "literal_string \"You have split the starter already today! Wait til' tomorrow\""
                        }
                      ],
                      "id": 385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5312:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5312:125:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "5312:125:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 397,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "5459:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 396,
                      "name": "feedStarter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "5447:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5447:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "5447:20:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 401,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "5489:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 400,
                      "name": "feedStarter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "5477:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5477:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "5477:20:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 404,
                      "name": "createStarter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "5507:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5507:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 406,
                  "nodeType": "ExpressionStatement",
                  "src": "5507:15:0"
                },
                {
                  "expression": {
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 407,
                          "name": "Sourdoughs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "5532:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                            "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                          }
                        },
                        "id": 409,
                        "indexExpression": {
                          "id": 408,
                          "name": "startersCreated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "5543:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5532:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                          "typeString": "struct Cafe.Sourdough storage ref"
                        }
                      },
                      "id": 410,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_creationTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66,
                      "src": "5532:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 411,
                          "name": "Sourdoughs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "5576:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                            "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                          }
                        },
                        "id": 413,
                        "indexExpression": {
                          "id": 412,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "5587:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5576:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                          "typeString": "struct Cafe.Sourdough storage ref"
                        }
                      },
                      "id": 414,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_creationTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66,
                      "src": "5576:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "5532:77:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "5532:77:0"
                },
                {
                  "expression": {
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 417,
                          "name": "Sourdoughs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "5619:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                            "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                          }
                        },
                        "id": 419,
                        "indexExpression": {
                          "id": 418,
                          "name": "startersCreated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "5630:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5619:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                          "typeString": "struct Cafe.Sourdough storage ref"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_splitCooldown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "5619:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 423,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5671:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5671:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5689:6:0",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "5671:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5664:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 421,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5664:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5664:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "5619:77:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "5619:77:0"
                },
                {
                  "expression": {
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 430,
                          "name": "Sourdoughs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "5706:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                            "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                          }
                        },
                        "id": 432,
                        "indexExpression": {
                          "id": 431,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "5717:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5706:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                          "typeString": "struct Cafe.Sourdough storage ref"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_childCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "5706:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5739:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5706:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "5706:34:0"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 437,
                          "name": "Sourdoughs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "5750:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                            "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                          }
                        },
                        "id": 439,
                        "indexExpression": {
                          "id": 438,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "5761:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5750:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                          "typeString": "struct Cafe.Sourdough storage ref"
                        }
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_splitCooldown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "5750:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 443,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5793:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5793:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5811:6:0",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "5793:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5786:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5786:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5786:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "5750:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "5750:68:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5835:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 373,
                  "id": 451,
                  "nodeType": "Return",
                  "src": "5828:11:0"
                }
              ]
            },
            "documentation": {
              "id": 367,
              "nodeType": "StructuredDocumentation",
              "src": "4992:101:0",
              "text": "@dev Feeds and duplicates your starter, returning another with identical age - costs 100 FLOUR "
            },
            "functionSelector": "781f1b75",
            "id": 453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitStarter",
            "nameLocation": "5107:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5128:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 453,
                  "src": "5120:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5120:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5119:17:0"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 453,
                  "src": "5153:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5153:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5152:6:0"
            },
            "scope": 1676,
            "src": "5098:749:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 591,
              "nodeType": "Block",
              "src": "6149:1106:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 467,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6177:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6177:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 469,
                              "name": "flourId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "6189:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 466,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1802,
                            "src": "6167:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6167:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 471,
                            "name": "recipe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 457,
                            "src": "6200:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                              "typeString": "struct Cafe.Recipe memory"
                            }
                          },
                          "id": 472,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_flourRequired",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 77,
                          "src": "6200:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6167:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f75676820464c4f555220746f2062616b6520746861742121",
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6222:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7ef753d64f6fc732dcf9be82c76bbe781a062a26cf35b1af5cac98087d6f572",
                          "typeString": "literal_string \"You don't have enough FLOUR to bake that!!\""
                        },
                        "value": "You don't have enough FLOUR to bake that!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7ef753d64f6fc732dcf9be82c76bbe781a062a26cf35b1af5cac98087d6f572",
                          "typeString": "literal_string \"You don't have enough FLOUR to bake that!!\""
                        }
                      ],
                      "id": 465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6159:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6159:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "6159:108:0"
                },
                {
                  "assignments": [
                    478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 478,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "6282:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 591,
                      "src": "6277:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 477,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6277:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 482,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 479,
                        "name": "recipe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "6291:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                          "typeString": "struct Cafe.Recipe memory"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_ages",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "6291:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                        "typeString": "uint32[] memory"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6291:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6277:33:0"
                },
                {
                  "assignments": [
                    487
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 487,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "6334:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 591,
                      "src": "6320:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 485,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6320:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 486,
                        "nodeType": "ArrayTypeName",
                        "src": "6320:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 493,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 491,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "6355:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6344:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 488,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6348:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 489,
                        "nodeType": "ArrayTypeName",
                        "src": "6348:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6344:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6320:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 495,
                              "name": "recipe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "6380:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                                "typeString": "struct Cafe.Recipe memory"
                              }
                            },
                            "id": 496,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_ages",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80,
                            "src": "6380:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                              "typeString": "uint32[] memory"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6380:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 498,
                            "name": "starterBatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 460,
                            "src": "6403:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6403:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6380:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520686176656e277420616464656420746865207269676874206e756d626572206f6620737461727465727320746f2074686520626174636821",
                        "id": 501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6423:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_345d1d491afd7321b553d020a2ab57dae7fe465b8ab31c83ba8fd5a2a7b17b54",
                          "typeString": "literal_string \"You haven't added the right number of starters to the batch!\""
                        },
                        "value": "You haven't added the right number of starters to the batch!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_345d1d491afd7321b553d020a2ab57dae7fe465b8ab31c83ba8fd5a2a7b17b54",
                          "typeString": "literal_string \"You haven't added the right number of starters to the batch!\""
                        }
                      ],
                      "id": 494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6372:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6372:114:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 503,
                  "nodeType": "ExpressionStatement",
                  "src": "6372:114:0"
                },
                {
                  "body": {
                    "id": 573,
                    "nodeType": "Block",
                    "src": "6535:583:0",
                    "statements": [
                      {
                        "assignments": [
                          517
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 517,
                            "mutability": "mutable",
                            "name": "starterAge",
                            "nameLocation": "6556:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 573,
                            "src": "6549:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 516,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6549:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 530,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 520,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6576:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6576:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 522,
                                    "name": "Sourdoughs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 107,
                                    "src": "6592:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                                      "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                                    }
                                  },
                                  "id": 526,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 523,
                                      "name": "starterBatch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 460,
                                      "src": "6603:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 525,
                                    "indexExpression": {
                                      "id": 524,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 505,
                                      "src": "6616:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6603:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6592:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                                    "typeString": "struct Cafe.Sourdough storage ref"
                                  }
                                },
                                "id": 527,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_creationTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 66,
                                "src": "6592:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "6576:57:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6569:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 518,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6569:6:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6569:65:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6549:85:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 532,
                                "name": "starterAge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 517,
                                "src": "6656:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 533,
                                    "name": "recipe",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 457,
                                    "src": "6669:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                                      "typeString": "struct Cafe.Recipe memory"
                                    }
                                  },
                                  "id": 534,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "_ages",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 80,
                                  "src": "6669:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                    "typeString": "uint32[] memory"
                                  }
                                },
                                "id": 536,
                                "indexExpression": {
                                  "id": 535,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 505,
                                  "src": "6682:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6669:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "6656:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f757220737461727465727320617265206e6f74206f6c6420656e6f7567682c20706c656173652075736520746865207374617274657273207265717569726564206279207468697320726563697065",
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6686:83:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47e808586b3f8ff4c63457cd3a694e6449a53f2a1b318d671a5ed50d64d6e252",
                                "typeString": "literal_string \"Your starters are not old enough, please use the starters required by this recipe\""
                              },
                              "value": "Your starters are not old enough, please use the starters required by this recipe"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47e808586b3f8ff4c63457cd3a694e6449a53f2a1b318d671a5ed50d64d6e252",
                                "typeString": "literal_string \"Your starters are not old enough, please use the starters required by this recipe\""
                              }
                            ],
                            "id": 531,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6648:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6648:122:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 540,
                        "nodeType": "ExpressionStatement",
                        "src": "6648:122:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 542,
                                    "name": "Sourdoughs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 107,
                                    "src": "6794:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                                      "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                                    }
                                  },
                                  "id": 546,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 543,
                                      "name": "starterBatch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 460,
                                      "src": "6805:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 545,
                                    "indexExpression": {
                                      "id": 544,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 505,
                                      "src": "6818:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6805:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6794:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                                    "typeString": "struct Cafe.Sourdough storage ref"
                                  }
                                },
                                "id": 547,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_timeOfDeath",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 62,
                                "src": "6794:40:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 548,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6838:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6838:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6794:59:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f757220737461727465727320617265206e6f7420616c6c20616c6976652c20796f75206d757374207573652061206c6976696e6720696e6772656469656e742121",
                              "id": 551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6855:69:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_707a09674fed67c5c0231a35d23281181fac637472df34aa86cf94fb3d7bb6b2",
                                "typeString": "literal_string \"Your starters are not all alive, you must use a living ingredient!!\""
                              },
                              "value": "Your starters are not all alive, you must use a living ingredient!!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_707a09674fed67c5c0231a35d23281181fac637472df34aa86cf94fb3d7bb6b2",
                                "typeString": "literal_string \"Your starters are not all alive, you must use a living ingredient!!\""
                              }
                            ],
                            "id": 541,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6786:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6786:139:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 553,
                        "nodeType": "ExpressionStatement",
                        "src": "6786:139:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 556,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6957:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 557,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6957:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 558,
                                      "name": "starterBatch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 460,
                                      "src": "6968:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 560,
                                    "indexExpression": {
                                      "id": 559,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 505,
                                      "src": "6981:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6968:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 555,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1802,
                                  "src": "6947:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (address,uint256) view returns (uint256)"
                                  }
                                },
                                "id": 561,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6947:37:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6986:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "6947:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54686973204964206e756d626572206973206e6f74206173736f6369617465642077697468206f6e65206f6620796f75722073746172746572732c20706c6561736520747279207769746820612076616c69642069642e",
                              "id": 564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6989:89:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6b290af29f0bc043f10836831f7059907e4f28aac69820fcff0eb128e2c1f9cb",
                                "typeString": "literal_string \"This Id number is not associated with one of your starters, please try with a valid id.\""
                              },
                              "value": "This Id number is not associated with one of your starters, please try with a valid id."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6b290af29f0bc043f10836831f7059907e4f28aac69820fcff0eb128e2c1f9cb",
                                "typeString": "literal_string \"This Id number is not associated with one of your starters, please try with a valid id.\""
                              }
                            ],
                            "id": 554,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6939:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6939:140:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 566,
                        "nodeType": "ExpressionStatement",
                        "src": "6939:140:0"
                      },
                      {
                        "expression": {
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 567,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 487,
                              "src": "7093:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 569,
                            "indexExpression": {
                              "id": 568,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 505,
                              "src": "7101:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7093:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7106:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7093:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 572,
                        "nodeType": "ExpressionStatement",
                        "src": "7093:14:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 508,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "6509:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 509,
                          "name": "recipe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "6511:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                            "typeString": "struct Cafe.Recipe memory"
                          }
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_ages",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "6511:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6511:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6509:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 574,
                  "initializationExpression": {
                    "assignments": [
                      505
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 505,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6505:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 574,
                        "src": "6500:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6500:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 507,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6507:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6500:8:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6531:3:0",
                      "subExpression": {
                        "id": 513,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 505,
                        "src": "6531:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 515,
                    "nodeType": "ExpressionStatement",
                    "src": "6531:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6496:622:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 576,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7138:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7138:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 578,
                        "name": "starterBatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "7150:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 579,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 487,
                        "src": "7164:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 575,
                      "name": "_burnBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2633,
                      "src": "7127:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7127:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "7127:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 583,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7194:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7194:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 585,
                          "name": "recipe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "7205:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                            "typeString": "struct Cafe.Recipe memory"
                          }
                        },
                        "id": 586,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_flourRequired",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 77,
                        "src": "7205:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 582,
                      "name": "_burnFlour",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "7183:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7183:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "7183:44:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7244:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 464,
                  "id": 590,
                  "nodeType": "Return",
                  "src": "7237:11:0"
                }
              ]
            },
            "documentation": {
              "id": 454,
              "nodeType": "StructuredDocumentation",
              "src": "5848:198:0",
              "text": "@dev Internal. Takes a recipe struct and a batch of ingredients by id number.  Burns the ingredients and FLOUR required, then mints a semi-fungible item to the owner\nwith the Id of the recipe "
            },
            "id": 592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_bakeRecipe",
            "nameLocation": "6060:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "recipe",
                  "nameLocation": "6086:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "6072:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                    "typeString": "struct Cafe.Recipe"
                  },
                  "typeName": {
                    "id": 456,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 455,
                      "name": "Recipe",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89,
                      "src": "6072:6:0"
                    },
                    "referencedDeclaration": 89,
                    "src": "6072:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Recipe_$89_storage_ptr",
                      "typeString": "struct Cafe.Recipe"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "starterBatch",
                  "nameLocation": "6111:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "6094:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 458,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6094:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 459,
                    "nodeType": "ArrayTypeName",
                    "src": "6094:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6071:53:0"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "6143:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6143:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6142:6:0"
            },
            "scope": 1676,
            "src": "6051:1204:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 719,
              "nodeType": "Block",
              "src": "7472:749:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 609,
                            "name": "ages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "7490:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                              "typeString": "uint32[] memory"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7490:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7504:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "7490:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c79206861766520757020746f20313020696e6772656469656e747321",
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7508:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2c80e9a97f57a1719943f319a099e2e28c52fb6c15235ef1aee2b62b0534c3d",
                          "typeString": "literal_string \"You can only have up to 10 ingredients!\""
                        },
                        "value": "You can only have up to 10 ingredients!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2c80e9a97f57a1719943f319a099e2e28c52fb6c15235ef1aee2b62b0534c3d",
                          "typeString": "literal_string \"You can only have up to 10 ingredients!\""
                        }
                      ],
                      "id": 608,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7482:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7482:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "7482:68:0"
                },
                {
                  "assignments": [
                    618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 618,
                      "mutability": "mutable",
                      "name": "recipe",
                      "nameLocation": "7574:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 719,
                      "src": "7560:20:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                        "typeString": "struct Cafe.Recipe"
                      },
                      "typeName": {
                        "id": 617,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 616,
                          "name": "Recipe",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89,
                          "src": "7560:6:0"
                        },
                        "referencedDeclaration": 89,
                        "src": "7560:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipe_$89_storage_ptr",
                          "typeString": "struct Cafe.Recipe"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 629,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 620,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "7590:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 621,
                        "name": "flourRequired",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "7595:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 622,
                        "name": "ages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "7610:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 623,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7615:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7615:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7626:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7628:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7630:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 619,
                      "name": "Recipe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "7583:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Recipe_$89_storage_ptr_$",
                        "typeString": "type(struct Cafe.Recipe storage pointer)"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7583:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                      "typeString": "struct Cafe.Recipe memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7560:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 631,
                        "name": "recipe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "7654:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                          "typeString": "struct Cafe.Recipe memory"
                        }
                      },
                      {
                        "id": 632,
                        "name": "starterBatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "7661:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                          "typeString": "struct Cafe.Recipe memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 630,
                      "name": "_bakeRecipe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 592,
                      "src": "7642:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Recipe_$89_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct Cafe.Recipe memory,uint256[] memory) returns (bool)"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7642:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "7642:32:0"
                },
                {
                  "assignments": [
                    639
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 639,
                      "mutability": "mutable",
                      "name": "ages",
                      "nameLocation": "7701:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 719,
                      "src": "7685:20:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                        "typeString": "uint32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 637,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7685:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 638,
                        "nodeType": "ArrayTypeName",
                        "src": "7685:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 642,
                  "initialValue": {
                    "expression": {
                      "id": 640,
                      "name": "recipe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 618,
                      "src": "7708:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                        "typeString": "struct Cafe.Recipe memory"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_ages",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 80,
                    "src": "7708:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                      "typeString": "uint32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7685:35:0"
                },
                {
                  "assignments": [
                    644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 644,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "7737:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 719,
                      "src": "7730:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 643,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7730:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 645,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7730:12:0"
                },
                {
                  "body": {
                    "id": 663,
                    "nodeType": "Block",
                    "src": "7783:39:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 657,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 644,
                            "src": "7797:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 658,
                              "name": "ages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 639,
                              "src": "7804:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                "typeString": "uint32[] memory"
                              }
                            },
                            "id": 660,
                            "indexExpression": {
                              "id": 659,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 647,
                              "src": "7809:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7804:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "7797:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 662,
                        "nodeType": "ExpressionStatement",
                        "src": "7797:14:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 650,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 647,
                      "src": "7765:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 651,
                        "name": "ages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "7767:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7767:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7765:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 664,
                  "initializationExpression": {
                    "assignments": [
                      647
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 647,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7761:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 664,
                        "src": "7756:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 646,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7756:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 649,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7763:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7756:8:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7779:3:0",
                      "subExpression": {
                        "id": 654,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "7779:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 656,
                    "nodeType": "ExpressionStatement",
                    "src": "7779:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "7752:70:0"
                },
                {
                  "expression": {
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 665,
                        "name": "recipe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "7831:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                          "typeString": "struct Cafe.Recipe memory"
                        }
                      },
                      "id": 667,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_score",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "7831:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 668,
                      "name": "total",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "7847:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "7831:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 670,
                  "nodeType": "ExpressionStatement",
                  "src": "7831:21:0"
                },
                {
                  "expression": {
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 671,
                        "name": "recipe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "7863:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                          "typeString": "struct Cafe.Recipe memory"
                        }
                      },
                      "id": 673,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_timesBaked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "7863:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7883:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7863:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 676,
                  "nodeType": "ExpressionStatement",
                  "src": "7863:21:0"
                },
                {
                  "expression": {
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 677,
                      "name": "itemsBaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "7894:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7906:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7894:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 680,
                  "nodeType": "ExpressionStatement",
                  "src": "7894:13:0"
                },
                {
                  "expression": {
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 681,
                      "name": "recipesPublished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "7917:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7935:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7917:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 684,
                  "nodeType": "ExpressionStatement",
                  "src": "7917:19:0"
                },
                {
                  "assignments": [
                    686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 686,
                      "mutability": "mutable",
                      "name": "recipeId",
                      "nameLocation": "7954:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 719,
                      "src": "7946:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 685,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7946:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 690,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 687,
                      "name": "dividerIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "7965:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 688,
                      "name": "recipesPublished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "7980:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7965:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7946:50:0"
                },
                {
                  "expression": {
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 691,
                        "name": "BakedGoods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "8006:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                        }
                      },
                      "id": 693,
                      "indexExpression": {
                        "id": 692,
                        "name": "recipesPublished",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "8017:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8006:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipe_$89_storage",
                        "typeString": "struct Cafe.Recipe storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 694,
                      "name": "recipe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 618,
                      "src": "8037:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                        "typeString": "struct Cafe.Recipe memory"
                      }
                    },
                    "src": "8006:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Recipe_$89_storage",
                      "typeString": "struct Cafe.Recipe storage ref"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "8006:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 702,
                        "name": "recipesPublished",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "8083:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 697,
                          "name": "_ownerRecipes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "8053:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3257_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 700,
                        "indexExpression": {
                          "expression": {
                            "id": 698,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8067:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8067:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8053:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$3257_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 701,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3278,
                      "src": "8053:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$3257_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$3257_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8053:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 704,
                  "nodeType": "ExpressionStatement",
                  "src": "8053:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 706,
                        "name": "recipesPublished",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "8129:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 705,
                      "name": "_updateRecipeScore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1283,
                      "src": "8110:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8110:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "8110:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 710,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8162:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8162:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 712,
                        "name": "recipeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "8173:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8182:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8184:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 709,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2305,
                      "src": "8156:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8156:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "8156:31:0"
                },
                {
                  "expression": {
                    "id": 717,
                    "name": "recipeId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 686,
                    "src": "8204:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 607,
                  "id": 718,
                  "nodeType": "Return",
                  "src": "8197:15:0"
                }
              ]
            },
            "documentation": {
              "id": 593,
              "nodeType": "StructuredDocumentation",
              "src": "7256:64:0",
              "text": "@dev Bakes and publishes a recipe that does not yet exist "
            },
            "functionSelector": "a41e1c17",
            "id": 720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "publishNewRecipe",
            "nameLocation": "7334:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 595,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "7365:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "7351:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7351:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "flourRequired",
                  "nameLocation": "7379:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "7371:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7371:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 600,
                  "mutability": "mutable",
                  "name": "ages",
                  "nameLocation": "7410:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "7394:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                    "typeString": "uint32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 598,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7394:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 599,
                    "nodeType": "ArrayTypeName",
                    "src": "7394:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                      "typeString": "uint32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "starterBatch",
                  "nameLocation": "7433:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "7416:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 601,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7416:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 602,
                    "nodeType": "ArrayTypeName",
                    "src": "7416:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7350:96:0"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 606,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "7463:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7463:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7462:9:0"
            },
            "scope": 1676,
            "src": "7325:896:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 770,
              "nodeType": "Block",
              "src": "8474:293:0",
              "statements": [
                {
                  "assignments": [
                    733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 733,
                      "mutability": "mutable",
                      "name": "recipe",
                      "nameLocation": "8498:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 770,
                      "src": "8484:20:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                        "typeString": "struct Cafe.Recipe"
                      },
                      "typeName": {
                        "id": 732,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 731,
                          "name": "Recipe",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89,
                          "src": "8484:6:0"
                        },
                        "referencedDeclaration": 89,
                        "src": "8484:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipe_$89_storage_ptr",
                          "typeString": "struct Cafe.Recipe"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 737,
                  "initialValue": {
                    "baseExpression": {
                      "id": 734,
                      "name": "BakedGoods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "8507:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                        "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                      }
                    },
                    "id": 736,
                    "indexExpression": {
                      "id": 735,
                      "name": "recipeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "8518:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8507:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Recipe_$89_storage",
                      "typeString": "struct Cafe.Recipe storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8484:43:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 739,
                        "name": "recipe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "8549:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                          "typeString": "struct Cafe.Recipe memory"
                        }
                      },
                      {
                        "id": 740,
                        "name": "starterBatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "8556:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Recipe_$89_memory_ptr",
                          "typeString": "struct Cafe.Recipe memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 738,
                      "name": "_bakeRecipe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 592,
                      "src": "8537:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Recipe_$89_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct Cafe.Recipe memory,uint256[] memory) returns (bool)"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8537:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 742,
                  "nodeType": "ExpressionStatement",
                  "src": "8537:32:0"
                },
                {
                  "expression": {
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 743,
                          "name": "BakedGoods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "8580:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                            "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                          }
                        },
                        "id": 745,
                        "indexExpression": {
                          "id": 744,
                          "name": "recipeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 723,
                          "src": "8591:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8580:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipe_$89_storage",
                          "typeString": "struct Cafe.Recipe storage ref"
                        }
                      },
                      "id": 746,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_timesBaked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "8580:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8614:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "8580:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 749,
                  "nodeType": "ExpressionStatement",
                  "src": "8580:35:0"
                },
                {
                  "expression": {
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 750,
                      "name": "itemsBaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "8634:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8646:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "8634:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "8634:13:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 755,
                        "name": "recipeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "8676:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 754,
                      "name": "_updateRecipeScore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1283,
                      "src": "8657:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8657:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 757,
                  "nodeType": "ExpressionStatement",
                  "src": "8657:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 759,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8701:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8701:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 761,
                          "name": "recipeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 723,
                          "src": "8712:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 762,
                          "name": "dividerIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "8721:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8712:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8734:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8736:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 758,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2305,
                      "src": "8695:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8695:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 767,
                  "nodeType": "ExpressionStatement",
                  "src": "8695:44:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8756:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 730,
                  "id": 769,
                  "nodeType": "Return",
                  "src": "8749:11:0"
                }
              ]
            },
            "documentation": {
              "id": 721,
              "nodeType": "StructuredDocumentation",
              "src": "8222:148:0",
              "text": "@dev Takes the id of an existing recipe and a batch of ingredients.  Burns the batch and the required flour, mints an item with the recipe Id "
            },
            "functionSelector": "4f41393b",
            "id": 771,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bakeExistingRecipe",
            "nameLocation": "8384:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "recipeId",
                  "nameLocation": "8411:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "8403:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8403:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 726,
                  "mutability": "mutable",
                  "name": "starterBatch",
                  "nameLocation": "8438:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "8421:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 724,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8421:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 725,
                    "nodeType": "ArrayTypeName",
                    "src": "8421:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8402:49:0"
            },
            "returnParameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "8468:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8468:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8467:6:0"
            },
            "scope": 1676,
            "src": "8375:392:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "8955:434:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 783,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8983:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8983:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 785,
                                "name": "dividerIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102,
                                "src": "8994:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 786,
                                "name": "recipeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 774,
                                "src": "9009:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8994:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 782,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1802,
                            "src": "8973:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8973:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 789,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 776,
                          "src": "9020:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8973:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e277420686176652074686174206d616e79206f662074686f736520746f2065617421",
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9028:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a08964ff70a9e736825965ce0bfbf98dfc96fa107770b21dd69a414bf5a61d7b",
                          "typeString": "literal_string \"You don't have that many of those to eat!\""
                        },
                        "value": "You don't have that many of those to eat!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a08964ff70a9e736825965ce0bfbf98dfc96fa107770b21dd69a414bf5a61d7b",
                          "typeString": "literal_string \"You don't have that many of those to eat!\""
                        }
                      ],
                      "id": 781,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8965:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8965:107:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 793,
                  "nodeType": "ExpressionStatement",
                  "src": "8965:107:0"
                },
                {
                  "assignments": [
                    795
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 795,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "9098:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "9091:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 794,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9091:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 800,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 796,
                        "name": "BakedGoods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "9106:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                        }
                      },
                      "id": 798,
                      "indexExpression": {
                        "id": 797,
                        "name": "recipeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "9117:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9106:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipe_$89_storage",
                        "typeString": "struct Cafe.Recipe storage ref"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_score",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 88,
                    "src": "9106:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9091:42:0"
                },
                {
                  "assignments": [
                    802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 802,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "9159:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "9151:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 801,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9151:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 806,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 803,
                      "name": "recipeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 774,
                      "src": "9167:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 804,
                      "name": "dividerIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "9178:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9167:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9151:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 808,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9206:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9206:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 810,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "9217:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 811,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "9223:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 807,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2507,
                      "src": "9200:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9200:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 813,
                  "nodeType": "ExpressionStatement",
                  "src": "9200:30:0"
                },
                {
                  "expression": {
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 814,
                          "name": "BakedGoods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "9240:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                            "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                          }
                        },
                        "id": 816,
                        "indexExpression": {
                          "id": 815,
                          "name": "recipeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 774,
                          "src": "9251:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9240:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipe_$89_storage",
                          "typeString": "struct Cafe.Recipe storage ref"
                        }
                      },
                      "id": 817,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_numberEaten",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "9240:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9275:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9240:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 820,
                  "nodeType": "ExpressionStatement",
                  "src": "9240:36:0"
                },
                {
                  "expression": {
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 821,
                        "name": "totalScore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "9286:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 824,
                      "indexExpression": {
                        "expression": {
                          "id": 822,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9297:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9297:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9286:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 827,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 795,
                            "src": "9319:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9311:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 825,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9311:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9311:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 829,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "9326:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9311:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9286:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 832,
                  "nodeType": "ExpressionStatement",
                  "src": "9286:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 834,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9361:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9361:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 833,
                      "name": "_updatePlayerScore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1431,
                      "src": "9342:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9342:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 837,
                  "nodeType": "ExpressionStatement",
                  "src": "9342:30:0"
                }
              ]
            },
            "documentation": {
              "id": 772,
              "nodeType": "StructuredDocumentation",
              "src": "8768:105:0",
              "text": "@dev Burns an item, credits the player with a score equivalent to the total age of all ingredients "
            },
            "functionSelector": "6510989c",
            "id": 839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "eatBakedGood",
            "nameLocation": "8887:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 774,
                  "mutability": "mutable",
                  "name": "recipeId",
                  "nameLocation": "8908:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "8900:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8900:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8926:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "8918:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8918:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8899:34:0"
            },
            "returnParameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "8950:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8950:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8949:6:0"
            },
            "scope": 1676,
            "src": "8878:511:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 917,
              "nodeType": "Block",
              "src": "9474:560:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 850,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9502:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9502:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 852,
                              "name": "starterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "9513:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 849,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1802,
                            "src": "9492:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9492:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9525:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9492:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973204964206e756d626572206973206e6f74206173736f6369617465642077697468206f6e65206f6620796f75722073746172746572732c20706c6561736520747279207769746820612076616c69642069642e",
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9528:89:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b290af29f0bc043f10836831f7059907e4f28aac69820fcff0eb128e2c1f9cb",
                          "typeString": "literal_string \"This Id number is not associated with one of your starters, please try with a valid id.\""
                        },
                        "value": "This Id number is not associated with one of your starters, please try with a valid id."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b290af29f0bc043f10836831f7059907e4f28aac69820fcff0eb128e2c1f9cb",
                          "typeString": "literal_string \"This Id number is not associated with one of your starters, please try with a valid id.\""
                        }
                      ],
                      "id": 848,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9484:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9484:134:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 858,
                  "nodeType": "ExpressionStatement",
                  "src": "9484:134:0"
                },
                {
                  "assignments": [
                    860
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 860,
                      "mutability": "mutable",
                      "name": "cost",
                      "nameLocation": "9636:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 917,
                      "src": "9628:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 859,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9628:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 864,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 861,
                      "name": "feedingTimes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "9643:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 862,
                      "name": "feedCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "9656:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9643:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9628:36:0"
                },
                {
                  "assignments": [
                    866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 866,
                      "mutability": "mutable",
                      "name": "devFee",
                      "nameLocation": "9682:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 917,
                      "src": "9674:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 865,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9674:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 870,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 867,
                      "name": "feedingTimes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "9691:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 868,
                      "name": "feedCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "9704:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9691:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9674:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 872,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9733:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9733:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 874,
                        "name": "cost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 860,
                        "src": "9745:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 871,
                      "name": "_burnFlour",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "9722:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9722:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 876,
                  "nodeType": "ExpressionStatement",
                  "src": "9722:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 878,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9777:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9777:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 880,
                        "name": "devAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "9788:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 881,
                        "name": "flourId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "9799:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 882,
                        "name": "devFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 866,
                        "src": "9807:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9814:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 877,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "9760:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9760:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "9760:57:0"
                },
                {
                  "expression": {
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 886,
                        "name": "isAutoFeeding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "9827:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 889,
                      "indexExpression": {
                        "expression": {
                          "id": 887,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9841:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9841:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9827:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9853:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9827:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "9827:30:0"
                },
                {
                  "expression": {
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 893,
                          "name": "Sourdoughs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "9867:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                            "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                          }
                        },
                        "id": 895,
                        "indexExpression": {
                          "id": 894,
                          "name": "starterId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "9878:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9867:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                          "typeString": "struct Cafe.Sourdough storage ref"
                        }
                      },
                      "id": 896,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_timeOfDeath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "9867:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 899,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9912:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "9912:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 901,
                              "name": "feedingTimes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "9930:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 902,
                              "name": "timescale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "9944:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "9930:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9912:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9905:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 897,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9905:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9905:49:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "9867:87:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 907,
                  "nodeType": "ExpressionStatement",
                  "src": "9867:87:0"
                },
                {
                  "expression": {
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 908,
                          "name": "Sourdoughs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "9964:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                            "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                          }
                        },
                        "id": 910,
                        "indexExpression": {
                          "id": 909,
                          "name": "starterId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "9975:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9964:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                          "typeString": "struct Cafe.Sourdough storage ref"
                        }
                      },
                      "id": 911,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_beingAutoFed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "9964:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10002:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9964:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "9964:42:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10023:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 847,
                  "id": 916,
                  "nodeType": "Return",
                  "src": "10016:11:0"
                }
              ]
            },
            "functionSelector": "b172decc",
            "id": 918,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "autoFeed",
            "nameLocation": "9406:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "feedingTimes",
                  "nameLocation": "9420:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "9415:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9415:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "starterId",
                  "nameLocation": "9441:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "9433:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9433:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9414:37:0"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "9468:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9468:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9467:6:0"
            },
            "scope": 1676,
            "src": "9397:637:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 954,
              "nodeType": "Block",
              "src": "10103:203:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 926,
                              "name": "Sourdoughs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "10121:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                                "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                              }
                            },
                            "id": 928,
                            "indexExpression": {
                              "id": 927,
                              "name": "starterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 920,
                              "src": "10132:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10121:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                              "typeString": "struct Cafe.Sourdough storage ref"
                            }
                          },
                          "id": 929,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_beingAutoFed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70,
                          "src": "10121:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10159:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "10121:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 925,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10113:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10113:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "10113:51:0"
                },
                {
                  "expression": {
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 934,
                          "name": "Sourdoughs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "10174:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                            "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                          }
                        },
                        "id": 936,
                        "indexExpression": {
                          "id": 935,
                          "name": "starterId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 920,
                          "src": "10185:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10174:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                          "typeString": "struct Cafe.Sourdough storage ref"
                        }
                      },
                      "id": 937,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_timeOfDeath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "10174:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 940,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10218:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10218:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 942,
                            "name": "timescale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "10236:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "10218:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10211:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 938,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10211:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10211:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "10174:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 946,
                  "nodeType": "ExpressionStatement",
                  "src": "10174:72:0"
                },
                {
                  "expression": {
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 947,
                          "name": "Sourdoughs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "10256:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                            "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                          }
                        },
                        "id": 949,
                        "indexExpression": {
                          "id": 948,
                          "name": "starterId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 920,
                          "src": "10267:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10256:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                          "typeString": "struct Cafe.Sourdough storage ref"
                        }
                      },
                      "id": 950,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_beingAutoFed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "10256:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10294:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "10256:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 953,
                  "nodeType": "ExpressionStatement",
                  "src": "10256:43:0"
                }
              ]
            },
            "functionSelector": "c8cf79d9",
            "id": 955,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stopAutoFeed",
            "nameLocation": "10050:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 920,
                  "mutability": "mutable",
                  "name": "starterId",
                  "nameLocation": "10071:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 955,
                  "src": "10063:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 919,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10063:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10062:19:0"
            },
            "returnParameters": {
              "id": 924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 923,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 955,
                  "src": "10097:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10097:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10096:6:0"
            },
            "scope": 1676,
            "src": "10041:265:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1131,
              "nodeType": "Block",
              "src": "10381:1344:0",
              "statements": [
                {
                  "assignments": [
                    961
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 961,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "10396:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1131,
                      "src": "10391:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 960,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10391:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 963,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10404:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10391:14:0"
                },
                {
                  "assignments": [
                    965
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 965,
                      "mutability": "mutable",
                      "name": "isOnList",
                      "nameLocation": "10420:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1131,
                      "src": "10415:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 964,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10415:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 967,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10431:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10415:21:0"
                },
                {
                  "body": {
                    "id": 989,
                    "nodeType": "Block",
                    "src": "10461:159:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 971,
                              "name": "starterHighScore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "10478:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$11_storage",
                                "typeString": "uint256[11] storage ref"
                              }
                            },
                            "id": 973,
                            "indexExpression": {
                              "id": 972,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "10495:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10478:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 974,
                            "name": "_starterId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 957,
                            "src": "10503:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10478:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 982,
                        "nodeType": "IfStatement",
                        "src": "10475:108:0",
                        "trueBody": {
                          "id": 981,
                          "nodeType": "Block",
                          "src": "10514:69:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 976,
                                  "name": "isOnList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 965,
                                  "src": "10532:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 977,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10541:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "10532:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 979,
                              "nodeType": "ExpressionStatement",
                              "src": "10532:13:0"
                            },
                            {
                              "id": 980,
                              "nodeType": "Break",
                              "src": "10563:5:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 983,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "10596:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 984,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "10602:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10608:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "10602:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10596:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 988,
                        "nodeType": "ExpressionStatement",
                        "src": "10596:13:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 968,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 961,
                      "src": "10452:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10458:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "10452:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 990,
                  "nodeType": "WhileStatement",
                  "src": "10446:174:0"
                },
                {
                  "condition": {
                    "id": 991,
                    "name": "isOnList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 965,
                    "src": "10633:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1024,
                  "nodeType": "IfStatement",
                  "src": "10630:239:0",
                  "trueBody": {
                    "id": 1023,
                    "nodeType": "Block",
                    "src": "10642:227:0",
                    "statements": [
                      {
                        "body": {
                          "id": 1021,
                          "nodeType": "Block",
                          "src": "10671:188:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 995,
                                    "name": "starterHighScore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 138,
                                    "src": "10689:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$11_storage",
                                      "typeString": "uint256[11] storage ref"
                                    }
                                  },
                                  "id": 997,
                                  "indexExpression": {
                                    "id": 996,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 961,
                                    "src": "10706:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10689:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 998,
                                    "name": "starterHighScore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 138,
                                    "src": "10713:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$11_storage",
                                      "typeString": "uint256[11] storage ref"
                                    }
                                  },
                                  "id": 1002,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1001,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 999,
                                      "name": "index",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 961,
                                      "src": "10730:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1000,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10736:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "10730:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10713:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10689:49:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1004,
                              "nodeType": "ExpressionStatement",
                              "src": "10689:49:0"
                            },
                            {
                              "expression": {
                                "id": 1013,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1005,
                                    "name": "starterHighScoreAges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 134,
                                    "src": "10756:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint32_$11_storage",
                                      "typeString": "uint32[11] storage ref"
                                    }
                                  },
                                  "id": 1007,
                                  "indexExpression": {
                                    "id": 1006,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 961,
                                    "src": "10777:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10756:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1008,
                                    "name": "starterHighScoreAges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 134,
                                    "src": "10784:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint32_$11_storage",
                                      "typeString": "uint32[11] storage ref"
                                    }
                                  },
                                  "id": 1012,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1011,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1009,
                                      "name": "index",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 961,
                                      "src": "10805:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1010,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10811:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "10805:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10784:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "10756:57:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "id": 1014,
                              "nodeType": "ExpressionStatement",
                              "src": "10756:57:0"
                            },
                            {
                              "expression": {
                                "id": 1019,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1015,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 961,
                                  "src": "10831:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1018,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1016,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 961,
                                    "src": "10837:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1017,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10843:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "10837:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10831:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1020,
                              "nodeType": "ExpressionStatement",
                              "src": "10831:13:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 992,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "10662:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10668:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "10662:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1022,
                        "nodeType": "WhileStatement",
                        "src": "10656:203:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1025,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 961,
                      "src": "10878:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10885:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10878:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1028,
                  "nodeType": "ExpressionStatement",
                  "src": "10878:8:0"
                },
                {
                  "assignments": [
                    1030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1030,
                      "mutability": "mutable",
                      "name": "toBeat",
                      "nameLocation": "10903:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1131,
                      "src": "10896:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1029,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10896:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1034,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1031,
                      "name": "starterHighScoreAges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "10912:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$11_storage",
                        "typeString": "uint32[11] storage ref"
                      }
                    },
                    "id": 1033,
                    "indexExpression": {
                      "id": 1032,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 961,
                      "src": "10933:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10912:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10896:43:0"
                },
                {
                  "assignments": [
                    1036
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1036,
                      "mutability": "mutable",
                      "name": "score",
                      "nameLocation": "10956:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1131,
                      "src": "10949:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1035,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10949:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1047,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1039,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10972:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10972:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1041,
                              "name": "Sourdoughs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "10990:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                                "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                              }
                            },
                            "id": 1043,
                            "indexExpression": {
                              "id": 1042,
                              "name": "_starterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 957,
                              "src": "11001:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10990:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                              "typeString": "struct Cafe.Sourdough storage ref"
                            }
                          },
                          "id": 1044,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_creationTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66,
                          "src": "10990:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "10972:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10964:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 1037,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10964:6:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10964:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10949:79:0"
                },
                {
                  "body": {
                    "id": 1070,
                    "nodeType": "Block",
                    "src": "11060:174:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1051,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "11074:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1052,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "11080:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11086:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11080:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11074:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1056,
                        "nodeType": "ExpressionStatement",
                        "src": "11074:13:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1057,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "11104:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11110:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "11104:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1068,
                          "nodeType": "Block",
                          "src": "11155:69:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1066,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1062,
                                  "name": "toBeat",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1030,
                                  "src": "11173:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1063,
                                    "name": "starterHighScoreAges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 134,
                                    "src": "11182:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint32_$11_storage",
                                      "typeString": "uint32[11] storage ref"
                                    }
                                  },
                                  "id": 1065,
                                  "indexExpression": {
                                    "id": 1064,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 961,
                                    "src": "11203:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11182:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "11173:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "id": 1067,
                              "nodeType": "ExpressionStatement",
                              "src": "11173:36:0"
                            }
                          ]
                        },
                        "id": 1069,
                        "nodeType": "IfStatement",
                        "src": "11101:123:0",
                        "trueBody": {
                          "id": 1061,
                          "nodeType": "Block",
                          "src": "11113:38:0",
                          "statements": [
                            {
                              "id": 1060,
                              "nodeType": "Break",
                              "src": "11131:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1048,
                      "name": "score",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "11044:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1049,
                      "name": "toBeat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1030,
                      "src": "11053:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "11044:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1071,
                  "nodeType": "WhileStatement",
                  "src": "11038:196:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1072,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 961,
                      "src": "11247:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 1073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11253:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "11247:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1130,
                  "nodeType": "IfStatement",
                  "src": "11244:475:0",
                  "trueBody": {
                    "id": 1129,
                    "nodeType": "Block",
                    "src": "11256:463:0",
                    "statements": [
                      {
                        "assignments": [
                          1076
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1076,
                            "mutability": "mutable",
                            "name": "index2",
                            "nameLocation": "11275:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1129,
                            "src": "11270:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1075,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11270:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1078,
                        "initialValue": {
                          "hexValue": "39",
                          "id": 1077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11283:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11270:14:0"
                      },
                      {
                        "body": {
                          "id": 1115,
                          "nodeType": "Block",
                          "src": "11318:295:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1090,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1082,
                                    "name": "starterHighScore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 138,
                                    "src": "11336:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$11_storage",
                                      "typeString": "uint256[11] storage ref"
                                    }
                                  },
                                  "id": 1086,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1085,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1083,
                                      "name": "index2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1076,
                                      "src": "11353:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1084,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11360:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "11353:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11336:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1087,
                                    "name": "starterHighScore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 138,
                                    "src": "11365:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$11_storage",
                                      "typeString": "uint256[11] storage ref"
                                    }
                                  },
                                  "id": 1089,
                                  "indexExpression": {
                                    "id": 1088,
                                    "name": "index2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1076,
                                    "src": "11382:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11365:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11336:53:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1091,
                              "nodeType": "ExpressionStatement",
                              "src": "11336:53:0"
                            },
                            {
                              "expression": {
                                "id": 1100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1092,
                                    "name": "starterHighScoreAges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 134,
                                    "src": "11407:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint32_$11_storage",
                                      "typeString": "uint32[11] storage ref"
                                    }
                                  },
                                  "id": 1096,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1095,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1093,
                                      "name": "index2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1076,
                                      "src": "11428:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1094,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11435:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "11428:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11407:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1097,
                                    "name": "starterHighScoreAges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 134,
                                    "src": "11438:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint32_$11_storage",
                                      "typeString": "uint32[11] storage ref"
                                    }
                                  },
                                  "id": 1099,
                                  "indexExpression": {
                                    "id": 1098,
                                    "name": "index2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1076,
                                    "src": "11459:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11438:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "11407:59:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "id": 1101,
                              "nodeType": "ExpressionStatement",
                              "src": "11407:59:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1102,
                                  "name": "index2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1076,
                                  "src": "11487:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1103,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11495:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "11487:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1113,
                                "nodeType": "Block",
                                "src": "11553:46:0",
                                "statements": [
                                  {
                                    "id": 1112,
                                    "nodeType": "Break",
                                    "src": "11575:5:0"
                                  }
                                ]
                              },
                              "id": 1114,
                              "nodeType": "IfStatement",
                              "src": "11484:115:0",
                              "trueBody": {
                                "id": 1111,
                                "nodeType": "Block",
                                "src": "11497:35:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1109,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1105,
                                        "name": "index2",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1076,
                                        "src": "11515:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1108,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1106,
                                          "name": "index2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1076,
                                          "src": "11522:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1107,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11529:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "11522:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11515:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1110,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11515:15:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1079,
                            "name": "index2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1076,
                            "src": "11304:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1080,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "11312:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11304:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1116,
                        "nodeType": "WhileStatement",
                        "src": "11298:315:0"
                      },
                      {
                        "expression": {
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1117,
                              "name": "starterHighScore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "11626:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$11_storage",
                                "typeString": "uint256[11] storage ref"
                              }
                            },
                            "id": 1119,
                            "indexExpression": {
                              "id": 1118,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "11643:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11626:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1120,
                            "name": "_starterId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 957,
                            "src": "11651:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11626:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1122,
                        "nodeType": "ExpressionStatement",
                        "src": "11626:35:0"
                      },
                      {
                        "expression": {
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1123,
                              "name": "starterHighScoreAges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 134,
                              "src": "11675:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$11_storage",
                                "typeString": "uint32[11] storage ref"
                              }
                            },
                            "id": 1125,
                            "indexExpression": {
                              "id": 1124,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "11696:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11675:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1126,
                            "name": "score",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1036,
                            "src": "11703:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "11675:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 1128,
                        "nodeType": "ExpressionStatement",
                        "src": "11675:33:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateStarterScore",
            "nameLocation": "10332:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 957,
                  "mutability": "mutable",
                  "name": "_starterId",
                  "nameLocation": "10360:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "10352:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10352:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10351:20:0"
            },
            "returnParameters": {
              "id": 959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10381:0:0"
            },
            "scope": 1676,
            "src": "10323:1402:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1282,
              "nodeType": "Block",
              "src": "11797:1143:0",
              "statements": [
                {
                  "assignments": [
                    1138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1138,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "11812:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1282,
                      "src": "11807:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1137,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11807:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1140,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11820:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11807:14:0"
                },
                {
                  "assignments": [
                    1142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1142,
                      "mutability": "mutable",
                      "name": "isOnList",
                      "nameLocation": "11836:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1282,
                      "src": "11831:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1141,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11831:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1144,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11847:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11831:21:0"
                },
                {
                  "body": {
                    "id": 1166,
                    "nodeType": "Block",
                    "src": "11877:157:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1148,
                              "name": "recipeHighScore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 142,
                              "src": "11894:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$11_storage",
                                "typeString": "uint256[11] storage ref"
                              }
                            },
                            "id": 1150,
                            "indexExpression": {
                              "id": 1149,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1138,
                              "src": "11910:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11894:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1151,
                            "name": "_recipeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "11918:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11894:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1159,
                        "nodeType": "IfStatement",
                        "src": "11891:106:0",
                        "trueBody": {
                          "id": 1158,
                          "nodeType": "Block",
                          "src": "11928:69:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1153,
                                  "name": "isOnList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1142,
                                  "src": "11946:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1154,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11955:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "11946:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1156,
                              "nodeType": "ExpressionStatement",
                              "src": "11946:13:0"
                            },
                            {
                              "id": 1157,
                              "nodeType": "Break",
                              "src": "11977:5:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1160,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1138,
                            "src": "12010:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1161,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1138,
                              "src": "12016:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12022:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12016:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12010:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1165,
                        "nodeType": "ExpressionStatement",
                        "src": "12010:13:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1145,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1138,
                      "src": "11868:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 1146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11874:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "11868:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1167,
                  "nodeType": "WhileStatement",
                  "src": "11862:172:0"
                },
                {
                  "condition": {
                    "id": 1168,
                    "name": "isOnList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1142,
                    "src": "12047:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1191,
                  "nodeType": "IfStatement",
                  "src": "12044:162:0",
                  "trueBody": {
                    "id": 1190,
                    "nodeType": "Block",
                    "src": "12056:150:0",
                    "statements": [
                      {
                        "body": {
                          "id": 1188,
                          "nodeType": "Block",
                          "src": "12085:111:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1172,
                                    "name": "recipeHighScore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 142,
                                    "src": "12103:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$11_storage",
                                      "typeString": "uint256[11] storage ref"
                                    }
                                  },
                                  "id": 1174,
                                  "indexExpression": {
                                    "id": 1173,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1138,
                                    "src": "12119:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12103:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1175,
                                    "name": "recipeHighScore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 142,
                                    "src": "12126:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$11_storage",
                                      "typeString": "uint256[11] storage ref"
                                    }
                                  },
                                  "id": 1179,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1178,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1176,
                                      "name": "index",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1138,
                                      "src": "12142:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1177,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12148:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "12142:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12126:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12103:47:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1181,
                              "nodeType": "ExpressionStatement",
                              "src": "12103:47:0"
                            },
                            {
                              "expression": {
                                "id": 1186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1182,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1138,
                                  "src": "12168:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1185,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1183,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1138,
                                    "src": "12174:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12180:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "12174:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12168:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1187,
                              "nodeType": "ExpressionStatement",
                              "src": "12168:13:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1169,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1138,
                            "src": "12076:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 1170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12082:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "12076:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1189,
                        "nodeType": "WhileStatement",
                        "src": "12070:126:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1192,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1138,
                      "src": "12216:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12222:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12216:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1195,
                  "nodeType": "ExpressionStatement",
                  "src": "12216:7:0"
                },
                {
                  "assignments": [
                    1197
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1197,
                      "mutability": "mutable",
                      "name": "score",
                      "nameLocation": "12241:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1282,
                      "src": "12233:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1196,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12233:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1202,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1198,
                        "name": "BakedGoods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "12249:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                        }
                      },
                      "id": 1200,
                      "indexExpression": {
                        "id": 1199,
                        "name": "_recipeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "12260:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12249:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipe_$89_storage",
                        "typeString": "struct Cafe.Recipe storage ref"
                      }
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_timesBaked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 84,
                    "src": "12249:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12233:49:0"
                },
                {
                  "assignments": [
                    1204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1204,
                      "mutability": "mutable",
                      "name": "toBeat",
                      "nameLocation": "12300:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1282,
                      "src": "12292:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1203,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12292:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1211,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1205,
                        "name": "BakedGoods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "12309:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                        }
                      },
                      "id": 1209,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 1206,
                          "name": "recipeHighScore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "12320:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$11_storage",
                            "typeString": "uint256[11] storage ref"
                          }
                        },
                        "id": 1208,
                        "indexExpression": {
                          "id": 1207,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1138,
                          "src": "12336:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12320:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12309:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipe_$89_storage",
                        "typeString": "struct Cafe.Recipe storage ref"
                      }
                    },
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_timesBaked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 84,
                    "src": "12309:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12292:63:0"
                },
                {
                  "body": {
                    "id": 1237,
                    "nodeType": "Block",
                    "src": "12387:193:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1215,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1138,
                            "src": "12401:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1216,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1138,
                              "src": "12407:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12413:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12407:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12401:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1220,
                        "nodeType": "ExpressionStatement",
                        "src": "12401:13:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1221,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1138,
                            "src": "12431:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 1222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12437:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "12431:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1235,
                          "nodeType": "Block",
                          "src": "12482:88:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1226,
                                  "name": "toBeat",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1204,
                                  "src": "12500:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1227,
                                      "name": "BakedGoods",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 116,
                                      "src": "12509:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                                        "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                                      }
                                    },
                                    "id": 1231,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 1228,
                                        "name": "recipeHighScore",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 142,
                                        "src": "12520:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$11_storage",
                                          "typeString": "uint256[11] storage ref"
                                        }
                                      },
                                      "id": 1230,
                                      "indexExpression": {
                                        "id": 1229,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1138,
                                        "src": "12536:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12520:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12509:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Recipe_$89_storage",
                                      "typeString": "struct Cafe.Recipe storage ref"
                                    }
                                  },
                                  "id": 1232,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "_timesBaked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 84,
                                  "src": "12509:46:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12500:55:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1234,
                              "nodeType": "ExpressionStatement",
                              "src": "12500:55:0"
                            }
                          ]
                        },
                        "id": 1236,
                        "nodeType": "IfStatement",
                        "src": "12428:142:0",
                        "trueBody": {
                          "id": 1225,
                          "nodeType": "Block",
                          "src": "12440:38:0",
                          "statements": [
                            {
                              "id": 1224,
                              "nodeType": "Break",
                              "src": "12458:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1212,
                      "name": "score",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1197,
                      "src": "12371:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1213,
                      "name": "toBeat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1204,
                      "src": "12380:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12371:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1238,
                  "nodeType": "WhileStatement",
                  "src": "12365:215:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1239,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1138,
                      "src": "12593:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 1240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12599:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "12593:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1281,
                  "nodeType": "IfStatement",
                  "src": "12590:345:0",
                  "trueBody": {
                    "id": 1280,
                    "nodeType": "Block",
                    "src": "12602:333:0",
                    "statements": [
                      {
                        "assignments": [
                          1243
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1243,
                            "mutability": "mutable",
                            "name": "index2",
                            "nameLocation": "12621:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1280,
                            "src": "12616:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1242,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "12616:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1245,
                        "initialValue": {
                          "hexValue": "39",
                          "id": 1244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12630:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12616:15:0"
                      },
                      {
                        "body": {
                          "id": 1272,
                          "nodeType": "Block",
                          "src": "12665:214:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1249,
                                    "name": "recipeHighScore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 142,
                                    "src": "12683:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$11_storage",
                                      "typeString": "uint256[11] storage ref"
                                    }
                                  },
                                  "id": 1253,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1252,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1250,
                                      "name": "index2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1243,
                                      "src": "12699:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1251,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12706:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "12699:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12683:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1254,
                                    "name": "recipeHighScore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 142,
                                    "src": "12709:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$11_storage",
                                      "typeString": "uint256[11] storage ref"
                                    }
                                  },
                                  "id": 1256,
                                  "indexExpression": {
                                    "id": 1255,
                                    "name": "index2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1243,
                                    "src": "12725:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12709:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12683:49:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1258,
                              "nodeType": "ExpressionStatement",
                              "src": "12683:49:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1259,
                                  "name": "index2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1243,
                                  "src": "12753:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1260,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12761:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "12753:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1270,
                                "nodeType": "Block",
                                "src": "12819:46:0",
                                "statements": [
                                  {
                                    "id": 1269,
                                    "nodeType": "Break",
                                    "src": "12841:5:0"
                                  }
                                ]
                              },
                              "id": 1271,
                              "nodeType": "IfStatement",
                              "src": "12750:115:0",
                              "trueBody": {
                                "id": 1268,
                                "nodeType": "Block",
                                "src": "12763:35:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1266,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1262,
                                        "name": "index2",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1243,
                                        "src": "12781:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1265,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1263,
                                          "name": "index2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1243,
                                          "src": "12788:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1264,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12795:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "12788:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12781:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1267,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12781:15:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1246,
                            "name": "index2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1243,
                            "src": "12651:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1247,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1138,
                            "src": "12659:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12651:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1273,
                        "nodeType": "WhileStatement",
                        "src": "12645:234:0"
                      },
                      {
                        "expression": {
                          "id": 1278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1274,
                              "name": "recipeHighScore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 142,
                              "src": "12892:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$11_storage",
                                "typeString": "uint256[11] storage ref"
                              }
                            },
                            "id": 1276,
                            "indexExpression": {
                              "id": 1275,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1138,
                              "src": "12908:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12892:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1277,
                            "name": "_recipeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "12915:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12892:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1279,
                        "nodeType": "ExpressionStatement",
                        "src": "12892:32:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateRecipeScore",
            "nameLocation": "11750:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1134,
                  "mutability": "mutable",
                  "name": "_recipeId",
                  "nameLocation": "11777:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "11769:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11769:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11768:19:0"
            },
            "returnParameters": {
              "id": 1136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11797:0:0"
            },
            "scope": 1676,
            "src": "11741:1199:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1430,
              "nodeType": "Block",
              "src": "13005:1096:0",
              "statements": [
                {
                  "assignments": [
                    1289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1289,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "13020:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "13015:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1288,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13015:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1291,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13028:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13015:14:0"
                },
                {
                  "assignments": [
                    1293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1293,
                      "mutability": "mutable",
                      "name": "isOnList",
                      "nameLocation": "13044:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "13039:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1292,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13039:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1295,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13055:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13039:21:0"
                },
                {
                  "body": {
                    "id": 1317,
                    "nodeType": "Block",
                    "src": "13085:155:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1299,
                              "name": "playerHighScore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "13102:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$11_storage",
                                "typeString": "address[11] storage ref"
                              }
                            },
                            "id": 1301,
                            "indexExpression": {
                              "id": 1300,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1289,
                              "src": "13118:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13102:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1302,
                            "name": "_player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1285,
                            "src": "13126:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13102:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1310,
                        "nodeType": "IfStatement",
                        "src": "13099:104:0",
                        "trueBody": {
                          "id": 1309,
                          "nodeType": "Block",
                          "src": "13134:69:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1304,
                                  "name": "isOnList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1293,
                                  "src": "13152:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13161:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "13152:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1307,
                              "nodeType": "ExpressionStatement",
                              "src": "13152:13:0"
                            },
                            {
                              "id": 1308,
                              "nodeType": "Break",
                              "src": "13183:5:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1311,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "13216:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1312,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1289,
                              "src": "13222:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13228:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "13222:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13216:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1316,
                        "nodeType": "ExpressionStatement",
                        "src": "13216:13:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1296,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1289,
                      "src": "13076:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 1297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13082:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "13076:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1318,
                  "nodeType": "WhileStatement",
                  "src": "13070:170:0"
                },
                {
                  "condition": {
                    "id": 1319,
                    "name": "isOnList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1293,
                    "src": "13252:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1342,
                  "nodeType": "IfStatement",
                  "src": "13249:162:0",
                  "trueBody": {
                    "id": 1341,
                    "nodeType": "Block",
                    "src": "13261:150:0",
                    "statements": [
                      {
                        "body": {
                          "id": 1339,
                          "nodeType": "Block",
                          "src": "13290:111:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1323,
                                    "name": "playerHighScore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 146,
                                    "src": "13308:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$11_storage",
                                      "typeString": "address[11] storage ref"
                                    }
                                  },
                                  "id": 1325,
                                  "indexExpression": {
                                    "id": 1324,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1289,
                                    "src": "13324:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13308:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1326,
                                    "name": "playerHighScore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 146,
                                    "src": "13331:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$11_storage",
                                      "typeString": "address[11] storage ref"
                                    }
                                  },
                                  "id": 1330,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1329,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1327,
                                      "name": "index",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1289,
                                      "src": "13347:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1328,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13353:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "13347:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13331:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "13308:47:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1332,
                              "nodeType": "ExpressionStatement",
                              "src": "13308:47:0"
                            },
                            {
                              "expression": {
                                "id": 1337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1333,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1289,
                                  "src": "13373:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1336,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1334,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1289,
                                    "src": "13379:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1335,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13385:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "13379:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13373:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1338,
                              "nodeType": "ExpressionStatement",
                              "src": "13373:13:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1320,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "13281:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 1321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13287:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "13281:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1340,
                        "nodeType": "WhileStatement",
                        "src": "13275:126:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1343,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1289,
                      "src": "13420:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13426:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13420:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1346,
                  "nodeType": "ExpressionStatement",
                  "src": "13420:7:0"
                },
                {
                  "assignments": [
                    1348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1348,
                      "mutability": "mutable",
                      "name": "score",
                      "nameLocation": "13445:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "13437:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1347,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13437:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1352,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1349,
                      "name": "totalScore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "13453:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1351,
                    "indexExpression": {
                      "id": 1350,
                      "name": "_player",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1285,
                      "src": "13464:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13453:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13437:35:0"
                },
                {
                  "assignments": [
                    1354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1354,
                      "mutability": "mutable",
                      "name": "toBeat",
                      "nameLocation": "13490:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "13482:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1353,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13482:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1360,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1355,
                      "name": "totalScore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "13499:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1359,
                    "indexExpression": {
                      "baseExpression": {
                        "id": 1356,
                        "name": "playerHighScore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "13510:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$11_storage",
                          "typeString": "address[11] storage ref"
                        }
                      },
                      "id": 1358,
                      "indexExpression": {
                        "id": 1357,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1289,
                        "src": "13526:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13510:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13499:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13482:51:0"
                },
                {
                  "body": {
                    "id": 1385,
                    "nodeType": "Block",
                    "src": "13563:181:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1364,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "13577:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1365,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1289,
                              "src": "13583:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13589:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "13583:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13577:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1369,
                        "nodeType": "ExpressionStatement",
                        "src": "13577:13:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1370,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "13607:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 1371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13613:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "13607:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1383,
                          "nodeType": "Block",
                          "src": "13658:76:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1381,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1375,
                                  "name": "toBeat",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1354,
                                  "src": "13676:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1376,
                                    "name": "totalScore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 125,
                                    "src": "13685:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1380,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1377,
                                      "name": "playerHighScore",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 146,
                                      "src": "13696:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$11_storage",
                                        "typeString": "address[11] storage ref"
                                      }
                                    },
                                    "id": 1379,
                                    "indexExpression": {
                                      "id": 1378,
                                      "name": "index",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1289,
                                      "src": "13712:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13696:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13685:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13676:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1382,
                              "nodeType": "ExpressionStatement",
                              "src": "13676:43:0"
                            }
                          ]
                        },
                        "id": 1384,
                        "nodeType": "IfStatement",
                        "src": "13604:130:0",
                        "trueBody": {
                          "id": 1374,
                          "nodeType": "Block",
                          "src": "13616:38:0",
                          "statements": [
                            {
                              "id": 1373,
                              "nodeType": "Break",
                              "src": "13634:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1361,
                      "name": "score",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1348,
                      "src": "13549:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1362,
                      "name": "toBeat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1354,
                      "src": "13556:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13549:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1386,
                  "nodeType": "WhileStatement",
                  "src": "13543:201:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1387,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1289,
                      "src": "13756:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 1388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13762:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "13756:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1429,
                  "nodeType": "IfStatement",
                  "src": "13753:342:0",
                  "trueBody": {
                    "id": 1428,
                    "nodeType": "Block",
                    "src": "13765:330:0",
                    "statements": [
                      {
                        "assignments": [
                          1391
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1391,
                            "mutability": "mutable",
                            "name": "index2",
                            "nameLocation": "13784:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1428,
                            "src": "13779:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1390,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "13779:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1393,
                        "initialValue": {
                          "hexValue": "39",
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13792:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13779:14:0"
                      },
                      {
                        "body": {
                          "id": 1420,
                          "nodeType": "Block",
                          "src": "13827:214:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1397,
                                    "name": "playerHighScore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 146,
                                    "src": "13845:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$11_storage",
                                      "typeString": "address[11] storage ref"
                                    }
                                  },
                                  "id": 1401,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1400,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1398,
                                      "name": "index2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1391,
                                      "src": "13861:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1399,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13868:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "13861:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13845:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1402,
                                    "name": "playerHighScore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 146,
                                    "src": "13871:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$11_storage",
                                      "typeString": "address[11] storage ref"
                                    }
                                  },
                                  "id": 1404,
                                  "indexExpression": {
                                    "id": 1403,
                                    "name": "index2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1391,
                                    "src": "13887:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13871:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "13845:49:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1406,
                              "nodeType": "ExpressionStatement",
                              "src": "13845:49:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1407,
                                  "name": "index2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1391,
                                  "src": "13915:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1408,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13923:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "13915:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1418,
                                "nodeType": "Block",
                                "src": "13981:46:0",
                                "statements": [
                                  {
                                    "id": 1417,
                                    "nodeType": "Break",
                                    "src": "14003:5:0"
                                  }
                                ]
                              },
                              "id": 1419,
                              "nodeType": "IfStatement",
                              "src": "13912:115:0",
                              "trueBody": {
                                "id": 1416,
                                "nodeType": "Block",
                                "src": "13925:35:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1414,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1410,
                                        "name": "index2",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1391,
                                        "src": "13943:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1413,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1411,
                                          "name": "index2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1391,
                                          "src": "13950:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1412,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13957:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "13950:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "13943:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1415,
                                    "nodeType": "ExpressionStatement",
                                    "src": "13943:15:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1394,
                            "name": "index2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1391,
                            "src": "13813:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1395,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "13821:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13813:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1421,
                        "nodeType": "WhileStatement",
                        "src": "13807:234:0"
                      },
                      {
                        "expression": {
                          "id": 1426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1422,
                              "name": "playerHighScore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "14054:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$11_storage",
                                "typeString": "address[11] storage ref"
                              }
                            },
                            "id": 1424,
                            "indexExpression": {
                              "id": 1423,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1289,
                              "src": "14070:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14054:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1425,
                            "name": "_player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1285,
                            "src": "14077:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14054:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1427,
                        "nodeType": "ExpressionStatement",
                        "src": "14054:30:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updatePlayerScore",
            "nameLocation": "12960:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1285,
                  "mutability": "mutable",
                  "name": "_player",
                  "nameLocation": "12987:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1431,
                  "src": "12979:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12979:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12978:17:0"
            },
            "returnParameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13005:0:0"
            },
            "scope": 1676,
            "src": "12951:1150:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1444,
              "nodeType": "Block",
              "src": "14236:58:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1439,
                        "name": "Sourdoughs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "14253:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                        }
                      },
                      "id": 1441,
                      "indexExpression": {
                        "id": 1440,
                        "name": "starterId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1434,
                        "src": "14264:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14253:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                        "typeString": "struct Cafe.Sourdough storage ref"
                      }
                    },
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_timeOfDeath",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 62,
                    "src": "14253:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 1438,
                  "id": 1443,
                  "nodeType": "Return",
                  "src": "14246:41:0"
                }
              ]
            },
            "documentation": {
              "id": 1432,
              "nodeType": "StructuredDocumentation",
              "src": "14109:52:0",
              "text": "@dev Helper functions for the Sourdough Struct "
            },
            "functionSelector": "7f8315cd",
            "id": 1445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTimeOfDeath",
            "nameLocation": "14175:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1434,
                  "mutability": "mutable",
                  "name": "starterId",
                  "nameLocation": "14198:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1445,
                  "src": "14190:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14190:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14189:19:0"
            },
            "returnParameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1437,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1445,
                  "src": "14229:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1436,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14229:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14228:8:0"
            },
            "scope": 1676,
            "src": "14166:128:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1457,
              "nodeType": "Block",
              "src": "14367:57:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1452,
                        "name": "Sourdoughs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "14384:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                        }
                      },
                      "id": 1454,
                      "indexExpression": {
                        "id": 1453,
                        "name": "starterId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1447,
                        "src": "14395:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14384:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                        "typeString": "struct Cafe.Sourdough storage ref"
                      }
                    },
                    "id": 1455,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_childCount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64,
                    "src": "14384:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1451,
                  "id": 1456,
                  "nodeType": "Return",
                  "src": "14377:40:0"
                }
              ]
            },
            "functionSelector": "7a77af5c",
            "id": 1458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChildCount",
            "nameLocation": "14308:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1447,
                  "mutability": "mutable",
                  "name": "starterId",
                  "nameLocation": "14330:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1458,
                  "src": "14322:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14322:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14321:19:0"
            },
            "returnParameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1450,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1458,
                  "src": "14361:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1449,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "14361:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14360:7:0"
            },
            "scope": 1676,
            "src": "14299:125:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1470,
              "nodeType": "Block",
              "src": "14500:59:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1465,
                        "name": "Sourdoughs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "14517:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                        }
                      },
                      "id": 1467,
                      "indexExpression": {
                        "id": 1466,
                        "name": "starterId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1460,
                        "src": "14528:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14517:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                        "typeString": "struct Cafe.Sourdough storage ref"
                      }
                    },
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_creationTime",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 66,
                    "src": "14517:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 1464,
                  "id": 1469,
                  "nodeType": "Return",
                  "src": "14510:42:0"
                }
              ]
            },
            "functionSelector": "97ec23cb",
            "id": 1471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCreationTime",
            "nameLocation": "14438:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1460,
                  "mutability": "mutable",
                  "name": "starterId",
                  "nameLocation": "14462:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1471,
                  "src": "14454:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14454:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14453:19:0"
            },
            "returnParameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1463,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1471,
                  "src": "14493:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1462,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14493:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14492:8:0"
            },
            "scope": 1676,
            "src": "14429:130:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1483,
              "nodeType": "Block",
              "src": "14638:54:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1478,
                        "name": "Sourdoughs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "14655:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                        }
                      },
                      "id": 1480,
                      "indexExpression": {
                        "id": 1479,
                        "name": "starterId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "14666:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14655:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                        "typeString": "struct Cafe.Sourdough storage ref"
                      }
                    },
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_creator",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 68,
                    "src": "14655:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1477,
                  "id": 1482,
                  "nodeType": "Return",
                  "src": "14648:37:0"
                }
              ]
            },
            "functionSelector": "a30b4db9",
            "id": 1484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCreatorAddress",
            "nameLocation": "14573:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1473,
                  "mutability": "mutable",
                  "name": "starterId",
                  "nameLocation": "14599:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "14591:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14591:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14590:19:0"
            },
            "returnParameters": {
              "id": 1477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1476,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "14630:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14630:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14629:9:0"
            },
            "scope": 1676,
            "src": "14564:128:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1496,
              "nodeType": "Block",
              "src": "14763:59:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1491,
                        "name": "Sourdoughs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "14780:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sourdough_$73_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Sourdough storage ref)"
                        }
                      },
                      "id": 1493,
                      "indexExpression": {
                        "id": 1492,
                        "name": "starterId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1486,
                        "src": "14791:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14780:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sourdough_$73_storage",
                        "typeString": "struct Cafe.Sourdough storage ref"
                      }
                    },
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_beingAutoFed",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 70,
                    "src": "14780:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1490,
                  "id": 1495,
                  "nodeType": "Return",
                  "src": "14773:42:0"
                }
              ]
            },
            "functionSelector": "f71ed3b8",
            "id": 1497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsAutoFed",
            "nameLocation": "14706:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1486,
                  "mutability": "mutable",
                  "name": "starterId",
                  "nameLocation": "14727:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1497,
                  "src": "14719:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14719:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14718:19:0"
            },
            "returnParameters": {
              "id": 1490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1489,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1497,
                  "src": "14758:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1488,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14758:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14757:6:0"
            },
            "scope": 1676,
            "src": "14697:125:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1510,
              "nodeType": "Block",
              "src": "14951:50:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1505,
                        "name": "BakedGoods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "14968:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                        }
                      },
                      "id": 1507,
                      "indexExpression": {
                        "id": 1506,
                        "name": "recipeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1500,
                        "src": "14979:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14968:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipe_$89_storage",
                        "typeString": "struct Cafe.Recipe storage ref"
                      }
                    },
                    "id": 1508,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_name",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 75,
                    "src": "14968:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1504,
                  "id": 1509,
                  "nodeType": "Return",
                  "src": "14961:33:0"
                }
              ]
            },
            "documentation": {
              "id": 1498,
              "nodeType": "StructuredDocumentation",
              "src": "14825:46:0",
              "text": "@dev Helper functions for Recipe Struct "
            },
            "functionSelector": "1269ca40",
            "id": 1511,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRecipeName",
            "nameLocation": "14885:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1500,
                  "mutability": "mutable",
                  "name": "recipeId",
                  "nameLocation": "14907:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1511,
                  "src": "14899:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14899:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14898:18:0"
            },
            "returnParameters": {
              "id": 1504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1503,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1511,
                  "src": "14937:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1502,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14937:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14936:15:0"
            },
            "scope": 1676,
            "src": "14876:125:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1523,
              "nodeType": "Block",
              "src": "15076:51:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1518,
                        "name": "BakedGoods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "15093:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                        }
                      },
                      "id": 1520,
                      "indexExpression": {
                        "id": 1519,
                        "name": "recipeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "15104:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15093:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipe_$89_storage",
                        "typeString": "struct Cafe.Recipe storage ref"
                      }
                    },
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_score",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 88,
                    "src": "15093:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 1517,
                  "id": 1522,
                  "nodeType": "Return",
                  "src": "15086:34:0"
                }
              ]
            },
            "functionSelector": "d0eaf368",
            "id": 1524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRecipeScore",
            "nameLocation": "15016:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1513,
                  "mutability": "mutable",
                  "name": "recipeId",
                  "nameLocation": "15039:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1524,
                  "src": "15031:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15031:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15030:18:0"
            },
            "returnParameters": {
              "id": 1517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1516,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1524,
                  "src": "15069:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1515,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15069:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15068:8:0"
            },
            "scope": 1676,
            "src": "15007:120:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1537,
              "nodeType": "Block",
              "src": "15206:57:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1531,
                          "name": "BakedGoods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "15223:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                            "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                          }
                        },
                        "id": 1533,
                        "indexExpression": {
                          "id": 1532,
                          "name": "recipeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1526,
                          "src": "15234:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15223:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipe_$89_storage",
                          "typeString": "struct Cafe.Recipe storage ref"
                        }
                      },
                      "id": 1534,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_ages",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "15223:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                        "typeString": "uint32[] storage ref"
                      }
                    },
                    "id": 1535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "15223:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1530,
                  "id": 1536,
                  "nodeType": "Return",
                  "src": "15216:40:0"
                }
              ]
            },
            "functionSelector": "cb208010",
            "id": 1538,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIngredientCount",
            "nameLocation": "15141:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1526,
                  "mutability": "mutable",
                  "name": "recipeId",
                  "nameLocation": "15168:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1538,
                  "src": "15160:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15160:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15159:18:0"
            },
            "returnParameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1529,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1538,
                  "src": "15198:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15198:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15197:9:0"
            },
            "scope": 1676,
            "src": "15132:131:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1554,
              "nodeType": "Block",
              "src": "15356:57:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1547,
                          "name": "BakedGoods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "15373:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                            "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                          }
                        },
                        "id": 1549,
                        "indexExpression": {
                          "id": 1548,
                          "name": "recipeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1540,
                          "src": "15384:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15373:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipe_$89_storage",
                          "typeString": "struct Cafe.Recipe storage ref"
                        }
                      },
                      "id": 1550,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_ages",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "15373:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                        "typeString": "uint32[] storage ref"
                      }
                    },
                    "id": 1552,
                    "indexExpression": {
                      "id": 1551,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1542,
                      "src": "15400:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15373:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 1546,
                  "id": 1553,
                  "nodeType": "Return",
                  "src": "15366:40:0"
                }
              ]
            },
            "functionSelector": "34b7fa22",
            "id": 1555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIngredientByIndex",
            "nameLocation": "15278:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1540,
                  "mutability": "mutable",
                  "name": "recipeId",
                  "nameLocation": "15307:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1555,
                  "src": "15299:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15299:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1542,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "15322:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1555,
                  "src": "15317:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1541,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15317:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15298:30:0"
            },
            "returnParameters": {
              "id": 1546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1545,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1555,
                  "src": "15349:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1544,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15349:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15348:8:0"
            },
            "scope": 1676,
            "src": "15269:144:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1567,
              "nodeType": "Block",
              "src": "15491:53:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1562,
                        "name": "BakedGoods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "15508:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                        }
                      },
                      "id": 1564,
                      "indexExpression": {
                        "id": 1563,
                        "name": "recipeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1557,
                        "src": "15519:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15508:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipe_$89_storage",
                        "typeString": "struct Cafe.Recipe storage ref"
                      }
                    },
                    "id": 1565,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_creator",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 82,
                    "src": "15508:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1561,
                  "id": 1566,
                  "nodeType": "Return",
                  "src": "15501:36:0"
                }
              ]
            },
            "functionSelector": "d682d87a",
            "id": 1568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRecipeCreator",
            "nameLocation": "15428:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1557,
                  "mutability": "mutable",
                  "name": "recipeId",
                  "nameLocation": "15453:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1568,
                  "src": "15445:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15445:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15444:18:0"
            },
            "returnParameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1568,
                  "src": "15483:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15483:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15482:9:0"
            },
            "scope": 1676,
            "src": "15419:125:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1580,
              "nodeType": "Block",
              "src": "15622:59:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1575,
                        "name": "BakedGoods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "15639:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                        }
                      },
                      "id": 1577,
                      "indexExpression": {
                        "id": 1576,
                        "name": "recipeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1570,
                        "src": "15650:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15639:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipe_$89_storage",
                        "typeString": "struct Cafe.Recipe storage ref"
                      }
                    },
                    "id": 1578,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_flourRequired",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 77,
                    "src": "15639:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1574,
                  "id": 1579,
                  "nodeType": "Return",
                  "src": "15632:42:0"
                }
              ]
            },
            "functionSelector": "2a316cdf",
            "id": 1581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFlourRequired",
            "nameLocation": "15559:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1570,
                  "mutability": "mutable",
                  "name": "recipeId",
                  "nameLocation": "15584:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1581,
                  "src": "15576:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15576:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15575:18:0"
            },
            "returnParameters": {
              "id": 1574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1573,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1581,
                  "src": "15614:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15614:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15613:9:0"
            },
            "scope": 1676,
            "src": "15550:131:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1593,
              "nodeType": "Block",
              "src": "15756:56:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1588,
                        "name": "BakedGoods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "15773:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                        }
                      },
                      "id": 1590,
                      "indexExpression": {
                        "id": 1589,
                        "name": "recipeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1583,
                        "src": "15784:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15773:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipe_$89_storage",
                        "typeString": "struct Cafe.Recipe storage ref"
                      }
                    },
                    "id": 1591,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_timesBaked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 84,
                    "src": "15773:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1587,
                  "id": 1592,
                  "nodeType": "Return",
                  "src": "15766:39:0"
                }
              ]
            },
            "functionSelector": "976c39be",
            "id": 1594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTimesBaked",
            "nameLocation": "15696:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1583,
                  "mutability": "mutable",
                  "name": "recipeId",
                  "nameLocation": "15718:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1594,
                  "src": "15710:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15710:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15709:18:0"
            },
            "returnParameters": {
              "id": 1587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1586,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1594,
                  "src": "15748:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15748:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15747:9:0"
            },
            "scope": 1676,
            "src": "15687:125:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1606,
              "nodeType": "Block",
              "src": "15888:57:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1601,
                        "name": "BakedGoods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "15905:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$89_storage_$",
                          "typeString": "mapping(uint256 => struct Cafe.Recipe storage ref)"
                        }
                      },
                      "id": 1603,
                      "indexExpression": {
                        "id": 1602,
                        "name": "recipeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "15916:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15905:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipe_$89_storage",
                        "typeString": "struct Cafe.Recipe storage ref"
                      }
                    },
                    "id": 1604,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_numberEaten",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 86,
                    "src": "15905:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1600,
                  "id": 1605,
                  "nodeType": "Return",
                  "src": "15898:40:0"
                }
              ]
            },
            "functionSelector": "70b5e7b0",
            "id": 1607,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumberEaten",
            "nameLocation": "15827:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1596,
                  "mutability": "mutable",
                  "name": "recipeId",
                  "nameLocation": "15850:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1607,
                  "src": "15842:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15842:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15841:18:0"
            },
            "returnParameters": {
              "id": 1600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1599,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1607,
                  "src": "15880:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15880:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15879:9:0"
            },
            "scope": 1676,
            "src": "15818:127:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1619,
              "nodeType": "Block",
              "src": "16054:45:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1615,
                      "name": "grindCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "16071:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                        "typeString": "mapping(address => uint32)"
                      }
                    },
                    "id": 1617,
                    "indexExpression": {
                      "id": 1616,
                      "name": "player",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1610,
                      "src": "16085:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16071:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 1614,
                  "id": 1618,
                  "nodeType": "Return",
                  "src": "16064:28:0"
                }
              ]
            },
            "documentation": {
              "id": 1608,
              "nodeType": "StructuredDocumentation",
              "src": "15948:35:0",
              "text": "@dev Player stats and timers "
            },
            "functionSelector": "7985781f",
            "id": 1620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGrindReset",
            "nameLocation": "15997:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1610,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "16019:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1620,
                  "src": "16011:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16011:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16010:16:0"
            },
            "returnParameters": {
              "id": 1614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1613,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1620,
                  "src": "16047:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1612,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16047:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16046:8:0"
            },
            "scope": 1676,
            "src": "15988:111:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1631,
              "nodeType": "Block",
              "src": "16172:42:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1627,
                      "name": "totalScore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "16189:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1629,
                    "indexExpression": {
                      "id": 1628,
                      "name": "player",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1622,
                      "src": "16200:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16189:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1626,
                  "id": 1630,
                  "nodeType": "Return",
                  "src": "16182:25:0"
                }
              ]
            },
            "functionSelector": "e085c539",
            "id": 1632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPlayerScore",
            "nameLocation": "16113:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1622,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "16136:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1632,
                  "src": "16128:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16128:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16127:16:0"
            },
            "returnParameters": {
              "id": 1626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1625,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1632,
                  "src": "16164:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16164:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16163:9:0"
            },
            "scope": 1676,
            "src": "16104:110:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1643,
              "nodeType": "Block",
              "src": "16289:45:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1639,
                      "name": "isAutoFeeding",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "16306:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1641,
                    "indexExpression": {
                      "id": 1640,
                      "name": "player",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1634,
                      "src": "16320:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16306:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1638,
                  "id": 1642,
                  "nodeType": "Return",
                  "src": "16299:28:0"
                }
              ]
            },
            "functionSelector": "36ff4c95",
            "id": 1644,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPlayerAutoFeeding",
            "nameLocation": "16228:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1634,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "16256:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1644,
                  "src": "16248:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16248:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16247:16:0"
            },
            "returnParameters": {
              "id": 1638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1637,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1644,
                  "src": "16284:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1636,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16284:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16283:6:0"
            },
            "scope": 1676,
            "src": "16219:115:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1660,
              "nodeType": "Block",
              "src": "16432:54:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1657,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1648,
                        "src": "16473:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1653,
                          "name": "_ownerRecipes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "16449:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3257_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 1655,
                        "indexExpression": {
                          "id": 1654,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1646,
                          "src": "16463:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16449:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$3257_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 1656,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3356,
                      "src": "16449:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$3257_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$3257_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
                      }
                    },
                    "id": 1658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16449:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1652,
                  "id": 1659,
                  "nodeType": "Return",
                  "src": "16442:37:0"
                }
              ]
            },
            "functionSelector": "fcf73cbe",
            "id": 1661,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recipeOfOwnerByIndex",
            "nameLocation": "16351:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1646,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "16380:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1661,
                  "src": "16372:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16372:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1648,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "16395:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1661,
                  "src": "16387:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16387:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16371:30:0"
            },
            "returnParameters": {
              "id": 1652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1651,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1661,
                  "src": "16423:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16423:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16422:9:0"
            },
            "scope": 1676,
            "src": "16342:144:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1674,
              "nodeType": "Block",
              "src": "16567:53:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 1668,
                          "name": "_ownerRecipes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "16584:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$3257_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 1670,
                        "indexExpression": {
                          "id": 1669,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1663,
                          "src": "16598:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16584:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$3257_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 1671,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3335,
                      "src": "16584:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$3257_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$3257_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16584:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1667,
                  "id": 1673,
                  "nodeType": "Return",
                  "src": "16577:36:0"
                }
              ]
            },
            "functionSelector": "bf3c95b9",
            "id": 1675,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnerUniqueRecipes",
            "nameLocation": "16500:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1663,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "16530:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1675,
                  "src": "16522:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16522:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16521:15:0"
            },
            "returnParameters": {
              "id": 1667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1666,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1675,
                  "src": "16558:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1665,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16558:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16557:9:0"
            },
            "scope": 1676,
            "src": "16491:129:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1677,
        "src": "177:16445:0"
      }
    ],
    "src": "0:16628:0"
  },
  "bytecode": "",
  "bytecodeSha1": "07177b26416436be09e22ba03f2a7c6831b11a97",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "Cafe",
  "coverageMap": {
    "branches": {
      "0": {
        "Cafe._bakeRecipe": {
          "223": [
            6167,
            6221,
            true
          ],
          "224": [
            6380,
            6422,
            true
          ],
          "225": [
            6656,
            6684,
            true
          ],
          "226": [
            6794,
            6853,
            true
          ],
          "227": [
            6947,
            6987,
            true
          ]
        },
        "Cafe._burnFlour": {
          "222": [
            3626,
            3663,
            true
          ]
        },
        "Cafe._updatePlayerScore": {
          "233": [
            13102,
            13133,
            false
          ],
          "234": [
            13252,
            13260,
            false
          ],
          "235": [
            13607,
            13615,
            false
          ],
          "236": [
            13756,
            13764,
            false
          ],
          "237": [
            13915,
            13924,
            false
          ]
        },
        "Cafe._updateRecipeScore": {
          "228": [
            11894,
            11927,
            false
          ],
          "229": [
            12047,
            12055,
            false
          ],
          "230": [
            12431,
            12439,
            false
          ],
          "231": [
            12593,
            12601,
            false
          ],
          "232": [
            12753,
            12762,
            false
          ]
        },
        "Cafe._updateStarterScore": {
          "238": [
            10478,
            10513,
            false
          ],
          "239": [
            10633,
            10641,
            false
          ],
          "240": [
            11104,
            11112,
            false
          ],
          "241": [
            11247,
            11255,
            false
          ],
          "242": [
            11487,
            11496,
            false
          ]
        },
        "Cafe.autoFeed": {
          "217": [
            9492,
            9526,
            true
          ]
        },
        "Cafe.eatBakedGood": {
          "212": [
            8973,
            9026,
            true
          ]
        },
        "Cafe.feedStarter": {
          "219": [
            4432,
            4466,
            true
          ],
          "220": [
            4577,
            4628,
            true
          ],
          "221": [
            4825,
            4858,
            false
          ]
        },
        "Cafe.grindFlour": {
          "215": [
            3245,
            3286,
            true
          ]
        },
        "Cafe.publishNewRecipe": {
          "216": [
            7490,
            7506,
            true
          ]
        },
        "Cafe.splitStarter": {
          "213": [
            5178,
            5210,
            true
          ],
          "214": [
            5320,
            5373,
            true
          ]
        },
        "Cafe.stopAutoFeed": {
          "218": [
            10121,
            10163,
            true
          ]
        }
      },
      "1": {
        "ERC1155._burn": {
          "257": [
            9664,
            9685,
            true
          ],
          "258": [
            9959,
            9983,
            true
          ],
          "259": [
            10135,
            10149,
            false
          ]
        },
        "ERC1155._burnBatch": {
          "261": [
            10610,
            10631,
            true
          ],
          "262": [
            10689,
            10717,
            true
          ],
          "263": [
            11146,
            11170,
            true
          ],
          "264": [
            11278,
            11292,
            false
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "256": [
            13779,
            13843,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "260": [
            13000,
            13059,
            false
          ]
        },
        "ERC1155._mint": {
          "255": [
            7776,
            7797,
            true
          ]
        },
        "ERC1155.balanceOf": {
          "243": [
            2385,
            2406,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "249": [
            2870,
            2899,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "244": [
            5255,
            5283,
            true
          ],
          "245": [
            5346,
            5362,
            true
          ],
          "246": [
            5435,
            5455,
            true
          ],
          "247": [
            5459,
            5495,
            true
          ],
          "248": [
            5888,
            5909,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "251": [
            4076,
            4092,
            true
          ],
          "252": [
            4165,
            4185,
            true
          ],
          "253": [
            4189,
            4225,
            true
          ],
          "254": [
            4511,
            4532,
            true
          ]
        },
        "ERC1155.setApprovalForAll": {
          "250": [
            3357,
            3381,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "EnumerableSet._at": {
          "266": [
            4547,
            4573,
            true
          ]
        },
        "EnumerableSet._remove": {
          "265": [
            2441,
            2456,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Cafe._bakeRecipe": {
          "130": [
            6159,
            6267
          ],
          "131": [
            6372,
            6486
          ],
          "132": [
            6648,
            6770
          ],
          "133": [
            6786,
            6925
          ],
          "134": [
            6939,
            7079
          ],
          "135": [
            7093,
            7107
          ],
          "136": [
            6531,
            6534
          ],
          "137": [
            7127,
            7172
          ],
          "138": [
            7183,
            7227
          ],
          "139": [
            7237,
            7248
          ]
        },
        "Cafe._burnFlour": {
          "112": [
            3618,
            3664
          ],
          "113": [
            3674,
            3703
          ],
          "114": [
            3713,
            3734
          ]
        },
        "Cafe._updatePlayerScore": {
          "159": [
            13152,
            13165
          ],
          "160": [
            13183,
            13188
          ],
          "161": [
            13216,
            13229
          ],
          "162": [
            13308,
            13355
          ],
          "163": [
            13373,
            13386
          ],
          "164": [
            13420,
            13427
          ],
          "165": [
            13577,
            13590
          ],
          "166": [
            13634,
            13639
          ],
          "167": [
            13676,
            13719
          ],
          "168": [
            13845,
            13894
          ],
          "169": [
            13943,
            13958
          ],
          "170": [
            14003,
            14008
          ],
          "171": [
            14054,
            14084
          ]
        },
        "Cafe._updateRecipeScore": {
          "140": [
            11946,
            11959
          ],
          "141": [
            11977,
            11982
          ],
          "142": [
            12010,
            12023
          ],
          "143": [
            12103,
            12150
          ],
          "144": [
            12168,
            12181
          ],
          "145": [
            12216,
            12223
          ],
          "146": [
            12401,
            12414
          ],
          "147": [
            12458,
            12463
          ],
          "148": [
            12500,
            12555
          ],
          "149": [
            12683,
            12732
          ],
          "150": [
            12781,
            12796
          ],
          "151": [
            12841,
            12846
          ],
          "152": [
            12892,
            12924
          ]
        },
        "Cafe._updateStarterScore": {
          "175": [
            10532,
            10545
          ],
          "176": [
            10563,
            10568
          ],
          "177": [
            10596,
            10609
          ],
          "178": [
            10689,
            10738
          ],
          "179": [
            10756,
            10813
          ],
          "180": [
            10831,
            10844
          ],
          "181": [
            10878,
            10886
          ],
          "182": [
            11074,
            11087
          ],
          "183": [
            11131,
            11136
          ],
          "184": [
            11173,
            11209
          ],
          "185": [
            11336,
            11389
          ],
          "186": [
            11407,
            11466
          ],
          "187": [
            11515,
            11530
          ],
          "188": [
            11575,
            11580
          ],
          "189": [
            11626,
            11661
          ],
          "190": [
            11675,
            11708
          ]
        },
        "Cafe.autoFeed": {
          "84": [
            9484,
            9618
          ],
          "85": [
            9722,
            9750
          ],
          "86": [
            9760,
            9817
          ],
          "87": [
            9827,
            9857
          ],
          "88": [
            9867,
            9954
          ],
          "89": [
            9964,
            10006
          ]
        },
        "Cafe.bakeExistingRecipe": {
          "44": [
            8537,
            8569
          ],
          "45": [
            8580,
            8615
          ],
          "46": [
            8634,
            8647
          ],
          "47": [
            8657,
            8685
          ],
          "48": [
            8695,
            8739
          ],
          "49": [
            8749,
            8760
          ]
        },
        "Cafe.createStarter": {
          "19": [
            3888,
            3923
          ],
          "20": [
            3982,
            4016
          ],
          "21": [
            4187,
            4205
          ],
          "22": [
            4215,
            4246
          ]
        },
        "Cafe.eatBakedGood": {
          "50": [
            8965,
            9072
          ],
          "51": [
            9200,
            9230
          ],
          "52": [
            9240,
            9276
          ],
          "53": [
            9286,
            9332
          ],
          "54": [
            9342,
            9372
          ]
        },
        "Cafe.feedStarter": {
          "104": [
            4424,
            4559
          ],
          "105": [
            4569,
            4690
          ],
          "106": [
            4700,
            4732
          ],
          "107": [
            4742,
            4812
          ],
          "108": [
            4873,
            4913
          ],
          "109": [
            4933,
            4961
          ],
          "110": [
            4972,
            4983
          ]
        },
        "Cafe.getChildCount": {
          "4": [
            14377,
            14417
          ]
        },
        "Cafe.getCreationTime": {
          "7": [
            14510,
            14552
          ]
        },
        "Cafe.getCreatorAddress": {
          "8": [
            14648,
            14685
          ]
        },
        "Cafe.getFlourRequired": {
          "0": [
            15632,
            15674
          ]
        },
        "Cafe.getGrindReset": {
          "3": [
            16064,
            16092
          ]
        },
        "Cafe.getIngredientByIndex": {
          "38": [
            15366,
            15406
          ]
        },
        "Cafe.getIngredientCount": {
          "9": [
            15216,
            15256
          ]
        },
        "Cafe.getIsAutoFed": {
          "14": [
            14773,
            14815
          ]
        },
        "Cafe.getNumberEaten": {
          "2": [
            15898,
            15938
          ]
        },
        "Cafe.getOwnerUniqueRecipes": {
          "90": [
            16577,
            16613
          ]
        },
        "Cafe.getPlayerScore": {
          "12": [
            16182,
            16207
          ]
        },
        "Cafe.getRecipeCreator": {
          "11": [
            15501,
            15537
          ]
        },
        "Cafe.getRecipeName": {
          "24": [
            14961,
            14994
          ]
        },
        "Cafe.getRecipeScore": {
          "10": [
            15086,
            15120
          ]
        },
        "Cafe.getTimeOfDeath": {
          "5": [
            14246,
            14287
          ]
        },
        "Cafe.getTimesBaked": {
          "6": [
            15766,
            15805
          ]
        },
        "Cafe.grindFlour": {
          "67": [
            3237,
            3317
          ],
          "68": [
            3327,
            3369
          ],
          "69": [
            3379,
            3405
          ],
          "70": [
            3415,
            3478
          ]
        },
        "Cafe.isPlayerAutoFeeding": {
          "1": [
            16299,
            16327
          ]
        },
        "Cafe.publishNewRecipe": {
          "71": [
            7482,
            7550
          ],
          "72": [
            7642,
            7674
          ],
          "73": [
            7797,
            7811
          ],
          "74": [
            7779,
            7782
          ],
          "75": [
            7831,
            7852
          ],
          "76": [
            7863,
            7884
          ],
          "77": [
            7894,
            7907
          ],
          "78": [
            7917,
            7936
          ],
          "79": [
            8006,
            8043
          ],
          "80": [
            8053,
            8100
          ],
          "81": [
            8110,
            8146
          ],
          "82": [
            8156,
            8187
          ],
          "83": [
            8197,
            8212
          ]
        },
        "Cafe.recipeOfOwnerByIndex": {
          "111": [
            16442,
            16479
          ]
        },
        "Cafe.splitStarter": {
          "55": [
            5170,
            5302
          ],
          "56": [
            5312,
            5437
          ],
          "57": [
            5447,
            5467
          ],
          "58": [
            5477,
            5497
          ],
          "59": [
            5507,
            5522
          ],
          "60": [
            5532,
            5609
          ],
          "61": [
            5619,
            5696
          ],
          "62": [
            5706,
            5740
          ],
          "63": [
            5750,
            5818
          ]
        },
        "Cafe.stopAutoFeed": {
          "91": [
            10113,
            10164
          ],
          "92": [
            10174,
            10246
          ],
          "93": [
            10256,
            10299
          ]
        }
      },
      "1": {
        "ERC1155._asSingletonArray": {
          "172": [
            14301,
            14319
          ],
          "173": [
            14330,
            14342
          ]
        },
        "ERC1155._burn": {
          "153": [
            9656,
            9725
          ],
          "154": [
            9778,
            9883
          ],
          "155": [
            9951,
            10024
          ],
          "156": [
            10086,
            10121
          ],
          "157": [
            10165,
            10198
          ],
          "158": [
            10227,
            10289
          ]
        },
        "ERC1155._burnBatch": {
          "204": [
            10602,
            10671
          ],
          "205": [
            10681,
            10762
          ],
          "206": [
            10814,
            10883
          ],
          "207": [
            11138,
            11211
          ],
          "208": [
            11225,
            11260
          ],
          "209": [
            11312,
            11345
          ],
          "210": [
            10927,
            10930
          ],
          "211": [
            11380,
            11443
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "124": [
            14003,
            14017
          ],
          "125": [
            14057,
            14119
          ],
          "126": [
            13867,
            13917
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "174": [
            13083,
            13133
          ]
        },
        "ERC1155._mint": {
          "115": [
            7768,
            7835
          ],
          "116": [
            7888,
            7995
          ],
          "117": [
            8006,
            8038
          ],
          "118": [
            8049,
            8079
          ],
          "119": [
            8089,
            8151
          ],
          "120": [
            8162,
            8241
          ]
        },
        "ERC1155.balanceOf": {
          "15": [
            2377,
            2454
          ],
          "16": [
            2464,
            2493
          ]
        },
        "ERC1155.balanceOfBatch": {
          "40": [
            2862,
            2945
          ],
          "41": [
            3090,
            3139
          ],
          "42": [
            3071,
            3074
          ],
          "43": [
            3160,
            3180
          ]
        },
        "ERC1155.getOwnerUniqueTokens": {
          "39": [
            14589,
            14625
          ]
        },
        "ERC1155.isApprovedForAll": {
          "13": [
            3743,
            3787
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "25": [
            5247,
            5328
          ],
          "26": [
            5338,
            5404
          ],
          "27": [
            5414,
            5571
          ],
          "29": [
            5880,
            5956
          ],
          "30": [
            5970,
            6012
          ],
          "31": [
            6026,
            6053
          ],
          "32": [
            6067,
            6092
          ],
          "33": [
            6155,
            6185
          ],
          "34": [
            5731,
            5734
          ],
          "35": [
            6220,
            6272
          ],
          "36": [
            6283,
            6358
          ]
        },
        "ERC1155.safeTransferFrom": {
          "94": [
            4068,
            4134
          ],
          "95": [
            4144,
            4292
          ],
          "96": [
            4345,
            4441
          ],
          "97": [
            4503,
            4579
          ],
          "98": [
            4589,
            4631
          ],
          "99": [
            4641,
            4668
          ],
          "100": [
            4678,
            4703
          ],
          "101": [
            4755,
            4785
          ],
          "102": [
            4806,
            4857
          ],
          "103": [
            4868,
            4936
          ]
        },
        "ERC1155.setApprovalForAll": {
          "64": [
            3349,
            3427
          ],
          "65": [
            3438,
            3491
          ],
          "66": [
            3501,
            3554
          ]
        },
        "ERC1155.supportsInterface": {
          "17": [
            1453,
            1621
          ]
        },
        "ERC1155.tokenOfOwnerByIndex": {
          "37": [
            14454,
            14491
          ]
        },
        "ERC1155.uri": {
          "23": [
            2112,
            2123
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {
        "Address.isContract": {
          "123": [
            1109,
            1124
          ]
        }
      },
      "6": {
        "Context._msgSender": {
          "28": [
            658,
            675
          ]
        }
      },
      "7": {
        "ERC165.supportsInterface": {
          "18": [
            864,
            911
          ]
        }
      },
      "8": {},
      "9": {
        "EnumerableSet._add": {
          "192": [
            1753,
            1776
          ],
          "193": [
            1911,
            1951
          ],
          "194": [
            1965,
            1976
          ],
          "195": [
            2007,
            2019
          ]
        },
        "EnumerableSet._at": {
          "202": [
            4539,
            4612
          ],
          "203": [
            4622,
            4647
          ]
        },
        "EnumerableSet._contains": {
          "191": [
            3895,
            3926
          ]
        },
        "EnumerableSet._length": {
          "129": [
            4089,
            4114
          ]
        },
        "EnumerableSet._remove": {
          "196": [
            3266,
            3304
          ],
          "197": [
            3370,
            3406
          ],
          "198": [
            3528,
            3545
          ],
          "199": [
            3613,
            3639
          ],
          "200": [
            3654,
            3665
          ],
          "201": [
            3696,
            3708
          ]
        },
        "EnumerableSet.add": {
          "121": [
            8152,
            8191
          ]
        },
        "EnumerableSet.at": {
          "127": [
            9341,
            9379
          ]
        },
        "EnumerableSet.length": {
          "128": [
            8886,
            8912
          ]
        },
        "EnumerableSet.remove": {
          "122": [
            8452,
            8494
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC1155",
    "ERC165",
    "EnumerableSet",
    "IERC1155",
    "IERC1155MetadataURI",
    "IERC1155Receiver",
    "IERC165"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102d55760003560e01c8063976c39be11610182578063c889d089116100e9578063e11fd028116100a2578063f6d989f21161007c578063f6d989f2146107b2578063f71ed3b8146107bb578063fc4f816c146107e5578063fcf73cbe146107f8576102d5565b8063e11fd02814610750578063e985e9c514610763578063f242432a1461079f576102d5565b8063c889d08914610693578063c8cf79d91461069c578063cb208010146106af578063d0eaf368146106d2578063d682d87a146106fb578063e085c53914610727576102d5565b8063a41e1c171161013b578063a41e1c1714610635578063a7c6232314610648578063b172decc14610651578063ba0bd64a14610664578063bf3c95b91461066d578063c3b1066f14610680576102d5565b8063976c39be1461059157806397ec23cb146105b4578063a07b6a42146105e1578063a22cb465146105ea578063a30b4db9146105fd578063a34867581461062d576102d5565b80633ad10ef6116102415780636510989c116101fa5780637985781f116101d45780637985781f146104ef5780637a77af5c1461051e5780637f8315cd1461055b578063956ac17a14610581576102d5565b80636510989c146104a657806370b5e7b0146104b9578063781f1b75146104dc576102d5565b80633ad10ef61461043157806342da6f9c146104445780634c777cac146104575780634e1273f41461046a5780634f41393b1461048a5780635c2c894a1461049d576102d5565b80632a316cdf116102935780632a316cdf146103895780632b944ddf146103ac5780632eb2c2d6146103b55780632f745c59146103ca57806334b7fa22146103dd57806336ff4c9514610405576102d5565b8062fdd58e146102da57806301ffc9a71461030057806307047482146103235780630e89341c1461032b5780631269ca401461034b578063214fa99b1461035e575b600080fd5b6102ed6102e83660046137c0565b61080b565b6040519081526020015b60405180910390f35b61031361030e3660046138b4565b6108a7565b60405190151581526020016102f7565b6103136108fb565b61033e610339366004613a05565b610aa0565b6040516102f79190613bd6565b61033e610359366004613a05565b610b34565b61037161036c366004613a05565b610b51565b6040516001600160a01b0390911681526020016102f7565b6102ed610397366004613a05565b6000908152600d602052604090206001015490565b6102ed60355481565b6103c86103c336600461367d565b610b71565b005b6102ed6103d83660046137c0565b610e66565b6103f06103eb366004613a58565b610e8f565b60405163ffffffff90911681526020016102f7565b610313610413366004613631565b6001600160a01b031660009081526010602052604090205460ff1690565b600854610371906001600160a01b031681565b6102ed610452366004613631565b610eee565b6103f0610465366004613a05565b610f0f565b61047d6104783660046137e9565b610f3f565b6040516102f79190613b95565b610313610498366004613a1d565b6110a1565b6102ed60365481565b6103136104b4366004613a58565b611288565b6102ed6104c7366004613a05565b6000908152600d602052604090206005015490565b6103136104ea366004613a05565b6113a1565b6103f06104fd366004613631565b6001600160a01b03166000908152600c602052604090205463ffffffff1690565b61054961052c366004613a05565b6000908152600b6020526040902054640100000000900460ff1690565b60405160ff90911681526020016102f7565b6103f0610569366004613a05565b6000908152600b602052604090205463ffffffff1690565b6006546103f09063ffffffff1681565b6102ed61059f366004613a05565b6000908152600d602052604090206004015490565b6103f06105c2366004613a05565b6000908152600b6020526040902054600160281b900463ffffffff1690565b6102ed60055481565b6103c86105f8366004613786565b61156a565b61037161060b366004613a05565b6000908152600b6020526040902054600160481b90046001600160a01b031690565b6103c861164e565b6102ed6106433660046138ec565b611728565b6102ed60075481565b61031361065f366004613a58565b61198f565b6102ed60045481565b6102ed61067b366004613631565b611a8b565b6102ed61068e366004613a05565b611aac565b6102ed60345481565b6103136106aa366004613a05565b611ac3565b6102ed6106bd366004613a05565b6000908152600d602052604090206002015490565b6103f06106e0366004613a05565b6000908152600d602052604090206006015463ffffffff1690565b610371610709366004613a05565b6000908152600d60205260409020600301546001600160a01b031690565b6102ed610735366004613631565b6001600160a01b03166000908152600f602052604090205490565b6102ed61075e366004613a05565b611b2e565b61031361077136600461364b565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6103c86107ad366004613723565b611b3e565b6102ed60375481565b6103136107c9366004613a05565b6000908152600b6020526040902054600160e81b900460ff1690565b6103136107f3366004613a05565b611d73565b6102ed6108063660046137c0565b611e9c565b60006001600160a01b03831661087c5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806108d857506001600160e01b031982166303a24d0760e21b145b806108f357506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b600061090933600454611ebe565b6000603554600161091a9190613e36565b90506109423361092b836000613e36565b600160405180602001604052806000815250611efe565b6040805160c081019091526006546000919081906109669063ffffffff1642613e36565b63ffffffff168152602001600060ff1681526020014263ffffffff168152602001336001600160a01b031681526020016000151581526020014263ffffffff1681525090506001603560008282546109be9190613e36565b90915550506000918252600b6020908152604092839020825181549284015194840151606085015160808601511515600160e81b0260ff60e81b196001600160a01b03909216600160481b027fffffff0000000000000000000000000000000000000000ffffffffffffffffff63ffffffff948516600160281b021665010000000000600160e81b031960ff909a166401000000000264ffffffffff1990981695851695909517969096179790971692909217939093171693909317835560a090910151600192830180549190921663ffffffff199190911617905590505b90565b606060038054610aaf90613ed1565b80601f0160208091040260200160405190810160405280929190818152602001828054610adb90613ed1565b8015610b285780601f10610afd57610100808354040283529160200191610b28565b820191906000526020600020905b815481529060010190602001808311610b0b57829003601f168201915b50505050509050919050565b6000818152600d60205260409020805460609190610aaf90613ed1565b602981600b8110610b6157600080fd5b01546001600160a01b0316905081565b8151835114610b925760405162461bcd60e51b815260040161087390613dca565b6001600160a01b038416610bb85760405162461bcd60e51b815260040161087390613cf8565b6001600160a01b038516331480610bd45750610bd48533610771565b610c3b5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610873565b3360005b8451811015610df8576000858281518110610c6a57634e487b7160e01b600052603260045260246000fd5b602002602001015190506000858381518110610c9657634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160008481526001835260408082206001600160a01b038e168352909352919091205490915081811015610ce75760405162461bcd60e51b815260040161087390613d80565b610cf18282613eba565b6001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002081905550816001600085815260200190815260200160002060008b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610d719190613e36565b90915550506001600160a01b0389166000908152602081905260409020610d989084612024565b5060008381526001602090815260408083206001600160a01b038e168452909152902054610de4576001600160a01b038a166000908152602081905260409020610de29084612030565b505b50505080610df190613f39565b9050610c3f565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610e48929190613ba8565b60405180910390a4610e5e81878787878761203c565b505050505050565b6001600160a01b0382166000908152602081905260408120610e8890836121a7565b9392505050565b6000828152600d60205260408120600201805483908110610ec057634e487b7160e01b600052603260045260246000fd5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16905092915050565b6001600160a01b03811660009081526020819052604081206108f3906121b3565b601181600b8110610f1f57600080fd5b60089182820401919006600402915054906101000a900463ffffffff1681565b60608151835114610fa45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610873565b6000835167ffffffffffffffff811115610fce57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610ff7578160200160208202803683370190505b50905060005b84518110156110995761105e85828151811061102957634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061105157634e487b7160e01b600052603260045260246000fd5b602002602001015161080b565b82828151811061107e57634e487b7160e01b600052603260045260246000fd5b602090810291909101015261109281613f39565b9050610ffd565b509392505050565b6000828152600d6020526040808220815160e08101909252805483929190829082906110cc90613ed1565b80601f01602080910402602001604051908101604052809291908181526020018280546110f890613ed1565b80156111455780601f1061111a57610100808354040283529160200191611145565b820191906000526020600020905b81548152906001019060200180831161112857829003601f168201915b5050505050815260200160018201548152602001600282018054806020026020016040519081016040528092919081815260200182805480156111d357602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116111965790505b505050918352505060038201546001600160a01b03166020820152600482015460408201526005820154606082015260069091015463ffffffff16608090910152905061122081846121bd565b506000848152600d60205260408120600401805460019290611243908490613e36565b9250508190555060016036600082825461125d9190613e36565b9091555061126c9050846125a5565b61127e33600a548661092b9190613e36565b5060019392505050565b60008161129d3385600a546102e89190613e36565b10156112fd5760405162461bcd60e51b815260206004820152602960248201527f596f7520646f6e277420686176652074686174206d616e79206f662074686f736044820152686520746f206561742160b81b6064820152608401610873565b6000838152600d6020526040812060060154600a5463ffffffff90911691906113269086613e36565b905061133333828661279f565b6000858152600d60205260408120600501805460019290611355908490613e36565b9091555061136b90508463ffffffff8416613e9b565b336000908152600f60205260408120805490919061138a908490613e36565b909155506113999050336128e8565b505092915050565b60006113ad338361080b565b6001146113cc5760405162461bcd60e51b815260040161087390613c75565b6000828152600b60205260409020600101544263ffffffff909116111561145b5760405162461bcd60e51b815260206004820152603c60248201527f596f7520686176652073706c697420746865207374617274657220616c72656160448201527f647920746f6461792120576169742074696c2720746f6d6f72726f77000000006064820152608401610873565b61146482611d73565b5061146e82611d73565b506114776108fb565b506000828152600b60205260408082205460355483529120805468ffffffff00000000001916600160281b9283900463ffffffff169092029190911790556114c24262015180613e36565b6035546000908152600b60205260408082206001908101805463ffffffff191663ffffffff959095169490941790935584825290208054600490611512908490640100000000900460ff16613e76565b92506101000a81548160ff021916908360ff16021790555042620151806115399190613e36565b6000928352600b60205260409092206001908101805463ffffffff191663ffffffff94909416939093179092555090565b336001600160a01b03831614156115d55760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610873565b3360008181526002602090815260408083206001600160a01b0387168085529252909120805460ff1916841515179055906001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611642911515815260200190565b60405180910390a35050565b336000908152600c60205260409020544263ffffffff909116106116b45760405162461bcd60e51b815260206004820152601b60248201527f596f7520646964207468697320616c726561647920746f6461792100000000006044820152606401610873565b6116d33360095460075460405180602001604052806000815250611efe565b600754603460008282546116e79190613e36565b90915550506006546116ff9063ffffffff1642613e36565b336000908152600c60205260409020805463ffffffff191663ffffffff92909216919091179055565b6000600a8351111561178c5760405162461bcd60e51b815260206004820152602760248201527f596f752063616e206f6e6c79206861766520757020746f20313020696e6772656044820152666469656e74732160c81b6064820152608401610873565b6040805160e0810182528681526020810186905290810184905233606082015260006080820181905260a0820181905260c08201526117cb81846121bd565b5060408101516000805b8251811015611825578281815181106117fe57634e487b7160e01b600052603260045260246000fd5b6020026020010151826118119190613e4e565b91508061181d81613f39565b9150506117d5565b5063ffffffff811660c084015260808301805160019190611847908390613e36565b9052506036805460019190600090611860908490613e36565b9250508190555060016037600082825461187a9190613e36565b9091555050603754600a5460009161189191613e36565b6037546000908152600d6020908152604090912086518051939450879391926118bf928492909101906133ea565b506020828101516001830155604083015180516118e2926002850192019061346e565b5060608201516003820180546001600160a01b0319166001600160a01b039092169190911790556080820151600482015560a0820151600582015560c0909101516006909101805463ffffffff191663ffffffff928316179055603754336000908152600e6020526040902061195b9290919061202416565b506119676037546125a5565b6119833382600160405180602001604052806000815250611efe565b98975050505050505050565b600061199b338361080b565b6001146119ba5760405162461bcd60e51b815260040161087390613c75565b6000600554846119ca9190613e9b565b90506000600554856119dc9190613e9b565b90506119e83383611ebe565b600854600954604080516020810190915260008152611a169233926001600160a01b03909116918590611b3e565b336000908152601060205260409020805460ff19166001179055600654611a439063ffffffff1686613e9b565b611a4d9042613e36565b6000858152600b60205260409020805463ffffffff60ff60e81b01191663ffffffff9290921691909117600160e81b17905550600191505092915050565b6001600160a01b0381166000908152600e602052604081206108f3906121b3565b601381600b8110611abc57600080fd5b0154905081565b6000818152600b6020526040812054600160e81b900460ff161515600114611aea57600080fd5b600654611afd9063ffffffff1642613e36565b6000928352600b6020526040909220805463ffffffff60ff60e81b01191663ffffffff939093169290921790915590565b601e81600b8110611abc57600080fd5b6001600160a01b038416611b645760405162461bcd60e51b815260040161087390613cf8565b6001600160a01b038516331480611b805750611b808533610771565b611bde5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610873565b33611bfe818787611bee88612b6b565b611bf788612b6b565b5050505050565b60008481526001602090815260408083206001600160a01b038a16845290915290205483811015611c415760405162461bcd60e51b815260040161087390613d80565b611c4b8482613eba565b60008681526001602090815260408083206001600160a01b038c81168552925280832093909355881681529081208054869290611c89908490613e36565b90915550506001600160a01b0386166000908152602081905260409020611cb09086612024565b5060008581526001602090815260408083206001600160a01b038b168452909152902054611cfc576001600160a01b0387166000908152602081905260409020611cfa9086612030565b505b856001600160a01b0316876001600160a01b0316836001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051611d54929190918252602082015260400190565b60405180910390a4611d6a828888888888612bc4565b50505050505050565b6000611d7f338361080b565b600114611d9e5760405162461bcd60e51b815260040161087390613c75565b6000828152600b60205260409020544263ffffffff9091161015611e2a5760405162461bcd60e51b815260206004820152603960248201527f596f757220737461727465722069732064656164212020596f752073686f756c60448201527f6420686176652066656420697420736f6f6e6572203a28202e000000000000006064820152608401610873565b611e3633600554611ebe565b600654611e499063ffffffff1642613e36565b6000838152600b60205260409020805463ffffffff191663ffffffff929092169190911790819055600160e81b900460ff1615611e8b576000829052600b6020525b611e9482612c8e565b506001919050565b6001600160a01b0382166000908152600e60205260408120610e8890836121a7565b80611ecb3360095461080b565b1015611ed657600080fd5b611ee3826009548361279f565b8060346000828254611ef59190613eba565b90915550505050565b6001600160a01b038416611f5e5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610873565b33611f6f81600087611bee88612b6b565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290611fa1908490613e36565b90915550506001600160a01b0385166000908152602081905260409020611fc89085612024565b5060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611bf781600087878787612bc4565b6000610e88838361301d565b6000610e88838361306c565b6001600160a01b0384163b15610e5e5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906120809089908990889088908890600401613afe565b602060405180830381600087803b15801561209a57600080fd5b505af19250505080156120ca575060408051601f3d908101601f191682019092526120c7918101906138d0565b60015b612177576120d6613f80565b806308c379a0141561211057506120eb613f97565b806120f65750612112565b8060405162461bcd60e51b81526004016108739190613bd6565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610873565b6001600160e01b0319811663bc197c8160e01b14611d6a5760405162461bcd60e51b815260040161087390613be9565b6000610e888383613183565b60006108f3825490565b600082602001516121d03360095461080b565b10156122315760405162461bcd60e51b815260206004820152602a60248201527f596f7520646f6e2774206861766520656e6f75676820464c4f555220746f2062604482015269616b652074686174212160b01b6064820152608401610873565b60408301515160008167ffffffffffffffff81111561226057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612289578160200160208202803683370190505b5090508351856040015151146123075760405162461bcd60e51b815260206004820152603c60248201527f596f7520686176656e277420616464656420746865207269676874206e756d6260448201527f6572206f6620737461727465727320746f2074686520626174636821000000006064820152608401610873565b60005b856040015151811015612580576000600b600087848151811061233d57634e487b7160e01b600052603260045260246000fd5b60209081029190910181015182528101919091526040016000205461236f90600160281b900463ffffffff1642613eba565b90508660400151828151811061239557634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff168163ffffffff16116124375760405162461bcd60e51b815260206004820152605160248201527f596f757220737461727465727320617265206e6f74206f6c6420656e6f75676860448201527f2c20706c65617365207573652074686520737461727465727320726571756972606482015270656420627920746869732072656369706560781b608482015260a401610873565b42600b600088858151811061245c57634e487b7160e01b600052603260045260246000fd5b60209081029190910181015182528101919091526040016000205463ffffffff1610156124fd5760405162461bcd60e51b815260206004820152604360248201527f596f757220737461727465727320617265206e6f7420616c6c20616c6976652c60448201527f20796f75206d757374207573652061206c6976696e6720696e6772656469656e60648201526274212160e81b608482015260a401610873565b6125213387848151811061105157634e487b7160e01b600052603260045260246000fd5b6001146125405760405162461bcd60e51b815260040161087390613c75565b600183838151811061256257634e487b7160e01b600052603260045260246000fd5b6020908102919091010152508061257881613f39565b91505061230a565b5061258c338583613217565b61259a338660200151611ebe565b506001949350505050565b6000805b600a8210156125f65782601e83600b81106125d457634e487b7160e01b600052603260045260246000fd5b015414156125e4575060016125f6565b6125ef826001613e36565b91506125a9565b8015612668575b600a82101561266857601e612613836001613e36565b600b811061263157634e487b7160e01b600052603260045260246000fd5b0154601e83600b811061265457634e487b7160e01b600052603260045260246000fd5b0155612661826001613e36565b91506125fd565b6000838152600d6020526040808220600490810154601e5484529183200154919350905b8082116126ee5761269e846001613e36565b9350600a8411156126ae576126ee565b600d6000601e86600b81106126d357634e487b7160e01b600052603260045260246000fd5b0154815260200190815260200160002060040154905061268c565b600a841015611bf75760095b84811061277357601e81600b811061272257634e487b7160e01b600052603260045260246000fd5b0154601e612731836001613e36565b600b811061274f57634e487b7160e01b600052603260045260246000fd5b0155801561276957612762600182613eba565b905061276e565b612773565b6126fa565b85601e86600b811061279557634e487b7160e01b600052603260045260246000fd5b0155505050505050565b6001600160a01b0383166127c55760405162461bcd60e51b815260040161087390613d3d565b336127f5818560006127d687612b6b565b6127df87612b6b565b5050604080516020810190915260009052505050565b60008381526001602090815260408083206001600160a01b0388168452909152902054828110156128385760405162461bcd60e51b815260040161087390613c31565b60006128448483613eba565b60008681526001602090815260408083206001600160a01b038b1684529091529020819055905080612894576001600160a01b03861660009081526020819052604090206128929086612030565b505b60408051868152602081018690526000916001600160a01b0389811692908716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050505050565b6000805b600a82101561294b57826001600160a01b0316602983600b811061292057634e487b7160e01b600052603260045260246000fd5b01546001600160a01b031614156129395750600161294b565b612944826001613e36565b91506128ec565b80156129e3575b600a8210156129e3576029612968836001613e36565b600b811061298657634e487b7160e01b600052603260045260246000fd5b01546001600160a01b0316602983600b81106129b257634e487b7160e01b600052603260045260246000fd5b0180546001600160a01b0319166001600160a01b03929092169190911790556129dc826001613e36565b9150612952565b6001600160a01b038381166000908152600f60205260408082205460295490931682528120549093505b808211612a7757612a1f846001613e36565b9350600a841115612a2f57612a77565b600f6000602986600b8110612a5457634e487b7160e01b600052603260045260246000fd5b01546001600160a01b031681526020810191909152604001600020549050612a0d565b600a841015611bf75760095b848110612b2257602981600b8110612aab57634e487b7160e01b600052603260045260246000fd5b01546001600160a01b03166029612ac3836001613e36565b600b8110612ae157634e487b7160e01b600052603260045260246000fd5b0180546001600160a01b0319166001600160a01b03929092169190911790558015612b1857612b11600182613eba565b9050612b1d565b612b22565b612a83565b85602986600b8110612b4457634e487b7160e01b600052603260045260246000fd5b0180546001600160a01b0319166001600160a01b0392909216919091179055505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110612bb357634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b15610e5e5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190612c089089908990889088908890600401613b50565b602060405180830381600087803b158015612c2257600080fd5b505af1925050508015612c52575060408051601f3d908101601f19168201909252612c4f918101906138d0565b60015b612c5e576120d6613f80565b6001600160e01b0319811663f23a6e6160e01b14611d6a5760405162461bcd60e51b815260040161087390613be9565b6000805b600a821015612cdf5782601383600b8110612cbd57634e487b7160e01b600052603260045260246000fd5b01541415612ccd57506001612cdf565b612cd8826001613e36565b9150612c92565b8015612de4575b600a821015612de4576013612cfc836001613e36565b600b8110612d1a57634e487b7160e01b600052603260045260246000fd5b0154601383600b8110612d3d57634e487b7160e01b600052603260045260246000fd5b01556011612d4c836001613e36565b600b8110612d6a57634e487b7160e01b600052603260045260246000fd5b600891828204019190066004029054906101000a900463ffffffff16601183600b8110612da757634e487b7160e01b600052603260045260246000fd5b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550816001612ddd9190613e36565b9150612ce6565b6011546000848152600b602052604081205490935063ffffffff918216918491612e1791600160281b9091041642613eba565b90505b8163ffffffff168163ffffffff1611612e8c57612e38846001613e36565b9350600a841115612e4857612e8c565b601184600b8110612e6957634e487b7160e01b600052603260045260246000fd5b600891828204019190066004029054906101000a900463ffffffff169150612e1a565b600a841015611bf75760095b848110612fa657601381600b8110612ec057634e487b7160e01b600052603260045260246000fd5b01546013612ecf836001613e36565b600b8110612eed57634e487b7160e01b600052603260045260246000fd5b0155601181600b8110612f1057634e487b7160e01b600052603260045260246000fd5b600891828204019190066004029054906101000a900463ffffffff166011826001612f3b9190613e36565b600b8110612f5957634e487b7160e01b600052603260045260246000fd5b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555080600014612f9c57612f95600182613eba565b9050612fa1565b612fa6565b612e98565b85601386600b8110612fc857634e487b7160e01b600052603260045260246000fd5b015581601186600b8110612fec57634e487b7160e01b600052603260045260246000fd5b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b6000818152600183016020526040812054613064575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108a1565b5060006108a1565b60008181526001830160205260408120548015613179576000613090600183613eba565b85549091506000906130a490600190613eba565b905060008660000182815481106130cb57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106130fc57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101929092558281526001890190915260409020849055865487908061313d57634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506108a1565b60009150506108a1565b815460009082106131e15760405162461bcd60e51b815260206004820152602260248201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604482015261647360f01b6064820152608401610873565b82600001828154811061320457634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6001600160a01b03831661323d5760405162461bcd60e51b815260040161087390613d3d565b805182511461325e5760405162461bcd60e51b815260040161087390613dca565b604080516020810190915260009081905233905b835181101561338b57600084828151811061329d57634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008483815181106132c957634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160008481526001835260408082206001600160a01b038c16835290935291822054909250906133048383613eba565b9050828210156133265760405162461bcd60e51b815260040161087390613c31565b60008481526001602090815260408083206001600160a01b038d168452909152902081905580613374576001600160a01b03891660009081526020819052604090206133729085612030565b505b50505050808061338390613f39565b915050613272565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516133dc929190613ba8565b60405180910390a450505050565b8280546133f690613ed1565b90600052602060002090601f016020900481019282613418576000855561345e565b82601f1061343157805160ff191683800117855561345e565b8280016001018555821561345e579182015b8281111561345e578251825591602001919060010190613443565b5061346a929150613514565b5090565b8280548282559060005260206000209060070160089004810192821561345e5791602002820160005b838211156134db57835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302613497565b801561350b5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026134db565b505061346a9291505b5b8082111561346a5760008155600101613515565b600067ffffffffffffffff83111561354357613543613f6a565b60405161355a601f8501601f191660200182613f0c565b80915083815284848401111561356f57600080fd5b83836020830137600060208583010152509392505050565b80356001600160a01b03811681146108f657600080fd5b600082601f8301126135ae578081fd5b813560206135bb82613e12565b6040516135c88282613f0c565b8381528281019150858301600585901b870184018810156135e7578586fd5b855b85811015613605578135845292840192908401906001016135e9565b5090979650505050505050565b600082601f830112613622578081fd5b610e8883833560208501613529565b600060208284031215613642578081fd5b610e8882613587565b6000806040838503121561365d578081fd5b61366683613587565b915061367460208401613587565b90509250929050565b600080600080600060a08688031215613694578081fd5b61369d86613587565b94506136ab60208701613587565b9350604086013567ffffffffffffffff808211156136c7578283fd5b6136d389838a0161359e565b945060608801359150808211156136e8578283fd5b6136f489838a0161359e565b93506080880135915080821115613709578283fd5b5061371688828901613612565b9150509295509295909350565b600080600080600060a0868803121561373a578081fd5b61374386613587565b945061375160208701613587565b93506040860135925060608601359150608086013567ffffffffffffffff81111561377a578182fd5b61371688828901613612565b60008060408385031215613798578182fd5b6137a183613587565b9150602083013580151581146137b5578182fd5b809150509250929050565b600080604083850312156137d2578081fd5b6137db83613587565b946020939093013593505050565b600080604083850312156137fb578182fd5b823567ffffffffffffffff80821115613812578384fd5b818501915085601f830112613825578384fd5b8135602061383282613e12565b60405161383f8282613f0c565b8381528281019150858301600585901b870184018b101561385e578889fd5b8896505b848710156138875761387381613587565b835260019690960195918301918301613862565b509650508601359250508082111561389d578283fd5b506138aa8582860161359e565b9150509250929050565b6000602082840312156138c5578081fd5b8135610e8881614029565b6000602082840312156138e1578081fd5b8151610e8881614029565b60008060008060808587031215613901578182fd5b843567ffffffffffffffff80821115613918578384fd5b818701915087601f83011261392b578384fd5b602061393b898435838601613529565b96508088013595506040880135925081831115613956578485fd5b828801925088601f840112613969578485fd5b823561397481613e12565b6040516139818282613f0c565b8281528381019150858401600584901b870185018d10156139a0578889fd5b8896505b838710156139d357803563ffffffff811681146139bf57898afd5b8352600196909601959184019184016139a4565b50965050505060608701359150808211156139ec578283fd5b506139f98782880161359e565b91505092959194509250565b600060208284031215613a16578081fd5b5035919050565b60008060408385031215613a2f578182fd5b82359150602083013567ffffffffffffffff811115613a4c578182fd5b6138aa8582860161359e565b60008060408385031215613a6a578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b83811015613aa857815187529582019590820190600101613a8c565b509495945050505050565b60008151808452815b81811015613ad857602081850181015186830182015201613abc565b81811115613ae95782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090613b2a90830186613a79565b8281036060840152613b3c8186613a79565b905082810360808401526119838185613ab3565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090613b8a90830184613ab3565b979650505050505050565b600060208252610e886020830184613a79565b600060408252613bbb6040830185613a79565b8281036020840152613bcd8185613a79565b95945050505050565b600060208252610e886020830184613ab3565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b60208082526057908201527f54686973204964206e756d626572206973206e6f74206173736f63696174656460408201527f2077697468206f6e65206f6620796f75722073746172746572732c20706c656160608201527f736520747279207769746820612076616c69642069642e000000000000000000608082015260a00190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b600067ffffffffffffffff821115613e2c57613e2c613f6a565b5060051b60200190565b60008219821115613e4957613e49613f54565b500190565b600063ffffffff808316818516808303821115613e6d57613e6d613f54565b01949350505050565b600060ff821660ff84168060ff03821115613e9357613e93613f54565b019392505050565b6000816000190483118215151615613eb557613eb5613f54565b500290565b600082821015613ecc57613ecc613f54565b500390565b600181811c90821680613ee557607f821691505b60208210811415613f0657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715613f3257613f32613f6a565b6040525050565b6000600019821415613f4d57613f4d613f54565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115610a9d57600481823e5160e01c90565b600060443d1015613fa757610a9d565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715613fd9575050505050610a9d565b8285019150815181811115613ff357505050505050610a9d565b843d870101602082850101111561400f57505050505050610a9d565b61401e60208286010187613f0c565b509094505050505090565b6001600160e01b03198116811461403f57600080fd5b5056fea2646970667358221220fc30fe8a3a040997243dea79d6722dbe89e0a2a9170619efc34368d079e4cf0064736f6c63430008030033",
  "deployedSourceMap": "177:16445:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2272:228:1;;;;;;:::i;:::-;;:::i;:::-;;;22786:25:10;;;22774:2;22759:18;2272:228:1;;;;;;;;1335:293;;;;;;:::i;:::-;;:::i;:::-;;;12327:14:10;;12320:22;12302:41;;12290:2;12275:18;1335:293:1;12257:92:10;3831:448:0;;;:::i;2027:103:1:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14876:125:0:-;;;;;;:::i;:::-;;:::i;2894:34::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;9986:32:10;;;9968:51;;9956:2;9941:18;2894:34:0;9923:102:10;15550:131:0;;;;;;:::i;:::-;15614:7;15639:20;;;:10;:20;;;;;:35;;;;15550:131;3009:34;;;;;;5015:1350:1;;;;;;:::i;:::-;;:::i;:::-;;14355:143;;;;;;:::i;:::-;;:::i;15269:144:0:-;;;;;;:::i;:::-;;:::i;:::-;;;23249:10:10;23237:23;;;23219:42;;23207:2;23192:18;15269:144:0;23174:93:10;16219:115:0;;;;;;:::i;:::-;-1:-1:-1;;;;;16306:21:0;16284:4;16306:21;;;:13;:21;;;;;;;;;16219:115;2267:41;;;;;-1:-1:-1;;;;;2267:41:0;;;14504:128:1;;;;;;:::i;:::-;;:::i;2769:38:0:-;;;;;;:::i;:::-;;:::i;2657:530:1:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8375:392:0:-;;;;;;:::i;:::-;;:::i;3049:29::-;;;;;;8878:511;;;;;;:::i;:::-;;:::i;15818:127::-;;;;;;:::i;:::-;15880:7;15905:20;;;:10;:20;;;;;:33;;;;15818:127;5098:749;;;;;;:::i;:::-;;:::i;15988:111::-;;;;;;:::i;:::-;-1:-1:-1;;;;;16071:21:0;16047:6;16071:21;;;:13;:21;;;;;;;;;15988:111;14299:125;;;;;;:::i;:::-;14361:5;14384:21;;;:10;:21;;;;;:33;;;;;;;14299:125;;;;23444:4:10;23432:17;;;23414:36;;23402:2;23387:18;14299:125:0;23369:87:10;14166:128:0;;;;;;:::i;:::-;14229:6;14253:21;;;:10;:21;;;;;:34;;;;14166:128;948:23;;;;;;;;;15687:125;;;;;;:::i;:::-;15748:7;15773:20;;;:10;:20;;;;;:32;;;;15687:125;14429:130;;;;;;:::i;:::-;14493:6;14517:21;;;:10;:21;;;;;:35;-1:-1:-1;;;14517:35:0;;;;;14429:130;919:23;;;;;;3255:306:1;;;;;;:::i;:::-;;:::i;14564:128:0:-;;;;;;:::i;:::-;14630:7;14655:21;;;:10;:21;;;;;:30;-1:-1:-1;;;14655:30:0;;-1:-1:-1;;;;;14655:30:0;;14564:128;3190:295;;;:::i;7325:896::-;;;;;;:::i;:::-;;:::i;977:26::-;;;;;;9397:637;;;;;;:::i;:::-;;:::i;888:25::-;;;;;;16491:129;;;;;;:::i;:::-;;:::i;2813:35::-;;;;;;:::i;:::-;;:::i;2973:30::-;;;;;;10041:265;;;;;;:::i;:::-;;:::i;15132:131::-;;;;;;:::i;:::-;15198:7;15223:20;;;:10;:20;;;;;:26;;:33;;15132:131;15007:120;;;;;;:::i;:::-;15069:6;15093:20;;;:10;:20;;;;;:27;;;;;;15007:120;15419:125;;;;;;:::i;:::-;15483:7;15508:20;;;:10;:20;;;;;:29;;;-1:-1:-1;;;;;15508:29:0;;15419:125;16104:110;;;;;;:::i;:::-;-1:-1:-1;;;;;16189:18:0;16164:7;16189:18;;;:10;:18;;;;;;;16104:110;2854:34;;;;;;:::i;:::-;;:::i;3628:166:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3750:27:1;;;3727:4;3750:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3628:166;3861:1082;;;;;;:::i;:::-;;:::i;3084:35:0:-;;;;;;14697:125;;;;;;:::i;:::-;14758:4;14780:21;;;:10;:21;;;;;:35;-1:-1:-1;;;14780:35:0;;;;;14697:125;4354:636;;;;;;:::i;:::-;;:::i;16342:144::-;;;;;;:::i;:::-;;:::i;2272:228:1:-;2358:7;-1:-1:-1;;;;;2385:21:1;;2377:77;;;;-1:-1:-1;;;2377:77:1;;14013:2:10;2377:77:1;;;13995:21:10;14052:2;14032:18;;;14025:30;14091:34;14071:18;;;14064:62;-1:-1:-1;;;14142:18:10;;;14135:41;14193:19;;2377:77:1;;;;;;;;;-1:-1:-1;2471:13:1;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;2471:22:1;;;;;;;;;;2272:228;;;;;:::o;1335:293::-;1437:4;-1:-1:-1;;;;;;1460:41:1;;-1:-1:-1;;;1460:41:1;;:109;;-1:-1:-1;;;;;;;1517:52:1;;-1:-1:-1;;;1517:52:1;1460:109;:161;;;-1:-1:-1;;;;;;;;;;871:40:7;;;1585:36:1;1453:168;;1335:293;;;;:::o;3831:448:0:-;3872:4;3888:35;3899:10;3912;;3888;:35::i;:::-;3935:15;3953;;3970:1;3953:18;;;;:::i;:::-;3935:36;-1:-1:-1;3982:34:0;3988:10;4000:9;3935:36;4000:1;:9;:::i;:::-;4011:1;3982:34;;;;;;;;;;;;:5;:34::i;:::-;4055:113;;;;;;;;;4090:9;;4026:26;;4055:113;;;4072:27;;4090:9;;4072:15;:27;:::i;:::-;4055:113;;;;;;4101:1;4055:113;;;;;;4110:15;4055:113;;;;;;4127:10;-1:-1:-1;;;;;4055:113:0;;;;;4138:5;4055:113;;;;;;4151:15;4055:113;;;;;4026:142;;4204:1;4187:15;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;;4215:19:0;;;;:10;:19;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4215:31:0;-1:-1:-1;;;;;;;;;4215:31:0;;;-1:-1:-1;;;4215:31:0;;;;;;-1:-1:-1;;;4215:31:0;;-1:-1:-1;;;;;;4215:31:0;;;;;;-1:-1:-1;;4215:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4215:31:0;;;;;;;;-1:-1:-1;3831:448:0;;:::o;2027:103:1:-;2087:13;2119:4;2112:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:103;;;:::o;14876:125:0:-;14968:20;;;;:10;:20;;;;;14961:33;;14937:13;;14968:20;14961:33;;;:::i;2894:34::-;;;;;;;;;;;;;;-1:-1:-1;;;;;2894:34:0;;-1:-1:-1;2894:34:0;:::o;5015:1350:1:-;5269:7;:14;5255:3;:10;:28;5247:81;;;;-1:-1:-1;;;5247:81:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;5346:16:1;;5338:66;;;;-1:-1:-1;;;5338:66:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;5435:20:1;;665:10:6;5435:20:1;;:60;;-1:-1:-1;5459:36:1;5476:4;665:10:6;5482:12:1;586:96:6;5459:36:1;5414:157;;;;-1:-1:-1;;;5414:157:1;;17893:2:10;5414:157:1;;;17875:21:10;17932:2;17912:18;;;17905:30;17971:34;17951:18;;;17944:62;-1:-1:-1;;;18022:18:10;;;18015:48;18080:19;;5414:157:1;17865:240:10;5414:157:1;665:10:6;5582:16:1;5695:515;5719:3;:10;5715:1;:14;5695:515;;;5750:10;5763:3;5767:1;5763:6;;;;;;-1:-1:-1;;;5763:6:1;;;;;;;;;;;;;;;5750:19;;5783:14;5800:7;5808:1;5800:10;;;;;;-1:-1:-1;;;5800:10:1;;;;;;;;;;;;;;;;;;;;5825:19;5847:13;;;:9;:13;;;;;;-1:-1:-1;;;;;5847:19:1;;;;;;;;;;;;5800:10;;-1:-1:-1;5888:21:1;;;;5880:76;;;;-1:-1:-1;;;5880:76:1;;;;;;;:::i;:::-;5992:20;6006:6;5992:11;:20;:::i;:::-;5970:9;:13;5980:2;5970:13;;;;;;;;;;;:19;5984:4;-1:-1:-1;;;;;5970:19:1;-1:-1:-1;;;;;5970:19:1;;;;;;;;;;;;:42;;;;6047:6;6026:9;:13;6036:2;6026:13;;;;;;;;;;;:17;6040:2;-1:-1:-1;;;;;6026:17:1;-1:-1:-1;;;;;6026:17:1;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6067:17:1;;:13;:17;;;;;;;;;;:25;;6089:2;6067:21;:25::i;:::-;-1:-1:-1;6111:13:1;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6111:19:1;;;;;;;;;;6106:94;;-1:-1:-1;;;;;6155:19:1;;:13;:19;;;;;;;;;;:30;;6182:2;6155:26;:30::i;:::-;;6106:94;5695:515;;;5731:3;;;;:::i;:::-;;;5695:515;;;;6255:2;-1:-1:-1;;;;;6225:47:1;6249:4;-1:-1:-1;;;;;6225:47:1;6239:8;-1:-1:-1;;;;;6225:47:1;;6259:3;6264:7;6225:47;;;;;;;:::i;:::-;;;;;;;;6283:75;6319:8;6329:4;6335:2;6339:3;6344:7;6353:4;6283:35;:75::i;:::-;5015:1350;;;;;;:::o;14355:143::-;-1:-1:-1;;;;;14461:20:1;;14435:7;14461:20;;;;;;;;;;:30;;14485:5;14461:23;:30::i;:::-;14454:37;14355:143;-1:-1:-1;;;14355:143:1:o;15269:144:0:-;15349:6;15373:20;;;:10;:20;;;;;:26;;:33;;15400:5;;15373:33;;;;-1:-1:-1;;;15373:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15366:40;;15269:144;;;;:::o;14504:128:1:-;-1:-1:-1;;;;;14596:20:1;;14570:7;14596:20;;;;;;;;;;:29;;:27;:29::i;2769:38:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2657:530:1:-;2830:16;2889:3;:10;2870:8;:15;:29;2862:83;;;;-1:-1:-1;;;2862:83:1;;21195:2:10;2862:83:1;;;21177:21:10;21234:2;21214:18;;;21207:30;21273:34;21253:18;;;21246:62;-1:-1:-1;;;21324:18:10;;;21317:39;21373:19;;2862:83:1;21167:231:10;2862:83:1;2956:30;3003:8;:15;2989:30;;;;;;-1:-1:-1;;;2989:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2989:30:1;;2956:63;;3035:9;3030:120;3054:8;:15;3050:1;:19;3030:120;;;3109:30;3119:8;3128:1;3119:11;;;;;;-1:-1:-1;;;3119:11:1;;;;;;;;;;;;;;;3132:3;3136:1;3132:6;;;;;;-1:-1:-1;;;3132:6:1;;;;;;;;;;;;;;;3109:9;:30::i;:::-;3090:13;3104:1;3090:16;;;;;;-1:-1:-1;;;3090:16:1;;;;;;;;;;;;;;;;;;:49;3071:3;;;:::i;:::-;;;3030:120;;;-1:-1:-1;3167:13:1;2657:530;-1:-1:-1;;;2657:530:1:o;8375:392:0:-;8468:4;8507:20;;;:10;:20;;;;;;8484:43;;;;;;;;;;8468:4;;8484:43;8507:20;8484:43;;8507:20;;8484:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8484:43:0;;;-1:-1:-1;;8484:43:0;;;;-1:-1:-1;;;;;8484:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8537:32:0;8484:43;8556:12;8537:11;:32::i;:::-;-1:-1:-1;8580:20:0;;;;:10;:20;;;;;:32;;:35;;8614:1;;8580:20;:35;;8614:1;;8580:35;:::i;:::-;;;;;;;;8646:1;8634:10;;:13;;;;;;;:::i;:::-;;;;-1:-1:-1;8657:28:0;;-1:-1:-1;8676:8:0;8657:18;:28::i;:::-;8695:44;8701:10;8721:12;;8712:8;:21;;;;:::i;8695:44::-;-1:-1:-1;8756:4:0;;8375:392;-1:-1:-1;;;8375:392:0:o;8878:511::-;8950:4;9020:6;8973:45;8983:10;9009:8;8994:12;;:23;;;;:::i;8973:45::-;:53;;8965:107;;;;-1:-1:-1;;;8965:107:0;;19556:2:10;8965:107:0;;;19538:21:10;19595:2;19575:18;;;19568:30;19634:34;19614:18;;;19607:62;-1:-1:-1;;;19685:18:10;;;19678:39;19734:19;;8965:107:0;19528:231:10;8965:107:0;9091:12;9106:20;;;:10;:20;;;;;:27;;;9178:12;;9106:27;;;;;9091:12;9167:23;;9117:8;9167:23;:::i;:::-;9151:39;;9200:30;9206:10;9217:5;9223:6;9200:5;:30::i;:::-;9240:20;;;;:10;:20;;;;;:33;;:36;;9275:1;;9240:20;:36;;9275:1;;9240:36;:::i;:::-;;;;-1:-1:-1;9311:21:0;;-1:-1:-1;9326:6:0;9311:14;;;:21;:::i;:::-;9297:10;9286:22;;;;:10;:22;;;;;:46;;:22;;;:46;;;;;:::i;:::-;;;;-1:-1:-1;9342:30:0;;-1:-1:-1;9361:10:0;9342:18;:30::i;:::-;8878:511;;;;;;:::o;5098:749::-;5153:4;5178:29;5188:10;5199:7;5178:9;:29::i;:::-;5209:1;5178:32;5170:132;;;;-1:-1:-1;;;5170:132:0;;;;;;;:::i;:::-;5320:19;;;;:10;:19;;;;;:34;;;5358:15;5320:34;;;;:53;;5312:125;;;;-1:-1:-1;;;5312:125:0;;19127:2:10;5312:125:0;;;19109:21:10;19166:2;19146:18;;;19139:30;19205:34;19185:18;;;19178:62;19276:30;19256:18;;;19249:58;19324:19;;5312:125:0;19099:250:10;5312:125:0;5447:20;5459:7;5447:11;:20::i;:::-;;5477;5489:7;5477:11;:20::i;:::-;;5507:15;:13;:15::i;:::-;-1:-1:-1;5576:19:0;;;;:10;:19;;;;;;:33;5543:15;;5532:27;;;;:77;;-1:-1:-1;;5532:77:0;-1:-1:-1;;;5576:33:0;;;;;;5532:77;;;;;;;;;5671:24;:15;5689:6;5671:24;:::i;:::-;5630:15;;5619:27;;;;:10;:27;;;;;;:42;;;;:77;;-1:-1:-1;;5619:77:0;;;;;;;;;;;;;5706:19;;;;;:34;;:31;;:34;;5619:42;;5706:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5793:15;5811:6;5793:24;;;;:::i;:::-;5750:19;;;;:10;:19;;;;;;:34;;;;:68;;-1:-1:-1;;5750:68:0;;;;;;;;;;;;;-1:-1:-1;5750:34:0;5098:749::o;3255:306:1:-;665:10:6;-1:-1:-1;;;;;3357:24:1;;;;3349:78;;;;-1:-1:-1;;;3349:78:1;;20785:2:10;3349:78:1;;;20767:21:10;20824:2;20804:18;;;20797:30;20863:34;20843:18;;;20836:62;-1:-1:-1;;;20914:18:10;;;20907:39;20963:19;;3349:78:1;20757:231:10;3349:78:1;665:10:6;3438:32:1;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;3438:42:1;;;;;;;;;;:53;;-1:-1:-1;;3438:53:1;;;;;;;:42;-1:-1:-1;;;;;3506:48:1;;3545:8;3506:48;;;;12327:14:10;12320:22;12302:41;;12290:2;12275:18;;12257:92;3506:48:1;;;;;;;;3255:306;;:::o;3190:295:0:-;3259:10;3245:25;;;;:13;:25;;;;;;3271:15;3245:25;;;;:41;3237:80;;;;-1:-1:-1;;;3237:80:0;;16159:2:10;3237:80:0;;;16141:21:10;16198:2;16178:18;;;16171:30;16237:29;16217:18;;;16210:57;16284:18;;3237:80:0;16131:177:10;3237:80:0;3327:42;3333:10;3344:7;;3353:11;;3327:42;;;;;;;;;;;;:5;:42::i;:::-;3394:11;;3379;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;3468:9:0;;3450:27;;3468:9;;3450:15;:27;:::i;:::-;3429:10;3415:25;;;;:13;:25;;;;;:63;;-1:-1:-1;;3415:63:0;;;;;;;;;;;;3190:295::o;7325:896::-;7463:7;7504:2;7490:4;:11;:16;;7482:68;;;;-1:-1:-1;;;7482:68:0;;19966:2:10;7482:68:0;;;19948:21:10;20005:2;19985:18;;;19978:30;20044:34;20024:18;;;20017:62;-1:-1:-1;;;20095:18:10;;;20088:37;20142:19;;7482:68:0;19938:229:10;7482:68:0;7583:49;;;;;;;;;;;;;;;;;;;;;;;7615:10;7583:49;;;;7560:20;7583:49;;;;;;;;;;;;;;;;7642:32;7583:49;7661:12;7642:11;:32::i;:::-;-1:-1:-1;7708:12:0;;;;7685:20;;7752:70;7767:4;:11;7765:1;:13;7752:70;;;7804:4;7809:1;7804:7;;;;;;-1:-1:-1;;;7804:7:0;;;;;;;;;;;;;;;7797:14;;;;;:::i;:::-;;-1:-1:-1;7779:3:0;;;;:::i;:::-;;;;7752:70;;;-1:-1:-1;7831:21:0;;;:13;;;:21;7863:18;;;:21;;7883:1;;7863:18;:21;;7883:1;;7863:21;:::i;:::-;;;-1:-1:-1;7894:10:0;:13;;7906:1;;7894:10;;;:13;;7906:1;;7894:13;:::i;:::-;;;;;;;;7935:1;7917:16;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;7980:16:0;;7965:12;;7946:16;;7965:31;;;:::i;:::-;8017:16;;8006:28;;;;:10;:28;;;;;;;;:37;;;;7946:50;;-1:-1:-1;8037:6:0;;8006:28;;:37;;:28;;:37;;;;;:::i;:::-;-1:-1:-1;8006:37:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8006:37:0;;;;;;;;;-1:-1:-1;;;;;;8006:37:0;-1:-1:-1;;;;;8006:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8006:37:0;;;;;;;;8083:16;;8067:10;-1:-1:-1;8053:25:0;;;:13;:25;;;;;:47;;:25;;8083:16;8053:29;:47;:::i;:::-;;8110:36;8129:16;;8110:18;:36::i;:::-;8156:31;8162:10;8173:8;8182:1;8156:31;;;;;;;;;;;;:5;:31::i;:::-;8204:8;7325:896;-1:-1:-1;;;;;;;;7325:896:0:o;9397:637::-;9468:4;9492:31;9502:10;9513:9;9492;:31::i;:::-;9525:1;9492:34;9484:134;;;;-1:-1:-1;;;9484:134:0;;;;;;;:::i;:::-;9628:12;9656:8;;9643:12;:21;;;;:::i;:::-;9628:36;;9674:14;9704:8;;9691:12;:21;;;;:::i;:::-;9674:38;;9722:28;9733:10;9745:4;9722:10;:28::i;:::-;9788:10;;9799:7;;9760:57;;;;;;;;;9788:10;9760:57;;;;9777:10;;-1:-1:-1;;;;;9788:10:0;;;;9807:6;;9760:16;:57::i;:::-;9841:10;9827:25;;;;:13;:25;;;;;:30;;-1:-1:-1;;9827:30:0;9853:4;9827:30;;;9944:9;;9930:23;;9944:9;;9930:12;:23;:::i;:::-;9912:41;;:15;:41;:::i;:::-;9867:21;;;;:10;:21;;;;;:87;;-1:-1:-1;;;;;;9964:42:0;9867:87;;;;;9964:42;;;;-1:-1:-1;;;9964:42:0;;;-1:-1:-1;9867:87:0;;-1:-1:-1;;9397:637:0;;;;:::o;16491:129::-;-1:-1:-1;;;;;16584:20:0;;16558:7;16584:20;;;:13;:20;;;;;:29;;:27;:29::i;2813:35::-;;;;;;;;;;;;;;;-1:-1:-1;2813:35:0;:::o;10041:265::-;10097:4;10121:21;;;:10;:21;;;;;:35;-1:-1:-1;;;10121:35:0;;;;:42;;10159:4;10121:42;10113:51;;;;;;10236:9;;10218:27;;10236:9;;10218:15;:27;:::i;:::-;10174:21;;;;:10;:21;;;;;;:72;;-1:-1:-1;;;;;;10256:43:0;10174:72;;;;;10256:43;;;;;;;10041:265;:::o;2854:34::-;;;;;;;;;;;3861:1082:1;-1:-1:-1;;;;;4076:16:1;;4068:66;;;;-1:-1:-1;;;4068:66:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;4165:20:1;;665:10:6;4165:20:1;;:60;;-1:-1:-1;4189:36:1;4206:4;665:10:6;4212:12:1;586:96:6;4189:36:1;4144:148;;;;-1:-1:-1;;;4144:148:1;;15259:2:10;4144:148:1;;;15241:21:10;15298:2;15278:18;;;15271:30;15337:34;15317:18;;;15310:62;-1:-1:-1;;;15388:18:10;;;15381:39;15437:19;;4144:148:1;15231:231:10;4144:148:1;665:10:6;4345:96:1;665:10:6;4376:4:1;4382:2;4386:21;4404:2;4386:17;:21::i;:::-;4409:25;4427:6;4409:17;:25::i;:::-;5015:1350;;;;;;4345:96;4452:19;4474:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;4474:19:1;;;;;;;;;;4511:21;;;;4503:76;;;;-1:-1:-1;;;4503:76:1;;;;;;;:::i;:::-;4611:20;4625:6;4611:11;:20;:::i;:::-;4589:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;4589:19:1;;;;;;;;;;:42;;;;4641:17;;;;;;;:27;;4662:6;;4589:13;4641:27;;4662:6;;4641:27;:::i;:::-;;;;-1:-1:-1;;;;;;;4678:17:1;;:13;:17;;;;;;;;;;:25;;4700:2;4678:21;:25::i;:::-;-1:-1:-1;4717:13:1;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;4717:19:1;;;;;;;;;;4713:83;;-1:-1:-1;;;;;4755:19:1;;:13;:19;;;;;;;;;;:30;;4782:2;4755:26;:30::i;:::-;;4713:83;4842:2;-1:-1:-1;;;;;4811:46:1;4836:4;-1:-1:-1;;;;;4811:46:1;4826:8;-1:-1:-1;;;;;4811:46:1;;4846:2;4850:6;4811:46;;;;;;22996:25:10;;;23052:2;23037:18;;23030:34;22984:2;22969:18;;22951:119;4811:46:1;;;;;;;;4868:68;4899:8;4909:4;4915:2;4919;4923:6;4931:4;4868:30;:68::i;:::-;3861:1082;;;;;;;:::o;4354:636:0:-;4408:4;4432:29;4442:10;4453:7;4432:9;:29::i;:::-;4465:1;4432:34;4424:135;;;;-1:-1:-1;;;4424:135:0;;;;;;;:::i;:::-;4577:19;;;;:10;:19;;;;;:32;4613:15;4577:32;;;;:51;;4569:121;;;;-1:-1:-1;;;4569:121:0;;22014:2:10;4569:121:0;;;21996:21:10;22053:2;22033:18;;;22026:30;22092:34;22072:18;;;22065:62;22163:27;22143:18;;;22136:55;22208:19;;4569:121:0;21986:247:10;4569:121:0;4700:32;4711:10;4723:8;;4700:10;:32::i;:::-;4802:9;;4784:27;;4802:9;;4784:15;:27;:::i;:::-;4742:19;;;;:10;:19;;;;;:70;;-1:-1:-1;;4742:70:0;;;;;;;;;;;;;;-1:-1:-1;;;4825:33:0;;;;4822:102;;;4873:19;;;;:10;:19;;4822:102;4933:28;4953:7;4933:19;:28::i;:::-;-1:-1:-1;4979:4:0;4354:636;;;:::o;16342:144::-;-1:-1:-1;;;;;16449:20:0;;16423:7;16449:20;;;:13;:20;;;;;:30;;16473:5;16449:23;:30::i;3546:195::-;3657:6;3626:29;3636:10;3647:7;;3626:9;:29::i;:::-;:37;;3618:46;;;;;;3674:29;3680:7;3688;;3696:6;3674:5;:29::i;:::-;3728:6;3713:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;3546:195:0:o;7662:586:1:-;-1:-1:-1;;;;;7776:21:1;;7768:67;;;;-1:-1:-1;;;7768:67:1;;22440:2:10;7768:67:1;;;22422:21:10;22479:2;22459:18;;;22452:30;22518:34;22498:18;;;22491:62;-1:-1:-1;;;22569:18:10;;;22562:31;22610:19;;7768:67:1;22412:223:10;7768:67:1;665:10:6;7888:107:1;665:10:6;7846:16:1;7931:7;7940:21;7958:2;7940:17;:21::i;7888:107::-;8006:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8006:22:1;;;;;;;;;:32;;8032:6;;8006:13;:32;;8032:6;;8006:32;:::i;:::-;;;;-1:-1:-1;;;;;;;8049:22:1;;:13;:22;;;;;;;;;;:30;;8076:2;8049:26;:30::i;:::-;-1:-1:-1;8094:57:1;;;22996:25:10;;;23052:2;23037:18;;23030:34;;;-1:-1:-1;;;;;8094:57:1;;;;8127:1;;8094:57;;;;;;22969:18:10;8094:57:1;;;;;;;8162:79;8193:8;8211:1;8215:7;8224:2;8228:6;8236:4;8162:30;:79::i;8069:129:9:-;8136:4;8159:32;8164:3;8184:5;8159:4;:32::i;8366:135::-;8436:4;8459:35;8467:3;8487:5;8459:7;:35::i;13372:778:1:-;-1:-1:-1;;;;;13616:13:1;;1078:20:5;1116:8;13612:532:1;;13651:79;;-1:-1:-1;;;13651:79:1;;-1:-1:-1;;;;;13651:43:1;;;;;:79;;13695:8;;13705:4;;13711:3;;13716:7;;13725:4;;13651:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13651:79:1;;;;;;;;-1:-1:-1;;13651:79:1;;;;;;;;;;;;:::i;:::-;;;13647:487;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14010:6;14003:14;;-1:-1:-1;;;14003:14:1;;;;;;;;:::i;13647:487::-;;;14057:62;;-1:-1:-1;;;14057:62:1;;12780:2:10;14057:62:1;;;12762:21:10;12819:2;12799:18;;;12792:30;12858:34;12838:18;;;12831:62;-1:-1:-1;;;12909:18:10;;;12902:50;12969:19;;14057:62:1;12752:242:10;13647:487:1;-1:-1:-1;;;;;;13779:64:1;;-1:-1:-1;;;13779:64:1;13775:161;;13867:50;;-1:-1:-1;;;13867:50:1;;;;;;;:::i;9251:135:9:-;9322:7;9356:22;9360:3;9372:5;9356:3;:22::i;8807:112::-;8867:7;8893:19;8901:3;4096:18;;4014:107;6051:1204:0;6143:4;6200:6;:21;;;6167:30;6177:10;6189:7;;6167:9;:30::i;:::-;:54;;6159:108;;;;-1:-1:-1;;;6159:108:0;;20374:2:10;6159:108:0;;;20356:21:10;20413:2;20393:18;;;20386:30;20452:34;20432:18;;;20425:62;-1:-1:-1;;;20503:18:10;;;20496:40;20553:19;;6159:108:0;20346:232:10;6159:108:0;6291:12;;;;:19;6277:11;6291:19;6344:18;;;;;;-1:-1:-1;;;6344:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6344:18:0;;6320:42;;6403:12;:19;6380:6;:12;;;:19;:42;6372:114;;;;-1:-1:-1;;;6372:114:0;;14830:2:10;6372:114:0;;;14812:21:10;14869:2;14849:18;;;14842:30;14908:34;14888:18;;;14881:62;14979:30;14959:18;;;14952:58;15027:19;;6372:114:0;14802:250:10;6372:114:0;6500:6;6496:622;6511:6;:12;;;:19;6509:1;:21;6496:622;;;6549:17;6592:10;:27;6603:12;6616:1;6603:15;;;;;;-1:-1:-1;;;6603:15:0;;;;;;;;;;;;;;;;;;;;6592:27;;;;;;;;;;-1:-1:-1;6592:27:0;:41;6576:57;;-1:-1:-1;;;6592:41:0;;;;6576:15;:57;:::i;:::-;6549:85;;6669:6;:12;;;6682:1;6669:15;;;;;;-1:-1:-1;;;6669:15:0;;;;;;;;;;;;;;;6656:28;;:10;:28;;;6648:122;;;;-1:-1:-1;;;6648:122:0;;15669:2:10;6648:122:0;;;15651:21:10;15708:2;15688:18;;;15681:30;15747:34;15727:18;;;15720:62;15818:34;15798:18;;;15791:62;-1:-1:-1;;;15869:19:10;;;15862:48;15927:19;;6648:122:0;15641:311:10;6648:122:0;6838:15;6794:10;:27;6805:12;6818:1;6805:15;;;;;;-1:-1:-1;;;6805:15:0;;;;;;;;;;;;;;;;;;;;6794:27;;;;;;;;;;-1:-1:-1;6794:27:0;:40;;;:59;;6786:139;;;;-1:-1:-1;;;6786:139:0;;17417:2:10;6786:139:0;;;17399:21:10;17456:2;17436:18;;;17429:30;17495:34;17475:18;;;17468:62;17566:34;17546:18;;;17539:62;-1:-1:-1;;;17617:19:10;;;17610:34;17661:19;;6786:139:0;17389:297:10;6786:139:0;6947:37;6957:10;6968:12;6981:1;6968:15;;;;;;-1:-1:-1;;;6968:15:0;;;;;;;;6947:37;6986:1;6947:40;6939:140;;;;-1:-1:-1;;;6939:140:0;;;;;;;:::i;:::-;7106:1;7093:7;7101:1;7093:10;;;;;;-1:-1:-1;;;7093:10:0;;;;;;;;;;;;;;;;;;:14;-1:-1:-1;6531:3:0;;;;:::i;:::-;;;;6496:622;;;;7127:45;7138:10;7150:12;7164:7;7127:10;:45::i;:::-;7183:44;7194:10;7205:6;:21;;;7183:10;:44::i;:::-;-1:-1:-1;7244:4:0;;6051:1204;-1:-1:-1;;;;6051:1204:0:o;11741:1199::-;11807:10;11831:13;11862:172;11874:2;11868:5;:8;11862:172;;;11918:9;11894:15;11910:5;11894:22;;;;;-1:-1:-1;;;11894:22:0;;;;;;;;;;;:33;11891:106;;;-1:-1:-1;11955:4:0;11977:5;;11891:106;12016:7;:5;12022:1;12016:7;:::i;:::-;12010:13;;11862:172;;;12047:8;12044:162;;;12070:126;12082:2;12076:5;:8;12070:126;;;12126:15;12142:7;:5;12148:1;12142:7;:::i;:::-;12126:24;;;;;-1:-1:-1;;;12126:24:0;;;;;;;;;;;12103:15;12119:5;12103:22;;;;;-1:-1:-1;;;12103:22:0;;;;;;;;;;:47;12174:7;:5;12180:1;12174:7;:::i;:::-;12168:13;;12070:126;;;12222:1;12249:21;;;:10;:21;;;;;;:33;;;;;12320:15;:22;12309:34;;;;;:46;;12222:1;;-1:-1:-1;12249:33:0;12365:215;12380:6;12371:5;:15;12365:215;;12407:7;:5;12413:1;12407:7;:::i;:::-;12401:13;;12437:2;12431:5;:8;12428:142;;;12458:5;;12428:142;12509:10;:34;12520:15;12536:5;12520:22;;;;;-1:-1:-1;;;12520:22:0;;;;;;;;;;;12509:34;;;;;;;;;;;:46;;;12500:55;;12365:215;;;12599:2;12593:5;:8;12590:345;;;12630:1;12645:234;12659:5;12651:6;:13;12645:234;;12709:15;12725:6;12709:23;;;;;-1:-1:-1;;;12709:23:0;;;;;;;;;;;12683:15;12699:8;:6;12706:1;12699:8;:::i;:::-;12683:25;;;;;-1:-1:-1;;;12683:25:0;;;;;;;;;;:49;12753:9;;12750:115;;12788:8;12795:1;12788:6;:8;:::i;:::-;12781:15;;12750:115;;;12841:5;;12750:115;12645:234;;;12915:9;12892:15;12908:5;12892:22;;;;;-1:-1:-1;;;12892:22:0;;;;;;;;;;:32;-1:-1:-1;11741:1199:0;;;;;:::o;9569:727:1:-;-1:-1:-1;;;;;9664:21:1;;9656:69;;;;-1:-1:-1;;;9656:69:1;;;;;;;:::i;:::-;665:10:6;9778:105:1;665:10:6;9809:7:1;9736:16;9830:21;9848:2;9830:17;:21::i;:::-;9853:25;9871:6;9853:17;:25::i;:::-;-1:-1:-1;;9778:105:1;;;;;;;;;-1:-1:-1;9778:105:1;;-1:-1:-1;;;5015:1350:1;9778:105;9894:22;9919:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;9919:22:1;;;;;;;;;;9959:24;;;;9951:73;;;;-1:-1:-1;;;9951:73:1;;;;;;;:::i;:::-;10034:18;10055:21;10070:6;10055:14;:21;:::i;:::-;10086:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;10086:22:1;;;;;;;;;:35;;;10034:42;-1:-1:-1;10135:14:1;10131:78;;-1:-1:-1;;;;;10165:22:1;;:13;:22;;;;;;;;;;:33;;10195:2;10165:29;:33::i;:::-;;10131:78;10232:57;;;22996:25:10;;;23052:2;23037:18;;23030:34;;;10274:1:1;;-1:-1:-1;;;;;10232:57:1;;;;;;;;;;22969:18:10;10232:57:1;;;;;;;9569:727;;;;;;:::o;12951:1150:0:-;13015:10;13039:13;13070:170;13082:2;13076:5;:8;13070:170;;;13126:7;-1:-1:-1;;;;;13102:31:0;:15;13118:5;13102:22;;;;;-1:-1:-1;;;13102:22:0;;;;;;;;;;;-1:-1:-1;;;;;13102:22:0;:31;13099:104;;;-1:-1:-1;13161:4:0;13183:5;;13099:104;13222:7;:5;13228:1;13222:7;:::i;:::-;13216:13;;13070:170;;;13252:8;13249:162;;;13275:126;13287:2;13281:5;:8;13275:126;;;13331:15;13347:7;:5;13353:1;13347:7;:::i;:::-;13331:24;;;;;-1:-1:-1;;;13331:24:0;;;;;;;;;;;-1:-1:-1;;;;;13331:24:0;13308:15;13324:5;13308:22;;;;;-1:-1:-1;;;13308:22:0;;;;;;;;;;:47;;-1:-1:-1;;;;;;13308:47:0;-1:-1:-1;;;;;13308:47:0;;;;;;;;;;13379:7;:5;-1:-1:-1;13379:7:0;:::i;:::-;13373:13;;13275:126;;;-1:-1:-1;;;;;13453:19:0;;;13426:1;13453:19;;;:10;:19;;;;;;;13510:15;:22;;;;13499:34;;;;;13426:1;;-1:-1:-1;13543:201:0;13556:6;13549:5;:13;13543:201;;13583:7;:5;13589:1;13583:7;:::i;:::-;13577:13;;13613:2;13607:5;:8;13604:130;;;13634:5;;13604:130;13685:10;:34;13696:15;13712:5;13696:22;;;;;-1:-1:-1;;;13696:22:0;;;;;;;;;;;-1:-1:-1;;;;;13696:22:0;13685:34;;;;;;;;;;;13696:22;13685:34;;;-1:-1:-1;13543:201:0;;;13762:2;13756:5;:8;13753:342;;;13792:1;13807:234;13821:5;13813:6;:13;13807:234;;13871:15;13887:6;13871:23;;;;;-1:-1:-1;;;13871:23:0;;;;;;;;;;;-1:-1:-1;;;;;13871:23:0;13845:15;13861:8;:6;13871:23;13861:8;:::i;:::-;13845:25;;;;;-1:-1:-1;;;13845:25:0;;;;;;;;;;:49;;-1:-1:-1;;;;;;13845:49:0;-1:-1:-1;;;;;13845:49:0;;;;;;;;;;13915:9;;13912:115;;13950:8;13957:1;13950:6;:8;:::i;:::-;13943:15;;13912:115;;;14003:5;;13912:115;13807:234;;;14077:7;14054:15;14070:5;14054:22;;;;;-1:-1:-1;;;14054:22:0;;;;;;;;;;:30;;-1:-1:-1;;;;;;14054:30:0;-1:-1:-1;;;;;14054:30:0;;;;;;;;;;-1:-1:-1;;;;;;12951:1150:0:o;14156:193:1:-;14275:16;;;14289:1;14275:16;;;;;;;;;14222;;14250:22;;14275:16;;;;;;;;;;;;-1:-1:-1;14275:16:1;14250:41;;14312:7;14301:5;14307:1;14301:8;;;;;;-1:-1:-1;;;14301:8:1;;;;;;;;;;;;;;;;;;:18;14337:5;14156:193;-1:-1:-1;;14156:193:1:o;12625:741::-;-1:-1:-1;;;;;12844:13:1;;1078:20:5;1116:8;12840:520:1;;12879:72;;-1:-1:-1;;;12879:72:1;;-1:-1:-1;;;;;12879:38:1;;;;;:72;;12918:8;;12928:4;;12934:2;;12938:6;;12946:4;;12879:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12879:72:1;;;;;;;;-1:-1:-1;;12879:72:1;;;;;;;;;;;;:::i;:::-;;;12875:475;;;;:::i;:::-;-1:-1:-1;;;;;;13000:59:1;;-1:-1:-1;;;13000:59:1;12996:156;;13083:50;;-1:-1:-1;;;13083:50:1;;;;;;;:::i;10323:1402:0:-;10391:10;10415:13;10446:174;10458:2;10452:5;:8;10446:174;;;10503:10;10478:16;10495:5;10478:23;;;;;-1:-1:-1;;;10478:23:0;;;;;;;;;;;:35;10475:108;;;-1:-1:-1;10541:4:0;10563:5;;10475:108;10602:7;:5;10608:1;10602:7;:::i;:::-;10596:13;;10446:174;;;10633:8;10630:239;;;10656:203;10668:2;10662:5;:8;10656:203;;;10713:16;10730:7;:5;10736:1;10730:7;:::i;:::-;10713:25;;;;;-1:-1:-1;;;10713:25:0;;;;;;;;;;;10689:16;10706:5;10689:23;;;;;-1:-1:-1;;;10689:23:0;;;;;;;;;;:49;10784:20;10805:7;:5;10811:1;10805:7;:::i;:::-;10784:29;;;;;-1:-1:-1;;;10784:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10756:20;10777:5;10756:27;;;;;-1:-1:-1;;;10756:27:0;;;;;;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;10837:5;10843:1;10837:7;;;;:::i;:::-;10831:13;;10656:203;;;10912:20;:27;10885:1;10990:22;;;:10;:22;;;;;:36;10885:1;;-1:-1:-1;10912:27:0;;;;;10885:1;;10972:54;;-1:-1:-1;;;10990:36:0;;;;10972:15;:54;:::i;:::-;10949:79;;11038:196;11053:6;11044:15;;:5;:15;;;11038:196;;11080:7;:5;11086:1;11080:7;:::i;:::-;11074:13;;11110:2;11104:5;:8;11101:123;;;11131:5;;11101:123;11182:20;11203:5;11182:27;;;;;-1:-1:-1;;;11182:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11173:36;;11038:196;;;11253:2;11247:5;:8;11244:475;;;11283:1;11298:315;11312:5;11304:6;:13;11298:315;;11365:16;11382:6;11365:24;;;;;-1:-1:-1;;;11365:24:0;;;;;;;;;;;11336:16;11353:8;:6;11360:1;11353:8;:::i;:::-;11336:26;;;;;-1:-1:-1;;;11336:26:0;;;;;;;;;;:53;11438:20;11459:6;11438:28;;;;;-1:-1:-1;;;11438:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11407:20;11428:6;11435:1;11428:8;;;;:::i;:::-;11407:30;;;;;-1:-1:-1;;;11407:30:0;;;;;;;;;;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;11487:6;11495:1;11487:9;11484:115;;11522:8;11529:1;11522:6;:8;:::i;:::-;11515:15;;11484:115;;;11575:5;;11484:115;11298:315;;;11651:10;11626:16;11643:5;11626:23;;;;;-1:-1:-1;;;11626:23:0;;;;;;;;;;:35;11703:5;11675:20;11696:5;11675:27;;;;;-1:-1:-1;;;11675:27:0;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;11244:475;10323:1402;;;;;:::o;1632:404:9:-;1695:4;3902:19;;;:12;;;:19;;;;;;1711:319;;-1:-1:-1;1753:23:9;;;;;;;;:11;:23;;;;;;;;;;;;;1933:18;;1911:19;;;:12;;;:19;;;;;;:40;;;;1965:11;;1711:319;-1:-1:-1;2014:5:9;2007:12;;2204:1521;2270:4;2407:19;;;:12;;;:19;;;;;;2441:15;;2437:1282;;2798:21;2822:14;2835:1;2822:10;:14;:::i;:::-;2870:18;;2798:38;;-1:-1:-1;2850:17:9;;2870:22;;2891:1;;2870:22;:::i;:::-;2850:42;;3132:17;3152:3;:11;;3164:9;3152:22;;;;;;-1:-1:-1;;;3152:22:9;;;;;;;;;;;;;;;;;3132:42;;3295:9;3266:3;:11;;3278:13;3266:26;;;;;;-1:-1:-1;;;3266:26:9;;;;;;;;;;;;;;;;;;;;:38;;;;3370:23;;;:12;;;:23;;;;;;:36;;;3528:17;;3370:3;;3528:17;;;-1:-1:-1;;;3528:17:9;;;;;;;;;;;;;;;;;;;;;;;;;;3620:3;:12;;:19;3633:5;3620:19;;;;;;;;;;;3613:26;;;3661:4;3654:11;;;;;;;;2437:1282;3703:5;3696:12;;;;;4453:201;4547:18;;4520:7;;4547:26;-1:-1:-1;4539:73:9;;;;-1:-1:-1;;;4539:73:9;;13201:2:10;4539:73:9;;;13183:21:10;13240:2;13220:18;;;13213:30;13279:34;13259:18;;;13252:62;-1:-1:-1;;;13330:18:10;;;13323:32;13372:19;;4539:73:9;13173:224:10;4539:73:9;4629:3;:11;;4641:5;4629:18;;;;;;-1:-1:-1;;;4629:18:9;;;;;;;;;;;;;;;;;4622:25;;4453:201;;;;:::o;10490:960:1:-;-1:-1:-1;;;;;10610:21:1;;10602:69;;;;-1:-1:-1;;;10602:69:1;;;;;;;:::i;:::-;10703:7;:14;10689:3;:10;:28;10681:81;;;;-1:-1:-1;;;10681:81:1;;;;;;;:::i;:::-;10814:69;;;;;;;;;10773:16;10814:69;;;;665:10:6;;10894:476:1;10915:3;:10;10911:1;:14;10894:476;;;10946:10;10959:3;10963:1;10959:6;;;;;;-1:-1:-1;;;10959:6:1;;;;;;;;;;;;;;;10946:19;;10979:14;10996:7;11004:1;10996:10;;;;;;-1:-1:-1;;;10996:10:1;;;;;;;;;;;;;;;;;;;;11021:22;11046:13;;;:9;:13;;;;;;-1:-1:-1;;;;;11046:22:1;;;;;;;;;;;10996:10;;-1:-1:-1;11046:22:1;11103:21;10996:10;11046:22;11103:21;:::i;:::-;11082:42;;11164:6;11146:14;:24;;11138:73;;;;-1:-1:-1;;;11138:73:1;;;;;;;:::i;:::-;11225:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;11225:22:1;;;;;;;;;:35;;;11278:14;11274:86;;-1:-1:-1;;;;;11312:22:1;;:13;:22;;;;;;;;;;:33;;11342:2;11312:29;:33::i;:::-;;11274:86;10894:476;;;;10927:3;;;;;:::i;:::-;;;;10894:476;;;;11426:1;-1:-1:-1;;;;;11385:58:1;11409:7;-1:-1:-1;;;;;11385:58:1;11399:8;-1:-1:-1;;;;;11385:58:1;;11430:3;11435:7;11385:58;;;;;;;:::i;:::-;;;;;;;;10490:960;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:468:10;;112:18;104:6;101:30;98:2;;;134:18;;:::i;:::-;183:2;177:9;195:69;252:2;231:15;;-1:-1:-1;;227:29:10;258:4;223:40;177:9;195:69;:::i;:::-;282:6;273:15;;312:6;304;297:22;352:3;343:6;338:3;334:16;331:25;328:2;;;369:1;366;359:12;328:2;419:6;414:3;407:4;399:6;395:17;382:44;474:1;467:4;458:6;450;446:19;442:30;435:41;;88:394;;;;;:::o;487:173::-;555:20;;-1:-1:-1;;;;;604:31:10;;594:42;;584:2;;650:1;647;640:12;665:755;;772:3;765:4;757:6;753:17;749:27;739:2;;794:5;787;780:20;739:2;834:6;821:20;860:4;883:43;923:2;883:43;:::i;:::-;955:2;949:9;967:31;995:2;987:6;967:31;:::i;:::-;1033:18;;;1067:15;;;;-1:-1:-1;1102:15:10;;;1152:1;1148:10;;;1136:23;;1132:32;;1129:41;-1:-1:-1;1126:2:10;;;1187:5;1180;1173:20;1126:2;1213:5;1227:163;1241:2;1238:1;1235:9;1227:163;;;1298:17;;1286:30;;1336:12;;;;1368;;;;1259:1;1252:9;1227:163;;;-1:-1:-1;1408:6:10;;729:691;-1:-1:-1;;;;;;;729:691:10:o;1425:228::-;;1520:3;1513:4;1505:6;1501:17;1497:27;1487:2;;1542:5;1535;1528:20;1487:2;1568:79;1643:3;1634:6;1621:20;1614:4;1606:6;1602:17;1568:79;:::i;1658:196::-;;1770:2;1758:9;1749:7;1745:23;1741:32;1738:2;;;1791:6;1783;1776:22;1738:2;1819:29;1838:9;1819:29;:::i;1859:270::-;;;1988:2;1976:9;1967:7;1963:23;1959:32;1956:2;;;2009:6;2001;1994:22;1956:2;2037:29;2056:9;2037:29;:::i;:::-;2027:39;;2085:38;2119:2;2108:9;2104:18;2085:38;:::i;:::-;2075:48;;1946:183;;;;;:::o;2134:983::-;;;;;;2373:3;2361:9;2352:7;2348:23;2344:33;2341:2;;;2395:6;2387;2380:22;2341:2;2423:29;2442:9;2423:29;:::i;:::-;2413:39;;2471:38;2505:2;2494:9;2490:18;2471:38;:::i;:::-;2461:48;;2560:2;2549:9;2545:18;2532:32;2583:18;2624:2;2616:6;2613:14;2610:2;;;2645:6;2637;2630:22;2610:2;2673:61;2726:7;2717:6;2706:9;2702:22;2673:61;:::i;:::-;2663:71;;2787:2;2776:9;2772:18;2759:32;2743:48;;2816:2;2806:8;2803:16;2800:2;;;2837:6;2829;2822:22;2800:2;2865:63;2920:7;2909:8;2898:9;2894:24;2865:63;:::i;:::-;2855:73;;2981:3;2970:9;2966:19;2953:33;2937:49;;3011:2;3001:8;2998:16;2995:2;;;3032:6;3024;3017:22;2995:2;;3060:51;3103:7;3092:8;3081:9;3077:24;3060:51;:::i;:::-;3050:61;;;2331:786;;;;;;;;:::o;3122:626::-;;;;;;3311:3;3299:9;3290:7;3286:23;3282:33;3279:2;;;3333:6;3325;3318:22;3279:2;3361:29;3380:9;3361:29;:::i;:::-;3351:39;;3409:38;3443:2;3432:9;3428:18;3409:38;:::i;:::-;3399:48;;3494:2;3483:9;3479:18;3466:32;3456:42;;3545:2;3534:9;3530:18;3517:32;3507:42;;3600:3;3589:9;3585:19;3572:33;3628:18;3620:6;3617:30;3614:2;;;3665:6;3657;3650:22;3614:2;3693:49;3734:7;3725:6;3714:9;3710:22;3693:49;:::i;3753:367::-;;;3879:2;3867:9;3858:7;3854:23;3850:32;3847:2;;;3900:6;3892;3885:22;3847:2;3928:29;3947:9;3928:29;:::i;:::-;3918:39;;4007:2;3996:9;3992:18;3979:32;4054:5;4047:13;4040:21;4033:5;4030:32;4020:2;;4081:6;4073;4066:22;4020:2;4109:5;4099:15;;;3837:283;;;;;:::o;4125:264::-;;;4254:2;4242:9;4233:7;4229:23;4225:32;4222:2;;;4275:6;4267;4260:22;4222:2;4303:29;4322:9;4303:29;:::i;:::-;4293:39;4379:2;4364:18;;;;4351:32;;-1:-1:-1;;;4212:177:10:o;4394:1274::-;;;4573:2;4561:9;4552:7;4548:23;4544:32;4541:2;;;4594:6;4586;4579:22;4541:2;4639:9;4626:23;4668:18;4709:2;4701:6;4698:14;4695:2;;;4730:6;4722;4715:22;4695:2;4773:6;4762:9;4758:22;4748:32;;4818:7;4811:4;4807:2;4803:13;4799:27;4789:2;;4845:6;4837;4830:22;4789:2;4886;4873:16;4908:4;4931:43;4971:2;4931:43;:::i;:::-;5003:2;4997:9;5015:31;5043:2;5035:6;5015:31;:::i;:::-;5081:18;;;5115:15;;;;-1:-1:-1;5150:11:10;;;5192:1;5188:10;;;5180:19;;5176:28;;5173:41;-1:-1:-1;5170:2:10;;;5232:6;5224;5217:22;5170:2;5259:6;5250:15;;5274:169;5288:2;5285:1;5282:9;5274:169;;;5345:23;5364:3;5345:23;:::i;:::-;5333:36;;5306:1;5299:9;;;;;5389:12;;;;5421;;5274:169;;;-1:-1:-1;5462:6:10;-1:-1:-1;;5506:18:10;;5493:32;;-1:-1:-1;;5537:16:10;;;5534:2;;;5571:6;5563;5556:22;5534:2;;5599:63;5654:7;5643:8;5632:9;5628:24;5599:63;:::i;:::-;5589:73;;;4531:1137;;;;;:::o;5673:255::-;;5784:2;5772:9;5763:7;5759:23;5755:32;5752:2;;;5805:6;5797;5790:22;5752:2;5849:9;5836:23;5868:30;5892:5;5868:30;:::i;5933:259::-;;6055:2;6043:9;6034:7;6030:23;6026:32;6023:2;;;6076:6;6068;6061:22;6023:2;6113:9;6107:16;6132:30;6156:5;6132:30;:::i;6197:1799::-;;;;;6419:3;6407:9;6398:7;6394:23;6390:33;6387:2;;;6441:6;6433;6426:22;6387:2;6486:9;6473:23;6515:18;6556:2;6548:6;6545:14;6542:2;;;6577:6;6569;6562:22;6542:2;6620:6;6609:9;6605:22;6595:32;;6665:7;6658:4;6654:2;6650:13;6646:27;6636:2;;6692:6;6684;6677:22;6636:2;6720:4;6743:73;6808:7;6803:2;6790:16;6785:2;6781;6777:11;6743:73;:::i;:::-;6733:83;;6863:2;6852:9;6848:18;6835:32;6825:42;;6920:2;6909:9;6905:18;6892:32;6876:48;;6949:2;6939:8;6936:16;6933:2;;;6970:6;6962;6955:22;6933:2;7013:8;7002:9;6998:24;6988:34;;7060:7;7053:4;7049:2;7045:13;7041:27;7031:2;;7087:6;7079;7072:22;7031:2;7128;7115:16;7150:43;7190:2;7150:43;:::i;:::-;7222:2;7216:9;7234:31;7262:2;7254:6;7234:31;:::i;:::-;7300:18;;;7334:15;;;;-1:-1:-1;7369:11:10;;;7411:1;7407:10;;;7399:19;;7395:28;;7392:41;-1:-1:-1;7389:2:10;;;7451:6;7443;7436:22;7389:2;7478:6;7469:15;;7493:278;7507:2;7504:1;7501:9;7493:278;;;7578:3;7565:17;7626:10;7619:5;7615:22;7608:5;7605:33;7595:2;;7657:6;7649;7642:22;7595:2;7679:18;;7525:1;7518:9;;;;;7717:12;;;;7749;;7493:278;;;-1:-1:-1;7790:6:10;-1:-1:-1;;;;7849:2:10;7834:18;;7821:32;;-1:-1:-1;7865:16:10;;;7862:2;;;7899:6;7891;7884:22;7862:2;;7927:63;7982:7;7971:8;7960:9;7956:24;7927:63;:::i;:::-;7917:73;;;6377:1619;;;;;;;:::o;8001:190::-;;8113:2;8101:9;8092:7;8088:23;8084:32;8081:2;;;8134:6;8126;8119:22;8081:2;-1:-1:-1;8162:23:10;;8071:120;-1:-1:-1;8071:120:10:o;8196:436::-;;;8350:2;8338:9;8329:7;8325:23;8321:32;8318:2;;;8371:6;8363;8356:22;8318:2;8412:9;8399:23;8389:33;;8473:2;8462:9;8458:18;8445:32;8500:18;8492:6;8489:30;8486:2;;;8537:6;8529;8522:22;8486:2;8565:61;8618:7;8609:6;8598:9;8594:22;8565:61;:::i;8637:258::-;;;8766:2;8754:9;8745:7;8741:23;8737:32;8734:2;;;8787:6;8779;8772:22;8734:2;-1:-1:-1;;8815:23:10;;;8885:2;8870:18;;;8857:32;;-1:-1:-1;8724:171:10:o;8900:437::-;;8991:5;8985:12;9018:6;9013:3;9006:19;9044:4;9073:2;9068:3;9064:12;9057:19;;9110:2;9103:5;9099:14;9131:3;9143:169;9157:6;9154:1;9151:13;9143:169;;;9218:13;;9206:26;;9252:12;;;;9287:15;;;;9179:1;9172:9;9143:169;;;-1:-1:-1;9328:3:10;;8961:376;-1:-1:-1;;;;;8961:376:10:o;9342:475::-;;9421:5;9415:12;9448:6;9443:3;9436:19;9473:3;9485:162;9499:6;9496:1;9493:13;9485:162;;;9561:4;9617:13;;;9613:22;;9607:29;9589:11;;;9585:20;;9578:59;9514:12;9485:162;;;9665:6;9662:1;9659:13;9656:2;;;9731:3;9724:4;9715:6;9710:3;9706:16;9702:27;9695:40;9656:2;-1:-1:-1;9799:2:10;9778:15;-1:-1:-1;;9774:29:10;9765:39;;;;9806:4;9761:50;;9391:426;-1:-1:-1;;9391:426:10:o;10030:826::-;-1:-1:-1;;;;;10427:15:10;;;10409:34;;10479:15;;10474:2;10459:18;;10452:43;10389:3;10526:2;10511:18;;10504:31;;;10030:826;;10558:57;;10595:19;;10587:6;10558:57;:::i;:::-;10663:9;10655:6;10651:22;10646:2;10635:9;10631:18;10624:50;10697:44;10734:6;10726;10697:44;:::i;:::-;10683:58;;10790:9;10782:6;10778:22;10772:3;10761:9;10757:19;10750:51;10818:32;10843:6;10835;10818:32;:::i;10861:560::-;-1:-1:-1;;;;;11158:15:10;;;11140:34;;11210:15;;11205:2;11190:18;;11183:43;11257:2;11242:18;;11235:34;;;11300:2;11285:18;;11278:34;;;11120:3;11343;11328:19;;11321:32;;;10861:560;;11370:45;;11395:19;;11387:6;11370:45;:::i;:::-;11362:53;11092:329;-1:-1:-1;;;;;;;11092:329:10:o;11426:261::-;;11605:2;11594:9;11587:21;11625:56;11677:2;11666:9;11662:18;11654:6;11625:56;:::i;11692:465::-;;11949:2;11938:9;11931:21;11975:56;12027:2;12016:9;12012:18;12004:6;11975:56;:::i;:::-;12079:9;12071:6;12067:22;12062:2;12051:9;12047:18;12040:50;12107:44;12144:6;12136;12107:44;:::i;:::-;12099:52;11921:236;-1:-1:-1;;;;;11921:236:10:o;12354:219::-;;12503:2;12492:9;12485:21;12523:44;12563:2;12552:9;12548:18;12540:6;12523:44;:::i;13402:404::-;13604:2;13586:21;;;13643:2;13623:18;;;13616:30;13682:34;13677:2;13662:18;;13655:62;-1:-1:-1;;;13748:2:10;13733:18;;13726:38;13796:3;13781:19;;13576:230::o;14223:400::-;14425:2;14407:21;;;14464:2;14444:18;;;14437:30;14503:34;14498:2;14483:18;;14476:62;-1:-1:-1;;;14569:2:10;14554:18;;14547:34;14613:3;14598:19;;14397:226::o;16313:491::-;16515:2;16497:21;;;16554:2;16534:18;;;16527:30;16593:34;16588:2;16573:18;;16566:62;16664:34;16659:2;16644:18;;16637:62;16736:25;16730:3;16715:19;;16708:54;16794:3;16779:19;;16487:317::o;16809:401::-;17011:2;16993:21;;;17050:2;17030:18;;;17023:30;17089:34;17084:2;17069:18;;17062:62;-1:-1:-1;;;17155:2:10;17140:18;;17133:35;17200:3;17185:19;;16983:227::o;18110:399::-;18312:2;18294:21;;;18351:2;18331:18;;;18324:30;18390:34;18385:2;18370:18;;18363:62;-1:-1:-1;;;18456:2:10;18441:18;;18434:33;18499:3;18484:19;;18284:225::o;18514:406::-;18716:2;18698:21;;;18755:2;18735:18;;;18728:30;18794:34;18789:2;18774:18;;18767:62;-1:-1:-1;;;18860:2:10;18845:18;;18838:40;18910:3;18895:19;;18688:232::o;21403:404::-;21605:2;21587:21;;;21644:2;21624:18;;;21617:30;21683:34;21678:2;21663:18;;21656:62;-1:-1:-1;;;21749:2:10;21734:18;;21727:38;21797:3;21782:19;;21577:230::o;23461:183::-;;23554:18;23546:6;23543:30;23540:2;;;23576:18;;:::i;:::-;-1:-1:-1;23621:1:10;23617:14;23633:4;23613:25;;23530:114::o;23649:128::-;;23720:1;23716:6;23713:1;23710:13;23707:2;;;23726:18;;:::i;:::-;-1:-1:-1;23762:9:10;;23697:80::o;23782:228::-;;23849:10;23886:2;23883:1;23879:10;23916:2;23913:1;23909:10;23947:3;23943:2;23939:12;23934:3;23931:21;23928:2;;;23955:18;;:::i;:::-;23991:13;;23829:181;-1:-1:-1;;;;23829:181:10:o;24015:204::-;;24089:4;24086:1;24082:12;24121:4;24118:1;24114:12;24156:3;24150:4;24146:14;24141:3;24138:23;24135:2;;;24164:18;;:::i;:::-;24200:13;;24061:158;-1:-1:-1;;;24061:158:10:o;24224:168::-;;24330:1;24326;24322:6;24318:14;24315:1;24312:21;24307:1;24300:9;24293:17;24289:45;24286:2;;;24337:18;;:::i;:::-;-1:-1:-1;24377:9:10;;24276:116::o;24397:125::-;;24465:1;24462;24459:8;24456:2;;;24470:18;;:::i;:::-;-1:-1:-1;24507:9:10;;24446:76::o;24527:380::-;24606:1;24602:12;;;;24649;;;24670:2;;24724:4;24716:6;24712:17;24702:27;;24670:2;24777;24769:6;24766:14;24746:18;24743:38;24740:2;;;24823:10;24818:3;24814:20;24811:1;24804:31;24858:4;24855:1;24848:15;24886:4;24883:1;24876:15;24740:2;;24582:325;;;:::o;24912:249::-;25022:2;25003:13;;-1:-1:-1;;24999:27:10;24987:40;;25057:18;25042:34;;25078:22;;;25039:62;25036:2;;;25104:18;;:::i;:::-;25140:2;25133:22;-1:-1:-1;;24959:202:10:o;25166:135::-;;-1:-1:-1;;25226:17:10;;25223:2;;;25246:18;;:::i;:::-;-1:-1:-1;25293:1:10;25282:13;;25213:88::o;25306:127::-;25367:10;25362:3;25358:20;25355:1;25348:31;25398:4;25395:1;25388:15;25422:4;25419:1;25412:15;25438:127;25499:10;25494:3;25490:20;25487:1;25480:31;25530:4;25527:1;25520:15;25554:4;25551:1;25544:15;25570:185;;25647:1;25629:16;25626:23;25623:2;;;25697:1;25692:3;25687;25672:27;25728:10;25723:3;25719:20;25613:142;:::o;25760:671::-;;25841:4;25823:16;25820:26;25817:2;;;25849:5;;25817:2;25883;25877:9;-1:-1:-1;;25948:16:10;25944:25;;25941:1;25877:9;25920:50;25999:4;25993:11;26023:16;26058:18;26129:2;26122:4;26114:6;26110:17;26107:25;26102:2;26094:6;26091:14;26088:45;26085:2;;;26136:5;;;;;;;26085:2;26173:6;26167:4;26163:17;26152:28;;26209:3;26203:10;26236:2;26228:6;26225:14;26222:2;;;26242:5;;;;;;;;26222:2;26326;26307:16;26301:4;26297:27;26293:36;26286:4;26277:6;26272:3;26268:16;26264:27;26261:69;26258:2;;;26333:5;;;;;;;;26258:2;26349:57;26400:4;26391:6;26383;26379:19;26375:30;26369:4;26349:57;:::i;:::-;-1:-1:-1;26422:3:10;;-1:-1:-1;;;;;25807:624:10;:::o;26436:131::-;-1:-1:-1;;;;;;26510:32:10;;26500:43;;26490:2;;26557:1;26554;26547:12;26490:2;26480:87;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "bakeExistingRecipe(uint256,uint256[])": {
        "details": "Takes the id of an existing recipe and a batch of ingredients.  Burns the batch and the required flour, mints an item with the recipe Id "
      },
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "createStarter()": {
        "details": "Makes a new nonfungible starter with age attributes by burning 50 FLOUR "
      },
      "eatBakedGood(uint256,uint256)": {
        "details": "Burns an item, credits the player with a score equivalent to the total age of all ingredients "
      },
      "feedStarter(uint256)": {
        "details": "Burns 50 FLOUR and resets the time of death for your token"
      },
      "getGrindReset(address)": {
        "details": "Player stats and timers "
      },
      "getRecipeName(uint256)": {
        "details": "Helper functions for Recipe Struct "
      },
      "getTimeOfDeath(uint256)": {
        "details": "Helper functions for the Sourdough Struct "
      },
      "grindFlour()": {
        "details": "Credits the user FLOUR every 24 hours if submitted"
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "publishNewRecipe(string,uint256,uint32[],uint256[])": {
        "details": "Bakes and publishes a recipe that does not yet exist "
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "splitStarter(uint256)": {
        "details": "Feeds and duplicates your starter, returning another with identical age - costs 100 FLOUR "
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "stateVariables": {
      "createCost": {
        "details": "These are the constructor parameters.  Create/feed Costs are the flour required to create and feed starters.   Timescale represents the timescale at which starters die, feed reset time, and  grindFlour cooldown grindReward is the reward for grinding flour"
      },
      "devAddress": {
        "details": "flourId denotes the id of the fungible FLOUR token dividerIndex separates fully-non-fungible starter ingredients and semi-fungible baked goods flourId is the index of the fungible flour asset grindCooldown determine whether or not an address can grind flour"
      },
      "flourSupply": {
        "details": "total stats"
      },
      "starterHighScoreAges": {
        "details": "highscores here "
      }
    },
    "version": 1
  },
  "offset": [
    177,
    16622
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x976C39BE GT PUSH2 0x182 JUMPI DUP1 PUSH4 0xC889D089 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE11FD028 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF6D989F2 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF6D989F2 EQ PUSH2 0x7B2 JUMPI DUP1 PUSH4 0xF71ED3B8 EQ PUSH2 0x7BB JUMPI DUP1 PUSH4 0xFC4F816C EQ PUSH2 0x7E5 JUMPI DUP1 PUSH4 0xFCF73CBE EQ PUSH2 0x7F8 JUMPI PUSH2 0x2D5 JUMP JUMPDEST DUP1 PUSH4 0xE11FD028 EQ PUSH2 0x750 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x79F JUMPI PUSH2 0x2D5 JUMP JUMPDEST DUP1 PUSH4 0xC889D089 EQ PUSH2 0x693 JUMPI DUP1 PUSH4 0xC8CF79D9 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0xCB208010 EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0xD0EAF368 EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0xD682D87A EQ PUSH2 0x6FB JUMPI DUP1 PUSH4 0xE085C539 EQ PUSH2 0x727 JUMPI PUSH2 0x2D5 JUMP JUMPDEST DUP1 PUSH4 0xA41E1C17 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xA41E1C17 EQ PUSH2 0x635 JUMPI DUP1 PUSH4 0xA7C62323 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xB172DECC EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xBA0BD64A EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0xBF3C95B9 EQ PUSH2 0x66D JUMPI DUP1 PUSH4 0xC3B1066F EQ PUSH2 0x680 JUMPI PUSH2 0x2D5 JUMP JUMPDEST DUP1 PUSH4 0x976C39BE EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0x97EC23CB EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0xA07B6A42 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xA30B4DB9 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xA3486758 EQ PUSH2 0x62D JUMPI PUSH2 0x2D5 JUMP JUMPDEST DUP1 PUSH4 0x3AD10EF6 GT PUSH2 0x241 JUMPI DUP1 PUSH4 0x6510989C GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x7985781F GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x7985781F EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x7A77AF5C EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x7F8315CD EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0x956AC17A EQ PUSH2 0x581 JUMPI PUSH2 0x2D5 JUMP JUMPDEST DUP1 PUSH4 0x6510989C EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0x70B5E7B0 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x781F1B75 EQ PUSH2 0x4DC JUMPI PUSH2 0x2D5 JUMP JUMPDEST DUP1 PUSH4 0x3AD10EF6 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x42DA6F9C EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x4C777CAC EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x4F41393B EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x5C2C894A EQ PUSH2 0x49D JUMPI PUSH2 0x2D5 JUMP JUMPDEST DUP1 PUSH4 0x2A316CDF GT PUSH2 0x293 JUMPI DUP1 PUSH4 0x2A316CDF EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x2B944DDF EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x34B7FA22 EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x36FF4C95 EQ PUSH2 0x405 JUMPI PUSH2 0x2D5 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x7047482 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x1269CA40 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x214FA99B EQ PUSH2 0x35E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2ED PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x37C0 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x38B4 JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x33E PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x3BD6 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x371 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2ED PUSH1 0x35 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x367D JUMP JUMPDEST PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2ED PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x37C0 JUMP JUMPDEST PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x3A58 JUMP JUMPDEST PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x371 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x3631 JUMP JUMPDEST PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x465 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH2 0xF0F JUMP JUMPDEST PUSH2 0x47D PUSH2 0x478 CALLDATASIZE PUSH1 0x4 PUSH2 0x37E9 JUMP JUMPDEST PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x3B95 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A1D JUMP JUMPDEST PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x2ED PUSH1 0x36 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x4B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A58 JUMP JUMPDEST PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x4C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x4EA CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH2 0x13A1 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x4FD CALLDATASIZE PUSH1 0x4 PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x549 PUSH2 0x52C CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x569 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x3F0 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x59F CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x5C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2ED PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x5F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3786 JUMP JUMPDEST PUSH2 0x156A JUMP JUMPDEST PUSH2 0x371 PUSH2 0x60B CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x48 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x164E JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x643 CALLDATASIZE PUSH1 0x4 PUSH2 0x38EC JUMP JUMPDEST PUSH2 0x1728 JUMP JUMPDEST PUSH2 0x2ED PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x65F CALLDATASIZE PUSH1 0x4 PUSH2 0x3A58 JUMP JUMPDEST PUSH2 0x198F JUMP JUMPDEST PUSH2 0x2ED PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x67B CALLDATASIZE PUSH1 0x4 PUSH2 0x3631 JUMP JUMPDEST PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x68E CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x2ED PUSH1 0x34 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x6AA CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x6BD CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x6E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x371 PUSH2 0x709 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x735 CALLDATASIZE PUSH1 0x4 PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x75E CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH2 0x1B2E JUMP JUMPDEST PUSH2 0x313 PUSH2 0x771 CALLDATASIZE PUSH1 0x4 PUSH2 0x364B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x7AD CALLDATASIZE PUSH1 0x4 PUSH2 0x3723 JUMP JUMPDEST PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x2ED PUSH1 0x37 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x7C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x7F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH2 0x1D73 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x806 CALLDATASIZE PUSH1 0x4 PUSH2 0x37C0 JUMP JUMPDEST PUSH2 0x1E9C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x87C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x8D8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x8F3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x909 CALLER PUSH1 0x4 SLOAD PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD PUSH1 0x1 PUSH2 0x91A SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP1 POP PUSH2 0x942 CALLER PUSH2 0x92B DUP4 PUSH1 0x0 PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 SLOAD PUSH1 0x0 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x966 SWAP1 PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x3E36 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD SWAP3 DUP5 ADD MLOAD SWAP5 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xE8 SHL MUL PUSH1 0xFF PUSH1 0xE8 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x48 SHL MUL PUSH32 0xFFFFFF0000000000000000000000000000000000000000FFFFFFFFFFFFFFFFFF PUSH4 0xFFFFFFFF SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x28 SHL MUL AND PUSH6 0x10000000000 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT PUSH1 0xFF SWAP1 SWAP11 AND PUSH5 0x100000000 MUL PUSH5 0xFFFFFFFFFF NOT SWAP1 SWAP9 AND SWAP6 DUP6 AND SWAP6 SWAP1 SWAP6 OR SWAP7 SWAP1 SWAP7 OR SWAP8 SWAP1 SWAP8 AND SWAP3 SWAP1 SWAP3 OR SWAP4 SWAP1 SWAP4 OR AND SWAP4 SWAP1 SWAP4 OR DUP4 SSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP3 DUP4 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND PUSH4 0xFFFFFFFF NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 SSTORE SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xAAF SWAP1 PUSH2 0x3ED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xADB SWAP1 PUSH2 0x3ED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB28 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAFD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB28 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0xAAF SWAP1 PUSH2 0x3ED1 JUMP JUMPDEST PUSH1 0x29 DUP2 PUSH1 0xB DUP2 LT PUSH2 0xB61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xB92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3DCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3CF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xBD4 JUMPI POP PUSH2 0xBD4 DUP6 CALLER PUSH2 0x771 JUMP JUMPDEST PUSH2 0xC3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x873 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC6A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC96 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xCE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3D80 JUMP JUMPDEST PUSH2 0xCF1 DUP3 DUP3 PUSH2 0x3EBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD71 SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xD98 SWAP1 DUP5 PUSH2 0x2024 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xDE4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xDE2 SWAP1 DUP5 PUSH2 0x2030 JUMP JUMPDEST POP JUMPDEST POP POP POP DUP1 PUSH2 0xDF1 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST SWAP1 POP PUSH2 0xC3F JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE48 SWAP3 SWAP2 SWAP1 PUSH2 0x3BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE5E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x203C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xE88 SWAP1 DUP4 PUSH2 0x21A7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xEC0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x8F3 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST PUSH1 0x11 DUP2 PUSH1 0xB DUP2 LT PUSH2 0xF1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xFA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x873 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFCE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFF7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1099 JUMPI PUSH2 0x105E DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1029 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1051 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x80B JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x107E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x1092 DUP2 PUSH2 0x3F39 JUMP JUMPDEST SWAP1 POP PUSH2 0xFFD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP4 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x10CC SWAP1 PUSH2 0x3ED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10F8 SWAP1 PUSH2 0x3ED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1145 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x111A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1145 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1128 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x11D3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x1196 JUMPI SWAP1 POP JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP1 POP PUSH2 0x1220 DUP2 DUP5 PUSH2 0x21BD JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1243 SWAP1 DUP5 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x36 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x125D SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x126C SWAP1 POP DUP5 PUSH2 0x25A5 JUMP JUMPDEST PUSH2 0x127E CALLER PUSH1 0xA SLOAD DUP7 PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x129D CALLER DUP6 PUSH1 0xA SLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST LT ISZERO PUSH2 0x12FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E277420686176652074686174206D616E79206F662074686F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6520746F2065617421 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x873 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xA SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH2 0x1326 SWAP1 DUP7 PUSH2 0x3E36 JUMP JUMPDEST SWAP1 POP PUSH2 0x1333 CALLER DUP3 DUP7 PUSH2 0x279F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1355 SWAP1 DUP5 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x136B SWAP1 POP DUP5 PUSH4 0xFFFFFFFF DUP5 AND PUSH2 0x3E9B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x138A SWAP1 DUP5 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1399 SWAP1 POP CALLER PUSH2 0x28E8 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13AD CALLER DUP4 PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x13CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3C75 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND GT ISZERO PUSH2 0x145B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520686176652073706C697420746865207374617274657220616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920746F6461792120576169742074696C2720746F6D6F72726F7700000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x873 JUMP JUMPDEST PUSH2 0x1464 DUP3 PUSH2 0x1D73 JUMP JUMPDEST POP PUSH2 0x146E DUP3 PUSH2 0x1D73 JUMP JUMPDEST POP PUSH2 0x1477 PUSH2 0x8FB JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x35 SLOAD DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH9 0xFFFFFFFF0000000000 NOT AND PUSH1 0x1 PUSH1 0x28 SHL SWAP3 DUP4 SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x14C2 TIMESTAMP PUSH3 0x15180 PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE DUP5 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 PUSH2 0x1512 SWAP1 DUP5 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3E76 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH3 0x15180 PUSH2 0x1539 SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x15D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x873 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 ISZERO ISZERO OR SWAP1 SSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1642 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND LT PUSH2 0x16B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646964207468697320616C726561647920746F646179210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x873 JUMP JUMPDEST PUSH2 0x16D3 CALLER PUSH1 0x9 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x34 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16E7 SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH2 0x16FF SWAP1 PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x3E36 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP4 MLOAD GT ISZERO PUSH2 0x178C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206F6E6C79206861766520757020746F20313020696E677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6469656E747321 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x873 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x17CB DUP2 DUP5 PUSH2 0x21BD JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1825 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x17FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x1811 SWAP2 SWAP1 PUSH2 0x3E4E JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x181D DUP2 PUSH2 0x3F39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17D5 JUMP JUMPDEST POP PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP1 MLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x1847 SWAP1 DUP4 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x36 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1860 SWAP1 DUP5 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x37 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x187A SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x37 SLOAD PUSH1 0xA SLOAD PUSH1 0x0 SWAP2 PUSH2 0x1891 SWAP2 PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0x37 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP7 MLOAD DUP1 MLOAD SWAP4 SWAP5 POP DUP8 SWAP4 SWAP2 SWAP3 PUSH2 0x18BF SWAP3 DUP5 SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x33EA JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x18E2 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x346E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x37 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x195B SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2024 AND JUMP JUMPDEST POP PUSH2 0x1967 PUSH1 0x37 SLOAD PUSH2 0x25A5 JUMP JUMPDEST PUSH2 0x1983 CALLER DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1EFE JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x199B CALLER DUP4 PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x19BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3C75 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP5 PUSH2 0x19CA SWAP2 SWAP1 PUSH2 0x3E9B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD DUP6 PUSH2 0x19DC SWAP2 SWAP1 PUSH2 0x3E9B JUMP JUMPDEST SWAP1 POP PUSH2 0x19E8 CALLER DUP4 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x1A16 SWAP3 CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP6 SWAP1 PUSH2 0x1B3E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x1A43 SWAP1 PUSH4 0xFFFFFFFF AND DUP7 PUSH2 0x3E9B JUMP JUMPDEST PUSH2 0x1A4D SWAP1 TIMESTAMP PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xFF PUSH1 0xE8 SHL ADD NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xE8 SHL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x8F3 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST PUSH1 0x13 DUP2 PUSH1 0xB DUP2 LT PUSH2 0x1ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1AEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1AFD SWAP1 PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xFF PUSH1 0xE8 SHL ADD NOT AND PUSH4 0xFFFFFFFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1E DUP2 PUSH1 0xB DUP2 LT PUSH2 0x1ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1B64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3CF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x1B80 JUMPI POP PUSH2 0x1B80 DUP6 CALLER PUSH2 0x771 JUMP JUMPDEST PUSH2 0x1BDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x873 JUMP JUMPDEST CALLER PUSH2 0x1BFE DUP2 DUP8 DUP8 PUSH2 0x1BEE DUP9 PUSH2 0x2B6B JUMP JUMPDEST PUSH2 0x1BF7 DUP9 PUSH2 0x2B6B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3D80 JUMP JUMPDEST PUSH2 0x1C4B DUP5 DUP3 PUSH2 0x3EBA JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP9 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1C89 SWAP1 DUP5 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1CB0 SWAP1 DUP7 PUSH2 0x2024 JUMP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x1CFC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1CFA SWAP1 DUP7 PUSH2 0x2030 JUMP JUMPDEST POP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1D54 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1D6A DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2BC4 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7F CALLER DUP4 PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x1D9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3C75 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND LT ISZERO PUSH2 0x1E2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F757220737461727465722069732064656164212020596F752073686F756C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420686176652066656420697420736F6F6E6572203A28202E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x873 JUMP JUMPDEST PUSH2 0x1E36 CALLER PUSH1 0x5 SLOAD PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1E49 SWAP1 PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E8B JUMPI PUSH1 0x0 DUP3 SWAP1 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE JUMPDEST PUSH2 0x1E94 DUP3 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xE88 SWAP1 DUP4 PUSH2 0x21A7 JUMP JUMPDEST DUP1 PUSH2 0x1ECB CALLER PUSH1 0x9 SLOAD PUSH2 0x80B JUMP JUMPDEST LT ISZERO PUSH2 0x1ED6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EE3 DUP3 PUSH1 0x9 SLOAD DUP4 PUSH2 0x279F JUMP JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1EF5 SWAP2 SWAP1 PUSH2 0x3EBA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1F5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x873 JUMP JUMPDEST CALLER PUSH2 0x1F6F DUP2 PUSH1 0x0 DUP8 PUSH2 0x1BEE DUP9 PUSH2 0x2B6B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1FA1 SWAP1 DUP5 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1FC8 SWAP1 DUP6 PUSH2 0x2024 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1BF7 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE88 DUP4 DUP4 PUSH2 0x301D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE88 DUP4 DUP4 PUSH2 0x306C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x2080 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3AFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x209A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x20CA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x20C7 SWAP2 DUP2 ADD SWAP1 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2177 JUMPI PUSH2 0x20D6 PUSH2 0x3F80 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x2110 JUMPI POP PUSH2 0x20EB PUSH2 0x3F97 JUMP JUMPDEST DUP1 PUSH2 0x20F6 JUMPI POP PUSH2 0x2112 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x3BD6 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x873 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1D6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3BE9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE88 DUP4 DUP4 PUSH2 0x3183 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F3 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x21D0 CALLER PUSH1 0x9 SLOAD PUSH2 0x80B JUMP JUMPDEST LT ISZERO PUSH2 0x2231 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F75676820464C4F555220746F2062 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x616B6520746861742121 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x873 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD MLOAD PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2260 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2289 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 MLOAD DUP6 PUSH1 0x40 ADD MLOAD MLOAD EQ PUSH2 0x2307 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520686176656E277420616464656420746865207269676874206E756D62 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572206F6620737461727465727320746F207468652062617463682100000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x873 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x2580 JUMPI PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x233D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x236F SWAP1 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x3EBA JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2395 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x2437 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x51 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F757220737461727465727320617265206E6F74206F6C6420656E6F756768 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2C20706C65617365207573652074686520737461727465727320726571756972 PUSH1 0x64 DUP3 ADD MSTORE PUSH17 0x6564206279207468697320726563697065 PUSH1 0x78 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x873 JUMP JUMPDEST TIMESTAMP PUSH1 0xB PUSH1 0x0 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x245C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x24FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F757220737461727465727320617265206E6F7420616C6C20616C6976652C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20796F75206D757374207573652061206C6976696E6720696E6772656469656E PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x742121 PUSH1 0xE8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x873 JUMP JUMPDEST PUSH2 0x2521 CALLER DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1051 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 EQ PUSH2 0x2540 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3C75 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2562 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP DUP1 PUSH2 0x2578 DUP2 PUSH2 0x3F39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x230A JUMP JUMPDEST POP PUSH2 0x258C CALLER DUP6 DUP4 PUSH2 0x3217 JUMP JUMPDEST PUSH2 0x259A CALLER DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x1EBE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA DUP3 LT ISZERO PUSH2 0x25F6 JUMPI DUP3 PUSH1 0x1E DUP4 PUSH1 0xB DUP2 LT PUSH2 0x25D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SLOAD EQ ISZERO PUSH2 0x25E4 JUMPI POP PUSH1 0x1 PUSH2 0x25F6 JUMP JUMPDEST PUSH2 0x25EF DUP3 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST SWAP2 POP PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2668 JUMPI JUMPDEST PUSH1 0xA DUP3 LT ISZERO PUSH2 0x2668 JUMPI PUSH1 0x1E PUSH2 0x2613 DUP4 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0xB DUP2 LT PUSH2 0x2631 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SLOAD PUSH1 0x1E DUP4 PUSH1 0xB DUP2 LT PUSH2 0x2654 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SSTORE PUSH2 0x2661 DUP3 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST SWAP2 POP PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x4 SWAP1 DUP2 ADD SLOAD PUSH1 0x1E SLOAD DUP5 MSTORE SWAP2 DUP4 KECCAK256 ADD SLOAD SWAP2 SWAP4 POP SWAP1 JUMPDEST DUP1 DUP3 GT PUSH2 0x26EE JUMPI PUSH2 0x269E DUP5 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST SWAP4 POP PUSH1 0xA DUP5 GT ISZERO PUSH2 0x26AE JUMPI PUSH2 0x26EE JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 PUSH1 0x1E DUP7 PUSH1 0xB DUP2 LT PUSH2 0x26D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH2 0x268C JUMP JUMPDEST PUSH1 0xA DUP5 LT ISZERO PUSH2 0x1BF7 JUMPI PUSH1 0x9 JUMPDEST DUP5 DUP2 LT PUSH2 0x2773 JUMPI PUSH1 0x1E DUP2 PUSH1 0xB DUP2 LT PUSH2 0x2722 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SLOAD PUSH1 0x1E PUSH2 0x2731 DUP4 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0xB DUP2 LT PUSH2 0x274F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SSTORE DUP1 ISZERO PUSH2 0x2769 JUMPI PUSH2 0x2762 PUSH1 0x1 DUP3 PUSH2 0x3EBA JUMP JUMPDEST SWAP1 POP PUSH2 0x276E JUMP JUMPDEST PUSH2 0x2773 JUMP JUMPDEST PUSH2 0x26FA JUMP JUMPDEST DUP6 PUSH1 0x1E DUP7 PUSH1 0xB DUP2 LT PUSH2 0x2795 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x27C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3D3D JUMP JUMPDEST CALLER PUSH2 0x27F5 DUP2 DUP6 PUSH1 0x0 PUSH2 0x27D6 DUP8 PUSH2 0x2B6B JUMP JUMPDEST PUSH2 0x27DF DUP8 PUSH2 0x2B6B JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3C31 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2844 DUP5 DUP4 PUSH2 0x3EBA JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE SWAP1 POP DUP1 PUSH2 0x2894 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2892 SWAP1 DUP7 PUSH2 0x2030 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA DUP3 LT ISZERO PUSH2 0x294B JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x29 DUP4 PUSH1 0xB DUP2 LT PUSH2 0x2920 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2939 JUMPI POP PUSH1 0x1 PUSH2 0x294B JUMP JUMPDEST PUSH2 0x2944 DUP3 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST SWAP2 POP PUSH2 0x28EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29E3 JUMPI JUMPDEST PUSH1 0xA DUP3 LT ISZERO PUSH2 0x29E3 JUMPI PUSH1 0x29 PUSH2 0x2968 DUP4 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0xB DUP2 LT PUSH2 0x2986 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x29 DUP4 PUSH1 0xB DUP2 LT PUSH2 0x29B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x29DC DUP3 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST SWAP2 POP PUSH2 0x2952 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x29 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP4 POP JUMPDEST DUP1 DUP3 GT PUSH2 0x2A77 JUMPI PUSH2 0x2A1F DUP5 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST SWAP4 POP PUSH1 0xA DUP5 GT ISZERO PUSH2 0x2A2F JUMPI PUSH2 0x2A77 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 PUSH1 0x29 DUP7 PUSH1 0xB DUP2 LT PUSH2 0x2A54 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x2A0D JUMP JUMPDEST PUSH1 0xA DUP5 LT ISZERO PUSH2 0x1BF7 JUMPI PUSH1 0x9 JUMPDEST DUP5 DUP2 LT PUSH2 0x2B22 JUMPI PUSH1 0x29 DUP2 PUSH1 0xB DUP2 LT PUSH2 0x2AAB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x29 PUSH2 0x2AC3 DUP4 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0xB DUP2 LT PUSH2 0x2AE1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2B18 JUMPI PUSH2 0x2B11 PUSH1 0x1 DUP3 PUSH2 0x3EBA JUMP JUMPDEST SWAP1 POP PUSH2 0x2B1D JUMP JUMPDEST PUSH2 0x2B22 JUMP JUMPDEST PUSH2 0x2A83 JUMP JUMPDEST DUP6 PUSH1 0x29 DUP7 PUSH1 0xB DUP2 LT PUSH2 0x2B44 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2BB3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x2C08 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3B50 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2C52 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2C4F SWAP2 DUP2 ADD SWAP1 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2C5E JUMPI PUSH2 0x20D6 PUSH2 0x3F80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1D6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3BE9 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA DUP3 LT ISZERO PUSH2 0x2CDF JUMPI DUP3 PUSH1 0x13 DUP4 PUSH1 0xB DUP2 LT PUSH2 0x2CBD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SLOAD EQ ISZERO PUSH2 0x2CCD JUMPI POP PUSH1 0x1 PUSH2 0x2CDF JUMP JUMPDEST PUSH2 0x2CD8 DUP3 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C92 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DE4 JUMPI JUMPDEST PUSH1 0xA DUP3 LT ISZERO PUSH2 0x2DE4 JUMPI PUSH1 0x13 PUSH2 0x2CFC DUP4 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0xB DUP2 LT PUSH2 0x2D1A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SLOAD PUSH1 0x13 DUP4 PUSH1 0xB DUP2 LT PUSH2 0x2D3D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SSTORE PUSH1 0x11 PUSH2 0x2D4C DUP4 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0xB DUP2 LT PUSH2 0x2D6A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x11 DUP4 PUSH1 0xB DUP2 LT PUSH2 0x2DA7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH2 0x2DDD SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP4 POP PUSH4 0xFFFFFFFF SWAP2 DUP3 AND SWAP2 DUP5 SWAP2 PUSH2 0x2E17 SWAP2 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP2 DIV AND TIMESTAMP PUSH2 0x3EBA JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x2E8C JUMPI PUSH2 0x2E38 DUP5 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST SWAP4 POP PUSH1 0xA DUP5 GT ISZERO PUSH2 0x2E48 JUMPI PUSH2 0x2E8C JUMP JUMPDEST PUSH1 0x11 DUP5 PUSH1 0xB DUP2 LT PUSH2 0x2E69 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP2 POP PUSH2 0x2E1A JUMP JUMPDEST PUSH1 0xA DUP5 LT ISZERO PUSH2 0x1BF7 JUMPI PUSH1 0x9 JUMPDEST DUP5 DUP2 LT PUSH2 0x2FA6 JUMPI PUSH1 0x13 DUP2 PUSH1 0xB DUP2 LT PUSH2 0x2EC0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SLOAD PUSH1 0x13 PUSH2 0x2ECF DUP4 PUSH1 0x1 PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0xB DUP2 LT PUSH2 0x2EED JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SSTORE PUSH1 0x11 DUP2 PUSH1 0xB DUP2 LT PUSH2 0x2F10 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x11 DUP3 PUSH1 0x1 PUSH2 0x2F3B SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0xB DUP2 LT PUSH2 0x2F59 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 EQ PUSH2 0x2F9C JUMPI PUSH2 0x2F95 PUSH1 0x1 DUP3 PUSH2 0x3EBA JUMP JUMPDEST SWAP1 POP PUSH2 0x2FA1 JUMP JUMPDEST PUSH2 0x2FA6 JUMP JUMPDEST PUSH2 0x2E98 JUMP JUMPDEST DUP6 PUSH1 0x13 DUP7 PUSH1 0xB DUP2 LT PUSH2 0x2FC8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SSTORE DUP2 PUSH1 0x11 DUP7 PUSH1 0xB DUP2 LT PUSH2 0x2FEC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x3064 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x8A1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x3179 JUMPI PUSH1 0x0 PUSH2 0x3090 PUSH1 0x1 DUP4 PUSH2 0x3EBA JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x30A4 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3EBA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x30CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x30FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x313D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x8A1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x31E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x873 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3204 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x323D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3D3D JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x325E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3DCA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 MSTORE CALLER SWAP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x338B JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x329D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x32C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 PUSH2 0x3304 DUP4 DUP4 PUSH2 0x3EBA JUMP JUMPDEST SWAP1 POP DUP3 DUP3 LT ISZERO PUSH2 0x3326 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP1 PUSH2 0x3C31 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE DUP1 PUSH2 0x3374 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3372 SWAP1 DUP6 PUSH2 0x2030 JUMP JUMPDEST POP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x3383 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3272 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x33DC SWAP3 SWAP2 SWAP1 PUSH2 0x3BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x33F6 SWAP1 PUSH2 0x3ED1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3418 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x345E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3431 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x345E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x345E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x345E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3443 JUMP JUMPDEST POP PUSH2 0x346A SWAP3 SWAP2 POP PUSH2 0x3514 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 ADD PUSH1 0x8 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x345E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x34DB JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x3497 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x350B JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x34DB JUMP JUMPDEST POP POP PUSH2 0x346A SWAP3 SWAP2 POP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x346A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3515 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x3543 JUMPI PUSH2 0x3543 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355A PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x3F0C JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x356F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x35AE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x35BB DUP3 PUSH2 0x3E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C8 DUP3 DUP3 PUSH2 0x3F0C JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x35E7 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3605 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x35E9 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3622 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE88 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x3529 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3642 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE88 DUP3 PUSH2 0x3587 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x365D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3666 DUP4 PUSH2 0x3587 JUMP JUMPDEST SWAP2 POP PUSH2 0x3674 PUSH1 0x20 DUP5 ADD PUSH2 0x3587 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3694 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x369D DUP7 PUSH2 0x3587 JUMP JUMPDEST SWAP5 POP PUSH2 0x36AB PUSH1 0x20 DUP8 ADD PUSH2 0x3587 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x36C7 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x36D3 DUP10 DUP4 DUP11 ADD PUSH2 0x359E JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x36E8 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x36F4 DUP10 DUP4 DUP11 ADD PUSH2 0x359E JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3709 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x3716 DUP9 DUP3 DUP10 ADD PUSH2 0x3612 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x373A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3743 DUP7 PUSH2 0x3587 JUMP JUMPDEST SWAP5 POP PUSH2 0x3751 PUSH1 0x20 DUP8 ADD PUSH2 0x3587 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x377A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3716 DUP9 DUP3 DUP10 ADD PUSH2 0x3612 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3798 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x37A1 DUP4 PUSH2 0x3587 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x37B5 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37D2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x37DB DUP4 PUSH2 0x3587 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37FB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3812 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3825 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3832 DUP3 PUSH2 0x3E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x383F DUP3 DUP3 PUSH2 0x3F0C JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x385E JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x3887 JUMPI PUSH2 0x3873 DUP2 PUSH2 0x3587 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x3862 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x389D JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x38AA DUP6 DUP3 DUP7 ADD PUSH2 0x359E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38C5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE88 DUP2 PUSH2 0x4029 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38E1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE88 DUP2 PUSH2 0x4029 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3901 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3918 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x392B JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x20 PUSH2 0x393B DUP10 DUP5 CALLDATALOAD DUP4 DUP7 ADD PUSH2 0x3529 JUMP JUMPDEST SWAP7 POP DUP1 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x3956 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP3 DUP9 ADD SWAP3 POP DUP9 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3969 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3974 DUP2 PUSH2 0x3E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3981 DUP3 DUP3 PUSH2 0x3F0C JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 DUP2 ADD SWAP2 POP DUP6 DUP5 ADD PUSH1 0x5 DUP5 SWAP1 SHL DUP8 ADD DUP6 ADD DUP14 LT ISZERO PUSH2 0x39A0 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP4 DUP8 LT ISZERO PUSH2 0x39D3 JUMPI DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x39BF JUMPI DUP10 DUP11 REVERT JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP5 ADD SWAP2 DUP5 ADD PUSH2 0x39A4 JUMP JUMPDEST POP SWAP7 POP POP POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x39EC JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x39F9 DUP8 DUP3 DUP9 ADD PUSH2 0x359E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A16 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A2F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A4C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x38AA DUP6 DUP3 DUP7 ADD PUSH2 0x359E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A6A JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AA8 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3A8C JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3AD8 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x3ABC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3AE9 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3B2A SWAP1 DUP4 ADD DUP7 PUSH2 0x3A79 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x3B3C DUP2 DUP7 PUSH2 0x3A79 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1983 DUP2 DUP6 PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3B8A SWAP1 DUP4 ADD DUP5 PUSH2 0x3AB3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xE88 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x3BBB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3A79 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3BCD DUP2 DUP6 PUSH2 0x3A79 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xE88 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x57 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686973204964206E756D626572206973206E6F74206173736F636961746564 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x2077697468206F6E65206F6620796F75722073746172746572732C20706C6561 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x736520747279207769746820612076616C69642069642E000000000000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3E2C JUMPI PUSH2 0x3E2C PUSH2 0x3F6A JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3E49 JUMPI PUSH2 0x3E49 PUSH2 0x3F54 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x3E6D JUMPI PUSH2 0x3E6D PUSH2 0x3F54 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x3E93 JUMPI PUSH2 0x3E93 PUSH2 0x3F54 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3EB5 JUMPI PUSH2 0x3EB5 PUSH2 0x3F54 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3ECC JUMPI PUSH2 0x3ECC PUSH2 0x3F54 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3EE5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3F06 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3F32 JUMPI PUSH2 0x3F32 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3F4D JUMPI PUSH2 0x3F4D PUSH2 0x3F54 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0xA9D JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x3FA7 JUMPI PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x3FD9 JUMPI POP POP POP POP POP PUSH2 0xA9D JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x3FF3 JUMPI POP POP POP POP POP POP PUSH2 0xA9D JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x400F JUMPI POP POP POP POP POP POP PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x401E PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x3F0C JUMP JUMPDEST POP SWAP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x403F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC ADDRESS INVALID DUP11 GASPRICE DIV MULMOD SWAP8 0x24 RETURNDATASIZE 0xEA PUSH26 0xD6722DBE89E0A2A9170619EFC34368D079E4CF0064736F6C6343 STOP ADDMOD SUB STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        177,
        16622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "25": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x976C39BE"
    },
    "38": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x182"
    },
    "42": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC889D089"
    },
    "49": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE9"
    },
    "53": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE11FD028"
    },
    "60": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "GT",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2"
    },
    "64": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF6D989F2"
    },
    "71": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "GT",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF6D989F2"
    },
    "82": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B2"
    },
    "86": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF71ED3B8"
    },
    "93": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BB"
    },
    "97": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFC4F816C"
    },
    "104": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E5"
    },
    "108": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFCF73CBE"
    },
    "115": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "116": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F8"
    },
    "119": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "120": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "123": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE11FD028"
    },
    "131": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x750"
    },
    "135": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE985E9C5"
    },
    "142": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x763"
    },
    "146": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF242432A"
    },
    "153": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79F"
    },
    "157": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "161": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "162": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC889D089"
    },
    "169": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x693"
    },
    "173": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC8CF79D9"
    },
    "180": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69C"
    },
    "184": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCB208010"
    },
    "191": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AF"
    },
    "195": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD0EAF368"
    },
    "202": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D2"
    },
    "206": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD682D87A"
    },
    "213": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FB"
    },
    "217": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE085C539"
    },
    "224": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x727"
    },
    "228": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "232": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "233": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA41E1C17"
    },
    "240": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "GT",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B"
    },
    "244": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "246": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA41E1C17"
    },
    "251": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x635"
    },
    "255": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "256": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "257": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA7C62323"
    },
    "262": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "263": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x648"
    },
    "266": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "267": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "268": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB172DECC"
    },
    "273": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "274": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x651"
    },
    "277": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "278": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "279": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBA0BD64A"
    },
    "284": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "285": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x664"
    },
    "288": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "289": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "290": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBF3C95B9"
    },
    "295": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "296": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66D"
    },
    "299": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "300": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "301": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC3B1066F"
    },
    "306": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "307": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x680"
    },
    "310": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "311": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "314": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "315": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "316": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "317": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x976C39BE"
    },
    "322": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "323": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x591"
    },
    "326": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "327": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "328": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x97EC23CB"
    },
    "333": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "334": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B4"
    },
    "337": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "338": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "339": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA07B6A42"
    },
    "344": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "345": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E1"
    },
    "348": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "349": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "350": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA22CB465"
    },
    "355": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "356": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EA"
    },
    "359": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "360": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "361": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA30B4DB9"
    },
    "366": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "367": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5FD"
    },
    "370": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "371": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "372": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA3486758"
    },
    "377": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "378": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62D"
    },
    "381": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "382": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "385": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "386": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "387": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "388": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3AD10EF6"
    },
    "393": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "GT",
      "path": "0"
    },
    "394": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x241"
    },
    "397": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "398": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "399": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6510989C"
    },
    "404": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "GT",
      "path": "0"
    },
    "405": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA"
    },
    "408": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "409": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "410": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7985781F"
    },
    "415": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "GT",
      "path": "0"
    },
    "416": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4"
    },
    "419": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "420": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "421": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7985781F"
    },
    "426": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "427": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EF"
    },
    "430": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "431": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "432": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7A77AF5C"
    },
    "437": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "438": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51E"
    },
    "441": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "442": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "443": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7F8315CD"
    },
    "448": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "449": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55B"
    },
    "452": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "453": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "454": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x956AC17A"
    },
    "459": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "460": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x581"
    },
    "463": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "464": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "467": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "468": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "469": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "470": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6510989C"
    },
    "475": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "476": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A6"
    },
    "479": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "480": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "481": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70B5E7B0"
    },
    "486": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "487": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B9"
    },
    "490": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "491": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "492": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x781F1B75"
    },
    "497": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "498": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DC"
    },
    "501": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "502": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "505": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "506": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "507": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "508": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3AD10EF6"
    },
    "513": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "514": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x431"
    },
    "517": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "518": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "519": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x42DA6F9C"
    },
    "524": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "525": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x444"
    },
    "528": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "529": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "530": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4C777CAC"
    },
    "535": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "536": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x457"
    },
    "539": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "540": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "541": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4E1273F4"
    },
    "546": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "547": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46A"
    },
    "550": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "551": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "552": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4F41393B"
    },
    "557": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "558": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48A"
    },
    "561": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "562": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "563": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5C2C894A"
    },
    "568": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "569": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49D"
    },
    "572": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "573": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "576": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "577": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "578": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "579": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2A316CDF"
    },
    "584": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "GT",
      "path": "0"
    },
    "585": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x293"
    },
    "588": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "589": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "590": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2A316CDF"
    },
    "595": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "596": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x389"
    },
    "599": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "600": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "601": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2B944DDF"
    },
    "606": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "607": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AC"
    },
    "610": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "611": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "612": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2EB2C2D6"
    },
    "617": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "618": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B5"
    },
    "621": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "622": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "623": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2F745C59"
    },
    "628": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "629": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA"
    },
    "632": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "633": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "634": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x34B7FA22"
    },
    "639": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "640": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DD"
    },
    "643": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "644": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "645": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x36FF4C95"
    },
    "650": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "651": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x405"
    },
    "654": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "655": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "658": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "659": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "660": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "661": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xFDD58E"
    },
    "665": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "666": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "669": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "670": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "671": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1FFC9A7"
    },
    "676": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "677": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x300"
    },
    "680": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "681": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "682": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7047482"
    },
    "687": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "688": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x323"
    },
    "691": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "692": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "693": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE89341C"
    },
    "698": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "699": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32B"
    },
    "702": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "703": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "704": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1269CA40"
    },
    "709": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "710": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34B"
    },
    "713": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "714": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "715": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x214FA99B"
    },
    "720": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "EQ",
      "path": "0"
    },
    "721": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35E"
    },
    "724": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "725": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "726": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "728": {
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "729": {
      "first_revert": true,
      "fn": null,
      "offset": [
        177,
        16622
      ],
      "op": "REVERT",
      "path": "0"
    },
    "730": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "731": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2ED"
    },
    "734": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E8"
    },
    "737": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "738": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "740": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37C0"
    },
    "743": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMP",
      "path": "1"
    },
    "744": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "745": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x80B"
    },
    "748": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMP",
      "path": "1"
    },
    "749": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "750": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "752": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "753": {
      "op": "SWAP1"
    },
    "754": {
      "op": "DUP2"
    },
    "755": {
      "op": "MSTORE"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "758": {
      "op": "ADD"
    },
    "759": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "760": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "762": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "763": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "DUP1",
      "path": "1"
    },
    "764": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "765": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "SUB",
      "path": "1"
    },
    "766": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "767": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "RETURN",
      "path": "1"
    },
    "768": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "769": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x313"
    },
    "772": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30E"
    },
    "775": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "776": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "778": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38B4"
    },
    "781": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMP",
      "path": "1"
    },
    "782": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "783": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A7"
    },
    "786": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMP",
      "path": "1"
    },
    "787": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "788": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "790": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "791": {
      "op": "SWAP1"
    },
    "792": {
      "op": "ISZERO"
    },
    "793": {
      "op": "ISZERO"
    },
    "794": {
      "op": "DUP2"
    },
    "795": {
      "op": "MSTORE"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "798": {
      "op": "ADD"
    },
    "799": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F7"
    },
    "802": {
      "op": "JUMP"
    },
    "803": {
      "fn": "Cafe.createStarter",
      "offset": [
        3831,
        4279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "804": {
      "fn": "Cafe.createStarter",
      "offset": [
        3831,
        4279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x313"
    },
    "807": {
      "fn": "Cafe.createStarter",
      "offset": [
        3831,
        4279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FB"
    },
    "810": {
      "fn": "Cafe.createStarter",
      "jump": "i",
      "offset": [
        3831,
        4279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "811": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "812": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33E"
    },
    "815": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x339"
    },
    "818": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "819": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "821": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A05"
    },
    "824": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMP",
      "path": "1"
    },
    "825": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "826": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA0"
    },
    "829": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMP",
      "path": "1"
    },
    "830": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "831": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "833": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "834": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F7"
    },
    "837": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "838": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "839": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3BD6"
    },
    "842": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMP",
      "path": "1"
    },
    "843": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14876,
        15001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "844": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14876,
        15001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33E"
    },
    "847": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14876,
        15001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x359"
    },
    "850": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14876,
        15001
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "851": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14876,
        15001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "853": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14876,
        15001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "856": {
      "fn": "Cafe.getRecipeName",
      "jump": "i",
      "offset": [
        14876,
        15001
      ],
      "op": "JUMP",
      "path": "0"
    },
    "857": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14876,
        15001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "858": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14876,
        15001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB34"
    },
    "861": {
      "fn": "Cafe.getRecipeName",
      "jump": "i",
      "offset": [
        14876,
        15001
      ],
      "op": "JUMP",
      "path": "0"
    },
    "862": {
      "offset": [
        2894,
        2928
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "863": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x371"
    },
    "866": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36C"
    },
    "869": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "870": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "872": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "875": {
      "fn": "Cafe.getRecipeName",
      "jump": "i",
      "offset": [
        2894,
        2928
      ],
      "op": "JUMP",
      "path": "0"
    },
    "876": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "877": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB51"
    },
    "880": {
      "fn": "Cafe.getRecipeName",
      "jump": "i",
      "offset": [
        2894,
        2928
      ],
      "op": "JUMP",
      "path": "0"
    },
    "881": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "882": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "884": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "891": {
      "op": "SHL"
    },
    "892": {
      "op": "SUB"
    },
    "893": {
      "op": "SWAP1"
    },
    "894": {
      "op": "SWAP2"
    },
    "895": {
      "op": "AND"
    },
    "896": {
      "op": "DUP2"
    },
    "897": {
      "op": "MSTORE"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "900": {
      "op": "ADD"
    },
    "901": {
      "offset": [
        2894,
        2928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F7"
    },
    "904": {
      "op": "JUMP"
    },
    "905": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15550,
        15681
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "906": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15550,
        15681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "909": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15550,
        15681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x397"
    },
    "912": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15550,
        15681
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "913": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15550,
        15681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "915": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15550,
        15681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "918": {
      "fn": "Cafe.getFlourRequired",
      "jump": "i",
      "offset": [
        15550,
        15681
      ],
      "op": "JUMP",
      "path": "0"
    },
    "919": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15550,
        15681
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "920": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15614,
        15621
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "922": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15639,
        15659
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 0
    },
    "923": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15639,
        15659
      ],
      "op": "DUP2",
      "path": "0"
    },
    "924": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15639,
        15659
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "925": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15639,
        15649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "927": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15639,
        15659
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "929": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15639,
        15659
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "930": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15639,
        15659
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "932": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15639,
        15659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "933": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15639,
        15659
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "934": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15639,
        15674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "936": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15639,
        15674
      ],
      "op": "ADD",
      "path": "0"
    },
    "937": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15639,
        15674
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "938": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15639,
        15674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "939": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        15550,
        15681
      ],
      "op": "JUMP",
      "path": "0"
    },
    "940": {
      "offset": [
        3009,
        3043
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "941": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        3009,
        3043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "944": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        3009,
        3043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x35"
    },
    "946": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        3009,
        3043
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "947": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        3009,
        3043
      ],
      "op": "DUP2",
      "path": "0"
    },
    "948": {
      "fn": "Cafe.getFlourRequired",
      "offset": [
        3009,
        3043
      ],
      "op": "JUMP",
      "path": "0"
    },
    "949": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "950": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C8"
    },
    "953": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C3"
    },
    "956": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "957": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "959": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x367D"
    },
    "962": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMP",
      "path": "1"
    },
    "963": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "964": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB71"
    },
    "967": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMP",
      "path": "1"
    },
    "968": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "969": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "STOP",
      "path": "1"
    },
    "970": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "971": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2ED"
    },
    "974": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D8"
    },
    "977": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "978": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "980": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37C0"
    },
    "983": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        14355,
        14498
      ],
      "op": "JUMP",
      "path": "1"
    },
    "984": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "985": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE66"
    },
    "988": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        14355,
        14498
      ],
      "op": "JUMP",
      "path": "1"
    },
    "989": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "990": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "993": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EB"
    },
    "996": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "997": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "999": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A58"
    },
    "1002": {
      "fn": "Cafe.getIngredientByIndex",
      "jump": "i",
      "offset": [
        15269,
        15413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1003": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1004": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8F"
    },
    "1007": {
      "fn": "Cafe.getIngredientByIndex",
      "jump": "i",
      "offset": [
        15269,
        15413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1008": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1009": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1011": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1012": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1017": {
      "op": "SWAP1"
    },
    "1018": {
      "op": "SWAP2"
    },
    "1019": {
      "op": "AND"
    },
    "1020": {
      "op": "DUP2"
    },
    "1021": {
      "op": "MSTORE"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1024": {
      "op": "ADD"
    },
    "1025": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F7"
    },
    "1028": {
      "op": "JUMP"
    },
    "1029": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16219,
        16334
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1030": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16219,
        16334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x313"
    },
    "1033": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16219,
        16334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x413"
    },
    "1036": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16219,
        16334
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1037": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16219,
        16334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1039": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16219,
        16334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3631"
    },
    "1042": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "jump": "i",
      "offset": [
        16219,
        16334
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1043": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16219,
        16334
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "op": "SUB"
    },
    "1052": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16306,
        16327
      ],
      "op": "AND",
      "path": "0",
      "statement": 1
    },
    "1053": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16284,
        16288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1055": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16306,
        16327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1056": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16306,
        16327
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1057": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16306,
        16327
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1058": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16306,
        16319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "1060": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16306,
        16327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1062": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16306,
        16327
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1063": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16306,
        16327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1065": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16306,
        16327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1066": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16306,
        16327
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1067": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16306,
        16327
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1068": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16306,
        16327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1070": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16306,
        16327
      ],
      "op": "AND",
      "path": "0"
    },
    "1071": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16306,
        16327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1072": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        16219,
        16334
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1073": {
      "offset": [
        2267,
        2308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1074": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        2267,
        2308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1076": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        2267,
        2308
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1077": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        2267,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x371"
    },
    "1080": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        2267,
        2308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1087": {
      "op": "SHL"
    },
    "1088": {
      "op": "SUB"
    },
    "1089": {
      "offset": [
        2267,
        2308
      ],
      "op": "AND",
      "path": "0"
    },
    "1090": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        2267,
        2308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1091": {
      "fn": "Cafe.isPlayerAutoFeeding",
      "offset": [
        2267,
        2308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1092": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1093": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2ED"
    },
    "1096": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x452"
    },
    "1099": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1100": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1102": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3631"
    },
    "1105": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "jump": "i",
      "offset": [
        14504,
        14632
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1106": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1107": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEEE"
    },
    "1110": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "jump": "i",
      "offset": [
        14504,
        14632
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1111": {
      "offset": [
        2769,
        2807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1112": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "1115": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x465"
    },
    "1118": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1119": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1121": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1124": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "jump": "i",
      "offset": [
        2769,
        2807
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1125": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1126": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0F"
    },
    "1129": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "jump": "i",
      "offset": [
        2769,
        2807
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1130": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1131": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x47D"
    },
    "1134": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x478"
    },
    "1137": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1138": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1140": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37E9"
    },
    "1143": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1144": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1145": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3F"
    },
    "1148": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1149": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1150": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1152": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1153": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F7"
    },
    "1156": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1157": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1158": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B95"
    },
    "1161": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1162": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8375,
        8767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1163": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8375,
        8767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x313"
    },
    "1166": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8375,
        8767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x498"
    },
    "1169": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8375,
        8767
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1170": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8375,
        8767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1172": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8375,
        8767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A1D"
    },
    "1175": {
      "fn": "Cafe.bakeExistingRecipe",
      "jump": "i",
      "offset": [
        8375,
        8767
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1176": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8375,
        8767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1177": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8375,
        8767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A1"
    },
    "1180": {
      "fn": "Cafe.bakeExistingRecipe",
      "jump": "i",
      "offset": [
        8375,
        8767
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1181": {
      "offset": [
        3049,
        3078
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1182": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        3049,
        3078
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "1185": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        3049,
        3078
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x36"
    },
    "1187": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        3049,
        3078
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1188": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        3049,
        3078
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1189": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        3049,
        3078
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1190": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1191": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x313"
    },
    "1194": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B4"
    },
    "1197": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1198": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1200": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A58"
    },
    "1203": {
      "fn": "Cafe.eatBakedGood",
      "jump": "i",
      "offset": [
        8878,
        9389
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1204": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1205": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1288"
    },
    "1208": {
      "fn": "Cafe.eatBakedGood",
      "jump": "i",
      "offset": [
        8878,
        9389
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1209": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15818,
        15945
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1210": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15818,
        15945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "1213": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15818,
        15945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C7"
    },
    "1216": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15818,
        15945
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1217": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15818,
        15945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1219": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15818,
        15945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1222": {
      "fn": "Cafe.getNumberEaten",
      "jump": "i",
      "offset": [
        15818,
        15945
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1223": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15818,
        15945
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1224": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15880,
        15887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1226": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15905,
        15925
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 2
    },
    "1227": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15905,
        15925
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1228": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15905,
        15925
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1229": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15905,
        15915
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "1231": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15905,
        15925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1233": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15905,
        15925
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1234": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15905,
        15925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1236": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15905,
        15925
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1237": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15905,
        15925
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1238": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15905,
        15938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1240": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15905,
        15938
      ],
      "op": "ADD",
      "path": "0"
    },
    "1241": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15905,
        15938
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1242": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15905,
        15938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1243": {
      "fn": "Cafe.getNumberEaten",
      "offset": [
        15818,
        15945
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1244": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5098,
        5847
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1245": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5098,
        5847
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x313"
    },
    "1248": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5098,
        5847
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EA"
    },
    "1251": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5098,
        5847
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1252": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5098,
        5847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1254": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5098,
        5847
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1257": {
      "fn": "Cafe.splitStarter",
      "jump": "i",
      "offset": [
        5098,
        5847
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1258": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5098,
        5847
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1259": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5098,
        5847
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A1"
    },
    "1262": {
      "fn": "Cafe.splitStarter",
      "jump": "i",
      "offset": [
        5098,
        5847
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1263": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        15988,
        16099
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1264": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        15988,
        16099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "1267": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        15988,
        16099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FD"
    },
    "1270": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        15988,
        16099
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1271": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        15988,
        16099
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1273": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        15988,
        16099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3631"
    },
    "1276": {
      "fn": "Cafe.getGrindReset",
      "jump": "i",
      "offset": [
        15988,
        16099
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1277": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        15988,
        16099
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1284": {
      "op": "SHL"
    },
    "1285": {
      "op": "SUB"
    },
    "1286": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16071,
        16092
      ],
      "op": "AND",
      "path": "0",
      "statement": 3
    },
    "1287": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16047,
        16053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1289": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16071,
        16092
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1290": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16071,
        16092
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1291": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16071,
        16092
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1292": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16071,
        16084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "1294": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16071,
        16092
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1296": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16071,
        16092
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1297": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16071,
        16092
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1299": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16071,
        16092
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1300": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16071,
        16092
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1301": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16071,
        16092
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1302": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16071,
        16092
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1307": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16071,
        16092
      ],
      "op": "AND",
      "path": "0"
    },
    "1308": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        16071,
        16092
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1309": {
      "fn": "Cafe.getGrindReset",
      "offset": [
        15988,
        16099
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1310": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14299,
        14424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1311": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14299,
        14424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x549"
    },
    "1314": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14299,
        14424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52C"
    },
    "1317": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14299,
        14424
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1318": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14299,
        14424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1320": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14299,
        14424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1323": {
      "fn": "Cafe.getChildCount",
      "jump": "i",
      "offset": [
        14299,
        14424
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1324": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14299,
        14424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1325": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14361,
        14366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1327": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14405
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 4
    },
    "1328": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14405
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1329": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14405
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1330": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "1332": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1334": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14405
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1335": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1337": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1338": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14405
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1339": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14417
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1340": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14417
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "1346": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14417
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1347": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14417
      ],
      "op": "DIV",
      "path": "0"
    },
    "1348": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1350": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14417
      ],
      "op": "AND",
      "path": "0"
    },
    "1351": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14384,
        14417
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1352": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14299,
        14424
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1353": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14299,
        14424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1354": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14299,
        14424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1356": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14299,
        14424
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1359": {
      "op": "SWAP1"
    },
    "1360": {
      "op": "SWAP2"
    },
    "1361": {
      "op": "AND"
    },
    "1362": {
      "op": "DUP2"
    },
    "1363": {
      "op": "MSTORE"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1366": {
      "op": "ADD"
    },
    "1367": {
      "fn": "Cafe.getChildCount",
      "offset": [
        14299,
        14424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F7"
    },
    "1370": {
      "op": "JUMP"
    },
    "1371": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14166,
        14294
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1372": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14166,
        14294
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "1375": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14166,
        14294
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x569"
    },
    "1378": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14166,
        14294
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1379": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14166,
        14294
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1381": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14166,
        14294
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1384": {
      "fn": "Cafe.getTimeOfDeath",
      "jump": "i",
      "offset": [
        14166,
        14294
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1385": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14166,
        14294
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1386": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14229,
        14235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1388": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14253,
        14274
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 5
    },
    "1389": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14253,
        14274
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1390": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14253,
        14274
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1391": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14253,
        14263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "1393": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14253,
        14274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1395": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14253,
        14274
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1396": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14253,
        14274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1398": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14253,
        14274
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1399": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14253,
        14274
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1400": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14253,
        14287
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1401": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14253,
        14287
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1406": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14253,
        14287
      ],
      "op": "AND",
      "path": "0"
    },
    "1407": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14253,
        14287
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1408": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        14166,
        14294
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1409": {
      "offset": [
        948,
        971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1410": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        948,
        971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1412": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        948,
        971
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1413": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        948,
        971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "1416": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        948,
        971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1417": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        948,
        971
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1422": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        948,
        971
      ],
      "op": "AND",
      "path": "0"
    },
    "1423": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        948,
        971
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1424": {
      "fn": "Cafe.getTimeOfDeath",
      "offset": [
        948,
        971
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1425": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15687,
        15812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1426": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15687,
        15812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "1429": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15687,
        15812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59F"
    },
    "1432": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15687,
        15812
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1433": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15687,
        15812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1435": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15687,
        15812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1438": {
      "fn": "Cafe.getTimesBaked",
      "jump": "i",
      "offset": [
        15687,
        15812
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1439": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15687,
        15812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1440": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15748,
        15755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1442": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15773,
        15793
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 6
    },
    "1443": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15773,
        15793
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1444": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15773,
        15793
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1445": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15773,
        15783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "1447": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15773,
        15793
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1449": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15773,
        15793
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1450": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15773,
        15793
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1452": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15773,
        15793
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1453": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15773,
        15793
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1454": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15773,
        15805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1456": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15773,
        15805
      ],
      "op": "ADD",
      "path": "0"
    },
    "1457": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15773,
        15805
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1458": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15773,
        15805
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1459": {
      "fn": "Cafe.getTimesBaked",
      "offset": [
        15687,
        15812
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1460": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14429,
        14559
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1461": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14429,
        14559
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "1464": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14429,
        14559
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C2"
    },
    "1467": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14429,
        14559
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1468": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14429,
        14559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1470": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14429,
        14559
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1473": {
      "fn": "Cafe.getCreationTime",
      "jump": "i",
      "offset": [
        14429,
        14559
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1474": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14429,
        14559
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1475": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14493,
        14499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1477": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14538
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 7
    },
    "1478": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14538
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1479": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14538
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1480": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "1482": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1484": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14538
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1485": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1487": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14538
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1488": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14538
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1489": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14552
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1494": {
      "op": "SHL"
    },
    "1495": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14552
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1496": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14552
      ],
      "op": "DIV",
      "path": "0"
    },
    "1497": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14552
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1502": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14552
      ],
      "op": "AND",
      "path": "0"
    },
    "1503": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14517,
        14552
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1504": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        14429,
        14559
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1505": {
      "offset": [
        919,
        942
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1506": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        919,
        942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "1509": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        919,
        942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1511": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        919,
        942
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1512": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        919,
        942
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1513": {
      "fn": "Cafe.getCreationTime",
      "offset": [
        919,
        942
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1514": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1515": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C8"
    },
    "1518": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F8"
    },
    "1521": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1522": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1524": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3786"
    },
    "1527": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3255,
        3561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1528": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1529": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x156A"
    },
    "1532": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3255,
        3561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1533": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14564,
        14692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1534": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14564,
        14692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x371"
    },
    "1537": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14564,
        14692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60B"
    },
    "1540": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14564,
        14692
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1541": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14564,
        14692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1543": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14564,
        14692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1546": {
      "fn": "Cafe.getCreatorAddress",
      "jump": "i",
      "offset": [
        14564,
        14692
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1547": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14564,
        14692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1548": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14630,
        14637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1550": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14655,
        14676
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 8
    },
    "1551": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14655,
        14676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1552": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14655,
        14676
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1553": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14655,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "1555": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14655,
        14676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1557": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14655,
        14676
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1558": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14655,
        14676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1560": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14655,
        14676
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1561": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14655,
        14676
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1562": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14655,
        14685
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "1567": {
      "op": "SHL"
    },
    "1568": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14655,
        14685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1569": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14655,
        14685
      ],
      "op": "DIV",
      "path": "0"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1576": {
      "op": "SHL"
    },
    "1577": {
      "op": "SUB"
    },
    "1578": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14655,
        14685
      ],
      "op": "AND",
      "path": "0"
    },
    "1579": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14655,
        14685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1580": {
      "fn": "Cafe.getCreatorAddress",
      "offset": [
        14564,
        14692
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1581": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3190,
        3485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1582": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3190,
        3485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C8"
    },
    "1585": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3190,
        3485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164E"
    },
    "1588": {
      "fn": "Cafe.grindFlour",
      "jump": "i",
      "offset": [
        3190,
        3485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1589": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7325,
        8221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1590": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7325,
        8221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "1593": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7325,
        8221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x643"
    },
    "1596": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7325,
        8221
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1597": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7325,
        8221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1599": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7325,
        8221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38EC"
    },
    "1602": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "i",
      "offset": [
        7325,
        8221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1603": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7325,
        8221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1604": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7325,
        8221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1728"
    },
    "1607": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "i",
      "offset": [
        7325,
        8221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1608": {
      "offset": [
        977,
        1003
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1609": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        977,
        1003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "1612": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        977,
        1003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1614": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        977,
        1003
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1615": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        977,
        1003
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1616": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        977,
        1003
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1617": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9397,
        10034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1618": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9397,
        10034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x313"
    },
    "1621": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9397,
        10034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65F"
    },
    "1624": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9397,
        10034
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1625": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9397,
        10034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1627": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9397,
        10034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A58"
    },
    "1630": {
      "fn": "Cafe.autoFeed",
      "jump": "i",
      "offset": [
        9397,
        10034
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1631": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9397,
        10034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1632": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9397,
        10034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x198F"
    },
    "1635": {
      "fn": "Cafe.autoFeed",
      "jump": "i",
      "offset": [
        9397,
        10034
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1636": {
      "offset": [
        888,
        913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1637": {
      "fn": "Cafe.autoFeed",
      "offset": [
        888,
        913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "1640": {
      "fn": "Cafe.autoFeed",
      "offset": [
        888,
        913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1642": {
      "fn": "Cafe.autoFeed",
      "offset": [
        888,
        913
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1643": {
      "fn": "Cafe.autoFeed",
      "offset": [
        888,
        913
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1644": {
      "fn": "Cafe.autoFeed",
      "offset": [
        888,
        913
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1645": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16491,
        16620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1646": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16491,
        16620
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "1649": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16491,
        16620
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67B"
    },
    "1652": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16491,
        16620
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1653": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16491,
        16620
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1655": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16491,
        16620
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3631"
    },
    "1658": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "jump": "i",
      "offset": [
        16491,
        16620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1659": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16491,
        16620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1660": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16491,
        16620
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A8B"
    },
    "1663": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "jump": "i",
      "offset": [
        16491,
        16620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1664": {
      "offset": [
        2813,
        2848
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1665": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "1668": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68E"
    },
    "1671": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1672": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1674": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1677": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "jump": "i",
      "offset": [
        2813,
        2848
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1678": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1679": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AAC"
    },
    "1682": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "jump": "i",
      "offset": [
        2813,
        2848
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1683": {
      "offset": [
        2973,
        3003
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1684": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2973,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "1687": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2973,
        3003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x34"
    },
    "1689": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2973,
        3003
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1690": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2973,
        3003
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1691": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2973,
        3003
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1692": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10041,
        10306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1693": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10041,
        10306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x313"
    },
    "1696": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10041,
        10306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AA"
    },
    "1699": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10041,
        10306
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1700": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10041,
        10306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1702": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10041,
        10306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1705": {
      "fn": "Cafe.stopAutoFeed",
      "jump": "i",
      "offset": [
        10041,
        10306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1706": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10041,
        10306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1707": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10041,
        10306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC3"
    },
    "1710": {
      "fn": "Cafe.stopAutoFeed",
      "jump": "i",
      "offset": [
        10041,
        10306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1711": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15132,
        15263
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1712": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15132,
        15263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "1715": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15132,
        15263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BD"
    },
    "1718": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15132,
        15263
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1719": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15132,
        15263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1721": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15132,
        15263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1724": {
      "fn": "Cafe.getIngredientCount",
      "jump": "i",
      "offset": [
        15132,
        15263
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1725": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15132,
        15263
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1726": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15198,
        15205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1728": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15223,
        15243
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 9
    },
    "1729": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15223,
        15243
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1730": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15223,
        15243
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1731": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15223,
        15233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "1733": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15223,
        15243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1735": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15223,
        15243
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1736": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15223,
        15243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1738": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15223,
        15243
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1739": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15223,
        15243
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1740": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15223,
        15249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1742": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15223,
        15249
      ],
      "op": "ADD",
      "path": "0"
    },
    "1743": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15223,
        15256
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1744": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15223,
        15256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1745": {
      "fn": "Cafe.getIngredientCount",
      "offset": [
        15132,
        15263
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1746": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15007,
        15127
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1747": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15007,
        15127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "1750": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15007,
        15127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E0"
    },
    "1753": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15007,
        15127
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1754": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15007,
        15127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1756": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15007,
        15127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1759": {
      "fn": "Cafe.getRecipeScore",
      "jump": "i",
      "offset": [
        15007,
        15127
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1760": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15007,
        15127
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1761": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15069,
        15075
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1763": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15113
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 10
    },
    "1764": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15113
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1765": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15113
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1766": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "1768": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1770": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15113
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1771": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1773": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1774": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15113
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1775": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1777": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15120
      ],
      "op": "ADD",
      "path": "0"
    },
    "1778": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15120
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1779": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1784": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15120
      ],
      "op": "AND",
      "path": "0"
    },
    "1785": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15093,
        15120
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1786": {
      "fn": "Cafe.getRecipeScore",
      "offset": [
        15007,
        15127
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1787": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15419,
        15544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1788": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15419,
        15544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x371"
    },
    "1791": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15419,
        15544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x709"
    },
    "1794": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15419,
        15544
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1795": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15419,
        15544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1797": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15419,
        15544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1800": {
      "fn": "Cafe.getRecipeCreator",
      "jump": "i",
      "offset": [
        15419,
        15544
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1801": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15419,
        15544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1802": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15483,
        15490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1804": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15508,
        15528
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 11
    },
    "1805": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15508,
        15528
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1806": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15508,
        15528
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1807": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15508,
        15518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "1809": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15508,
        15528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1811": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15508,
        15528
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1812": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15508,
        15528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1814": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15508,
        15528
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1815": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15508,
        15528
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1816": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15508,
        15537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1818": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15508,
        15537
      ],
      "op": "ADD",
      "path": "0"
    },
    "1819": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15508,
        15537
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "op": "SUB"
    },
    "1828": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15508,
        15537
      ],
      "op": "AND",
      "path": "0"
    },
    "1829": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15508,
        15537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1830": {
      "fn": "Cafe.getRecipeCreator",
      "offset": [
        15419,
        15544
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1831": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16104,
        16214
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1832": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16104,
        16214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "1835": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16104,
        16214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x735"
    },
    "1838": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16104,
        16214
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1839": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16104,
        16214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1841": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16104,
        16214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3631"
    },
    "1844": {
      "fn": "Cafe.getPlayerScore",
      "jump": "i",
      "offset": [
        16104,
        16214
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1845": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16104,
        16214
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1852": {
      "op": "SHL"
    },
    "1853": {
      "op": "SUB"
    },
    "1854": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16189,
        16207
      ],
      "op": "AND",
      "path": "0",
      "statement": 12
    },
    "1855": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16164,
        16171
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1857": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16189,
        16207
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1858": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16189,
        16207
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1859": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16189,
        16207
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1860": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16189,
        16199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1862": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16189,
        16207
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1864": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16189,
        16207
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1865": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16189,
        16207
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1867": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16189,
        16207
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1868": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16189,
        16207
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1869": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16189,
        16207
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1870": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16189,
        16207
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1871": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        16104,
        16214
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1872": {
      "offset": [
        2854,
        2888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1873": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        2854,
        2888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "1876": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        2854,
        2888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75E"
    },
    "1879": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        2854,
        2888
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1880": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        2854,
        2888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1882": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        2854,
        2888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1885": {
      "fn": "Cafe.getPlayerScore",
      "jump": "i",
      "offset": [
        2854,
        2888
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1886": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        2854,
        2888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1887": {
      "fn": "Cafe.getPlayerScore",
      "offset": [
        2854,
        2888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B2E"
    },
    "1890": {
      "fn": "Cafe.getPlayerScore",
      "jump": "i",
      "offset": [
        2854,
        2888
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1891": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1892": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x313"
    },
    "1895": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x771"
    },
    "1898": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1899": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1901": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x364B"
    },
    "1904": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3628,
        3794
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1905": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1912": {
      "op": "SHL"
    },
    "1913": {
      "op": "SUB"
    },
    "1914": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 13
    },
    "1915": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1916": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "AND",
      "path": "1"
    },
    "1917": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3727,
        3731
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1919": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1920": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1921": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1922": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3768
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1924": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1926": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1927": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1928": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1929": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1931": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1932": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1933": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3777
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1934": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1935": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1936": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1937": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "AND",
      "path": "1"
    },
    "1938": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1939": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1940": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1941": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1942": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1943": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1944": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1945": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1946": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1948": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "AND",
      "path": "1"
    },
    "1949": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3750,
        3787
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1950": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3628,
        3794
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1951": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1952": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C8"
    },
    "1955": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7AD"
    },
    "1958": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1959": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1961": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3723"
    },
    "1964": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3861,
        4943
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1965": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1966": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B3E"
    },
    "1969": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3861,
        4943
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1970": {
      "offset": [
        3084,
        3119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1971": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3084,
        3119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "1974": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3084,
        3119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x37"
    },
    "1976": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3084,
        3119
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1977": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3084,
        3119
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1978": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3084,
        3119
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1979": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14697,
        14822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1980": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14697,
        14822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x313"
    },
    "1983": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14697,
        14822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C9"
    },
    "1986": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14697,
        14822
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1987": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14697,
        14822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1989": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14697,
        14822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "1992": {
      "fn": "Cafe.getIsAutoFed",
      "jump": "i",
      "offset": [
        14697,
        14822
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1993": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14697,
        14822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1994": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14758,
        14762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1996": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14801
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 14
    },
    "1997": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14801
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1998": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14801
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1999": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "2001": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2003": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14801
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2004": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2006": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14801
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2007": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14801
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2008": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14815
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2013": {
      "op": "SHL"
    },
    "2014": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2015": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14815
      ],
      "op": "DIV",
      "path": "0"
    },
    "2016": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2018": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14815
      ],
      "op": "AND",
      "path": "0"
    },
    "2019": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14780,
        14815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2020": {
      "fn": "Cafe.getIsAutoFed",
      "offset": [
        14697,
        14822
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2021": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4354,
        4990
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2022": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4354,
        4990
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x313"
    },
    "2025": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4354,
        4990
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F3"
    },
    "2028": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4354,
        4990
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2029": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4354,
        4990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2031": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4354,
        4990
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A05"
    },
    "2034": {
      "fn": "Cafe.feedStarter",
      "jump": "i",
      "offset": [
        4354,
        4990
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2035": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4354,
        4990
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2036": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4354,
        4990
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D73"
    },
    "2039": {
      "fn": "Cafe.feedStarter",
      "jump": "i",
      "offset": [
        4354,
        4990
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2040": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16342,
        16486
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2041": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16342,
        16486
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "2044": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16342,
        16486
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x806"
    },
    "2047": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16342,
        16486
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2048": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16342,
        16486
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2050": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16342,
        16486
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37C0"
    },
    "2053": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "jump": "i",
      "offset": [
        16342,
        16486
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2054": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16342,
        16486
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2055": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16342,
        16486
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E9C"
    },
    "2058": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "jump": "i",
      "offset": [
        16342,
        16486
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2059": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2060": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2358,
        2365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2068": {
      "op": "SHL"
    },
    "2069": {
      "op": "SUB"
    },
    "2070": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2385,
        2406
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 15
    },
    "2071": {
      "branch": 243,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2385,
        2406
      ],
      "op": "AND",
      "path": "1"
    },
    "2072": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x87C"
    },
    "2075": {
      "branch": 243,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2076": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2078": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2079": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2085": {
      "op": "SHL"
    },
    "2086": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2087": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2090": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2092": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2093": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "ADD",
      "path": "1"
    },
    "2094": {
      "op": "MSTORE"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2099": {
      "op": "DUP3"
    },
    "2100": {
      "op": "ADD"
    },
    "2101": {
      "op": "MSTORE"
    },
    "2102": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2137": {
      "op": "DUP3"
    },
    "2138": {
      "op": "ADD"
    },
    "2139": {
      "op": "MSTORE"
    },
    "2140": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2154": {
      "op": "SHL"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2157": {
      "op": "DUP3"
    },
    "2158": {
      "op": "ADD"
    },
    "2159": {
      "op": "MSTORE"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2162": {
      "op": "ADD"
    },
    "2163": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2164": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2166": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2167": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2168": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2169": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "SUB",
      "path": "1"
    },
    "2170": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2171": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "2172": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2377,
        2454
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2173": {
      "op": "POP"
    },
    "2174": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0x0"
    },
    "2176": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2177": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2178": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2179": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2480
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2181": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2183": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2184": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2185": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2186": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2188": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2189": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2190": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2484
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2197": {
      "op": "SHL"
    },
    "2198": {
      "op": "SUB"
    },
    "2199": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2200": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "AND",
      "path": "1"
    },
    "2201": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2202": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2203": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2204": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2205": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2206": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2207": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2208": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2471,
        2493
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2209": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2210": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2211": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2212": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "POP",
      "path": "1"
    },
    "2213": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2272,
        2500
      ],
      "op": "POP",
      "path": "1"
    },
    "2214": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2272,
        2500
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2215": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2216": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1437,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2224": {
      "op": "SHL"
    },
    "2225": {
      "op": "SUB"
    },
    "2226": {
      "op": "NOT"
    },
    "2227": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1501
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 17
    },
    "2228": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1501
      ],
      "op": "AND",
      "path": "1"
    },
    "2229": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2236": {
      "op": "SHL"
    },
    "2237": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1501
      ],
      "op": "EQ",
      "path": "1"
    },
    "2238": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1501
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2239": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1569
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D8"
    },
    "2242": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1569
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2243": {
      "op": "POP"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2250": {
      "op": "SHL"
    },
    "2251": {
      "op": "SUB"
    },
    "2252": {
      "op": "NOT"
    },
    "2253": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1517,
        1569
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2254": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1517,
        1569
      ],
      "op": "AND",
      "path": "1"
    },
    "2255": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2262": {
      "op": "SHL"
    },
    "2263": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1517,
        1569
      ],
      "op": "EQ",
      "path": "1"
    },
    "2264": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1569
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2265": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1621
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2266": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1621
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F3"
    },
    "2269": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1460,
        1621
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2270": {
      "op": "POP"
    },
    "2271": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2278": {
      "op": "SHL"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2285": {
      "op": "SHL"
    },
    "2286": {
      "op": "SUB"
    },
    "2287": {
      "op": "NOT"
    },
    "2288": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 18
    },
    "2289": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "7"
    },
    "2290": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "7"
    },
    "2291": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1585,
        1621
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2292": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1453,
        1621
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2293": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1453,
        1621
      ],
      "op": "POP",
      "path": "1"
    },
    "2294": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2295": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2296": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2297": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1335,
        1628
      ],
      "op": "POP",
      "path": "1"
    },
    "2298": {
      "fn": "ERC1155.supportsInterface",
      "jump": "o",
      "offset": [
        1335,
        1628
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2299": {
      "fn": "Cafe.createStarter",
      "offset": [
        3831,
        4279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2300": {
      "fn": "Cafe.createStarter",
      "offset": [
        3872,
        3876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2302": {
      "fn": "Cafe.createStarter",
      "offset": [
        3888,
        3923
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0x909"
    },
    "2305": {
      "fn": "Cafe.createStarter",
      "offset": [
        3899,
        3909
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2306": {
      "fn": "Cafe.createStarter",
      "offset": [
        3912,
        3922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2308": {
      "fn": "Cafe.createStarter",
      "offset": [
        3912,
        3922
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2309": {
      "fn": "Cafe.createStarter",
      "offset": [
        3888,
        3898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EBE"
    },
    "2312": {
      "fn": "Cafe.createStarter",
      "jump": "i",
      "offset": [
        3888,
        3923
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2313": {
      "fn": "Cafe.createStarter",
      "offset": [
        3888,
        3923
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2314": {
      "fn": "Cafe.createStarter",
      "offset": [
        3935,
        3950
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2316": {
      "fn": "Cafe.createStarter",
      "offset": [
        3953,
        3968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x35"
    },
    "2318": {
      "fn": "Cafe.createStarter",
      "offset": [
        3953,
        3968
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2319": {
      "fn": "Cafe.createStarter",
      "offset": [
        3970,
        3971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2321": {
      "fn": "Cafe.createStarter",
      "offset": [
        3953,
        3971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91A"
    },
    "2324": {
      "fn": "Cafe.createStarter",
      "offset": [
        3953,
        3971
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2325": {
      "fn": "Cafe.createStarter",
      "offset": [
        3953,
        3971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2326": {
      "fn": "Cafe.createStarter",
      "offset": [
        3953,
        3971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "2329": {
      "fn": "Cafe.createStarter",
      "jump": "i",
      "offset": [
        3953,
        3971
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2330": {
      "fn": "Cafe.createStarter",
      "offset": [
        3953,
        3971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2331": {
      "fn": "Cafe.createStarter",
      "offset": [
        3935,
        3971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2332": {
      "op": "POP"
    },
    "2333": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x942"
    },
    "2336": {
      "fn": "Cafe.createStarter",
      "offset": [
        3988,
        3998
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2337": {
      "fn": "Cafe.createStarter",
      "offset": [
        4000,
        4009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92B"
    },
    "2340": {
      "fn": "Cafe.createStarter",
      "offset": [
        3935,
        3971
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2341": {
      "fn": "Cafe.createStarter",
      "offset": [
        4000,
        4001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2343": {
      "fn": "Cafe.createStarter",
      "offset": [
        4000,
        4009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "2346": {
      "fn": "Cafe.createStarter",
      "jump": "i",
      "offset": [
        4000,
        4009
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2347": {
      "fn": "Cafe.createStarter",
      "offset": [
        4000,
        4009
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2348": {
      "fn": "Cafe.createStarter",
      "offset": [
        4011,
        4012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2350": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        4016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2352": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        4016
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2353": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        4016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2354": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        4016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2356": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        4016
      ],
      "op": "ADD",
      "path": "0"
    },
    "2357": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        4016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2359": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        4016
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2360": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        4016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2361": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        4016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2363": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        4016
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2364": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        4016
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2365": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        4016
      ],
      "op": "POP",
      "path": "0"
    },
    "2366": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        3987
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EFE"
    },
    "2369": {
      "fn": "Cafe.createStarter",
      "jump": "i",
      "offset": [
        3982,
        4016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2370": {
      "fn": "Cafe.createStarter",
      "offset": [
        3982,
        4016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2371": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2373": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2374": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2375": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "2377": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2378": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "ADD",
      "path": "0"
    },
    "2379": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2380": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2381": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2382": {
      "fn": "Cafe.createStarter",
      "offset": [
        4090,
        4099
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2384": {
      "fn": "Cafe.createStarter",
      "offset": [
        4090,
        4099
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2385": {
      "fn": "Cafe.createStarter",
      "offset": [
        4026,
        4052
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2387": {
      "fn": "Cafe.createStarter",
      "offset": [
        4026,
        4052
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2388": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2389": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2390": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2391": {
      "fn": "Cafe.createStarter",
      "offset": [
        4072,
        4099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x966"
    },
    "2394": {
      "fn": "Cafe.createStarter",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2395": {
      "fn": "Cafe.createStarter",
      "offset": [
        4090,
        4099
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2400": {
      "fn": "Cafe.createStarter",
      "offset": [
        4090,
        4099
      ],
      "op": "AND",
      "path": "0"
    },
    "2401": {
      "fn": "Cafe.createStarter",
      "offset": [
        4072,
        4087
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2402": {
      "fn": "Cafe.createStarter",
      "offset": [
        4072,
        4099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "2405": {
      "fn": "Cafe.createStarter",
      "jump": "i",
      "offset": [
        4072,
        4099
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2406": {
      "fn": "Cafe.createStarter",
      "offset": [
        4072,
        4099
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2407": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2412": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "AND",
      "path": "0"
    },
    "2413": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2414": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2415": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2417": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "ADD",
      "path": "0"
    },
    "2418": {
      "fn": "Cafe.createStarter",
      "offset": [
        4101,
        4102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2420": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2422": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "AND",
      "path": "0"
    },
    "2423": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2424": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2425": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2427": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "ADD",
      "path": "0"
    },
    "2428": {
      "fn": "Cafe.createStarter",
      "offset": [
        4110,
        4125
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2429": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2434": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "AND",
      "path": "0"
    },
    "2435": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2436": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2437": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2439": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "ADD",
      "path": "0"
    },
    "2440": {
      "fn": "Cafe.createStarter",
      "offset": [
        4127,
        4137
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2447": {
      "op": "SHL"
    },
    "2448": {
      "op": "SUB"
    },
    "2449": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "AND",
      "path": "0"
    },
    "2450": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2451": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2452": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2454": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "ADD",
      "path": "0"
    },
    "2455": {
      "fn": "Cafe.createStarter",
      "offset": [
        4138,
        4143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2457": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2458": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2459": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2460": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2461": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2463": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "ADD",
      "path": "0"
    },
    "2464": {
      "fn": "Cafe.createStarter",
      "offset": [
        4151,
        4166
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2465": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2470": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "AND",
      "path": "0"
    },
    "2471": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2472": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2473": {
      "fn": "Cafe.createStarter",
      "offset": [
        4055,
        4168
      ],
      "op": "POP",
      "path": "0"
    },
    "2474": {
      "fn": "Cafe.createStarter",
      "offset": [
        4026,
        4168
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2475": {
      "fn": "Cafe.createStarter",
      "offset": [
        4026,
        4168
      ],
      "op": "POP",
      "path": "0"
    },
    "2476": {
      "fn": "Cafe.createStarter",
      "offset": [
        4204,
        4205
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x1"
    },
    "2478": {
      "fn": "Cafe.createStarter",
      "offset": [
        4187,
        4202
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x35"
    },
    "2480": {
      "fn": "Cafe.createStarter",
      "offset": [
        4187,
        4202
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2482": {
      "fn": "Cafe.createStarter",
      "offset": [
        4187,
        4205
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2483": {
      "fn": "Cafe.createStarter",
      "offset": [
        4187,
        4205
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2484": {
      "fn": "Cafe.createStarter",
      "offset": [
        4187,
        4205
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2485": {
      "fn": "Cafe.createStarter",
      "offset": [
        4187,
        4205
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9BE"
    },
    "2488": {
      "fn": "Cafe.createStarter",
      "offset": [
        4187,
        4205
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2489": {
      "fn": "Cafe.createStarter",
      "offset": [
        4187,
        4205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2490": {
      "fn": "Cafe.createStarter",
      "offset": [
        4187,
        4205
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "2493": {
      "fn": "Cafe.createStarter",
      "jump": "i",
      "offset": [
        4187,
        4205
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2494": {
      "fn": "Cafe.createStarter",
      "offset": [
        4187,
        4205
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2495": {
      "fn": "Cafe.createStarter",
      "offset": [
        4187,
        4205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2496": {
      "fn": "Cafe.createStarter",
      "offset": [
        4187,
        4205
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2497": {
      "fn": "Cafe.createStarter",
      "offset": [
        4187,
        4205
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2498": {
      "op": "POP"
    },
    "2499": {
      "op": "POP"
    },
    "2500": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4234
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x0"
    },
    "2502": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4234
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2503": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2504": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2505": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4225
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "2507": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2509": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4234
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2510": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2511": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2512": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2514": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4234
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2515": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4234
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2516": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4234
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2517": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4234
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2518": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2519": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2520": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2521": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2522": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2523": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2524": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "ADD",
      "path": "0"
    },
    "2525": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2526": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2527": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2528": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "ADD",
      "path": "0"
    },
    "2529": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2530": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2532": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2533": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "ADD",
      "path": "0"
    },
    "2534": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2535": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2537": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2538": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "ADD",
      "path": "0"
    },
    "2539": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2540": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2541": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2546": {
      "op": "SHL"
    },
    "2547": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "MUL",
      "path": "0"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2552": {
      "op": "SHL"
    },
    "2553": {
      "op": "NOT"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2560": {
      "op": "SHL"
    },
    "2561": {
      "op": "SUB"
    },
    "2562": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2563": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2564": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "AND",
      "path": "0"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "2569": {
      "op": "SHL"
    },
    "2570": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "MUL",
      "path": "0"
    },
    "2571": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xFFFFFF0000000000000000000000000000000000000000FFFFFFFFFFFFFFFFFF"
    },
    "2604": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2609": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2610": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2611": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "AND",
      "path": "0"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "2616": {
      "op": "SHL"
    },
    "2617": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "MUL",
      "path": "0"
    },
    "2618": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "AND",
      "path": "0"
    },
    "2619": {
      "op": "PUSH6",
      "value": "0x10000000000"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2630": {
      "op": "SHL"
    },
    "2631": {
      "op": "SUB"
    },
    "2632": {
      "op": "NOT"
    },
    "2633": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2635": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2636": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP11",
      "path": "0"
    },
    "2637": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "AND",
      "path": "0"
    },
    "2638": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "2644": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "MUL",
      "path": "0"
    },
    "2645": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "2651": {
      "op": "NOT"
    },
    "2652": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2653": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP9",
      "path": "0"
    },
    "2654": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "AND",
      "path": "0"
    },
    "2655": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2656": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2657": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "AND",
      "path": "0"
    },
    "2658": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2659": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2660": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2661": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "OR",
      "path": "0"
    },
    "2662": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2663": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2664": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2665": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "OR",
      "path": "0"
    },
    "2666": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2667": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2668": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2669": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "AND",
      "path": "0"
    },
    "2670": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2671": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2672": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2673": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "OR",
      "path": "0"
    },
    "2674": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2675": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2676": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2677": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "OR",
      "path": "0"
    },
    "2678": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "AND",
      "path": "0"
    },
    "2679": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2680": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2681": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2682": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "OR",
      "path": "0"
    },
    "2683": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2684": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2685": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2687": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2688": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2689": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "ADD",
      "path": "0"
    },
    "2690": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2691": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2693": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2694": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2695": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "ADD",
      "path": "0"
    },
    "2696": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2697": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2698": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2699": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2700": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2701": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "AND",
      "path": "0"
    },
    "2702": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2707": {
      "op": "NOT"
    },
    "2708": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2709": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2710": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2711": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "AND",
      "path": "0"
    },
    "2712": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "OR",
      "path": "0"
    },
    "2713": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2714": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2715": {
      "fn": "Cafe.createStarter",
      "offset": [
        4215,
        4246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2716": {
      "op": "POP"
    },
    "2717": {
      "fn": "Cafe.createStarter",
      "offset": [
        3831,
        4279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2718": {
      "fn": "Cafe.createStarter",
      "offset": [
        3831,
        4279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2719": {
      "fn": "Cafe.createStarter",
      "jump": "o",
      "offset": [
        3831,
        4279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2720": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2721": {
      "fn": "ERC1155.uri",
      "offset": [
        2087,
        2100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2723": {
      "fn": "ERC1155.uri",
      "offset": [
        2119,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 23,
      "value": "0x3"
    },
    "2725": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2726": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2727": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAAF"
    },
    "2730": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2731": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED1"
    },
    "2734": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2735": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2736": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2737": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2739": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "2740": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2742": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2743": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2744": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DIV",
      "path": "1"
    },
    "2745": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MUL",
      "path": "1"
    },
    "2746": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2748": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "2749": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2751": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2752": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2753": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2754": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "2755": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2757": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2758": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2759": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2760": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2761": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2762": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2763": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2764": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2765": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2767": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "2768": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2769": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2770": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2771": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xADB"
    },
    "2774": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2775": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED1"
    },
    "2778": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2779": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2780": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2781": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2782": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB28"
    },
    "2785": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2786": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2787": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2789": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "LT",
      "path": "1"
    },
    "2790": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAFD"
    },
    "2793": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2794": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2797": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2798": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2799": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2800": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DIV",
      "path": "1"
    },
    "2801": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MUL",
      "path": "1"
    },
    "2802": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2803": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2804": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2805": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2807": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "2808": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2809": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB28"
    },
    "2812": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2813": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2814": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2815": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "2816": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2817": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2818": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2820": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2821": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2823": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2825": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2826": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2827": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2828": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2829": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2830": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2831": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2832": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2833": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2835": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "2836": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2837": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2839": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "2840": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2841": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2842": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "GT",
      "path": "1"
    },
    "2843": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "2846": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2847": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2848": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2849": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SUB",
      "path": "1"
    },
    "2850": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2852": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "AND",
      "path": "1"
    },
    "2853": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2854": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "ADD",
      "path": "1"
    },
    "2855": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2856": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2857": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "POP",
      "path": "1"
    },
    "2858": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "POP",
      "path": "1"
    },
    "2859": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "POP",
      "path": "1"
    },
    "2860": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "POP",
      "path": "1"
    },
    "2861": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "POP",
      "path": "1"
    },
    "2862": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2863": {
      "fn": "ERC1155.uri",
      "offset": [
        2112,
        2123
      ],
      "op": "POP",
      "path": "1"
    },
    "2864": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2865": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2866": {
      "fn": "ERC1155.uri",
      "offset": [
        2027,
        2130
      ],
      "op": "POP",
      "path": "1"
    },
    "2867": {
      "fn": "ERC1155.uri",
      "jump": "o",
      "offset": [
        2027,
        2130
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2868": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14876,
        15001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2869": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14968,
        14988
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x0"
    },
    "2871": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14968,
        14988
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2872": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14968,
        14988
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2873": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14968,
        14988
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2874": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14968,
        14978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "2876": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14968,
        14988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2878": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14968,
        14988
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2879": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14968,
        14988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2881": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14968,
        14988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2882": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14968,
        14988
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2883": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14961,
        14994
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2884": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14961,
        14994
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2885": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14937,
        14950
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2887": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14937,
        14950
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2888": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14968,
        14988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2889": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14961,
        14994
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAF"
    },
    "2892": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14961,
        14994
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2893": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        14961,
        14994
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ED1"
    },
    "2896": {
      "fn": "Cafe.getRecipeName",
      "jump": "i",
      "offset": [
        14961,
        14994
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2897": {
      "offset": [
        2894,
        2928
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2898": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x29"
    },
    "2900": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2901": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "2903": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2904": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "LT",
      "path": "0"
    },
    "2905": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB61"
    },
    "2908": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2909": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2911": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2912": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2913": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2914": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "ADD",
      "path": "0"
    },
    "2915": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2922": {
      "op": "SHL"
    },
    "2923": {
      "op": "SUB"
    },
    "2924": {
      "offset": [
        2894,
        2928
      ],
      "op": "AND",
      "path": "0"
    },
    "2925": {
      "fn": "Cafe.getRecipeName",
      "offset": [
        2894,
        2928
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2926": {
      "op": "POP"
    },
    "2927": {
      "offset": [
        2894,
        2928
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2928": {
      "fn": "Cafe.getRecipeName",
      "jump": "o",
      "offset": [
        2894,
        2928
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2929": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2930": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5269,
        5276
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 25
    },
    "2931": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5269,
        5283
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2932": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5255,
        5258
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2933": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5255,
        5265
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2934": {
      "branch": 244,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5255,
        5283
      ],
      "op": "EQ",
      "path": "1"
    },
    "2935": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB92"
    },
    "2938": {
      "branch": 244,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2939": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2941": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2942": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2948": {
      "op": "SHL"
    },
    "2949": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2950": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2951": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2953": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "ADD",
      "path": "1"
    },
    "2954": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "2957": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2958": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DCA"
    },
    "2961": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5247,
        5328
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2962": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5247,
        5328
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2969": {
      "op": "SHL"
    },
    "2970": {
      "op": "SUB"
    },
    "2971": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5346,
        5362
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 26
    },
    "2972": {
      "branch": 245,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5346,
        5362
      ],
      "op": "AND",
      "path": "1"
    },
    "2973": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB8"
    },
    "2976": {
      "branch": 245,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2977": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2979": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2986": {
      "op": "SHL"
    },
    "2987": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2988": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2989": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2991": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "ADD",
      "path": "1"
    },
    "2992": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "2995": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2996": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CF8"
    },
    "2999": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5338,
        5404
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3000": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5338,
        5404
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3007": {
      "op": "SHL"
    },
    "3008": {
      "op": "SUB"
    },
    "3009": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5435,
        5455
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 27
    },
    "3010": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5435,
        5455
      ],
      "op": "AND",
      "path": "1"
    },
    "3011": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 28
    },
    "3012": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5435,
        5455
      ],
      "op": "EQ",
      "path": "1"
    },
    "3013": {
      "branch": 246,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5435,
        5455
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3014": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5435,
        5495
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBD4"
    },
    "3017": {
      "branch": 246,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5435,
        5495
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3018": {
      "op": "POP"
    },
    "3019": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5459,
        5495
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBD4"
    },
    "3022": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5476,
        5480
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3023": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3024": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5482,
        5494
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x771"
    },
    "3027": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3028": {
      "branch": 247,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5459,
        5495
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3029": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC3B"
    },
    "3032": {
      "branch": 247,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3033": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3035": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3036": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3042": {
      "op": "SHL"
    },
    "3043": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3044": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3047": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3049": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3050": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "ADD",
      "path": "1"
    },
    "3051": {
      "op": "MSTORE"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3056": {
      "op": "DUP3"
    },
    "3057": {
      "op": "ADD"
    },
    "3058": {
      "op": "MSTORE"
    },
    "3059": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3094": {
      "op": "DUP3"
    },
    "3095": {
      "op": "ADD"
    },
    "3096": {
      "op": "MSTORE"
    },
    "3097": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "3118": {
      "op": "SHL"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3121": {
      "op": "DUP3"
    },
    "3122": {
      "op": "ADD"
    },
    "3123": {
      "op": "MSTORE"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3126": {
      "op": "ADD"
    },
    "3127": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "3130": {
      "op": "JUMP"
    },
    "3131": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5414,
        5571
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3132": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3133": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5582,
        5598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3135": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3136": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5719,
        5722
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3137": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5719,
        5729
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3138": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5715,
        5716
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3139": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5715,
        5729
      ],
      "op": "LT",
      "path": "1"
    },
    "3140": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3141": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF8"
    },
    "3144": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3145": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5750,
        5760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3147": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5766
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3148": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5767,
        5768
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3149": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3150": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3151": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3152": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "LT",
      "path": "1"
    },
    "3153": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC6A"
    },
    "3156": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3157": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3164": {
      "op": "SHL"
    },
    "3165": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3167": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3168": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "3170": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3172": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3173": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3175": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3177": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3178": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3179": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3181": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "MUL",
      "path": "1"
    },
    "3182": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3184": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "ADD",
      "path": "1"
    },
    "3185": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "ADD",
      "path": "1"
    },
    "3186": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5763,
        5769
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3187": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5750,
        5769
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3188": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5750,
        5769
      ],
      "op": "POP",
      "path": "1"
    },
    "3189": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5783,
        5797
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3191": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5807
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3192": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5808,
        5809
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3193": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3194": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3195": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3196": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "LT",
      "path": "1"
    },
    "3197": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC96"
    },
    "3200": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3201": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3208": {
      "op": "SHL"
    },
    "3209": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3211": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3212": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "3214": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3216": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3217": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3219": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3221": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3222": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3223": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3225": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3226": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3227": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "MUL",
      "path": "1"
    },
    "3228": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3229": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3230": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3231": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "ADD",
      "path": "1"
    },
    "3232": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3233": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "ADD",
      "path": "1"
    },
    "3234": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3235": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5825,
        5844
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3237": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3238": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3239": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3240": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3242": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3243": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3244": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3246": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3247": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3248": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5860
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3255": {
      "op": "SHL"
    },
    "3256": {
      "op": "SUB"
    },
    "3257": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "DUP15",
      "path": "1"
    },
    "3258": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "AND",
      "path": "1"
    },
    "3259": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3260": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3261": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3262": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3263": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3264": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3265": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3266": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3267": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3268": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5847,
        5866
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3269": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3270": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5800,
        5810
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3271": {
      "op": "POP"
    },
    "3272": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5888,
        5909
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 29
    },
    "3273": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5888,
        5909
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3274": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5888,
        5909
      ],
      "op": "LT",
      "path": "1"
    },
    "3275": {
      "branch": 248,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5888,
        5909
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3276": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCE7"
    },
    "3279": {
      "branch": 248,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3280": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3282": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3283": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3289": {
      "op": "SHL"
    },
    "3290": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3291": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3292": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3294": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "ADD",
      "path": "1"
    },
    "3295": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "3298": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3299": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D80"
    },
    "3302": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5880,
        5956
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3303": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5880,
        5956
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3304": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5992,
        6012
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 30,
      "value": "0xCF1"
    },
    "3307": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6006,
        6012
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3308": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5992,
        6003
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3309": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5992,
        6012
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3EBA"
    },
    "3312": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5992,
        6012
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3313": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5992,
        6012
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3314": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5979
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3316": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3318": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5980,
        5982
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3319": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3320": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3321": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3323": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "ADD",
      "path": "1"
    },
    "3324": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3325": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3326": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3327": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3329": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "ADD",
      "path": "1"
    },
    "3330": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3332": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5983
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3333": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3335": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5984,
        5988
      ],
      "op": "DUP13",
      "path": "1"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3342": {
      "op": "SHL"
    },
    "3343": {
      "op": "SUB"
    },
    "3344": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "AND",
      "path": "1"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3351": {
      "op": "SHL"
    },
    "3352": {
      "op": "SUB"
    },
    "3353": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "AND",
      "path": "1"
    },
    "3354": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3355": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3356": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3358": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "ADD",
      "path": "1"
    },
    "3359": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3360": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3361": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3362": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3364": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "ADD",
      "path": "1"
    },
    "3365": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3367": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        5989
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3368": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        6012
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3369": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        6012
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3370": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        6012
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3371": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5970,
        6012
      ],
      "op": "POP",
      "path": "1"
    },
    "3372": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6047,
        6053
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 31
    },
    "3373": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6035
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3375": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3377": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6036,
        6038
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3378": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3379": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3380": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3382": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "ADD",
      "path": "1"
    },
    "3383": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3384": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3385": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3386": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3388": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "ADD",
      "path": "1"
    },
    "3389": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3391": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6039
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3392": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3394": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6040,
        6042
      ],
      "op": "DUP12",
      "path": "1"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3401": {
      "op": "SHL"
    },
    "3402": {
      "op": "SUB"
    },
    "3403": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "AND",
      "path": "1"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3410": {
      "op": "SHL"
    },
    "3411": {
      "op": "SUB"
    },
    "3412": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "AND",
      "path": "1"
    },
    "3413": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3414": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3415": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3417": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "ADD",
      "path": "1"
    },
    "3418": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3419": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3420": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3421": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3423": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "ADD",
      "path": "1"
    },
    "3424": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3426": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3427": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3429": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3430": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3431": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3432": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD71"
    },
    "3435": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3436": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3437": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E36"
    },
    "3440": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6026,
        6053
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3441": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3442": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3443": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3444": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6026,
        6053
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3445": {
      "op": "POP"
    },
    "3446": {
      "op": "POP"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3453": {
      "op": "SHL"
    },
    "3454": {
      "op": "SUB"
    },
    "3455": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "DUP10",
      "path": "1",
      "statement": 32
    },
    "3456": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "AND",
      "path": "1"
    },
    "3457": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3459": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3460": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3461": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3462": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3464": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3465": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3466": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3467": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3469": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3470": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6084
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3471": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6092
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD98"
    },
    "3474": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6092
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3475": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6089,
        6091
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3476": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6088
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2024"
    },
    "3479": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6067,
        6092
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3480": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6067,
        6092
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3481": {
      "op": "POP"
    },
    "3482": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3484": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3485": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3486": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3487": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6120
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3489": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3491": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3492": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3493": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3494": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3496": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3497": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3498": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6124
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3505": {
      "op": "SHL"
    },
    "3506": {
      "op": "SUB"
    },
    "3507": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "DUP15",
      "path": "1"
    },
    "3508": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "AND",
      "path": "1"
    },
    "3509": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3510": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3511": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3512": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3513": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3514": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3515": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3516": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6111,
        6130
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3517": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6106,
        6200
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDE4"
    },
    "3520": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6106,
        6200
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3527": {
      "op": "SHL"
    },
    "3528": {
      "op": "SUB"
    },
    "3529": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "DUP11",
      "path": "1",
      "statement": 33
    },
    "3530": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "AND",
      "path": "1"
    },
    "3531": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3533": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3534": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3535": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3536": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3538": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3539": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3540": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3541": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3543": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3544": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3545": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6185
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDE2"
    },
    "3548": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6185
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3549": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6182,
        6184
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3550": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6181
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2030"
    },
    "3553": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6155,
        6185
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3554": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6185
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3555": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6155,
        6185
      ],
      "op": "POP",
      "path": "1"
    },
    "3556": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6106,
        6200
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3557": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "3558": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "3559": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "3560": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5731,
        5734
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 34
    },
    "3561": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5731,
        5734
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF1"
    },
    "3564": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5731,
        5734
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3565": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5731,
        5734
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F39"
    },
    "3568": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5731,
        5734
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3569": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5731,
        5734
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3570": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5731,
        5734
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3571": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5731,
        5734
      ],
      "op": "POP",
      "path": "1"
    },
    "3572": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC3F"
    },
    "3575": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3576": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3577": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5695,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "3578": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6255,
        6257
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 35
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3585": {
      "op": "SHL"
    },
    "3586": {
      "op": "SUB"
    },
    "3587": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "AND",
      "path": "1"
    },
    "3588": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6249,
        6253
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3595": {
      "op": "SHL"
    },
    "3596": {
      "op": "SUB"
    },
    "3597": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "AND",
      "path": "1"
    },
    "3598": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6239,
        6247
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3605": {
      "op": "SHL"
    },
    "3606": {
      "op": "SUB"
    },
    "3607": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "AND",
      "path": "1"
    },
    "3608": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "3641": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6259,
        6262
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3642": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6264,
        6271
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3643": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3645": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3646": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE48"
    },
    "3649": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3650": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3651": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3652": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3BA8"
    },
    "3655": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6225,
        6272
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3656": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3657": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3659": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3660": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3661": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3662": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "SUB",
      "path": "1"
    },
    "3663": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3664": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6225,
        6272
      ],
      "op": "LOG4",
      "path": "1"
    },
    "3665": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6283,
        6358
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 36,
      "value": "0xE5E"
    },
    "3668": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6327
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3669": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6329,
        6333
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3670": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6335,
        6337
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3671": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6339,
        6342
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3672": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6351
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3673": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6353,
        6357
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3674": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6283,
        6318
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x203C"
    },
    "3677": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6283,
        6358
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3678": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6283,
        6358
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3679": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "3680": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "3681": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "3682": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "3683": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "3684": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "3685": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3686": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3693": {
      "op": "SHL"
    },
    "3694": {
      "op": "SUB"
    },
    "3695": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 37
    },
    "3696": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "AND",
      "path": "1"
    },
    "3697": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14435,
        14442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3699": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3700": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3701": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3702": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3704": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3705": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3706": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3707": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3709": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3710": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14481
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3711": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14491
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE88"
    },
    "3714": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14491
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3715": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14485,
        14490
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3716": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14484
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21A7"
    },
    "3719": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        14461,
        14491
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3720": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14461,
        14491
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3721": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14454,
        14491
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3722": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "offset": [
        14355,
        14498
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3723": {
      "op": "POP"
    },
    "3724": {
      "op": "POP"
    },
    "3725": {
      "op": "POP"
    },
    "3726": {
      "fn": "ERC1155.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        14355,
        14498
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3727": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3728": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15349,
        15355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3730": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15393
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 38
    },
    "3731": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15393
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3732": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15393
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3733": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "3735": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3737": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15393
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3738": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3740": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15393
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3741": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15393
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3742": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3744": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15399
      ],
      "op": "ADD",
      "path": "0"
    },
    "3745": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3746": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3747": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15400,
        15405
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3748": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15400,
        15405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3749": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3750": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "LT",
      "path": "0"
    },
    "3751": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC0"
    },
    "3754": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3755": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3762": {
      "op": "SHL"
    },
    "3763": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3765": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3766": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3768": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3770": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3771": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3773": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3775": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3776": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3777": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3778": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3780": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3781": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3783": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3785": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3786": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3787": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "3789": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3790": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3791": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3792": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "DIV",
      "path": "0"
    },
    "3793": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "ADD",
      "path": "0"
    },
    "3794": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3795": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3796": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "MOD",
      "path": "0"
    },
    "3797": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3799": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "MUL",
      "path": "0"
    },
    "3800": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3801": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3802": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3803": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3806": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "EXP",
      "path": "0"
    },
    "3807": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3808": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "DIV",
      "path": "0"
    },
    "3809": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3814": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15373,
        15406
      ],
      "op": "AND",
      "path": "0"
    },
    "3815": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15366,
        15406
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3816": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15366,
        15406
      ],
      "op": "POP",
      "path": "0"
    },
    "3817": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3818": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3819": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "POP",
      "path": "0"
    },
    "3820": {
      "fn": "Cafe.getIngredientByIndex",
      "offset": [
        15269,
        15413
      ],
      "op": "POP",
      "path": "0"
    },
    "3821": {
      "fn": "Cafe.getIngredientByIndex",
      "jump": "o",
      "offset": [
        15269,
        15413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3822": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14504,
        14632
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3829": {
      "op": "SHL"
    },
    "3830": {
      "op": "SUB"
    },
    "3831": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 39
    },
    "3832": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "AND",
      "path": "1"
    },
    "3833": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14570,
        14577
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3835": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3836": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3837": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3838": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3840": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3841": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3842": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3843": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3845": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3846": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14616
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3847": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14625
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F3"
    },
    "3850": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14625
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3851": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        14596,
        14623
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21B3"
    },
    "3854": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "jump": "i",
      "offset": [
        14596,
        14625
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3855": {
      "offset": [
        2769,
        2807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3856": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "3858": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3859": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3861": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3862": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "LT",
      "path": "0"
    },
    "3863": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "3866": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3867": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3869": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3870": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3871": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3872": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "3874": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3875": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3876": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3877": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "DIV",
      "path": "0"
    },
    "3878": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "ADD",
      "path": "0"
    },
    "3879": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3880": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3881": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "MOD",
      "path": "0"
    },
    "3882": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3884": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "MUL",
      "path": "0"
    },
    "3885": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3886": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "POP",
      "path": "0"
    },
    "3887": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3888": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3889": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3892": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "EXP",
      "path": "0"
    },
    "3893": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3894": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "DIV",
      "path": "0"
    },
    "3895": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3900": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "AND",
      "path": "0"
    },
    "3901": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "offset": [
        2769,
        2807
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3902": {
      "fn": "ERC1155.getOwnerUniqueTokens",
      "jump": "o",
      "offset": [
        2769,
        2807
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3903": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3904": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2830,
        2846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3906": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2889,
        2892
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 40
    },
    "3907": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2889,
        2899
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3908": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2870,
        2878
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3909": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2870,
        2885
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3910": {
      "branch": 249,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2870,
        2899
      ],
      "op": "EQ",
      "path": "1"
    },
    "3911": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFA4"
    },
    "3914": {
      "branch": 249,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3915": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3917": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3918": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3924": {
      "op": "SHL"
    },
    "3925": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3926": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3929": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3931": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3932": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "ADD",
      "path": "1"
    },
    "3933": {
      "op": "MSTORE"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3938": {
      "op": "DUP3"
    },
    "3939": {
      "op": "ADD"
    },
    "3940": {
      "op": "MSTORE"
    },
    "3941": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3976": {
      "op": "DUP3"
    },
    "3977": {
      "op": "ADD"
    },
    "3978": {
      "op": "MSTORE"
    },
    "3979": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "3991": {
      "op": "SHL"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3994": {
      "op": "DUP3"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "op": "MSTORE"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3999": {
      "op": "ADD"
    },
    "4000": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "4003": {
      "op": "JUMP"
    },
    "4004": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2862,
        2945
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4005": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2956,
        2986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4007": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3003,
        3011
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4008": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3003,
        3018
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4009": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4018": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4019": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "GT",
      "path": "1"
    },
    "4020": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4021": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFCE"
    },
    "4024": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4025": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4032": {
      "op": "SHL"
    },
    "4033": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4035": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4036": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x41"
    },
    "4038": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4040": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4041": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "4043": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4045": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4046": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4047": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4049": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4050": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4051": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4052": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4053": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4054": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4055": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4057": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "MUL",
      "path": "1"
    },
    "4058": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4060": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "ADD",
      "path": "1"
    },
    "4061": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4062": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "ADD",
      "path": "1"
    },
    "4063": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4065": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4066": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4067": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4068": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFF7"
    },
    "4071": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4072": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4073": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4075": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "ADD",
      "path": "1"
    },
    "4076": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4078": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4079": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "MUL",
      "path": "1"
    },
    "4080": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4081": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "4082": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4083": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "CALLDATACOPY",
      "path": "1"
    },
    "4084": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "ADD",
      "path": "1"
    },
    "4085": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4086": {
      "op": "POP"
    },
    "4087": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4088": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2989,
        3019
      ],
      "op": "POP",
      "path": "1"
    },
    "4089": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2956,
        3019
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4090": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2956,
        3019
      ],
      "op": "POP",
      "path": "1"
    },
    "4091": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3035,
        3044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4093": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3030,
        3150
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4094": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3054,
        3062
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4095": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3054,
        3069
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4096": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3050,
        3051
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4097": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3050,
        3069
      ],
      "op": "LT",
      "path": "1"
    },
    "4098": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3030,
        3150
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4099": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3030,
        3150
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1099"
    },
    "4102": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3030,
        3150
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4103": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3109,
        3139
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 41,
      "value": "0x105E"
    },
    "4106": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3127
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4107": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3128,
        3129
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4108": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4109": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4110": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4111": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "LT",
      "path": "1"
    },
    "4112": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1029"
    },
    "4115": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4116": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4123": {
      "op": "SHL"
    },
    "4124": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4126": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4127": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "4129": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4131": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4132": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "4134": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4136": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4137": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4138": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4140": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "MUL",
      "path": "1"
    },
    "4141": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4143": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "ADD",
      "path": "1"
    },
    "4144": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "ADD",
      "path": "1"
    },
    "4145": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3119,
        3130
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4146": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3135
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4147": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3136,
        3137
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4148": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4149": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4150": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4151": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "LT",
      "path": "1"
    },
    "4152": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1051"
    },
    "4155": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4156": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4163": {
      "op": "SHL"
    },
    "4164": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4166": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4167": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "4169": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4171": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4172": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "4174": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4176": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4177": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4178": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4180": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "MUL",
      "path": "1"
    },
    "4181": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4183": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "ADD",
      "path": "1"
    },
    "4184": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "ADD",
      "path": "1"
    },
    "4185": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3132,
        3138
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4186": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3109,
        3118
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x80B"
    },
    "4189": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        3109,
        3139
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4190": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3109,
        3139
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4191": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3103
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4192": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3104,
        3105
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4193": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4194": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4195": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4196": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "LT",
      "path": "1"
    },
    "4197": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x107E"
    },
    "4200": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4201": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4208": {
      "op": "SHL"
    },
    "4209": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4211": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4212": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "4214": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4216": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4217": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "4219": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4221": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4222": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4223": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4225": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4226": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4227": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "MUL",
      "path": "1"
    },
    "4228": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4229": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4230": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4231": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "ADD",
      "path": "1"
    },
    "4232": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3106
      ],
      "op": "ADD",
      "path": "1"
    },
    "4233": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3090,
        3139
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4234": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3071,
        3074
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 42,
      "value": "0x1092"
    },
    "4237": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3071,
        3074
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4238": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3071,
        3074
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F39"
    },
    "4241": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        3071,
        3074
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4242": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3071,
        3074
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4243": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3071,
        3074
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4244": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3071,
        3074
      ],
      "op": "POP",
      "path": "1"
    },
    "4245": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3030,
        3150
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFFD"
    },
    "4248": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3030,
        3150
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4249": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3030,
        3150
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4250": {
      "op": "POP"
    },
    "4251": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3167,
        3180
      ],
      "op": "SWAP4",
      "path": "1",
      "statement": 43
    },
    "4252": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2657,
        3187
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4253": {
      "op": "POP"
    },
    "4254": {
      "op": "POP"
    },
    "4255": {
      "op": "POP"
    },
    "4256": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        2657,
        3187
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4257": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8375,
        8767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4258": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8468,
        8472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4260": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8507,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4261": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8507,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4262": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8507,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4263": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8507,
        8517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "4265": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8507,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4267": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8507,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4268": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8507,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4270": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8507,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4271": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8507,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4272": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8507,
        8527
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4273": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4274": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4275": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4277": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4278": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4279": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4280": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4281": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4282": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4283": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4284": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8468,
        8472
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4285": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8468,
        8472
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4286": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4287": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8507,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4288": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4289": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4290": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8507,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4291": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8507,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4292": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10CC"
    },
    "4295": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4296": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ED1"
    },
    "4299": {
      "fn": "Cafe.bakeExistingRecipe",
      "jump": "i",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4300": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4301": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4302": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4304": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4305": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4307": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4308": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4309": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DIV",
      "path": "0"
    },
    "4310": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MUL",
      "path": "0"
    },
    "4311": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4313": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4314": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4316": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4317": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4318": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4319": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4320": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4322": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4323": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4324": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4325": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4326": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4327": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4328": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4329": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4330": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4332": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4333": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4334": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4335": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4336": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F8"
    },
    "4339": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4340": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ED1"
    },
    "4343": {
      "fn": "Cafe.bakeExistingRecipe",
      "jump": "i",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4344": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4345": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4346": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4347": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1145"
    },
    "4350": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4351": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4352": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4354": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "LT",
      "path": "0"
    },
    "4355": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111A"
    },
    "4358": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4359": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4362": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4363": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4364": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4365": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DIV",
      "path": "0"
    },
    "4366": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MUL",
      "path": "0"
    },
    "4367": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4368": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4369": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4370": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4372": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4373": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4374": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1145"
    },
    "4377": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4378": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4379": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4380": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4381": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4382": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4383": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4385": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4386": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4388": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4390": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4391": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4392": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4393": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4394": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4395": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4396": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4397": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4398": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4400": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4401": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4402": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4404": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4405": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4406": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4407": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "GT",
      "path": "0"
    },
    "4408": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1128"
    },
    "4411": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4412": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4413": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4414": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SUB",
      "path": "0"
    },
    "4415": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4417": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "AND",
      "path": "0"
    },
    "4418": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4419": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4420": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4421": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4422": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "POP",
      "path": "0"
    },
    "4423": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "POP",
      "path": "0"
    },
    "4424": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "POP",
      "path": "0"
    },
    "4425": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "POP",
      "path": "0"
    },
    "4426": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "POP",
      "path": "0"
    },
    "4427": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4428": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4429": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4431": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4432": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4434": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4435": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4436": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4437": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4438": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4439": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4441": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4442": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4444": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4445": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4446": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4447": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4448": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4449": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4451": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MUL",
      "path": "0"
    },
    "4452": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4454": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4455": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4457": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4458": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4459": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4460": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4461": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4463": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4464": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4465": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4466": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4467": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4468": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4469": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4470": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4471": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4473": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4474": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4475": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4476": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4477": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4478": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4479": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11D3"
    },
    "4482": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4483": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4485": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MUL",
      "path": "0"
    },
    "4486": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4487": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4488": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4489": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4490": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4492": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4493": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4495": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4497": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4498": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4499": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4501": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4502": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4503": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4504": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4505": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4506": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4507": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4508": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4511": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "EXP",
      "path": "0"
    },
    "4512": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4513": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DIV",
      "path": "0"
    },
    "4514": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4519": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "AND",
      "path": "0"
    },
    "4520": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4525": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "AND",
      "path": "0"
    },
    "4526": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4527": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4528": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4530": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4531": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4532": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4534": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4535": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4536": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4538": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4539": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4541": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4542": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DIV",
      "path": "0"
    },
    "4543": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4544": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4545": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4546": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4547": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4549": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SUB",
      "path": "0"
    },
    "4550": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4551": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MUL",
      "path": "0"
    },
    "4552": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4553": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "POP",
      "path": "0"
    },
    "4554": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4555": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4556": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "GT",
      "path": "0"
    },
    "4557": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1196"
    },
    "4560": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4561": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4562": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "POP",
      "path": "0"
    },
    "4563": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4564": {
      "op": "POP"
    },
    "4565": {
      "op": "POP"
    },
    "4566": {
      "op": "POP"
    },
    "4567": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4568": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4569": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4570": {
      "op": "POP"
    },
    "4571": {
      "op": "POP"
    },
    "4572": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4574": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4575": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4576": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4583": {
      "op": "SHL"
    },
    "4584": {
      "op": "SUB"
    },
    "4585": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "AND",
      "path": "0"
    },
    "4586": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4588": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4589": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4590": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4591": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4593": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4594": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4595": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4596": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4598": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4599": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4600": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4601": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4603": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4604": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4605": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4606": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4608": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4609": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4610": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4611": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4613": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4614": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4615": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4616": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4617": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4622": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "AND",
      "path": "0"
    },
    "4623": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "4625": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4626": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4627": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4628": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4629": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4630": {
      "op": "POP"
    },
    "4631": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8537,
        8569
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 44,
      "value": "0x1220"
    },
    "4634": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8484,
        8527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4635": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8556,
        8568
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4636": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8537,
        8548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21BD"
    },
    "4639": {
      "fn": "Cafe.bakeExistingRecipe",
      "jump": "i",
      "offset": [
        8537,
        8569
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4640": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8537,
        8569
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4641": {
      "op": "POP"
    },
    "4642": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8600
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 45,
      "value": "0x0"
    },
    "4644": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8600
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4645": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8600
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4646": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8600
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4647": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "4649": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4651": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8600
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4652": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4654": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8600
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4655": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8600
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4656": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4658": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8612
      ],
      "op": "ADD",
      "path": "0"
    },
    "4659": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8615
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4660": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8615
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4661": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8614,
        8615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4663": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8614,
        8615
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4664": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4665": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1243"
    },
    "4668": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4669": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8614,
        8615
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4670": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8614,
        8615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4671": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "4674": {
      "fn": "Cafe.bakeExistingRecipe",
      "jump": "i",
      "offset": [
        8580,
        8615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4675": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4676": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8615
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4677": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8615
      ],
      "op": "POP",
      "path": "0"
    },
    "4678": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8615
      ],
      "op": "POP",
      "path": "0"
    },
    "4679": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8615
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4680": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4681": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8615
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4682": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8580,
        8615
      ],
      "op": "POP",
      "path": "0"
    },
    "4683": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8646,
        8647
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x1"
    },
    "4685": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8634,
        8644
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x36"
    },
    "4687": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8634,
        8644
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4689": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8634,
        8647
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4690": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8634,
        8647
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4691": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8634,
        8647
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4692": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8634,
        8647
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125D"
    },
    "4695": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8634,
        8647
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4696": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8634,
        8647
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4697": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8634,
        8647
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "4700": {
      "fn": "Cafe.bakeExistingRecipe",
      "jump": "i",
      "offset": [
        8634,
        8647
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4701": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8634,
        8647
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4702": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8634,
        8647
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4703": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8634,
        8647
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4704": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8634,
        8647
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4705": {
      "op": "POP"
    },
    "4706": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8657,
        8685
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 47,
      "value": "0x126C"
    },
    "4709": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8657,
        8685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4710": {
      "op": "POP"
    },
    "4711": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8676,
        8684
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4712": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8657,
        8675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A5"
    },
    "4715": {
      "fn": "Cafe.bakeExistingRecipe",
      "jump": "i",
      "offset": [
        8657,
        8685
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4716": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8657,
        8685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4717": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8695,
        8739
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 48,
      "value": "0x127E"
    },
    "4720": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8701,
        8711
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4721": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8721,
        8733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4723": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8721,
        8733
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4724": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8712,
        8720
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4725": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8712,
        8733
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92B"
    },
    "4728": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8712,
        8733
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4729": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8712,
        8733
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4730": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8712,
        8733
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "4733": {
      "fn": "Cafe.bakeExistingRecipe",
      "jump": "i",
      "offset": [
        8712,
        8733
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4734": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8695,
        8739
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4735": {
      "op": "POP"
    },
    "4736": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8756,
        8760
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 49,
      "value": "0x1"
    },
    "4738": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8756,
        8760
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4739": {
      "fn": "Cafe.bakeExistingRecipe",
      "offset": [
        8375,
        8767
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4740": {
      "op": "POP"
    },
    "4741": {
      "op": "POP"
    },
    "4742": {
      "op": "POP"
    },
    "4743": {
      "fn": "Cafe.bakeExistingRecipe",
      "jump": "o",
      "offset": [
        8375,
        8767
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4744": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4745": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8950,
        8954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4747": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9020,
        9026
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 50
    },
    "4748": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8973,
        9018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x129D"
    },
    "4751": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8983,
        8993
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4752": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9009,
        9017
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4753": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8994,
        9006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4755": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8994,
        9006
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4756": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8994,
        9017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E8"
    },
    "4759": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8994,
        9017
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4760": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8994,
        9017
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4761": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8994,
        9017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "4764": {
      "fn": "Cafe.eatBakedGood",
      "jump": "i",
      "offset": [
        8994,
        9017
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4765": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8973,
        9018
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4766": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8973,
        9026
      ],
      "op": "LT",
      "path": "0"
    },
    "4767": {
      "branch": 212,
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8973,
        9026
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4768": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8965,
        9072
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FD"
    },
    "4771": {
      "branch": 212,
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8965,
        9072
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4772": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8965,
        9072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4774": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8965,
        9072
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4775": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4781": {
      "op": "SHL"
    },
    "4782": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8965,
        9072
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4783": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8965,
        9072
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4786": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8965,
        9072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4788": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8965,
        9072
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4789": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8965,
        9072
      ],
      "op": "ADD",
      "path": "0"
    },
    "4790": {
      "op": "MSTORE"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4795": {
      "op": "DUP3"
    },
    "4796": {
      "op": "ADD"
    },
    "4797": {
      "op": "MSTORE"
    },
    "4798": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E277420686176652074686174206D616E79206F662074686F73"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4833": {
      "op": "DUP3"
    },
    "4834": {
      "op": "ADD"
    },
    "4835": {
      "op": "MSTORE"
    },
    "4836": {
      "op": "PUSH9",
      "value": "0x6520746F2065617421"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "4848": {
      "op": "SHL"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4851": {
      "op": "DUP3"
    },
    "4852": {
      "op": "ADD"
    },
    "4853": {
      "op": "MSTORE"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4856": {
      "op": "ADD"
    },
    "4857": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8965,
        9072
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "4860": {
      "op": "JUMP"
    },
    "4861": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8965,
        9072
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4862": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9091,
        9103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4864": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9126
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4865": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9126
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4866": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9126
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4867": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "4869": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4871": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9126
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4872": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4874": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9126
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4875": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9126
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4876": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4878": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9133
      ],
      "op": "ADD",
      "path": "0"
    },
    "4879": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9133
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4880": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9178,
        9190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4882": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9178,
        9190
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4883": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9133
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4888": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9133
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4889": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9133
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4890": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9133
      ],
      "op": "AND",
      "path": "0"
    },
    "4891": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9106,
        9133
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4892": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9091,
        9103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4893": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9167,
        9190
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1326"
    },
    "4896": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9167,
        9190
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4897": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9117,
        9125
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4898": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9167,
        9190
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "4901": {
      "fn": "Cafe.eatBakedGood",
      "jump": "i",
      "offset": [
        9167,
        9190
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4902": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9167,
        9190
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4903": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9151,
        9190
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4904": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9151,
        9190
      ],
      "op": "POP",
      "path": "0"
    },
    "4905": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9200,
        9230
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 51,
      "value": "0x1333"
    },
    "4908": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9206,
        9216
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4909": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9217,
        9222
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4910": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9223,
        9229
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4911": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9200,
        9205
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x279F"
    },
    "4914": {
      "fn": "Cafe.eatBakedGood",
      "jump": "i",
      "offset": [
        9200,
        9230
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4915": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9200,
        9230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4916": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9260
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 52,
      "value": "0x0"
    },
    "4918": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9260
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4919": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9260
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4920": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9260
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4921": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "4923": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9260
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4925": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9260
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4926": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9260
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4928": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9260
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4929": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9260
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4930": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4932": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9273
      ],
      "op": "ADD",
      "path": "0"
    },
    "4933": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9276
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4934": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9276
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4935": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9275,
        9276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4937": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9275,
        9276
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4938": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9260
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4939": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9276
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1355"
    },
    "4942": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9276
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4943": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9275,
        9276
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4944": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9275,
        9276
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4945": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9276
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "4948": {
      "fn": "Cafe.eatBakedGood",
      "jump": "i",
      "offset": [
        9240,
        9276
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4949": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9276
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4950": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9276
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4951": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9276
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4952": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9240,
        9276
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4953": {
      "op": "POP"
    },
    "4954": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9311,
        9332
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 53,
      "value": "0x136B"
    },
    "4957": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9311,
        9332
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4958": {
      "op": "POP"
    },
    "4959": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9326,
        9332
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4960": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9311,
        9325
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4965": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9311,
        9325
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4966": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9311,
        9325
      ],
      "op": "AND",
      "path": "0"
    },
    "4967": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9311,
        9332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E9B"
    },
    "4970": {
      "fn": "Cafe.eatBakedGood",
      "jump": "i",
      "offset": [
        9311,
        9332
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4971": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9311,
        9332
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4972": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9297,
        9307
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4973": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4975": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4976": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4977": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4978": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "4980": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4982": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4983": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4985": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4986": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9308
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4987": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9332
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4988": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9332
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4989": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4990": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4991": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4992": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x138A"
    },
    "4995": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9332
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4996": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9332
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4997": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9332
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4998": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "5001": {
      "fn": "Cafe.eatBakedGood",
      "jump": "i",
      "offset": [
        9286,
        9332
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5002": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9332
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5003": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9332
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5004": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9332
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5005": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9286,
        9332
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5006": {
      "op": "POP"
    },
    "5007": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9342,
        9372
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 54,
      "value": "0x1399"
    },
    "5010": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9342,
        9372
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5011": {
      "op": "POP"
    },
    "5012": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9361,
        9371
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5013": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9342,
        9360
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28E8"
    },
    "5016": {
      "fn": "Cafe.eatBakedGood",
      "jump": "i",
      "offset": [
        9342,
        9372
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5017": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        9342,
        9372
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5018": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "POP",
      "path": "0"
    },
    "5019": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "POP",
      "path": "0"
    },
    "5020": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5021": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5022": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "POP",
      "path": "0"
    },
    "5023": {
      "fn": "Cafe.eatBakedGood",
      "offset": [
        8878,
        9389
      ],
      "op": "POP",
      "path": "0"
    },
    "5024": {
      "fn": "Cafe.eatBakedGood",
      "jump": "o",
      "offset": [
        8878,
        9389
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5025": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5098,
        5847
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5026": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5153,
        5157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5028": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5178,
        5207
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 55,
      "value": "0x13AD"
    },
    "5031": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5188,
        5198
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5032": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5199,
        5206
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5033": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5178,
        5187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80B"
    },
    "5036": {
      "fn": "Cafe.splitStarter",
      "jump": "i",
      "offset": [
        5178,
        5207
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5037": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5178,
        5207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5038": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5209,
        5210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5040": {
      "branch": 213,
      "fn": "Cafe.splitStarter",
      "offset": [
        5178,
        5210
      ],
      "op": "EQ",
      "path": "0"
    },
    "5041": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5170,
        5302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13CC"
    },
    "5044": {
      "branch": 213,
      "fn": "Cafe.splitStarter",
      "offset": [
        5170,
        5302
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5045": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5170,
        5302
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5047": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5170,
        5302
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5048": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5054": {
      "op": "SHL"
    },
    "5055": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5170,
        5302
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5056": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5170,
        5302
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5057": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5170,
        5302
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5059": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5170,
        5302
      ],
      "op": "ADD",
      "path": "0"
    },
    "5060": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5170,
        5302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "5063": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5170,
        5302
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5064": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5170,
        5302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C75"
    },
    "5067": {
      "fn": "Cafe.splitStarter",
      "jump": "i",
      "offset": [
        5170,
        5302
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5068": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5170,
        5302
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5069": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5339
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 56,
      "value": "0x0"
    },
    "5071": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5339
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5072": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5339
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5073": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5339
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5074": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "5076": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5078": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5339
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5079": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5081": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5339
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5082": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5339
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5083": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5085": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5354
      ],
      "op": "ADD",
      "path": "0"
    },
    "5086": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5354
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5087": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5358,
        5373
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "5088": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5354
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5093": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5094": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5095": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5354
      ],
      "op": "AND",
      "path": "0"
    },
    "5096": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5373
      ],
      "op": "GT",
      "path": "0"
    },
    "5097": {
      "branch": 214,
      "fn": "Cafe.splitStarter",
      "offset": [
        5320,
        5373
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5098": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5312,
        5437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145B"
    },
    "5101": {
      "branch": 214,
      "fn": "Cafe.splitStarter",
      "offset": [
        5312,
        5437
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5102": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5312,
        5437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5104": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5312,
        5437
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5111": {
      "op": "SHL"
    },
    "5112": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5312,
        5437
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5113": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5312,
        5437
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5116": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5312,
        5437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5118": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5312,
        5437
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5119": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5312,
        5437
      ],
      "op": "ADD",
      "path": "0"
    },
    "5120": {
      "op": "MSTORE"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5125": {
      "op": "DUP3"
    },
    "5126": {
      "op": "ADD"
    },
    "5127": {
      "op": "MSTORE"
    },
    "5128": {
      "op": "PUSH32",
      "value": "0x596F7520686176652073706C697420746865207374617274657220616C726561"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5163": {
      "op": "DUP3"
    },
    "5164": {
      "op": "ADD"
    },
    "5165": {
      "op": "MSTORE"
    },
    "5166": {
      "op": "PUSH32",
      "value": "0x647920746F6461792120576169742074696C2720746F6D6F72726F7700000000"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5201": {
      "op": "DUP3"
    },
    "5202": {
      "op": "ADD"
    },
    "5203": {
      "op": "MSTORE"
    },
    "5204": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5206": {
      "op": "ADD"
    },
    "5207": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5312,
        5437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "5210": {
      "op": "JUMP"
    },
    "5211": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5312,
        5437
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5212": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5447,
        5467
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 57,
      "value": "0x1464"
    },
    "5215": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5459,
        5466
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5216": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5447,
        5458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D73"
    },
    "5219": {
      "fn": "Cafe.splitStarter",
      "jump": "i",
      "offset": [
        5447,
        5467
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5220": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5447,
        5467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5221": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5447,
        5467
      ],
      "op": "POP",
      "path": "0"
    },
    "5222": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5477,
        5497
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 58,
      "value": "0x146E"
    },
    "5225": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5489,
        5496
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5226": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5477,
        5488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D73"
    },
    "5229": {
      "fn": "Cafe.splitStarter",
      "jump": "i",
      "offset": [
        5477,
        5497
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5230": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5477,
        5497
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5231": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5477,
        5497
      ],
      "op": "POP",
      "path": "0"
    },
    "5232": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5507,
        5522
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 59,
      "value": "0x1477"
    },
    "5235": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5507,
        5520
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FB"
    },
    "5238": {
      "fn": "Cafe.splitStarter",
      "jump": "i",
      "offset": [
        5507,
        5522
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5239": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5507,
        5522
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5240": {
      "op": "POP"
    },
    "5241": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5595
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 60,
      "value": "0x0"
    },
    "5243": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5244": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5245": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5246": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "5248": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5250": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5251": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5253": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5254": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5255": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5595
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5256": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5609
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5257": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5543,
        5558
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x35"
    },
    "5259": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5543,
        5558
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5260": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5559
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5261": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5262": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5559
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5263": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5559
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5264": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5609
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5265": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5609
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5266": {
      "op": "PUSH9",
      "value": "0xFFFFFFFF0000000000"
    },
    "5276": {
      "op": "NOT"
    },
    "5277": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5609
      ],
      "op": "AND",
      "path": "0"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "5282": {
      "op": "SHL"
    },
    "5283": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5609
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5284": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5609
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5285": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5286": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5609
      ],
      "op": "DIV",
      "path": "0"
    },
    "5287": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5609
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5292": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5576,
        5609
      ],
      "op": "AND",
      "path": "0"
    },
    "5293": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5294": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5609
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5295": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5609
      ],
      "op": "MUL",
      "path": "0"
    },
    "5296": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5609
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5297": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5298": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5609
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5299": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5609
      ],
      "op": "OR",
      "path": "0"
    },
    "5300": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5301": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5532,
        5609
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5302": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5671,
        5695
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 61,
      "value": "0x14C2"
    },
    "5305": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5671,
        5686
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "5306": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5689,
        5695
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x15180"
    },
    "5310": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5671,
        5695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "5313": {
      "fn": "Cafe.splitStarter",
      "jump": "i",
      "offset": [
        5671,
        5695
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5314": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5671,
        5695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5315": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5630,
        5645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x35"
    },
    "5317": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5630,
        5645
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5318": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5320": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5646
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5321": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5646
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5322": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5646
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5323": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5629
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "5325": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5327": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5646
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5328": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5330": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5646
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5331": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5646
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5332": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5646
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5333": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5335": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5661
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5336": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5661
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5337": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5661
      ],
      "op": "ADD",
      "path": "0"
    },
    "5338": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5339": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5340": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5345": {
      "op": "NOT"
    },
    "5346": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "AND",
      "path": "0"
    },
    "5347": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5352": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "5353": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5354": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "5355": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "AND",
      "path": "0"
    },
    "5356": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5357": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5358": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5359": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "OR",
      "path": "0"
    },
    "5360": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5361": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5362": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5696
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5363": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5725
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 62
    },
    "5364": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5725
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5365": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5725
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5366": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5367": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5725
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5368": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5369": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5370": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5372": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5737
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5373": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1512"
    },
    "5376": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5377": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5661
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5378": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5619,
        5661
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5379": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "5385": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5386": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "DIV",
      "path": "0"
    },
    "5387": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5389": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "AND",
      "path": "0"
    },
    "5390": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E76"
    },
    "5393": {
      "fn": "Cafe.splitStarter",
      "jump": "i",
      "offset": [
        5706,
        5740
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5394": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5395": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5396": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "POP",
      "path": "0"
    },
    "5397": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5400": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "EXP",
      "path": "0"
    },
    "5401": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5402": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5403": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5404": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5406": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "MUL",
      "path": "0"
    },
    "5407": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "NOT",
      "path": "0"
    },
    "5408": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "AND",
      "path": "0"
    },
    "5409": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5410": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5411": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5413": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "AND",
      "path": "0"
    },
    "5414": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "MUL",
      "path": "0"
    },
    "5415": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "OR",
      "path": "0"
    },
    "5416": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5417": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5418": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5706,
        5740
      ],
      "op": "POP",
      "path": "0"
    },
    "5419": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5793,
        5808
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 63
    },
    "5420": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5811,
        5817
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x15180"
    },
    "5424": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5793,
        5817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1539"
    },
    "5427": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5793,
        5817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5428": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5793,
        5817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5429": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5793,
        5817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "5432": {
      "fn": "Cafe.splitStarter",
      "jump": "i",
      "offset": [
        5793,
        5817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5433": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5793,
        5817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5434": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5436": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5769
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5437": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5769
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5438": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5769
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5439": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "5441": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5443": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5769
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5444": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5446": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5769
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5447": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5769
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5448": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5769
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5449": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5451": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5452": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5453": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5784
      ],
      "op": "ADD",
      "path": "0"
    },
    "5454": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5455": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5456": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5461": {
      "op": "NOT"
    },
    "5462": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "AND",
      "path": "0"
    },
    "5463": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5468": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5469": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5470": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5471": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "AND",
      "path": "0"
    },
    "5472": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5473": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5474": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5475": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "OR",
      "path": "0"
    },
    "5476": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5477": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5478": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5818
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5479": {
      "op": "POP"
    },
    "5480": {
      "fn": "Cafe.splitStarter",
      "offset": [
        5750,
        5784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5481": {
      "fn": "Cafe.splitStarter",
      "jump": "o",
      "offset": [
        5098,
        5847
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5482": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5483": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5490": {
      "op": "SHL"
    },
    "5491": {
      "op": "SUB"
    },
    "5492": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3357,
        3381
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 64
    },
    "5493": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3357,
        3381
      ],
      "op": "AND",
      "path": "1"
    },
    "5494": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3357,
        3381
      ],
      "op": "EQ",
      "path": "1"
    },
    "5495": {
      "branch": 250,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3357,
        3381
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5496": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15D5"
    },
    "5499": {
      "branch": 250,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5500": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5502": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5503": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5507": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5509": {
      "op": "SHL"
    },
    "5510": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5511": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5514": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5516": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5517": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "ADD",
      "path": "1"
    },
    "5518": {
      "op": "MSTORE"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5523": {
      "op": "DUP3"
    },
    "5524": {
      "op": "ADD"
    },
    "5525": {
      "op": "MSTORE"
    },
    "5526": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "5559": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5561": {
      "op": "DUP3"
    },
    "5562": {
      "op": "ADD"
    },
    "5563": {
      "op": "MSTORE"
    },
    "5564": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5576": {
      "op": "SHL"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5579": {
      "op": "DUP3"
    },
    "5580": {
      "op": "ADD"
    },
    "5581": {
      "op": "MSTORE"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5584": {
      "op": "ADD"
    },
    "5585": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "5588": {
      "op": "JUMP"
    },
    "5589": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3349,
        3427
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5590": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5591": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 65,
      "value": "0x0"
    },
    "5593": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5594": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5595": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5596": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3456
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5598": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5600": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5601": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5602": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5603": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5605": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5606": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5607": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3470
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5614": {
      "op": "SHL"
    },
    "5615": {
      "op": "SUB"
    },
    "5616": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "DUP8",
      "path": "1"
    },
    "5617": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "AND",
      "path": "1"
    },
    "5618": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5619": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5620": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5621": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5622": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5623": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5624": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5625": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5626": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5627": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5630": {
      "op": "NOT"
    },
    "5631": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "AND",
      "path": "1"
    },
    "5632": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5633": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5634": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5635": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "OR",
      "path": "1"
    },
    "5636": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5637": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3491
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5638": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3438,
        3480
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5645": {
      "op": "SHL"
    },
    "5646": {
      "op": "SUB"
    },
    "5647": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "AND",
      "path": "1",
      "statement": 66
    },
    "5648": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "5681": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3545,
        3553
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5682": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5684": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5685": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1642"
    },
    "5688": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5689": {
      "op": "ISZERO"
    },
    "5690": {
      "op": "ISZERO"
    },
    "5691": {
      "op": "DUP2"
    },
    "5692": {
      "op": "MSTORE"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5695": {
      "op": "ADD"
    },
    "5696": {
      "op": "SWAP1"
    },
    "5697": {
      "op": "JUMP"
    },
    "5698": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5699": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5701": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5702": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5703": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5704": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "SUB",
      "path": "1"
    },
    "5705": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5706": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3506,
        3554
      ],
      "op": "LOG3",
      "path": "1"
    },
    "5707": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "POP",
      "path": "1"
    },
    "5708": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3255,
        3561
      ],
      "op": "POP",
      "path": "1"
    },
    "5709": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3255,
        3561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5710": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3190,
        3485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5711": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3259,
        3269
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 67
    },
    "5712": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5714": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5715": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5716": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5717": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "5719": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5721": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5722": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5724": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5725": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3270
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5726": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3270
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5727": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3271,
        3286
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "5728": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5733": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5734": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5735": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3270
      ],
      "op": "AND",
      "path": "0"
    },
    "5736": {
      "branch": 215,
      "fn": "Cafe.grindFlour",
      "offset": [
        3245,
        3286
      ],
      "op": "LT",
      "path": "0"
    },
    "5737": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3237,
        3317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16B4"
    },
    "5740": {
      "branch": 215,
      "fn": "Cafe.grindFlour",
      "offset": [
        3237,
        3317
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5741": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3237,
        3317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5743": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3237,
        3317
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5744": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5748": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5750": {
      "op": "SHL"
    },
    "5751": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3237,
        3317
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5752": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3237,
        3317
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5755": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3237,
        3317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5757": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3237,
        3317
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5758": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3237,
        3317
      ],
      "op": "ADD",
      "path": "0"
    },
    "5759": {
      "op": "MSTORE"
    },
    "5760": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5764": {
      "op": "DUP3"
    },
    "5765": {
      "op": "ADD"
    },
    "5766": {
      "op": "MSTORE"
    },
    "5767": {
      "op": "PUSH32",
      "value": "0x596F7520646964207468697320616C726561647920746F646179210000000000"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5802": {
      "op": "DUP3"
    },
    "5803": {
      "op": "ADD"
    },
    "5804": {
      "op": "MSTORE"
    },
    "5805": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5807": {
      "op": "ADD"
    },
    "5808": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3237,
        3317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "5811": {
      "op": "JUMP"
    },
    "5812": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3237,
        3317
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5813": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3369
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 68,
      "value": "0x16D3"
    },
    "5816": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3333,
        3343
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5817": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3344,
        3351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "5819": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3344,
        3351
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5820": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3353,
        3364
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "5822": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3353,
        3364
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5823": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5825": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3369
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5826": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3369
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5827": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5829": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3369
      ],
      "op": "ADD",
      "path": "0"
    },
    "5830": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5832": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3369
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5833": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3369
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5834": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5836": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3369
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5837": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3369
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5838": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3369
      ],
      "op": "POP",
      "path": "0"
    },
    "5839": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EFE"
    },
    "5842": {
      "fn": "Cafe.grindFlour",
      "jump": "i",
      "offset": [
        3327,
        3369
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5843": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3327,
        3369
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5844": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3394,
        3405
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 69,
      "value": "0x7"
    },
    "5846": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3394,
        3405
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5847": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3379,
        3390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x34"
    },
    "5849": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3379,
        3390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5851": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3379,
        3405
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5852": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3379,
        3405
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5853": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3379,
        3405
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5854": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3379,
        3405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E7"
    },
    "5857": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3379,
        3405
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5858": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3379,
        3405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5859": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3379,
        3405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "5862": {
      "fn": "Cafe.grindFlour",
      "jump": "i",
      "offset": [
        3379,
        3405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5863": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3379,
        3405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5864": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3379,
        3405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5865": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3379,
        3405
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5866": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3379,
        3405
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5867": {
      "op": "POP"
    },
    "5868": {
      "op": "POP"
    },
    "5869": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3468,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 70,
      "value": "0x6"
    },
    "5871": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3468,
        3477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5872": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3450,
        3477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16FF"
    },
    "5875": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3450,
        3477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5876": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3468,
        3477
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5881": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3468,
        3477
      ],
      "op": "AND",
      "path": "0"
    },
    "5882": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3450,
        3465
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "5883": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3450,
        3477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "5886": {
      "fn": "Cafe.grindFlour",
      "jump": "i",
      "offset": [
        3450,
        3477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5887": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3450,
        3477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5888": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3429,
        3439
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5889": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5891": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3440
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5892": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3440
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5893": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3440
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5894": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "5896": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5898": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3440
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5899": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5901": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3440
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5902": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3440
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5903": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3478
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5904": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3478
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5905": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5910": {
      "op": "NOT"
    },
    "5911": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3478
      ],
      "op": "AND",
      "path": "0"
    },
    "5912": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3478
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5917": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3478
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5918": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3478
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5919": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3478
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5920": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3478
      ],
      "op": "AND",
      "path": "0"
    },
    "5921": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3478
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5922": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3478
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5923": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3478
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5924": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3478
      ],
      "op": "OR",
      "path": "0"
    },
    "5925": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3478
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5926": {
      "fn": "Cafe.grindFlour",
      "offset": [
        3415,
        3478
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5927": {
      "fn": "Cafe.grindFlour",
      "jump": "o",
      "offset": [
        3190,
        3485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5928": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7325,
        8221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5929": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7463,
        7470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5931": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7504,
        7506
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 71,
      "value": "0xA"
    },
    "5933": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7490,
        7494
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5934": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7490,
        7501
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5935": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7490,
        7506
      ],
      "op": "GT",
      "path": "0"
    },
    "5936": {
      "branch": 216,
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7490,
        7506
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5937": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7482,
        7550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x178C"
    },
    "5940": {
      "branch": 216,
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7482,
        7550
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5941": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7482,
        7550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5943": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7482,
        7550
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5944": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5950": {
      "op": "SHL"
    },
    "5951": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7482,
        7550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5952": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7482,
        7550
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5955": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7482,
        7550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5957": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7482,
        7550
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5958": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7482,
        7550
      ],
      "op": "ADD",
      "path": "0"
    },
    "5959": {
      "op": "MSTORE"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5964": {
      "op": "DUP3"
    },
    "5965": {
      "op": "ADD"
    },
    "5966": {
      "op": "MSTORE"
    },
    "5967": {
      "op": "PUSH32",
      "value": "0x596F752063616E206F6E6C79206861766520757020746F20313020696E677265"
    },
    "6000": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6002": {
      "op": "DUP3"
    },
    "6003": {
      "op": "ADD"
    },
    "6004": {
      "op": "MSTORE"
    },
    "6005": {
      "op": "PUSH7",
      "value": "0x6469656E747321"
    },
    "6013": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6015": {
      "op": "SHL"
    },
    "6016": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6018": {
      "op": "DUP3"
    },
    "6019": {
      "op": "ADD"
    },
    "6020": {
      "op": "MSTORE"
    },
    "6021": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6023": {
      "op": "ADD"
    },
    "6024": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7482,
        7550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "6027": {
      "op": "JUMP"
    },
    "6028": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7482,
        7550
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6029": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6031": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6032": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6033": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "6035": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6036": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "ADD",
      "path": "0"
    },
    "6037": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6038": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6039": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6040": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6041": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6042": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6044": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6045": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "ADD",
      "path": "0"
    },
    "6046": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6047": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6048": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6049": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6050": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6051": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "ADD",
      "path": "0"
    },
    "6052": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6053": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6054": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6055": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7615,
        7625
      ],
      "op": "CALLER",
      "path": "0"
    },
    "6056": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "6058": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6059": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "ADD",
      "path": "0"
    },
    "6060": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6061": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7560,
        7580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6063": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "6065": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6066": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "ADD",
      "path": "0"
    },
    "6067": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6068": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6069": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6070": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "6072": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6073": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "ADD",
      "path": "0"
    },
    "6074": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6075": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6076": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6077": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "6079": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6080": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "ADD",
      "path": "0"
    },
    "6081": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6082": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7642,
        7674
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 72,
      "value": "0x17CB"
    },
    "6085": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7583,
        7632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6086": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7661,
        7673
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6087": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7642,
        7653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21BD"
    },
    "6090": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "i",
      "offset": [
        7642,
        7674
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6091": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7642,
        7674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6092": {
      "op": "POP"
    },
    "6093": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7708,
        7720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6095": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7708,
        7720
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6096": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7708,
        7720
      ],
      "op": "ADD",
      "path": "0"
    },
    "6097": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7708,
        7720
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6098": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7685,
        7705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6100": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7685,
        7705
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6101": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7752,
        7822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6102": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7767,
        7771
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6103": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7767,
        7778
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6104": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7765,
        7766
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6105": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7765,
        7778
      ],
      "op": "LT",
      "path": "0"
    },
    "6106": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7752,
        7822
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6107": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7752,
        7822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1825"
    },
    "6110": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7752,
        7822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6111": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7808
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 73
    },
    "6112": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7809,
        7810
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6113": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6114": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6115": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6116": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "LT",
      "path": "0"
    },
    "6117": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17FE"
    },
    "6120": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6121": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6128": {
      "op": "SHL"
    },
    "6129": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6131": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6132": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "6134": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6136": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6137": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "6139": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6141": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6142": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6143": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6145": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "MUL",
      "path": "0"
    },
    "6146": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6148": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "ADD",
      "path": "0"
    },
    "6149": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "ADD",
      "path": "0"
    },
    "6150": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7804,
        7811
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6151": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7797,
        7811
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6152": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7797,
        7811
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1811"
    },
    "6155": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7797,
        7811
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6156": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7797,
        7811
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6157": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7797,
        7811
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E4E"
    },
    "6160": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "i",
      "offset": [
        7797,
        7811
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6161": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7797,
        7811
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6162": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7797,
        7811
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6163": {
      "op": "POP"
    },
    "6164": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7779,
        7782
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 74
    },
    "6165": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7779,
        7782
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181D"
    },
    "6168": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7779,
        7782
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6169": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7779,
        7782
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F39"
    },
    "6172": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "i",
      "offset": [
        7779,
        7782
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6173": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7779,
        7782
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6174": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7779,
        7782
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6175": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7779,
        7782
      ],
      "op": "POP",
      "path": "0"
    },
    "6176": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7779,
        7782
      ],
      "op": "POP",
      "path": "0"
    },
    "6177": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7752,
        7822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17D5"
    },
    "6180": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7752,
        7822
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6181": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7752,
        7822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6182": {
      "op": "POP"
    },
    "6183": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7831,
        7852
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 75,
      "value": "0xFFFFFFFF"
    },
    "6188": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7831,
        7852
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6189": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7831,
        7852
      ],
      "op": "AND",
      "path": "0"
    },
    "6190": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7831,
        7844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "6192": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7831,
        7844
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6193": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7831,
        7844
      ],
      "op": "ADD",
      "path": "0"
    },
    "6194": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7831,
        7852
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6195": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7863,
        7881
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 76,
      "value": "0x80"
    },
    "6197": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7863,
        7881
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6198": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7863,
        7881
      ],
      "op": "ADD",
      "path": "0"
    },
    "6199": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6200": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7863,
        7884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6201": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7883,
        7884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6203": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7883,
        7884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6204": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7863,
        7881
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6205": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7863,
        7884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1847"
    },
    "6208": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7863,
        7884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6209": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7883,
        7884
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6210": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7883,
        7884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6211": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7863,
        7884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "6214": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "i",
      "offset": [
        7863,
        7884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6215": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7863,
        7884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6216": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7863,
        7884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6217": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7863,
        7884
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6218": {
      "op": "POP"
    },
    "6219": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7904
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 77,
      "value": "0x36"
    },
    "6221": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7907
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6222": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7907
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6223": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7906,
        7907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6225": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7906,
        7907
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6226": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6227": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6229": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6230": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7907
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1860"
    },
    "6233": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7907
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6234": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7906,
        7907
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6235": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7906,
        7907
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6236": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7907
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "6239": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "i",
      "offset": [
        7894,
        7907
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6240": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7907
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6241": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7907
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6242": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7907
      ],
      "op": "POP",
      "path": "0"
    },
    "6243": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7907
      ],
      "op": "POP",
      "path": "0"
    },
    "6244": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7907
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6245": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7907
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6246": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7907
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6247": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7894,
        7907
      ],
      "op": "POP",
      "path": "0"
    },
    "6248": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7935,
        7936
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 78,
      "value": "0x1"
    },
    "6250": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7917,
        7933
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x37"
    },
    "6252": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7917,
        7933
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6254": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7917,
        7936
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6255": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7917,
        7936
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6256": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7917,
        7936
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6257": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7917,
        7936
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x187A"
    },
    "6260": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7917,
        7936
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6261": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7917,
        7936
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6262": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7917,
        7936
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "6265": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "i",
      "offset": [
        7917,
        7936
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6266": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7917,
        7936
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6267": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7917,
        7936
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6268": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7917,
        7936
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6269": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7917,
        7936
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6270": {
      "op": "POP"
    },
    "6271": {
      "op": "POP"
    },
    "6272": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7980,
        7996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x37"
    },
    "6274": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7980,
        7996
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6275": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7965,
        7977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6277": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7965,
        7977
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6278": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7946,
        7962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6280": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7946,
        7962
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6281": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7965,
        7996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1891"
    },
    "6284": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7965,
        7996
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6285": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7965,
        7996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "6288": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "i",
      "offset": [
        7965,
        7996
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6289": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7965,
        7996
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6290": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8017,
        8033
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 79,
      "value": "0x37"
    },
    "6292": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8017,
        8033
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6293": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6295": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6296": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6297": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6298": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "6300": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6302": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6303": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6304": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6305": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6307": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6308": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6309": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6310": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6311": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6312": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6313": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6314": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7946,
        7996
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6315": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7946,
        7996
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "6316": {
      "op": "POP"
    },
    "6317": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8037,
        8043
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6318": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8037,
        8043
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6319": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6320": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6321": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18BF"
    },
    "6324": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6325": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6326": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8034
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6327": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6328": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6329": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "ADD",
      "path": "0"
    },
    "6330": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6331": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33EA"
    },
    "6334": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "i",
      "offset": [
        8006,
        8043
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6335": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6336": {
      "op": "POP"
    },
    "6337": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6339": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6340": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6341": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "ADD",
      "path": "0"
    },
    "6342": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6343": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6345": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6346": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "ADD",
      "path": "0"
    },
    "6347": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6348": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6350": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6351": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "ADD",
      "path": "0"
    },
    "6352": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6353": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6354": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6355": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E2"
    },
    "6358": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6359": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6361": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6362": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "ADD",
      "path": "0"
    },
    "6363": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6364": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "ADD",
      "path": "0"
    },
    "6365": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6366": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x346E"
    },
    "6369": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "i",
      "offset": [
        8006,
        8043
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6370": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6371": {
      "op": "POP"
    },
    "6372": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "6374": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6375": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "ADD",
      "path": "0"
    },
    "6376": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6377": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "6379": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6380": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "ADD",
      "path": "0"
    },
    "6381": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6382": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6389": {
      "op": "SHL"
    },
    "6390": {
      "op": "SUB"
    },
    "6391": {
      "op": "NOT"
    },
    "6392": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "AND",
      "path": "0"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6399": {
      "op": "SHL"
    },
    "6400": {
      "op": "SUB"
    },
    "6401": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6402": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6403": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "AND",
      "path": "0"
    },
    "6404": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6405": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6406": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6407": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "OR",
      "path": "0"
    },
    "6408": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6409": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6410": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "6412": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6413": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "ADD",
      "path": "0"
    },
    "6414": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6415": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6417": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6418": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "ADD",
      "path": "0"
    },
    "6419": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6420": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "6422": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6423": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "ADD",
      "path": "0"
    },
    "6424": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6425": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "6427": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6428": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "ADD",
      "path": "0"
    },
    "6429": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6430": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "6432": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6433": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6434": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "ADD",
      "path": "0"
    },
    "6435": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6436": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "6438": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6439": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6440": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "ADD",
      "path": "0"
    },
    "6441": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6442": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6443": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6448": {
      "op": "NOT"
    },
    "6449": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "AND",
      "path": "0"
    },
    "6450": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "6455": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6456": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6457": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "AND",
      "path": "0"
    },
    "6458": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "OR",
      "path": "0"
    },
    "6459": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6460": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8006,
        8043
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6461": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8083,
        8099
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 80,
      "value": "0x37"
    },
    "6463": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8083,
        8099
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6464": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8067,
        8077
      ],
      "op": "CALLER",
      "path": "0"
    },
    "6465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6467": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8078
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6468": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8078
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6469": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8078
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6470": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "6472": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8078
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6474": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8078
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6475": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8078
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6477": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8078
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6478": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8078
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6479": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8100
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x195B"
    },
    "6482": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8100
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6483": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8078
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6484": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8078
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6485": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8083,
        8099
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6486": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8082
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2024"
    },
    "6489": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8100
      ],
      "op": "AND",
      "path": "0"
    },
    "6490": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "i",
      "offset": [
        8053,
        8100
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6491": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8100
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6492": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8053,
        8100
      ],
      "op": "POP",
      "path": "0"
    },
    "6493": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8110,
        8146
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 81,
      "value": "0x1967"
    },
    "6496": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8129,
        8145
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x37"
    },
    "6498": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8129,
        8145
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6499": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8110,
        8128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A5"
    },
    "6502": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "i",
      "offset": [
        8110,
        8146
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6503": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8110,
        8146
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6504": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8187
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 82,
      "value": "0x1983"
    },
    "6507": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8162,
        8172
      ],
      "op": "CALLER",
      "path": "0"
    },
    "6508": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8173,
        8181
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6509": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8182,
        8183
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6511": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6513": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8187
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6514": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8187
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6515": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6517": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8187
      ],
      "op": "ADD",
      "path": "0"
    },
    "6518": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6520": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8187
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6521": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8187
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6522": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6524": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6525": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8187
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6526": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8187
      ],
      "op": "POP",
      "path": "0"
    },
    "6527": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EFE"
    },
    "6530": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "i",
      "offset": [
        8156,
        8187
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6531": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8156,
        8187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6532": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        8204,
        8212
      ],
      "op": "SWAP9",
      "path": "0",
      "statement": 83
    },
    "6533": {
      "fn": "Cafe.publishNewRecipe",
      "offset": [
        7325,
        8221
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "6534": {
      "op": "POP"
    },
    "6535": {
      "op": "POP"
    },
    "6536": {
      "op": "POP"
    },
    "6537": {
      "op": "POP"
    },
    "6538": {
      "op": "POP"
    },
    "6539": {
      "op": "POP"
    },
    "6540": {
      "op": "POP"
    },
    "6541": {
      "op": "POP"
    },
    "6542": {
      "fn": "Cafe.publishNewRecipe",
      "jump": "o",
      "offset": [
        7325,
        8221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6543": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9397,
        10034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6544": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9468,
        9472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6546": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9492,
        9523
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 84,
      "value": "0x199B"
    },
    "6549": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9502,
        9512
      ],
      "op": "CALLER",
      "path": "0"
    },
    "6550": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9513,
        9522
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6551": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9492,
        9501
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80B"
    },
    "6554": {
      "fn": "Cafe.autoFeed",
      "jump": "i",
      "offset": [
        9492,
        9523
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6555": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9492,
        9523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6556": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9525,
        9526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6558": {
      "branch": 217,
      "fn": "Cafe.autoFeed",
      "offset": [
        9492,
        9526
      ],
      "op": "EQ",
      "path": "0"
    },
    "6559": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9484,
        9618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19BA"
    },
    "6562": {
      "branch": 217,
      "fn": "Cafe.autoFeed",
      "offset": [
        9484,
        9618
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6563": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9484,
        9618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6565": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9484,
        9618
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6566": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6570": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6572": {
      "op": "SHL"
    },
    "6573": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9484,
        9618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6574": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9484,
        9618
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6575": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9484,
        9618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6577": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9484,
        9618
      ],
      "op": "ADD",
      "path": "0"
    },
    "6578": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9484,
        9618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "6581": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9484,
        9618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6582": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9484,
        9618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C75"
    },
    "6585": {
      "fn": "Cafe.autoFeed",
      "jump": "i",
      "offset": [
        9484,
        9618
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6586": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9484,
        9618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6587": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9628,
        9640
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6589": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9656,
        9664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "6591": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9656,
        9664
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6592": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9643,
        9655
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6593": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9643,
        9664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19CA"
    },
    "6596": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9643,
        9664
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6597": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9643,
        9664
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6598": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9643,
        9664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E9B"
    },
    "6601": {
      "fn": "Cafe.autoFeed",
      "jump": "i",
      "offset": [
        9643,
        9664
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6602": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9643,
        9664
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6603": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9628,
        9664
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6604": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9628,
        9664
      ],
      "op": "POP",
      "path": "0"
    },
    "6605": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9674,
        9688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6607": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9704,
        9712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "6609": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9704,
        9712
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6610": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9691,
        9703
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6611": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9691,
        9712
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19DC"
    },
    "6614": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9691,
        9712
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6615": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9691,
        9712
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6616": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9691,
        9712
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E9B"
    },
    "6619": {
      "fn": "Cafe.autoFeed",
      "jump": "i",
      "offset": [
        9691,
        9712
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6620": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9691,
        9712
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6621": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9674,
        9712
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6622": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9674,
        9712
      ],
      "op": "POP",
      "path": "0"
    },
    "6623": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9722,
        9750
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 85,
      "value": "0x19E8"
    },
    "6626": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9733,
        9743
      ],
      "op": "CALLER",
      "path": "0"
    },
    "6627": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9745,
        9749
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6628": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9722,
        9732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EBE"
    },
    "6631": {
      "fn": "Cafe.autoFeed",
      "jump": "i",
      "offset": [
        9722,
        9750
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6632": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9722,
        9750
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6633": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9788,
        9798
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 86,
      "value": "0x8"
    },
    "6635": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9788,
        9798
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6636": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9799,
        9806
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "6638": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9799,
        9806
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6639": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6641": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6642": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9817
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6643": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6645": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6646": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9817
      ],
      "op": "ADD",
      "path": "0"
    },
    "6647": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6648": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6649": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6650": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9788,
        9798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6652": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6653": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6654": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A16"
    },
    "6657": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9817
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6658": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9777,
        9787
      ],
      "op": "CALLER",
      "path": "0"
    },
    "6659": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9777,
        9787
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6666": {
      "op": "SHL"
    },
    "6667": {
      "op": "SUB"
    },
    "6668": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9788,
        9798
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6669": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9788,
        9798
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6670": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9788,
        9798
      ],
      "op": "AND",
      "path": "0"
    },
    "6671": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9788,
        9798
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6672": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9807,
        9813
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6673": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9807,
        9813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6674": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3E"
    },
    "6677": {
      "fn": "Cafe.autoFeed",
      "jump": "i",
      "offset": [
        9760,
        9817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6678": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9760,
        9817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6679": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9841,
        9851
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 87
    },
    "6680": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6682": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9852
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6683": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9852
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6684": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9852
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6685": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "6687": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6689": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9852
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6690": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6692": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9852
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6693": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9852
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6694": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9857
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6695": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9857
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6696": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6698": {
      "op": "NOT"
    },
    "6699": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9857
      ],
      "op": "AND",
      "path": "0"
    },
    "6700": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9853,
        9857
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6702": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9857
      ],
      "op": "OR",
      "path": "0"
    },
    "6703": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9857
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6704": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9827,
        9857
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6705": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9944,
        9953
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 88,
      "value": "0x6"
    },
    "6707": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9944,
        9953
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6708": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9930,
        9953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A43"
    },
    "6711": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9930,
        9953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6712": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9944,
        9953
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "6717": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9944,
        9953
      ],
      "op": "AND",
      "path": "0"
    },
    "6718": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9930,
        9942
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6719": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9930,
        9953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E9B"
    },
    "6722": {
      "fn": "Cafe.autoFeed",
      "jump": "i",
      "offset": [
        9930,
        9953
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6723": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9930,
        9953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6724": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9912,
        9953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4D"
    },
    "6727": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9912,
        9953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6728": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9912,
        9927
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "6729": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9912,
        9953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "6732": {
      "fn": "Cafe.autoFeed",
      "jump": "i",
      "offset": [
        9912,
        9953
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6733": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9912,
        9953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6734": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6736": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9888
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6737": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9888
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6738": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9888
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6739": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "6741": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6743": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9888
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6744": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6746": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9888
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6747": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9888
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6748": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6749": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9954
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6750": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6755": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6757": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "6759": {
      "op": "SHL"
    },
    "6760": {
      "op": "ADD"
    },
    "6761": {
      "op": "NOT"
    },
    "6762": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9964,
        10006
      ],
      "op": "AND",
      "path": "0",
      "statement": 89
    },
    "6763": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9954
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "6768": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9954
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6769": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6770": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9954
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6771": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9954
      ],
      "op": "AND",
      "path": "0"
    },
    "6772": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9964,
        10006
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6773": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9964,
        10006
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6774": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9964,
        10006
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6775": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9964,
        10006
      ],
      "op": "OR",
      "path": "0"
    },
    "6776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "6780": {
      "op": "SHL"
    },
    "6781": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9964,
        10006
      ],
      "op": "OR",
      "path": "0"
    },
    "6782": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9964,
        10006
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6783": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9964,
        10006
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6784": {
      "op": "POP"
    },
    "6785": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6787": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9867,
        9954
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6788": {
      "op": "POP"
    },
    "6789": {
      "op": "POP"
    },
    "6790": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9397,
        10034
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6791": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9397,
        10034
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6792": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9397,
        10034
      ],
      "op": "POP",
      "path": "0"
    },
    "6793": {
      "fn": "Cafe.autoFeed",
      "offset": [
        9397,
        10034
      ],
      "op": "POP",
      "path": "0"
    },
    "6794": {
      "fn": "Cafe.autoFeed",
      "jump": "o",
      "offset": [
        9397,
        10034
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6795": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16491,
        16620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6802": {
      "op": "SHL"
    },
    "6803": {
      "op": "SUB"
    },
    "6804": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16584,
        16604
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 90
    },
    "6805": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16584,
        16604
      ],
      "op": "AND",
      "path": "0"
    },
    "6806": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16558,
        16565
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6808": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16584,
        16604
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6809": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16584,
        16604
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6810": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16584,
        16604
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6811": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16584,
        16597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "6813": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16584,
        16604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6815": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16584,
        16604
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6816": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16584,
        16604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6818": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16584,
        16604
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6819": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16584,
        16604
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6820": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16584,
        16613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F3"
    },
    "6823": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16584,
        16613
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6824": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        16584,
        16611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B3"
    },
    "6827": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "jump": "i",
      "offset": [
        16584,
        16613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6828": {
      "offset": [
        2813,
        2848
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6829": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "6831": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6832": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "6834": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6835": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "LT",
      "path": "0"
    },
    "6836": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ABC"
    },
    "6839": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6840": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6842": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6843": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6844": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6845": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "ADD",
      "path": "0"
    },
    "6846": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6847": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "offset": [
        2813,
        2848
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6848": {
      "op": "POP"
    },
    "6849": {
      "offset": [
        2813,
        2848
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6850": {
      "fn": "Cafe.getOwnerUniqueRecipes",
      "jump": "o",
      "offset": [
        2813,
        2848
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6851": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10041,
        10306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6852": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10097,
        10101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6854": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10142
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 91
    },
    "6855": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10142
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6856": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10142
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6857": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "6859": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6861": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10142
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6862": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6864": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10142
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6865": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10142
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6866": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10156
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6869": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "6871": {
      "op": "SHL"
    },
    "6872": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10156
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6873": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10156
      ],
      "op": "DIV",
      "path": "0"
    },
    "6874": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10156
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "6876": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10156
      ],
      "op": "AND",
      "path": "0"
    },
    "6877": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10163
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6878": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10163
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6879": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10159,
        10163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6881": {
      "branch": 218,
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10121,
        10163
      ],
      "op": "EQ",
      "path": "0"
    },
    "6882": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10113,
        10164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AEA"
    },
    "6885": {
      "branch": 218,
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10113,
        10164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6886": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10113,
        10164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6888": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10113,
        10164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6889": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10113,
        10164
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6890": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10113,
        10164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6891": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10236,
        10245
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 92,
      "value": "0x6"
    },
    "6893": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10236,
        10245
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6894": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10218,
        10245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AFD"
    },
    "6897": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10218,
        10245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6898": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10236,
        10245
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "6903": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10236,
        10245
      ],
      "op": "AND",
      "path": "0"
    },
    "6904": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10218,
        10233
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "6905": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10218,
        10245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "6908": {
      "fn": "Cafe.stopAutoFeed",
      "jump": "i",
      "offset": [
        10218,
        10245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6909": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10218,
        10245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6910": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6912": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10195
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6913": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10195
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6914": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10195
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6915": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "6917": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6919": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10195
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6920": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6922": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10195
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6923": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10195
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6924": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10195
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6925": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10246
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6926": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10246
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6927": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6932": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "6936": {
      "op": "SHL"
    },
    "6937": {
      "op": "ADD"
    },
    "6938": {
      "op": "NOT"
    },
    "6939": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10256,
        10299
      ],
      "op": "AND",
      "path": "0",
      "statement": 93
    },
    "6940": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10246
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "6945": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10246
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6946": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6947": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10246
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6948": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10174,
        10246
      ],
      "op": "AND",
      "path": "0"
    },
    "6949": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10256,
        10299
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6950": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10256,
        10299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6951": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10256,
        10299
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6952": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10256,
        10299
      ],
      "op": "OR",
      "path": "0"
    },
    "6953": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10256,
        10299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6954": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10256,
        10299
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6955": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10256,
        10299
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6956": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        10041,
        10306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6957": {
      "fn": "Cafe.stopAutoFeed",
      "jump": "o",
      "offset": [
        10041,
        10306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6958": {
      "offset": [
        2854,
        2888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6959": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        2854,
        2888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "6961": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        2854,
        2888
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6962": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        2854,
        2888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "6964": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        2854,
        2888
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6965": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        2854,
        2888
      ],
      "op": "LT",
      "path": "0"
    },
    "6966": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        2854,
        2888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ABC"
    },
    "6969": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        2854,
        2888
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6970": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        2854,
        2888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6972": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        2854,
        2888
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6973": {
      "fn": "Cafe.stopAutoFeed",
      "offset": [
        2854,
        2888
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6974": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6981": {
      "op": "SHL"
    },
    "6982": {
      "op": "SUB"
    },
    "6983": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4076,
        4092
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 94
    },
    "6984": {
      "branch": 251,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4076,
        4092
      ],
      "op": "AND",
      "path": "1"
    },
    "6985": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B64"
    },
    "6988": {
      "branch": 251,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6989": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6991": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6992": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6996": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6998": {
      "op": "SHL"
    },
    "6999": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7000": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7001": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7003": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "ADD",
      "path": "1"
    },
    "7004": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "7007": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7008": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CF8"
    },
    "7011": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4068,
        4134
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7012": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4068,
        4134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7019": {
      "op": "SHL"
    },
    "7020": {
      "op": "SUB"
    },
    "7021": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4165,
        4185
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 95
    },
    "7022": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4165,
        4185
      ],
      "op": "AND",
      "path": "1"
    },
    "7023": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "7024": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4165,
        4185
      ],
      "op": "EQ",
      "path": "1"
    },
    "7025": {
      "branch": 252,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4165,
        4185
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7026": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4165,
        4225
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B80"
    },
    "7029": {
      "branch": 252,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4165,
        4225
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7030": {
      "op": "POP"
    },
    "7031": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4189,
        4225
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B80"
    },
    "7034": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4206,
        4210
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7035": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "7036": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4212,
        4224
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x771"
    },
    "7039": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7040": {
      "branch": 253,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4189,
        4225
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7041": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BDE"
    },
    "7044": {
      "branch": 253,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7045": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7047": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7048": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7052": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7054": {
      "op": "SHL"
    },
    "7055": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7056": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7059": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7061": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7062": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "ADD",
      "path": "1"
    },
    "7063": {
      "op": "MSTORE"
    },
    "7064": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "7066": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7068": {
      "op": "DUP3"
    },
    "7069": {
      "op": "ADD"
    },
    "7070": {
      "op": "MSTORE"
    },
    "7071": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "7104": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7106": {
      "op": "DUP3"
    },
    "7107": {
      "op": "ADD"
    },
    "7108": {
      "op": "MSTORE"
    },
    "7109": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "7119": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "7121": {
      "op": "SHL"
    },
    "7122": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7124": {
      "op": "DUP3"
    },
    "7125": {
      "op": "ADD"
    },
    "7126": {
      "op": "MSTORE"
    },
    "7127": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7129": {
      "op": "ADD"
    },
    "7130": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "7133": {
      "op": "JUMP"
    },
    "7134": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4144,
        4292
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7135": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "7136": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4345,
        4441
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 96,
      "value": "0x1BFE"
    },
    "7139": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7140": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4376,
        4380
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7141": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4382,
        4384
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7142": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4386,
        4407
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BEE"
    },
    "7145": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4404,
        4406
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7146": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4386,
        4403
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B6B"
    },
    "7149": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4386,
        4407
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7150": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4386,
        4407
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7151": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4409,
        4434
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BF7"
    },
    "7154": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4427,
        4433
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7155": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4409,
        4426
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B6B"
    },
    "7158": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4409,
        4434
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7159": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4409,
        4434
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7160": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "7161": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "7162": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "7163": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "7164": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "POP",
      "path": "1"
    },
    "7165": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7166": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4345,
        4441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7167": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4452,
        4471
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7169": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7170": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7171": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7172": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "7174": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7176": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7177": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7178": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7179": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7181": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7182": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7183": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4487
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7190": {
      "op": "SHL"
    },
    "7191": {
      "op": "SUB"
    },
    "7192": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "DUP11",
      "path": "1"
    },
    "7193": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "AND",
      "path": "1"
    },
    "7194": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7195": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7196": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7197": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7198": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7199": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7200": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7201": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4474,
        4493
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7202": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4511,
        4532
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 97
    },
    "7203": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4511,
        4532
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7204": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4511,
        4532
      ],
      "op": "LT",
      "path": "1"
    },
    "7205": {
      "branch": 254,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4511,
        4532
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7206": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C41"
    },
    "7209": {
      "branch": 254,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7210": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7212": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7219": {
      "op": "SHL"
    },
    "7220": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7221": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7222": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7224": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "ADD",
      "path": "1"
    },
    "7225": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "7228": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7229": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D80"
    },
    "7232": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4503,
        4579
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7233": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4503,
        4579
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7234": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4611,
        4631
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 98,
      "value": "0x1C4B"
    },
    "7237": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4625,
        4631
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7238": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4611,
        4622
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7239": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4611,
        4631
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3EBA"
    },
    "7242": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4611,
        4631
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7243": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4611,
        4631
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7244": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7246": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7247": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7248": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7249": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "7251": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7253": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7254": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7255": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7256": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7258": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7259": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7260": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7267": {
      "op": "SHL"
    },
    "7268": {
      "op": "SUB"
    },
    "7269": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP13",
      "path": "1"
    },
    "7270": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7271": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "AND",
      "path": "1"
    },
    "7272": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7273": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7274": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7275": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7276": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7277": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7278": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4608
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7279": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4631
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "7280": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4631
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7281": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4631
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "7282": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4631
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7283": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4658
      ],
      "op": "DUP9",
      "path": "1",
      "statement": 99
    },
    "7284": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4658
      ],
      "op": "AND",
      "path": "1"
    },
    "7285": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4658
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7286": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4658
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7287": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4658
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7288": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4658
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7289": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4658
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7290": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7291": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7292": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4662,
        4668
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7293": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4662,
        4668
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7294": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4589,
        4602
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7295": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C89"
    },
    "7298": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7299": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4662,
        4668
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7300": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4662,
        4668
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7301": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E36"
    },
    "7304": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4641,
        4668
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7305": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7306": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7307": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7308": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4641,
        4668
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7309": {
      "op": "POP"
    },
    "7310": {
      "op": "POP"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7317": {
      "op": "SHL"
    },
    "7318": {
      "op": "SUB"
    },
    "7319": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "DUP7",
      "path": "1",
      "statement": 100
    },
    "7320": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "AND",
      "path": "1"
    },
    "7321": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4691
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7323": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7324": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7325": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7326": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7328": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7329": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7330": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7331": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7333": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7334": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4695
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7335": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4703
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CB0"
    },
    "7338": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4703
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7339": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4700,
        4702
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7340": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2024"
    },
    "7343": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4678,
        4703
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7344": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4678,
        4703
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7345": {
      "op": "POP"
    },
    "7346": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7348": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7349": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7350": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7351": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "7353": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7355": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7356": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7357": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7358": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7360": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7361": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7362": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4730
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7369": {
      "op": "SHL"
    },
    "7370": {
      "op": "SUB"
    },
    "7371": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "DUP12",
      "path": "1"
    },
    "7372": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "AND",
      "path": "1"
    },
    "7373": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7374": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7375": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7376": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7377": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7378": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7379": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7380": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4717,
        4736
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7381": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4713,
        4796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CFC"
    },
    "7384": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4713,
        4796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7391": {
      "op": "SHL"
    },
    "7392": {
      "op": "SUB"
    },
    "7393": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "DUP8",
      "path": "1",
      "statement": 101
    },
    "7394": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "AND",
      "path": "1"
    },
    "7395": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4768
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7397": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7398": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7399": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7400": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7402": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7403": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7404": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7405": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7407": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7408": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4774
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7409": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4785
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CFA"
    },
    "7412": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4785
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7413": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4782,
        4784
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7414": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2030"
    },
    "7417": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4755,
        4785
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7418": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4785
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7419": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4755,
        4785
      ],
      "op": "POP",
      "path": "1"
    },
    "7420": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4713,
        4796
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7421": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4842,
        4844
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 102
    },
    "7422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7428": {
      "op": "SHL"
    },
    "7429": {
      "op": "SUB"
    },
    "7430": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "AND",
      "path": "1"
    },
    "7431": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4836,
        4840
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7438": {
      "op": "SHL"
    },
    "7439": {
      "op": "SUB"
    },
    "7440": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "AND",
      "path": "1"
    },
    "7441": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4826,
        4834
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7448": {
      "op": "SHL"
    },
    "7449": {
      "op": "SUB"
    },
    "7450": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "AND",
      "path": "1"
    },
    "7451": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "7484": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4846,
        4848
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7485": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4850,
        4856
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7486": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7488": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7489": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D54"
    },
    "7492": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7493": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7494": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7495": {
      "op": "SWAP2"
    },
    "7496": {
      "op": "DUP3"
    },
    "7497": {
      "op": "MSTORE"
    },
    "7498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7500": {
      "op": "DUP3"
    },
    "7501": {
      "op": "ADD"
    },
    "7502": {
      "op": "MSTORE"
    },
    "7503": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7505": {
      "op": "ADD"
    },
    "7506": {
      "op": "SWAP1"
    },
    "7507": {
      "op": "JUMP"
    },
    "7508": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7509": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7511": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7512": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7513": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7514": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "SUB",
      "path": "1"
    },
    "7515": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7516": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4811,
        4857
      ],
      "op": "LOG4",
      "path": "1"
    },
    "7517": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4868,
        4936
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 103,
      "value": "0x1D6A"
    },
    "7520": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4899,
        4907
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7521": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4909,
        4913
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7522": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4915,
        4917
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7523": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4919,
        4921
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7524": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4923,
        4929
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7525": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4931,
        4935
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7526": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4868,
        4898
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BC4"
    },
    "7529": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4868,
        4936
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7530": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4868,
        4936
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7531": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "POP",
      "path": "1"
    },
    "7532": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "POP",
      "path": "1"
    },
    "7533": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "POP",
      "path": "1"
    },
    "7534": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "POP",
      "path": "1"
    },
    "7535": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "POP",
      "path": "1"
    },
    "7536": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "POP",
      "path": "1"
    },
    "7537": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3861,
        4943
      ],
      "op": "POP",
      "path": "1"
    },
    "7538": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "o",
      "offset": [
        3861,
        4943
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7539": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4354,
        4990
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7540": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4408,
        4412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7542": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4432,
        4461
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 104,
      "value": "0x1D7F"
    },
    "7545": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4442,
        4452
      ],
      "op": "CALLER",
      "path": "0"
    },
    "7546": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4453,
        4460
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7547": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4432,
        4441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80B"
    },
    "7550": {
      "fn": "Cafe.feedStarter",
      "jump": "i",
      "offset": [
        4432,
        4461
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7551": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4432,
        4461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7552": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4465,
        4466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "7554": {
      "branch": 219,
      "fn": "Cafe.feedStarter",
      "offset": [
        4432,
        4466
      ],
      "op": "EQ",
      "path": "0"
    },
    "7555": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4424,
        4559
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D9E"
    },
    "7558": {
      "branch": 219,
      "fn": "Cafe.feedStarter",
      "offset": [
        4424,
        4559
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7559": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4424,
        4559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7561": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4424,
        4559
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7562": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7566": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7568": {
      "op": "SHL"
    },
    "7569": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4424,
        4559
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7570": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4424,
        4559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7571": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4424,
        4559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7573": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4424,
        4559
      ],
      "op": "ADD",
      "path": "0"
    },
    "7574": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4424,
        4559
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "7577": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4424,
        4559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7578": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4424,
        4559
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C75"
    },
    "7581": {
      "fn": "Cafe.feedStarter",
      "jump": "i",
      "offset": [
        4424,
        4559
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7582": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4424,
        4559
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7583": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4596
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 105,
      "value": "0x0"
    },
    "7585": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4596
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7586": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4596
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7587": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4596
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7588": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4587
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "7590": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7592": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4596
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7593": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7595": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7596": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4596
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7597": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4609
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7598": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4613,
        4628
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "7599": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4609
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "7604": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7605": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4609
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7606": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4609
      ],
      "op": "AND",
      "path": "0"
    },
    "7607": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4628
      ],
      "op": "LT",
      "path": "0"
    },
    "7608": {
      "branch": 220,
      "fn": "Cafe.feedStarter",
      "offset": [
        4577,
        4628
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7609": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4569,
        4690
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E2A"
    },
    "7612": {
      "branch": 220,
      "fn": "Cafe.feedStarter",
      "offset": [
        4569,
        4690
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7613": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4569,
        4690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7615": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4569,
        4690
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7616": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7620": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7622": {
      "op": "SHL"
    },
    "7623": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4569,
        4690
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7624": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4569,
        4690
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7627": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4569,
        4690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7629": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4569,
        4690
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7630": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4569,
        4690
      ],
      "op": "ADD",
      "path": "0"
    },
    "7631": {
      "op": "MSTORE"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "7634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7636": {
      "op": "DUP3"
    },
    "7637": {
      "op": "ADD"
    },
    "7638": {
      "op": "MSTORE"
    },
    "7639": {
      "op": "PUSH32",
      "value": "0x596F757220737461727465722069732064656164212020596F752073686F756C"
    },
    "7672": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7674": {
      "op": "DUP3"
    },
    "7675": {
      "op": "ADD"
    },
    "7676": {
      "op": "MSTORE"
    },
    "7677": {
      "op": "PUSH32",
      "value": "0x6420686176652066656420697420736F6F6E6572203A28202E00000000000000"
    },
    "7710": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7712": {
      "op": "DUP3"
    },
    "7713": {
      "op": "ADD"
    },
    "7714": {
      "op": "MSTORE"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7717": {
      "op": "ADD"
    },
    "7718": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4569,
        4690
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "7721": {
      "op": "JUMP"
    },
    "7722": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4569,
        4690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7723": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4700,
        4732
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 106,
      "value": "0x1E36"
    },
    "7726": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4711,
        4721
      ],
      "op": "CALLER",
      "path": "0"
    },
    "7727": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4723,
        4731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "7729": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4723,
        4731
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7730": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4700,
        4710
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EBE"
    },
    "7733": {
      "fn": "Cafe.feedStarter",
      "jump": "i",
      "offset": [
        4700,
        4732
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7734": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4700,
        4732
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7735": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4802,
        4811
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 107,
      "value": "0x6"
    },
    "7737": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4802,
        4811
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7738": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4784,
        4811
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E49"
    },
    "7741": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4784,
        4811
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7742": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4802,
        4811
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "7747": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4802,
        4811
      ],
      "op": "AND",
      "path": "0"
    },
    "7748": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4784,
        4799
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "7749": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4784,
        4811
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "7752": {
      "fn": "Cafe.feedStarter",
      "jump": "i",
      "offset": [
        4784,
        4811
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7753": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4784,
        4811
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7754": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7756": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4761
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7757": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4761
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7758": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4761
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7759": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "7761": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7763": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4761
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7764": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7766": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4761
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7767": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4761
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7768": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7769": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7770": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "7775": {
      "op": "NOT"
    },
    "7776": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "AND",
      "path": "0"
    },
    "7777": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "7782": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7783": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7784": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7785": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "AND",
      "path": "0"
    },
    "7786": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7787": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7788": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7789": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "OR",
      "path": "0"
    },
    "7790": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7791": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7792": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7793": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4742,
        4812
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7796": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "7798": {
      "op": "SHL"
    },
    "7799": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4825,
        4858
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7800": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4825,
        4858
      ],
      "op": "DIV",
      "path": "0"
    },
    "7801": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4825,
        4858
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "7803": {
      "branch": 221,
      "fn": "Cafe.feedStarter",
      "offset": [
        4825,
        4858
      ],
      "op": "AND",
      "path": "0"
    },
    "7804": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4822,
        4924
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7805": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4822,
        4924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E8B"
    },
    "7808": {
      "branch": 221,
      "fn": "Cafe.feedStarter",
      "offset": [
        4822,
        4924
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7809": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4873,
        4892
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 108,
      "value": "0x0"
    },
    "7811": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4873,
        4892
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7812": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4873,
        4892
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7813": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4873,
        4892
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7814": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4873,
        4883
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "7816": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4873,
        4892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7818": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4873,
        4892
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7819": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4822,
        4924
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7820": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4933,
        4961
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 109,
      "value": "0x1E94"
    },
    "7823": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4953,
        4960
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7824": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4933,
        4952
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8E"
    },
    "7827": {
      "fn": "Cafe.feedStarter",
      "jump": "i",
      "offset": [
        4933,
        4961
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7828": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4933,
        4961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7829": {
      "op": "POP"
    },
    "7830": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4979,
        4983
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 110,
      "value": "0x1"
    },
    "7832": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4354,
        4990
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7833": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4354,
        4990
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7834": {
      "fn": "Cafe.feedStarter",
      "offset": [
        4354,
        4990
      ],
      "op": "POP",
      "path": "0"
    },
    "7835": {
      "fn": "Cafe.feedStarter",
      "jump": "o",
      "offset": [
        4354,
        4990
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7836": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16342,
        16486
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7843": {
      "op": "SHL"
    },
    "7844": {
      "op": "SUB"
    },
    "7845": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16449,
        16469
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 111
    },
    "7846": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16449,
        16469
      ],
      "op": "AND",
      "path": "0"
    },
    "7847": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16423,
        16430
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7849": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16449,
        16469
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7850": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16449,
        16469
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7851": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16449,
        16469
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7852": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16449,
        16462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "7854": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16449,
        16469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7856": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16449,
        16469
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7857": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16449,
        16469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7859": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16449,
        16469
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7860": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16449,
        16469
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7861": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16449,
        16479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE88"
    },
    "7864": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16449,
        16479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7865": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16473,
        16478
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7866": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "offset": [
        16449,
        16472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21A7"
    },
    "7869": {
      "fn": "Cafe.recipeOfOwnerByIndex",
      "jump": "i",
      "offset": [
        16449,
        16479
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7870": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3546,
        3741
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7871": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3657,
        3663
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 112
    },
    "7872": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3626,
        3655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ECB"
    },
    "7875": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3636,
        3646
      ],
      "op": "CALLER",
      "path": "0"
    },
    "7876": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3647,
        3654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "7878": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3647,
        3654
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7879": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3626,
        3635
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80B"
    },
    "7882": {
      "fn": "Cafe._burnFlour",
      "jump": "i",
      "offset": [
        3626,
        3655
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7883": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3626,
        3655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7884": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3626,
        3663
      ],
      "op": "LT",
      "path": "0"
    },
    "7885": {
      "branch": 222,
      "fn": "Cafe._burnFlour",
      "offset": [
        3626,
        3663
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7886": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3618,
        3664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ED6"
    },
    "7889": {
      "branch": 222,
      "fn": "Cafe._burnFlour",
      "offset": [
        3618,
        3664
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7890": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3618,
        3664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7892": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3618,
        3664
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7893": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3618,
        3664
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7894": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3618,
        3664
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7895": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3674,
        3703
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 113,
      "value": "0x1EE3"
    },
    "7898": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3680,
        3687
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7899": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3688,
        3695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "7901": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3688,
        3695
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7902": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3696,
        3702
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7903": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3674,
        3679
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x279F"
    },
    "7906": {
      "fn": "Cafe._burnFlour",
      "jump": "i",
      "offset": [
        3674,
        3703
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7907": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3674,
        3703
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7908": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3728,
        3734
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 114
    },
    "7909": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3713,
        3724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x34"
    },
    "7911": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3713,
        3724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7913": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3713,
        3734
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7914": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3713,
        3734
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7915": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3713,
        3734
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7916": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3713,
        3734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF5"
    },
    "7919": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3713,
        3734
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7920": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3713,
        3734
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7921": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3713,
        3734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EBA"
    },
    "7924": {
      "fn": "Cafe._burnFlour",
      "jump": "i",
      "offset": [
        3713,
        3734
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7925": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3713,
        3734
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7926": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3713,
        3734
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7927": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3713,
        3734
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7928": {
      "fn": "Cafe._burnFlour",
      "offset": [
        3713,
        3734
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7929": {
      "op": "POP"
    },
    "7930": {
      "op": "POP"
    },
    "7931": {
      "op": "POP"
    },
    "7932": {
      "op": "POP"
    },
    "7933": {
      "fn": "Cafe._burnFlour",
      "jump": "o",
      "offset": [
        3546,
        3741
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7934": {
      "fn": "ERC1155._mint",
      "offset": [
        7662,
        8248
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7941": {
      "op": "SHL"
    },
    "7942": {
      "op": "SUB"
    },
    "7943": {
      "fn": "ERC1155._mint",
      "offset": [
        7776,
        7797
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 115
    },
    "7944": {
      "branch": 255,
      "fn": "ERC1155._mint",
      "offset": [
        7776,
        7797
      ],
      "op": "AND",
      "path": "1"
    },
    "7945": {
      "fn": "ERC1155._mint",
      "offset": [
        7768,
        7835
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F5E"
    },
    "7948": {
      "branch": 255,
      "fn": "ERC1155._mint",
      "offset": [
        7768,
        7835
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7949": {
      "fn": "ERC1155._mint",
      "offset": [
        7768,
        7835
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7951": {
      "fn": "ERC1155._mint",
      "offset": [
        7768,
        7835
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7952": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7956": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7958": {
      "op": "SHL"
    },
    "7959": {
      "fn": "ERC1155._mint",
      "offset": [
        7768,
        7835
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7960": {
      "fn": "ERC1155._mint",
      "offset": [
        7768,
        7835
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7963": {
      "fn": "ERC1155._mint",
      "offset": [
        7768,
        7835
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7965": {
      "fn": "ERC1155._mint",
      "offset": [
        7768,
        7835
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7966": {
      "fn": "ERC1155._mint",
      "offset": [
        7768,
        7835
      ],
      "op": "ADD",
      "path": "1"
    },
    "7967": {
      "op": "MSTORE"
    },
    "7968": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7970": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7972": {
      "op": "DUP3"
    },
    "7973": {
      "op": "ADD"
    },
    "7974": {
      "op": "MSTORE"
    },
    "7975": {
      "op": "PUSH32",
      "value": "0x455243313135353A206D696E7420746F20746865207A65726F20616464726573"
    },
    "8008": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8010": {
      "op": "DUP3"
    },
    "8011": {
      "op": "ADD"
    },
    "8012": {
      "op": "MSTORE"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "8015": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8017": {
      "op": "SHL"
    },
    "8018": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8020": {
      "op": "DUP3"
    },
    "8021": {
      "op": "ADD"
    },
    "8022": {
      "op": "MSTORE"
    },
    "8023": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8025": {
      "op": "ADD"
    },
    "8026": {
      "fn": "ERC1155._mint",
      "offset": [
        7768,
        7835
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "8029": {
      "op": "JUMP"
    },
    "8030": {
      "fn": "ERC1155._mint",
      "offset": [
        7768,
        7835
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8031": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "8032": {
      "fn": "ERC1155._mint",
      "offset": [
        7888,
        7995
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 116,
      "value": "0x1F6F"
    },
    "8035": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8036": {
      "fn": "ERC1155._mint",
      "offset": [
        7846,
        7862
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8038": {
      "fn": "ERC1155._mint",
      "offset": [
        7931,
        7938
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8039": {
      "fn": "ERC1155._mint",
      "offset": [
        7940,
        7961
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BEE"
    },
    "8042": {
      "fn": "ERC1155._mint",
      "offset": [
        7958,
        7960
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8043": {
      "fn": "ERC1155._mint",
      "offset": [
        7940,
        7957
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B6B"
    },
    "8046": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        7940,
        7961
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8047": {
      "fn": "ERC1155._mint",
      "offset": [
        7888,
        7995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8048": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8019
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 117,
      "value": "0x0"
    },
    "8050": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8019
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8051": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8019
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8052": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8019
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8053": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8055": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8057": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8019
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8058": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8019
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8059": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8019
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8060": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8062": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8019
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8063": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8019
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8064": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8019
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8071": {
      "op": "SHL"
    },
    "8072": {
      "op": "SUB"
    },
    "8073": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8028
      ],
      "op": "DUP10",
      "path": "1"
    },
    "8074": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8028
      ],
      "op": "AND",
      "path": "1"
    },
    "8075": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8028
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8076": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8028
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8077": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8028
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8078": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8028
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8079": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8028
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8080": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8028
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8081": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8028
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8082": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8038
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8083": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8038
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8084": {
      "fn": "ERC1155._mint",
      "offset": [
        8032,
        8038
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8085": {
      "fn": "ERC1155._mint",
      "offset": [
        8032,
        8038
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8086": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8019
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8087": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8038
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA1"
    },
    "8090": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8038
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8091": {
      "fn": "ERC1155._mint",
      "offset": [
        8032,
        8038
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8092": {
      "fn": "ERC1155._mint",
      "offset": [
        8032,
        8038
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8093": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8038
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E36"
    },
    "8096": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8006,
        8038
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8097": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8038
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8098": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8038
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8099": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8038
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8100": {
      "fn": "ERC1155._mint",
      "offset": [
        8006,
        8038
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8101": {
      "op": "POP"
    },
    "8102": {
      "op": "POP"
    },
    "8103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8109": {
      "op": "SHL"
    },
    "8110": {
      "op": "SUB"
    },
    "8111": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8071
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 118
    },
    "8112": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8071
      ],
      "op": "AND",
      "path": "1"
    },
    "8113": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8062
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8115": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8071
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8116": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8071
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8117": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8071
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8118": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8071
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8120": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8071
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8121": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8071
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8122": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8071
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8123": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8071
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8125": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8071
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8126": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8071
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8127": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8079
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FC8"
    },
    "8130": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8079
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8131": {
      "fn": "ERC1155._mint",
      "offset": [
        8076,
        8078
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8132": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8075
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2024"
    },
    "8135": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8049,
        8079
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8136": {
      "fn": "ERC1155._mint",
      "offset": [
        8049,
        8079
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8137": {
      "op": "POP"
    },
    "8138": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 119,
      "value": "0x40"
    },
    "8140": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8141": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8142": {
      "op": "DUP6"
    },
    "8143": {
      "op": "DUP2"
    },
    "8144": {
      "op": "MSTORE"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8147": {
      "op": "DUP2"
    },
    "8148": {
      "op": "ADD"
    },
    "8149": {
      "op": "DUP6"
    },
    "8150": {
      "op": "SWAP1"
    },
    "8151": {
      "op": "MSTORE"
    },
    "8152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8158": {
      "op": "SHL"
    },
    "8159": {
      "op": "SUB"
    },
    "8160": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8161": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8162": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "AND",
      "path": "1"
    },
    "8163": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8164": {
      "fn": "ERC1155._mint",
      "offset": [
        8127,
        8128
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8166": {
      "fn": "ERC1155._mint",
      "offset": [
        8127,
        8128
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8167": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8168": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8169": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "AND",
      "path": "1"
    },
    "8170": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8171": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "8204": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8205": {
      "op": "ADD"
    },
    "8206": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8208": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8209": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8210": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8211": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "SUB",
      "path": "1"
    },
    "8212": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8213": {
      "fn": "ERC1155._mint",
      "offset": [
        8094,
        8151
      ],
      "op": "LOG4",
      "path": "1"
    },
    "8214": {
      "fn": "ERC1155._mint",
      "offset": [
        8162,
        8241
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 120,
      "value": "0x1BF7"
    },
    "8217": {
      "fn": "ERC1155._mint",
      "offset": [
        8193,
        8201
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8218": {
      "fn": "ERC1155._mint",
      "offset": [
        8211,
        8212
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8220": {
      "fn": "ERC1155._mint",
      "offset": [
        8215,
        8222
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8221": {
      "fn": "ERC1155._mint",
      "offset": [
        8224,
        8226
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8222": {
      "fn": "ERC1155._mint",
      "offset": [
        8228,
        8234
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8223": {
      "fn": "ERC1155._mint",
      "offset": [
        8236,
        8240
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8224": {
      "fn": "ERC1155._mint",
      "offset": [
        8162,
        8192
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BC4"
    },
    "8227": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8162,
        8241
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8228": {
      "fn": "EnumerableSet.add",
      "offset": [
        8069,
        8198
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8229": {
      "fn": "EnumerableSet.add",
      "offset": [
        8136,
        8140
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "8231": {
      "fn": "EnumerableSet.add",
      "offset": [
        8159,
        8191
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 121,
      "value": "0xE88"
    },
    "8234": {
      "fn": "EnumerableSet.add",
      "offset": [
        8164,
        8167
      ],
      "op": "DUP4",
      "path": "9"
    },
    "8235": {
      "fn": "EnumerableSet.add",
      "offset": [
        8184,
        8189
      ],
      "op": "DUP4",
      "path": "9"
    },
    "8236": {
      "fn": "EnumerableSet.add",
      "offset": [
        8159,
        8163
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x301D"
    },
    "8239": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        8159,
        8191
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8240": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8366,
        8501
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8241": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8436,
        8440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "8243": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8459,
        8494
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 122,
      "value": "0xE88"
    },
    "8246": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8467,
        8470
      ],
      "op": "DUP4",
      "path": "9"
    },
    "8247": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8487,
        8492
      ],
      "op": "DUP4",
      "path": "9"
    },
    "8248": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8459,
        8466
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x306C"
    },
    "8251": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        8459,
        8494
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8252": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13372,
        14150
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8259": {
      "op": "SHL"
    },
    "8260": {
      "op": "SUB"
    },
    "8261": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13616,
        13629
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8262": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13616,
        13629
      ],
      "op": "AND",
      "path": "1"
    },
    "8263": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "8264": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "5",
      "statement": 123
    },
    "8265": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13612,
        14144
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE5E"
    },
    "8268": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13612,
        14144
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8269": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8271": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8272": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "8277": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8279": {
      "op": "SHL"
    },
    "8280": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8281": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8288": {
      "op": "SHL"
    },
    "8289": {
      "op": "SUB"
    },
    "8290": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13694
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8291": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13694
      ],
      "op": "AND",
      "path": "1"
    },
    "8292": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13694
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8293": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13694
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBC197C81"
    },
    "8298": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13694
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8299": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2080"
    },
    "8302": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8303": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13695,
        13703
      ],
      "op": "DUP10",
      "path": "1"
    },
    "8304": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13695,
        13703
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8305": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13705,
        13709
      ],
      "op": "DUP10",
      "path": "1"
    },
    "8306": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13705,
        13709
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8307": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13711,
        13714
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8308": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13711,
        13714
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8309": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13716,
        13723
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8310": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13716,
        13723
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8311": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13725,
        13729
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8312": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13725,
        13729
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8313": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8315": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "ADD",
      "path": "1"
    },
    "8316": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3AFE"
    },
    "8319": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8320": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8321": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8323": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8325": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8326": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8327": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8328": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SUB",
      "path": "1"
    },
    "8329": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8330": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8332": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8333": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8334": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "8335": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8336": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8337": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8338": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x209A"
    },
    "8341": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8342": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8344": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8345": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8346": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8347": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "POP",
      "path": "1"
    },
    "8348": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "GAS",
      "path": "1"
    },
    "8349": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "CALL",
      "path": "1"
    },
    "8350": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8351": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "POP",
      "path": "1"
    },
    "8352": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "POP",
      "path": "1"
    },
    "8353": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "POP",
      "path": "1"
    },
    "8354": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8355": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8356": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20CA"
    },
    "8359": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8360": {
      "op": "POP"
    },
    "8361": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8363": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8364": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8365": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8367": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8368": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8369": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8370": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "ADD",
      "path": "1"
    },
    "8371": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8373": {
      "op": "NOT"
    },
    "8374": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "AND",
      "path": "1"
    },
    "8375": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8376": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "ADD",
      "path": "1"
    },
    "8377": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8378": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8379": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8380": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20C7"
    },
    "8383": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8384": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8385": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "ADD",
      "path": "1"
    },
    "8386": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8387": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38D0"
    },
    "8390": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8391": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8392": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8394": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13651,
        13730
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8395": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2177"
    },
    "8398": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8399": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20D6"
    },
    "8402": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F80"
    },
    "8405": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8406": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8407": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8408": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8C379A0"
    },
    "8413": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "EQ",
      "path": "1"
    },
    "8414": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8415": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2110"
    },
    "8418": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8419": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "POP",
      "path": "1"
    },
    "8420": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20EB"
    },
    "8423": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F97"
    },
    "8426": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8427": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8428": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8429": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20F6"
    },
    "8432": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8433": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "POP",
      "path": "1"
    },
    "8434": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2112"
    },
    "8437": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8438": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8439": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14010,
        14016
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 124
    },
    "8440": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8442": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8449": {
      "op": "SHL"
    },
    "8450": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8451": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8452": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8454": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "ADD",
      "path": "1"
    },
    "8455": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "8458": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8459": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8460": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14003,
        14017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3BD6"
    },
    "8463": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14003,
        14017
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8464": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8465": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "POP",
      "path": "1"
    },
    "8466": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8467": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 125,
      "value": "0x40"
    },
    "8469": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8470": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8474": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8476": {
      "op": "SHL"
    },
    "8477": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8478": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8481": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8483": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8484": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "ADD",
      "path": "1"
    },
    "8485": {
      "op": "MSTORE"
    },
    "8486": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "8488": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8490": {
      "op": "DUP3"
    },
    "8491": {
      "op": "ADD"
    },
    "8492": {
      "op": "MSTORE"
    },
    "8493": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "8526": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8528": {
      "op": "DUP3"
    },
    "8529": {
      "op": "ADD"
    },
    "8530": {
      "op": "MSTORE"
    },
    "8531": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "8554": {
      "op": "SHL"
    },
    "8555": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8557": {
      "op": "DUP3"
    },
    "8558": {
      "op": "ADD"
    },
    "8559": {
      "op": "MSTORE"
    },
    "8560": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8562": {
      "op": "ADD"
    },
    "8563": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14057,
        14119
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "8566": {
      "op": "JUMP"
    },
    "8567": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        14134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8572": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8574": {
      "op": "SHL"
    },
    "8575": {
      "op": "SUB"
    },
    "8576": {
      "op": "NOT"
    },
    "8577": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13779,
        13843
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8578": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13779,
        13843
      ],
      "op": "AND",
      "path": "1"
    },
    "8579": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "8584": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8586": {
      "op": "SHL"
    },
    "8587": {
      "branch": 256,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13779,
        13843
      ],
      "op": "EQ",
      "path": "1"
    },
    "8588": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13775,
        13936
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D6A"
    },
    "8591": {
      "branch": 256,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13775,
        13936
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8592": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 126,
      "value": "0x40"
    },
    "8594": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8595": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8599": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8601": {
      "op": "SHL"
    },
    "8602": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8603": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8604": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8606": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8607": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "8610": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8611": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13867,
        13917
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3BE9"
    },
    "8614": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13867,
        13917
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8615": {
      "fn": "EnumerableSet.at",
      "offset": [
        9251,
        9386
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8616": {
      "fn": "EnumerableSet.at",
      "offset": [
        9322,
        9329
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "8618": {
      "fn": "EnumerableSet.at",
      "offset": [
        9356,
        9378
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 127,
      "value": "0xE88"
    },
    "8621": {
      "fn": "EnumerableSet.at",
      "offset": [
        9360,
        9363
      ],
      "op": "DUP4",
      "path": "9"
    },
    "8622": {
      "fn": "EnumerableSet.at",
      "offset": [
        9372,
        9377
      ],
      "op": "DUP4",
      "path": "9"
    },
    "8623": {
      "fn": "EnumerableSet.at",
      "offset": [
        9356,
        9359
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3183"
    },
    "8626": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        9356,
        9378
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8627": {
      "fn": "EnumerableSet.length",
      "offset": [
        8807,
        8919
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8628": {
      "fn": "EnumerableSet.length",
      "offset": [
        8867,
        8874
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "8630": {
      "fn": "EnumerableSet.length",
      "offset": [
        8893,
        8912
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 128,
      "value": "0x8F3"
    },
    "8633": {
      "fn": "EnumerableSet.length",
      "offset": [
        8901,
        8904
      ],
      "op": "DUP3",
      "path": "9"
    },
    "8634": {
      "fn": "EnumerableSet._length",
      "offset": [
        4096,
        4114
      ],
      "op": "SLOAD",
      "path": "9",
      "statement": 129
    },
    "8635": {
      "fn": "EnumerableSet._length",
      "offset": [
        4096,
        4114
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8636": {
      "fn": "EnumerableSet._length",
      "offset": [
        4014,
        4121
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8637": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6051,
        7255
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8638": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6143,
        6147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8640": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6200,
        6206
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 130
    },
    "8641": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6200,
        6221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8643": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6200,
        6221
      ],
      "op": "ADD",
      "path": "0"
    },
    "8644": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6200,
        6221
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8645": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6167,
        6197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D0"
    },
    "8648": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6177,
        6187
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8649": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6189,
        6196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "8651": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6189,
        6196
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8652": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6167,
        6176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80B"
    },
    "8655": {
      "fn": "Cafe._bakeRecipe",
      "jump": "i",
      "offset": [
        6167,
        6197
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8656": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6167,
        6197
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8657": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6167,
        6221
      ],
      "op": "LT",
      "path": "0"
    },
    "8658": {
      "branch": 223,
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6167,
        6221
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8659": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6159,
        6267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2231"
    },
    "8662": {
      "branch": 223,
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6159,
        6267
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8663": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6159,
        6267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8665": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6159,
        6267
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8666": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8670": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8672": {
      "op": "SHL"
    },
    "8673": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6159,
        6267
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8674": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6159,
        6267
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8677": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6159,
        6267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8679": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6159,
        6267
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8680": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6159,
        6267
      ],
      "op": "ADD",
      "path": "0"
    },
    "8681": {
      "op": "MSTORE"
    },
    "8682": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "8684": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8686": {
      "op": "DUP3"
    },
    "8687": {
      "op": "ADD"
    },
    "8688": {
      "op": "MSTORE"
    },
    "8689": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520656E6F75676820464C4F555220746F2062"
    },
    "8722": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8724": {
      "op": "DUP3"
    },
    "8725": {
      "op": "ADD"
    },
    "8726": {
      "op": "MSTORE"
    },
    "8727": {
      "op": "PUSH10",
      "value": "0x616B6520746861742121"
    },
    "8738": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8740": {
      "op": "SHL"
    },
    "8741": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8743": {
      "op": "DUP3"
    },
    "8744": {
      "op": "ADD"
    },
    "8745": {
      "op": "MSTORE"
    },
    "8746": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8748": {
      "op": "ADD"
    },
    "8749": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6159,
        6267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "8752": {
      "op": "JUMP"
    },
    "8753": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6159,
        6267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8754": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6291,
        6303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8756": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6291,
        6303
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8757": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6291,
        6303
      ],
      "op": "ADD",
      "path": "0"
    },
    "8758": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6291,
        6303
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8759": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6291,
        6310
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8760": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6277,
        6288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8762": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6291,
        6310
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8763": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8772": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8773": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "GT",
      "path": "0"
    },
    "8774": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8775": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2260"
    },
    "8778": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8779": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8784": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8786": {
      "op": "SHL"
    },
    "8787": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8789": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8790": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x41"
    },
    "8792": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8794": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8795": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "8797": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8799": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8800": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8801": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8803": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8804": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8805": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8806": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8807": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8808": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8809": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8811": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "MUL",
      "path": "0"
    },
    "8812": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8814": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "ADD",
      "path": "0"
    },
    "8815": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8816": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "ADD",
      "path": "0"
    },
    "8817": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8819": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8820": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8821": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8822": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2289"
    },
    "8825": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8826": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8827": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8829": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "ADD",
      "path": "0"
    },
    "8830": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8832": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8833": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "MUL",
      "path": "0"
    },
    "8834": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8835": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8836": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8837": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "8838": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "ADD",
      "path": "0"
    },
    "8839": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8840": {
      "op": "POP"
    },
    "8841": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8842": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6344,
        6362
      ],
      "op": "POP",
      "path": "0"
    },
    "8843": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6320,
        6362
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8844": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6320,
        6362
      ],
      "op": "POP",
      "path": "0"
    },
    "8845": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6403,
        6415
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 131
    },
    "8846": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6403,
        6422
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8847": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6380,
        6386
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8848": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6380,
        6392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8850": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6380,
        6392
      ],
      "op": "ADD",
      "path": "0"
    },
    "8851": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6380,
        6392
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8852": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6380,
        6399
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8853": {
      "branch": 224,
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6380,
        6422
      ],
      "op": "EQ",
      "path": "0"
    },
    "8854": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6372,
        6486
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2307"
    },
    "8857": {
      "branch": 224,
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6372,
        6486
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8858": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6372,
        6486
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8860": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6372,
        6486
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8867": {
      "op": "SHL"
    },
    "8868": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6372,
        6486
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8869": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6372,
        6486
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8872": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6372,
        6486
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8874": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6372,
        6486
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8875": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6372,
        6486
      ],
      "op": "ADD",
      "path": "0"
    },
    "8876": {
      "op": "MSTORE"
    },
    "8877": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "8879": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8881": {
      "op": "DUP3"
    },
    "8882": {
      "op": "ADD"
    },
    "8883": {
      "op": "MSTORE"
    },
    "8884": {
      "op": "PUSH32",
      "value": "0x596F7520686176656E277420616464656420746865207269676874206E756D62"
    },
    "8917": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8919": {
      "op": "DUP3"
    },
    "8920": {
      "op": "ADD"
    },
    "8921": {
      "op": "MSTORE"
    },
    "8922": {
      "op": "PUSH32",
      "value": "0x6572206F6620737461727465727320746F207468652062617463682100000000"
    },
    "8955": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8957": {
      "op": "DUP3"
    },
    "8958": {
      "op": "ADD"
    },
    "8959": {
      "op": "MSTORE"
    },
    "8960": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8962": {
      "op": "ADD"
    },
    "8963": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6372,
        6486
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "8966": {
      "op": "JUMP"
    },
    "8967": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6372,
        6486
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8968": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6500,
        6506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8970": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6496,
        7118
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8971": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6511,
        6517
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8972": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6511,
        6523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8974": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6511,
        6523
      ],
      "op": "ADD",
      "path": "0"
    },
    "8975": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6511,
        6523
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8976": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6511,
        6530
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8977": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6509,
        6510
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8978": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6509,
        6530
      ],
      "op": "LT",
      "path": "0"
    },
    "8979": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6496,
        7118
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8980": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6496,
        7118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2580"
    },
    "8983": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6496,
        7118
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8984": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6549,
        6566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8986": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "8988": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6619
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8990": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6615
      ],
      "op": "DUP8",
      "path": "0"
    },
    "8991": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6616,
        6617
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8992": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8993": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8994": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8995": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "LT",
      "path": "0"
    },
    "8996": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x233D"
    },
    "8999": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9000": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9005": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9007": {
      "op": "SHL"
    },
    "9008": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9010": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9011": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "9013": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9015": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9016": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "9018": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9020": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9021": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9022": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9024": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9025": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9026": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "MUL",
      "path": "0"
    },
    "9027": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9028": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9029": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9030": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "ADD",
      "path": "0"
    },
    "9031": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9032": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "ADD",
      "path": "0"
    },
    "9033": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6603,
        6618
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9034": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6619
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9035": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6619
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9036": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6619
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9037": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6619
      ],
      "op": "ADD",
      "path": "0"
    },
    "9038": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6619
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9039": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6619
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9040": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6619
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9041": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6619
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9042": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6619
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9044": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6619
      ],
      "op": "ADD",
      "path": "0"
    },
    "9045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9047": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6619
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9048": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6633
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9049": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6576,
        6633
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x236F"
    },
    "9052": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6576,
        6633
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9055": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "9057": {
      "op": "SHL"
    },
    "9058": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6633
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9059": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6633
      ],
      "op": "DIV",
      "path": "0"
    },
    "9060": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6633
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "9065": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6592,
        6633
      ],
      "op": "AND",
      "path": "0"
    },
    "9066": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6576,
        6591
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "9067": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6576,
        6633
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EBA"
    },
    "9070": {
      "fn": "Cafe._bakeRecipe",
      "jump": "i",
      "offset": [
        6576,
        6633
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9071": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6576,
        6633
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9072": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6549,
        6634
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9073": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6549,
        6634
      ],
      "op": "POP",
      "path": "0"
    },
    "9074": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6675
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 132
    },
    "9075": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9077": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6681
      ],
      "op": "ADD",
      "path": "0"
    },
    "9078": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6681
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9079": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6682,
        6683
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9080": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9081": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9082": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9083": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "LT",
      "path": "0"
    },
    "9084": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2395"
    },
    "9087": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9088": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9093": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9095": {
      "op": "SHL"
    },
    "9096": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9098": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9099": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "9101": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9103": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9104": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "9106": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9108": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9109": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9110": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9112": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "MUL",
      "path": "0"
    },
    "9113": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9115": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "ADD",
      "path": "0"
    },
    "9116": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "ADD",
      "path": "0"
    },
    "9117": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6669,
        6684
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9118": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6656,
        6684
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "9123": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6656,
        6684
      ],
      "op": "AND",
      "path": "0"
    },
    "9124": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6656,
        6666
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9125": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6656,
        6684
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "9130": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6656,
        6684
      ],
      "op": "AND",
      "path": "0"
    },
    "9131": {
      "branch": 225,
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6656,
        6684
      ],
      "op": "GT",
      "path": "0"
    },
    "9132": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6648,
        6770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2437"
    },
    "9135": {
      "branch": 225,
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6648,
        6770
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9136": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6648,
        6770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9138": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6648,
        6770
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9139": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9143": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9145": {
      "op": "SHL"
    },
    "9146": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6648,
        6770
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9147": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6648,
        6770
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9150": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6648,
        6770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9152": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6648,
        6770
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9153": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6648,
        6770
      ],
      "op": "ADD",
      "path": "0"
    },
    "9154": {
      "op": "MSTORE"
    },
    "9155": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9159": {
      "op": "DUP3"
    },
    "9160": {
      "op": "ADD"
    },
    "9161": {
      "op": "MSTORE"
    },
    "9162": {
      "op": "PUSH32",
      "value": "0x596F757220737461727465727320617265206E6F74206F6C6420656E6F756768"
    },
    "9195": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9197": {
      "op": "DUP3"
    },
    "9198": {
      "op": "ADD"
    },
    "9199": {
      "op": "MSTORE"
    },
    "9200": {
      "op": "PUSH32",
      "value": "0x2C20706C65617365207573652074686520737461727465727320726571756972"
    },
    "9233": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9235": {
      "op": "DUP3"
    },
    "9236": {
      "op": "ADD"
    },
    "9237": {
      "op": "MSTORE"
    },
    "9238": {
      "op": "PUSH17",
      "value": "0x6564206279207468697320726563697065"
    },
    "9256": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "9258": {
      "op": "SHL"
    },
    "9259": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9261": {
      "op": "DUP3"
    },
    "9262": {
      "op": "ADD"
    },
    "9263": {
      "op": "MSTORE"
    },
    "9264": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "9266": {
      "op": "ADD"
    },
    "9267": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6648,
        6770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "9270": {
      "op": "JUMP"
    },
    "9271": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6648,
        6770
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9272": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6838,
        6853
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 133
    },
    "9273": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "9275": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6821
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9277": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6817
      ],
      "op": "DUP9",
      "path": "0"
    },
    "9278": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6818,
        6819
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9279": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9280": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9281": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9282": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "LT",
      "path": "0"
    },
    "9283": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245C"
    },
    "9286": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9287": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9292": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9294": {
      "op": "SHL"
    },
    "9295": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9297": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9298": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "9300": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9302": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9303": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "9305": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9307": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9308": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9309": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9311": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9312": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9313": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "MUL",
      "path": "0"
    },
    "9314": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9315": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9316": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9317": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "ADD",
      "path": "0"
    },
    "9318": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9319": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "ADD",
      "path": "0"
    },
    "9320": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6805,
        6820
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9321": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6821
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9322": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6821
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9323": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6821
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9324": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6821
      ],
      "op": "ADD",
      "path": "0"
    },
    "9325": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6821
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9326": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6821
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9327": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6821
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9328": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6821
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9329": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6821
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9331": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6821
      ],
      "op": "ADD",
      "path": "0"
    },
    "9332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9334": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6821
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9335": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6834
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9336": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6834
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "9341": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6834
      ],
      "op": "AND",
      "path": "0"
    },
    "9342": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6853
      ],
      "op": "LT",
      "path": "0"
    },
    "9343": {
      "branch": 226,
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6794,
        6853
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9344": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6786,
        6925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24FD"
    },
    "9347": {
      "branch": 226,
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6786,
        6925
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9348": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6786,
        6925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9350": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6786,
        6925
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9351": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9355": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9357": {
      "op": "SHL"
    },
    "9358": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6786,
        6925
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9359": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6786,
        6925
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9362": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6786,
        6925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9364": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6786,
        6925
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9365": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6786,
        6925
      ],
      "op": "ADD",
      "path": "0"
    },
    "9366": {
      "op": "MSTORE"
    },
    "9367": {
      "op": "PUSH1",
      "value": "0x43"
    },
    "9369": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9371": {
      "op": "DUP3"
    },
    "9372": {
      "op": "ADD"
    },
    "9373": {
      "op": "MSTORE"
    },
    "9374": {
      "op": "PUSH32",
      "value": "0x596F757220737461727465727320617265206E6F7420616C6C20616C6976652C"
    },
    "9407": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9409": {
      "op": "DUP3"
    },
    "9410": {
      "op": "ADD"
    },
    "9411": {
      "op": "MSTORE"
    },
    "9412": {
      "op": "PUSH32",
      "value": "0x20796F75206D757374207573652061206C6976696E6720696E6772656469656E"
    },
    "9445": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9447": {
      "op": "DUP3"
    },
    "9448": {
      "op": "ADD"
    },
    "9449": {
      "op": "MSTORE"
    },
    "9450": {
      "op": "PUSH3",
      "value": "0x742121"
    },
    "9454": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "9456": {
      "op": "SHL"
    },
    "9457": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9459": {
      "op": "DUP3"
    },
    "9460": {
      "op": "ADD"
    },
    "9461": {
      "op": "MSTORE"
    },
    "9462": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "9464": {
      "op": "ADD"
    },
    "9465": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6786,
        6925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "9468": {
      "op": "JUMP"
    },
    "9469": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6786,
        6925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9470": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6947,
        6984
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 134,
      "value": "0x2521"
    },
    "9473": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6957,
        6967
      ],
      "op": "CALLER",
      "path": "0"
    },
    "9474": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6980
      ],
      "op": "DUP8",
      "path": "0"
    },
    "9475": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6981,
        6982
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9476": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6983
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9477": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6983
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9478": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6983
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9479": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6983
      ],
      "op": "LT",
      "path": "0"
    },
    "9480": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6983
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1051"
    },
    "9483": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6983
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9484": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9489": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9491": {
      "op": "SHL"
    },
    "9492": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9494": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6983
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9495": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "9497": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9499": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6983
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9500": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "9502": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9504": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6968,
        6983
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9505": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6947,
        6984
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9506": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6986,
        6987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "9508": {
      "branch": 227,
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6947,
        6987
      ],
      "op": "EQ",
      "path": "0"
    },
    "9509": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6939,
        7079
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2540"
    },
    "9512": {
      "branch": 227,
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6939,
        7079
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9513": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6939,
        7079
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9515": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6939,
        7079
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9522": {
      "op": "SHL"
    },
    "9523": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6939,
        7079
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9524": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6939,
        7079
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9525": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6939,
        7079
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9527": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6939,
        7079
      ],
      "op": "ADD",
      "path": "0"
    },
    "9528": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6939,
        7079
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "9531": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6939,
        7079
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9532": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6939,
        7079
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C75"
    },
    "9535": {
      "fn": "Cafe._bakeRecipe",
      "jump": "i",
      "offset": [
        6939,
        7079
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9536": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6939,
        7079
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9537": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7106,
        7107
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 135,
      "value": "0x1"
    },
    "9539": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7100
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9540": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7101,
        7102
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9541": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9542": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9543": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9544": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "LT",
      "path": "0"
    },
    "9545": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2562"
    },
    "9548": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9549": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9554": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9556": {
      "op": "SHL"
    },
    "9557": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9559": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9560": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "9562": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9564": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9565": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "9567": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9569": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9570": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9571": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9573": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9574": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9575": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "MUL",
      "path": "0"
    },
    "9576": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9577": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9578": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9579": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "ADD",
      "path": "0"
    },
    "9580": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7103
      ],
      "op": "ADD",
      "path": "0"
    },
    "9581": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7093,
        7107
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9582": {
      "op": "POP"
    },
    "9583": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6531,
        6534
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 136
    },
    "9584": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6531,
        6534
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2578"
    },
    "9587": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6531,
        6534
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9588": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6531,
        6534
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F39"
    },
    "9591": {
      "fn": "Cafe._bakeRecipe",
      "jump": "i",
      "offset": [
        6531,
        6534
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9592": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6531,
        6534
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9593": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6531,
        6534
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9594": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6531,
        6534
      ],
      "op": "POP",
      "path": "0"
    },
    "9595": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6531,
        6534
      ],
      "op": "POP",
      "path": "0"
    },
    "9596": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6496,
        7118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230A"
    },
    "9599": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6496,
        7118
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9600": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6496,
        7118
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9601": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6496,
        7118
      ],
      "op": "POP",
      "path": "0"
    },
    "9602": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7127,
        7172
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 137,
      "value": "0x258C"
    },
    "9605": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7138,
        7148
      ],
      "op": "CALLER",
      "path": "0"
    },
    "9606": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7150,
        7162
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9607": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7164,
        7171
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9608": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7127,
        7137
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3217"
    },
    "9611": {
      "fn": "Cafe._bakeRecipe",
      "jump": "i",
      "offset": [
        7127,
        7172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9612": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7127,
        7172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9613": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7183,
        7227
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 138,
      "value": "0x259A"
    },
    "9616": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7194,
        7204
      ],
      "op": "CALLER",
      "path": "0"
    },
    "9617": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7205,
        7211
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9618": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7205,
        7226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9620": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7205,
        7226
      ],
      "op": "ADD",
      "path": "0"
    },
    "9621": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7205,
        7226
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9622": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7183,
        7193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EBE"
    },
    "9625": {
      "fn": "Cafe._bakeRecipe",
      "jump": "i",
      "offset": [
        7183,
        7227
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9626": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7183,
        7227
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9627": {
      "op": "POP"
    },
    "9628": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7244,
        7248
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 139,
      "value": "0x1"
    },
    "9630": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        7244,
        7248
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "9631": {
      "fn": "Cafe._bakeRecipe",
      "offset": [
        6051,
        7255
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9632": {
      "op": "POP"
    },
    "9633": {
      "op": "POP"
    },
    "9634": {
      "op": "POP"
    },
    "9635": {
      "op": "POP"
    },
    "9636": {
      "fn": "Cafe._bakeRecipe",
      "jump": "o",
      "offset": [
        6051,
        7255
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9637": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11741,
        12940
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9638": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11807,
        11817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9640": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11831,
        11844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9641": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11862,
        12034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9642": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11874,
        11876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9644": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11868,
        11873
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9645": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11868,
        11876
      ],
      "op": "LT",
      "path": "0"
    },
    "9646": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11862,
        12034
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9647": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11862,
        12034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25F6"
    },
    "9650": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11862,
        12034
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9651": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11918,
        11927
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9652": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "9654": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11910,
        11915
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9655": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "9657": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9658": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "LT",
      "path": "0"
    },
    "9659": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25D4"
    },
    "9662": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9663": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9668": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9670": {
      "op": "SHL"
    },
    "9671": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9673": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9674": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "9676": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9678": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9679": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "9681": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9683": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9684": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9685": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "ADD",
      "path": "0"
    },
    "9686": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11916
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9687": {
      "branch": 228,
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11894,
        11927
      ],
      "op": "EQ",
      "path": "0"
    },
    "9688": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11891,
        11997
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9689": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11891,
        11997
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25E4"
    },
    "9692": {
      "branch": 228,
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11891,
        11997
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9693": {
      "op": "POP"
    },
    "9694": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11955,
        11959
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 140,
      "value": "0x1"
    },
    "9696": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11977,
        11982
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 141,
      "value": "0x25F6"
    },
    "9699": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11977,
        11982
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9700": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11891,
        11997
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9701": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12016,
        12023
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 142,
      "value": "0x25EF"
    },
    "9704": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12016,
        12021
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9705": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12022,
        12023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "9707": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12016,
        12023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "9710": {
      "fn": "Cafe._updateRecipeScore",
      "jump": "i",
      "offset": [
        12016,
        12023
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9711": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12016,
        12023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9712": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12010,
        12023
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9713": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12010,
        12023
      ],
      "op": "POP",
      "path": "0"
    },
    "9714": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11862,
        12034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A9"
    },
    "9717": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11862,
        12034
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9718": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11862,
        12034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9719": {
      "branch": 229,
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12047,
        12055
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9720": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12044,
        12206
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9721": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12044,
        12206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2668"
    },
    "9724": {
      "branch": 229,
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12044,
        12206
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9725": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12070,
        12196
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9726": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12082,
        12084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9728": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12076,
        12081
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9729": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12076,
        12084
      ],
      "op": "LT",
      "path": "0"
    },
    "9730": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12070,
        12196
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9731": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12070,
        12196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2668"
    },
    "9734": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12070,
        12196
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9735": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12141
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 143,
      "value": "0x1E"
    },
    "9737": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12142,
        12149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2613"
    },
    "9740": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12142,
        12147
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9741": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12148,
        12149
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "9743": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12142,
        12149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "9746": {
      "fn": "Cafe._updateRecipeScore",
      "jump": "i",
      "offset": [
        12142,
        12149
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9747": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12142,
        12149
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9748": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "9750": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9751": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "LT",
      "path": "0"
    },
    "9752": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2631"
    },
    "9755": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9756": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9761": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9763": {
      "op": "SHL"
    },
    "9764": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9766": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9767": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "9769": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9771": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9772": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "9774": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9776": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9777": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9778": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "ADD",
      "path": "0"
    },
    "9779": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12126,
        12150
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9780": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12118
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "9782": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12119,
        12124
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9783": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "9785": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9786": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "LT",
      "path": "0"
    },
    "9787": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2654"
    },
    "9790": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9791": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9796": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9798": {
      "op": "SHL"
    },
    "9799": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9801": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9802": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "9804": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9806": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9807": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "9809": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9811": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9812": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9813": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12125
      ],
      "op": "ADD",
      "path": "0"
    },
    "9814": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12103,
        12150
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9815": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12174,
        12181
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 144,
      "value": "0x2661"
    },
    "9818": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12174,
        12179
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9819": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12180,
        12181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "9821": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12174,
        12181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "9824": {
      "fn": "Cafe._updateRecipeScore",
      "jump": "i",
      "offset": [
        12174,
        12181
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9825": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12174,
        12181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9826": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12168,
        12181
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9827": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12168,
        12181
      ],
      "op": "POP",
      "path": "0"
    },
    "9828": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12070,
        12196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25FD"
    },
    "9831": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12070,
        12196
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9832": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12070,
        12196
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9833": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12222,
        12223
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 145,
      "value": "0x0"
    },
    "9835": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12270
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9836": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9837": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9838": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "9840": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9842": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9843": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9845": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12270
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9846": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12270
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9847": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12270
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9848": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9850": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9851": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12282
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9852": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12282
      ],
      "op": "ADD",
      "path": "0"
    },
    "9853": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12282
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9854": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12320,
        12335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "9856": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12320,
        12342
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9857": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12309,
        12343
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9858": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12309,
        12343
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9859": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12309,
        12343
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9860": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12309,
        12343
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9861": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12309,
        12343
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9862": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12309,
        12355
      ],
      "op": "ADD",
      "path": "0"
    },
    "9863": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12309,
        12355
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9864": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12222,
        12223
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9865": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12222,
        12223
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9866": {
      "op": "POP"
    },
    "9867": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12249,
        12282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9868": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12365,
        12580
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9869": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12380,
        12386
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9870": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12371,
        12376
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9871": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12371,
        12386
      ],
      "op": "GT",
      "path": "0"
    },
    "9872": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12365,
        12580
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26EE"
    },
    "9875": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12365,
        12580
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9876": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12407,
        12414
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 146,
      "value": "0x269E"
    },
    "9879": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12407,
        12412
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9880": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12413,
        12414
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "9882": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12407,
        12414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "9885": {
      "fn": "Cafe._updateRecipeScore",
      "jump": "i",
      "offset": [
        12407,
        12414
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9886": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12407,
        12414
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9887": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12401,
        12414
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9888": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12401,
        12414
      ],
      "op": "POP",
      "path": "0"
    },
    "9889": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12437,
        12439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9891": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12431,
        12436
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9892": {
      "branch": 230,
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12431,
        12439
      ],
      "op": "GT",
      "path": "0"
    },
    "9893": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12428,
        12570
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9894": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12428,
        12570
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26AE"
    },
    "9897": {
      "branch": 230,
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12428,
        12570
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9898": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12458,
        12463
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 147,
      "value": "0x26EE"
    },
    "9901": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12458,
        12463
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9902": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12428,
        12570
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9903": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12519
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 148,
      "value": "0xD"
    },
    "9905": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9907": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "9909": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12536,
        12541
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9910": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "9912": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9913": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "LT",
      "path": "0"
    },
    "9914": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26D3"
    },
    "9917": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9918": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9923": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9925": {
      "op": "SHL"
    },
    "9926": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9928": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9929": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "9931": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9933": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9934": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "9936": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9938": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9939": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9940": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "ADD",
      "path": "0"
    },
    "9941": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12520,
        12542
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9942": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12543
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9943": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12543
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9944": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9946": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12543
      ],
      "op": "ADD",
      "path": "0"
    },
    "9947": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12543
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9948": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12543
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9949": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12543
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9950": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9952": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12543
      ],
      "op": "ADD",
      "path": "0"
    },
    "9953": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9955": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12543
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9956": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12555
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9958": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12555
      ],
      "op": "ADD",
      "path": "0"
    },
    "9959": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12509,
        12555
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9960": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12500,
        12555
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9961": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12500,
        12555
      ],
      "op": "POP",
      "path": "0"
    },
    "9962": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12365,
        12580
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268C"
    },
    "9965": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12365,
        12580
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9966": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12365,
        12580
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9967": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12599,
        12601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9969": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12593,
        12598
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9970": {
      "branch": 231,
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12593,
        12601
      ],
      "op": "LT",
      "path": "0"
    },
    "9971": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12590,
        12935
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9972": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12590,
        12935
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BF7"
    },
    "9975": {
      "branch": 231,
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12590,
        12935
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9976": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12630,
        12631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "9978": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12645,
        12879
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9979": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12659,
        12664
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9980": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12651,
        12657
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9981": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12651,
        12664
      ],
      "op": "LT",
      "path": "0"
    },
    "9982": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12645,
        12879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2773"
    },
    "9985": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12645,
        12879
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9986": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12724
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 149,
      "value": "0x1E"
    },
    "9988": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12725,
        12731
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9989": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "9991": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9992": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "LT",
      "path": "0"
    },
    "9993": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2722"
    },
    "9996": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9997": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10002": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10004": {
      "op": "SHL"
    },
    "10005": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10007": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10008": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "10010": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10012": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10013": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "10015": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10017": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10018": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10019": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "ADD",
      "path": "0"
    },
    "10020": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12709,
        12732
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10021": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "10023": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12699,
        12707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2731"
    },
    "10026": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12699,
        12705
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10027": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12706,
        12707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "10029": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12699,
        12707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "10032": {
      "fn": "Cafe._updateRecipeScore",
      "jump": "i",
      "offset": [
        12699,
        12707
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10033": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12699,
        12707
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10034": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "10036": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10037": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "LT",
      "path": "0"
    },
    "10038": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x274F"
    },
    "10041": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10042": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10047": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10049": {
      "op": "SHL"
    },
    "10050": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10052": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10053": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "10055": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10057": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10058": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "10060": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10062": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10063": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10064": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12708
      ],
      "op": "ADD",
      "path": "0"
    },
    "10065": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12683,
        12732
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10066": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12753,
        12762
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10067": {
      "branch": 232,
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12753,
        12762
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10068": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12750,
        12865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2769"
    },
    "10071": {
      "branch": 232,
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12750,
        12865
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10072": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12788,
        12796
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 150,
      "value": "0x2762"
    },
    "10075": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12795,
        12796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "10077": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12788,
        12794
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10078": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12788,
        12796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EBA"
    },
    "10081": {
      "fn": "Cafe._updateRecipeScore",
      "jump": "i",
      "offset": [
        12788,
        12796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10082": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12788,
        12796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10083": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12781,
        12796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10084": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12781,
        12796
      ],
      "op": "POP",
      "path": "0"
    },
    "10085": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12750,
        12865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276E"
    },
    "10088": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12750,
        12865
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10089": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12750,
        12865
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10090": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12841,
        12846
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 151,
      "value": "0x2773"
    },
    "10093": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12841,
        12846
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10094": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12750,
        12865
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10095": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12645,
        12879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26FA"
    },
    "10098": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12645,
        12879
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10099": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12645,
        12879
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10100": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12915,
        12924
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 152
    },
    "10101": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "10103": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12908,
        12913
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10104": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "10106": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10107": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "LT",
      "path": "0"
    },
    "10108": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2795"
    },
    "10111": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10112": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10117": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10119": {
      "op": "SHL"
    },
    "10120": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10122": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10123": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "10125": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10127": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10128": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "10130": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10132": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10133": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10134": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12914
      ],
      "op": "ADD",
      "path": "0"
    },
    "10135": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        12892,
        12924
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10136": {
      "op": "POP"
    },
    "10137": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11741,
        12940
      ],
      "op": "POP",
      "path": "0"
    },
    "10138": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11741,
        12940
      ],
      "op": "POP",
      "path": "0"
    },
    "10139": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11741,
        12940
      ],
      "op": "POP",
      "path": "0"
    },
    "10140": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11741,
        12940
      ],
      "op": "POP",
      "path": "0"
    },
    "10141": {
      "fn": "Cafe._updateRecipeScore",
      "offset": [
        11741,
        12940
      ],
      "op": "POP",
      "path": "0"
    },
    "10142": {
      "fn": "Cafe._updateRecipeScore",
      "jump": "o",
      "offset": [
        11741,
        12940
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10143": {
      "fn": "ERC1155._burn",
      "offset": [
        9569,
        10296
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10150": {
      "op": "SHL"
    },
    "10151": {
      "op": "SUB"
    },
    "10152": {
      "fn": "ERC1155._burn",
      "offset": [
        9664,
        9685
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 153
    },
    "10153": {
      "branch": 257,
      "fn": "ERC1155._burn",
      "offset": [
        9664,
        9685
      ],
      "op": "AND",
      "path": "1"
    },
    "10154": {
      "fn": "ERC1155._burn",
      "offset": [
        9656,
        9725
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27C5"
    },
    "10157": {
      "branch": 257,
      "fn": "ERC1155._burn",
      "offset": [
        9656,
        9725
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10158": {
      "fn": "ERC1155._burn",
      "offset": [
        9656,
        9725
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10160": {
      "fn": "ERC1155._burn",
      "offset": [
        9656,
        9725
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10167": {
      "op": "SHL"
    },
    "10168": {
      "fn": "ERC1155._burn",
      "offset": [
        9656,
        9725
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10169": {
      "fn": "ERC1155._burn",
      "offset": [
        9656,
        9725
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10170": {
      "fn": "ERC1155._burn",
      "offset": [
        9656,
        9725
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10172": {
      "fn": "ERC1155._burn",
      "offset": [
        9656,
        9725
      ],
      "op": "ADD",
      "path": "1"
    },
    "10173": {
      "fn": "ERC1155._burn",
      "offset": [
        9656,
        9725
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "10176": {
      "fn": "ERC1155._burn",
      "offset": [
        9656,
        9725
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10177": {
      "fn": "ERC1155._burn",
      "offset": [
        9656,
        9725
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D3D"
    },
    "10180": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        9656,
        9725
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10181": {
      "fn": "ERC1155._burn",
      "offset": [
        9656,
        9725
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10182": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "10183": {
      "fn": "ERC1155._burn",
      "offset": [
        9778,
        9883
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 154,
      "value": "0x27F5"
    },
    "10186": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10187": {
      "fn": "ERC1155._burn",
      "offset": [
        9809,
        9816
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10188": {
      "fn": "ERC1155._burn",
      "offset": [
        9736,
        9752
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10190": {
      "fn": "ERC1155._burn",
      "offset": [
        9830,
        9851
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27D6"
    },
    "10193": {
      "fn": "ERC1155._burn",
      "offset": [
        9848,
        9850
      ],
      "op": "DUP8",
      "path": "1"
    },
    "10194": {
      "fn": "ERC1155._burn",
      "offset": [
        9830,
        9847
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B6B"
    },
    "10197": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        9830,
        9851
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10198": {
      "fn": "ERC1155._burn",
      "offset": [
        9830,
        9851
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10199": {
      "fn": "ERC1155._burn",
      "offset": [
        9853,
        9878
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27DF"
    },
    "10202": {
      "fn": "ERC1155._burn",
      "offset": [
        9871,
        9877
      ],
      "op": "DUP8",
      "path": "1"
    },
    "10203": {
      "fn": "ERC1155._burn",
      "offset": [
        9853,
        9870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B6B"
    },
    "10206": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        9853,
        9878
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10207": {
      "fn": "ERC1155._burn",
      "offset": [
        9853,
        9878
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10208": {
      "op": "POP"
    },
    "10209": {
      "op": "POP"
    },
    "10210": {
      "fn": "ERC1155._burn",
      "offset": [
        9778,
        9883
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10212": {
      "fn": "ERC1155._burn",
      "offset": [
        9778,
        9883
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10213": {
      "fn": "ERC1155._burn",
      "offset": [
        9778,
        9883
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10214": {
      "fn": "ERC1155._burn",
      "offset": [
        9778,
        9883
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10216": {
      "fn": "ERC1155._burn",
      "offset": [
        9778,
        9883
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10217": {
      "fn": "ERC1155._burn",
      "offset": [
        9778,
        9883
      ],
      "op": "ADD",
      "path": "1"
    },
    "10218": {
      "fn": "ERC1155._burn",
      "offset": [
        9778,
        9883
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10219": {
      "fn": "ERC1155._burn",
      "offset": [
        9778,
        9883
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10220": {
      "fn": "ERC1155._burn",
      "offset": [
        9778,
        9883
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10223": {
      "fn": "ERC1155._burn",
      "offset": [
        9778,
        9883
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10224": {
      "fn": "ERC1155._burn",
      "offset": [
        9778,
        9883
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10225": {
      "op": "POP"
    },
    "10226": {
      "op": "POP"
    },
    "10227": {
      "op": "POP"
    },
    "10228": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5015,
        6365
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10229": {
      "fn": "ERC1155._burn",
      "offset": [
        9778,
        9883
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10230": {
      "fn": "ERC1155._burn",
      "offset": [
        9894,
        9916
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10232": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9932
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10233": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9932
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10234": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9932
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10235": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9928
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "10237": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9932
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10239": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9932
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10240": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9932
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10241": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9932
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10242": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9932
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10244": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9932
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10245": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9932
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10246": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9932
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10253": {
      "op": "SHL"
    },
    "10254": {
      "op": "SUB"
    },
    "10255": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9941
      ],
      "op": "DUP9",
      "path": "1"
    },
    "10256": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9941
      ],
      "op": "AND",
      "path": "1"
    },
    "10257": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9941
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10258": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9941
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10259": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9941
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10260": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9941
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10261": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9941
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10262": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9941
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10263": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9941
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10264": {
      "fn": "ERC1155._burn",
      "offset": [
        9919,
        9941
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10265": {
      "fn": "ERC1155._burn",
      "offset": [
        9959,
        9983
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 155
    },
    "10266": {
      "fn": "ERC1155._burn",
      "offset": [
        9959,
        9983
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10267": {
      "fn": "ERC1155._burn",
      "offset": [
        9959,
        9983
      ],
      "op": "LT",
      "path": "1"
    },
    "10268": {
      "branch": 258,
      "fn": "ERC1155._burn",
      "offset": [
        9959,
        9983
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10269": {
      "fn": "ERC1155._burn",
      "offset": [
        9951,
        10024
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2838"
    },
    "10272": {
      "branch": 258,
      "fn": "ERC1155._burn",
      "offset": [
        9951,
        10024
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10273": {
      "fn": "ERC1155._burn",
      "offset": [
        9951,
        10024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10275": {
      "fn": "ERC1155._burn",
      "offset": [
        9951,
        10024
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10282": {
      "op": "SHL"
    },
    "10283": {
      "fn": "ERC1155._burn",
      "offset": [
        9951,
        10024
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10284": {
      "fn": "ERC1155._burn",
      "offset": [
        9951,
        10024
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10285": {
      "fn": "ERC1155._burn",
      "offset": [
        9951,
        10024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10287": {
      "fn": "ERC1155._burn",
      "offset": [
        9951,
        10024
      ],
      "op": "ADD",
      "path": "1"
    },
    "10288": {
      "fn": "ERC1155._burn",
      "offset": [
        9951,
        10024
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "10291": {
      "fn": "ERC1155._burn",
      "offset": [
        9951,
        10024
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10292": {
      "fn": "ERC1155._burn",
      "offset": [
        9951,
        10024
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C31"
    },
    "10295": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        9951,
        10024
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10296": {
      "fn": "ERC1155._burn",
      "offset": [
        9951,
        10024
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10297": {
      "fn": "ERC1155._burn",
      "offset": [
        10034,
        10052
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10299": {
      "fn": "ERC1155._burn",
      "offset": [
        10055,
        10076
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2844"
    },
    "10302": {
      "fn": "ERC1155._burn",
      "offset": [
        10070,
        10076
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10303": {
      "fn": "ERC1155._burn",
      "offset": [
        10055,
        10069
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10304": {
      "fn": "ERC1155._burn",
      "offset": [
        10055,
        10076
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3EBA"
    },
    "10307": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10055,
        10076
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10308": {
      "fn": "ERC1155._burn",
      "offset": [
        10055,
        10076
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10309": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10099
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 156,
      "value": "0x0"
    },
    "10311": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10099
      ],
      "op": "DUP7",
      "path": "1"
    },
    "10312": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10099
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10313": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10099
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10314": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "10316": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10099
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10318": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10099
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10319": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10099
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10320": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10099
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10321": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10099
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10323": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10099
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10324": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10099
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10325": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10099
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10332": {
      "op": "SHL"
    },
    "10333": {
      "op": "SUB"
    },
    "10334": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10108
      ],
      "op": "DUP12",
      "path": "1"
    },
    "10335": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10108
      ],
      "op": "AND",
      "path": "1"
    },
    "10336": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10108
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10337": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10108
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10338": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10108
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10339": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10108
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10340": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10108
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10341": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10108
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10342": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10108
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10343": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10121
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10344": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10121
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10345": {
      "fn": "ERC1155._burn",
      "offset": [
        10086,
        10121
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10346": {
      "fn": "ERC1155._burn",
      "offset": [
        10034,
        10076
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10347": {
      "op": "POP"
    },
    "10348": {
      "branch": 259,
      "fn": "ERC1155._burn",
      "offset": [
        10135,
        10149
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10349": {
      "fn": "ERC1155._burn",
      "offset": [
        10131,
        10209
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2894"
    },
    "10352": {
      "branch": 259,
      "fn": "ERC1155._burn",
      "offset": [
        10131,
        10209
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10359": {
      "op": "SHL"
    },
    "10360": {
      "op": "SUB"
    },
    "10361": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10187
      ],
      "op": "DUP7",
      "path": "1",
      "statement": 157
    },
    "10362": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10187
      ],
      "op": "AND",
      "path": "1"
    },
    "10363": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10365": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10366": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10187
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10367": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10187
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10368": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10370": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10187
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10371": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10372": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10187
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10373": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10375": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10376": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10187
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10377": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10198
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2892"
    },
    "10380": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10198
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10381": {
      "fn": "ERC1155._burn",
      "offset": [
        10195,
        10197
      ],
      "op": "DUP7",
      "path": "1"
    },
    "10382": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10194
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2030"
    },
    "10385": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10165,
        10198
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10386": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10198
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10387": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10198
      ],
      "op": "POP",
      "path": "1"
    },
    "10388": {
      "fn": "ERC1155._burn",
      "offset": [
        10131,
        10209
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10389": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 158,
      "value": "0x40"
    },
    "10391": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10392": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10393": {
      "op": "DUP7"
    },
    "10394": {
      "op": "DUP2"
    },
    "10395": {
      "op": "MSTORE"
    },
    "10396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10398": {
      "op": "DUP2"
    },
    "10399": {
      "op": "ADD"
    },
    "10400": {
      "op": "DUP7"
    },
    "10401": {
      "op": "SWAP1"
    },
    "10402": {
      "op": "MSTORE"
    },
    "10403": {
      "fn": "ERC1155._burn",
      "offset": [
        10274,
        10275
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10405": {
      "fn": "ERC1155._burn",
      "offset": [
        10274,
        10275
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10412": {
      "op": "SHL"
    },
    "10413": {
      "op": "SUB"
    },
    "10414": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "DUP10",
      "path": "1"
    },
    "10415": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10416": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "AND",
      "path": "1"
    },
    "10417": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10418": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10419": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "DUP8",
      "path": "1"
    },
    "10420": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "AND",
      "path": "1"
    },
    "10421": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10422": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "10455": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10456": {
      "op": "ADD"
    },
    "10457": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10459": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10460": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10461": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10462": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "SUB",
      "path": "1"
    },
    "10463": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10464": {
      "fn": "ERC1155._burn",
      "offset": [
        10232,
        10289
      ],
      "op": "LOG4",
      "path": "1"
    },
    "10465": {
      "fn": "ERC1155._burn",
      "offset": [
        9569,
        10296
      ],
      "op": "POP",
      "path": "1"
    },
    "10466": {
      "fn": "ERC1155._burn",
      "offset": [
        9569,
        10296
      ],
      "op": "POP",
      "path": "1"
    },
    "10467": {
      "fn": "ERC1155._burn",
      "offset": [
        9569,
        10296
      ],
      "op": "POP",
      "path": "1"
    },
    "10468": {
      "fn": "ERC1155._burn",
      "offset": [
        9569,
        10296
      ],
      "op": "POP",
      "path": "1"
    },
    "10469": {
      "fn": "ERC1155._burn",
      "offset": [
        9569,
        10296
      ],
      "op": "POP",
      "path": "1"
    },
    "10470": {
      "fn": "ERC1155._burn",
      "offset": [
        9569,
        10296
      ],
      "op": "POP",
      "path": "1"
    },
    "10471": {
      "fn": "ERC1155._burn",
      "jump": "o",
      "offset": [
        9569,
        10296
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10472": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        12951,
        14101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10473": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13015,
        13025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10475": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13039,
        13052
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10476": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13070,
        13240
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10477": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13082,
        13084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "10479": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13076,
        13081
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10480": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13076,
        13084
      ],
      "op": "LT",
      "path": "0"
    },
    "10481": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13070,
        13240
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10482": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13070,
        13240
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x294B"
    },
    "10485": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13070,
        13240
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10486": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13126,
        13133
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10493": {
      "op": "SHL"
    },
    "10494": {
      "op": "SUB"
    },
    "10495": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13133
      ],
      "op": "AND",
      "path": "0"
    },
    "10496": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x29"
    },
    "10498": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13118,
        13123
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10499": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "10501": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10502": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "LT",
      "path": "0"
    },
    "10503": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2920"
    },
    "10506": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10507": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10512": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10514": {
      "op": "SHL"
    },
    "10515": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10517": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10518": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "10520": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10522": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10523": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "10525": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10527": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10528": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10529": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "ADD",
      "path": "0"
    },
    "10530": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10537": {
      "op": "SHL"
    },
    "10538": {
      "op": "SUB"
    },
    "10539": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13124
      ],
      "op": "AND",
      "path": "0"
    },
    "10540": {
      "branch": 233,
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13102,
        13133
      ],
      "op": "EQ",
      "path": "0"
    },
    "10541": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13099,
        13203
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10542": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13099,
        13203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2939"
    },
    "10545": {
      "branch": 233,
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13099,
        13203
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10546": {
      "op": "POP"
    },
    "10547": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13161,
        13165
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 159,
      "value": "0x1"
    },
    "10549": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13183,
        13188
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 160,
      "value": "0x294B"
    },
    "10552": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13183,
        13188
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10553": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13099,
        13203
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10554": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13222,
        13229
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 161,
      "value": "0x2944"
    },
    "10557": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13222,
        13227
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10558": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13228,
        13229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "10560": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13222,
        13229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "10563": {
      "fn": "Cafe._updatePlayerScore",
      "jump": "i",
      "offset": [
        13222,
        13229
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10564": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13222,
        13229
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10565": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13216,
        13229
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10566": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13216,
        13229
      ],
      "op": "POP",
      "path": "0"
    },
    "10567": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13070,
        13240
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28EC"
    },
    "10570": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13070,
        13240
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10571": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13070,
        13240
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10572": {
      "branch": 234,
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13252,
        13260
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10573": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13249,
        13411
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10574": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13249,
        13411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29E3"
    },
    "10577": {
      "branch": 234,
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13249,
        13411
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10578": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13275,
        13401
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10579": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13287,
        13289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "10581": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13281,
        13286
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10582": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13281,
        13289
      ],
      "op": "LT",
      "path": "0"
    },
    "10583": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13275,
        13401
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10584": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13275,
        13401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29E3"
    },
    "10587": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13275,
        13401
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10588": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13346
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 162,
      "value": "0x29"
    },
    "10590": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13347,
        13354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2968"
    },
    "10593": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13347,
        13352
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10594": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13353,
        13354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "10596": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13347,
        13354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "10599": {
      "fn": "Cafe._updatePlayerScore",
      "jump": "i",
      "offset": [
        13347,
        13354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10600": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13347,
        13354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10601": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "10603": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10604": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "LT",
      "path": "0"
    },
    "10605": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "10608": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10609": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10614": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10616": {
      "op": "SHL"
    },
    "10617": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10619": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10620": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "10622": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10624": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10625": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "10627": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10629": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10630": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10631": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "ADD",
      "path": "0"
    },
    "10632": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10639": {
      "op": "SHL"
    },
    "10640": {
      "op": "SUB"
    },
    "10641": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13331,
        13355
      ],
      "op": "AND",
      "path": "0"
    },
    "10642": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x29"
    },
    "10644": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13324,
        13329
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10645": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "10647": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10648": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "LT",
      "path": "0"
    },
    "10649": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29B2"
    },
    "10652": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10653": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10658": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10660": {
      "op": "SHL"
    },
    "10661": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10663": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10664": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "10666": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10668": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10669": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "10671": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10673": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10674": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10675": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13330
      ],
      "op": "ADD",
      "path": "0"
    },
    "10676": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13355
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10677": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13355
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10684": {
      "op": "SHL"
    },
    "10685": {
      "op": "SUB"
    },
    "10686": {
      "op": "NOT"
    },
    "10687": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13355
      ],
      "op": "AND",
      "path": "0"
    },
    "10688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10694": {
      "op": "SHL"
    },
    "10695": {
      "op": "SUB"
    },
    "10696": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13355
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10697": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10698": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13355
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10699": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13355
      ],
      "op": "AND",
      "path": "0"
    },
    "10700": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13355
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10701": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10702": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13355
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10703": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13355
      ],
      "op": "OR",
      "path": "0"
    },
    "10704": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10705": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13308,
        13355
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10706": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13379,
        13386
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 163,
      "value": "0x29DC"
    },
    "10709": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13379,
        13384
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10712": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13379,
        13386
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "10715": {
      "fn": "Cafe._updatePlayerScore",
      "jump": "i",
      "offset": [
        13379,
        13386
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10716": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13379,
        13386
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10717": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13373,
        13386
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10718": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13373,
        13386
      ],
      "op": "POP",
      "path": "0"
    },
    "10719": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13275,
        13401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2952"
    },
    "10722": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13275,
        13401
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10723": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13275,
        13401
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10730": {
      "op": "SHL"
    },
    "10731": {
      "op": "SUB"
    },
    "10732": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13453,
        13472
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10733": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13453,
        13472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10734": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13453,
        13472
      ],
      "op": "AND",
      "path": "0"
    },
    "10735": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13426,
        13427
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 164,
      "value": "0x0"
    },
    "10737": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13453,
        13472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10738": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13453,
        13472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10739": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13453,
        13472
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10740": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13453,
        13463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "10742": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13453,
        13472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10744": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13453,
        13472
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10745": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13453,
        13472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10747": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13453,
        13472
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10748": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13453,
        13472
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10749": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13453,
        13472
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10750": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13453,
        13472
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10751": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13510,
        13525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x29"
    },
    "10753": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13510,
        13532
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10754": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13510,
        13532
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10755": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13510,
        13532
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10756": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13510,
        13532
      ],
      "op": "AND",
      "path": "0"
    },
    "10757": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13499,
        13533
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10758": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13499,
        13533
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10759": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13499,
        13533
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10760": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13499,
        13533
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10761": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13499,
        13533
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10762": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13426,
        13427
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10763": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13426,
        13427
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10764": {
      "op": "POP"
    },
    "10765": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13543,
        13744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10766": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13556,
        13562
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10767": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13549,
        13554
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10768": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13549,
        13562
      ],
      "op": "GT",
      "path": "0"
    },
    "10769": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13543,
        13744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A77"
    },
    "10772": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13543,
        13744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10773": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13583,
        13590
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 165,
      "value": "0x2A1F"
    },
    "10776": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13583,
        13588
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10777": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13589,
        13590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "10779": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13583,
        13590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "10782": {
      "fn": "Cafe._updatePlayerScore",
      "jump": "i",
      "offset": [
        13583,
        13590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10783": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13583,
        13590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10784": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13577,
        13590
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10785": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13577,
        13590
      ],
      "op": "POP",
      "path": "0"
    },
    "10786": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13613,
        13615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "10788": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13607,
        13612
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10789": {
      "branch": 235,
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13607,
        13615
      ],
      "op": "GT",
      "path": "0"
    },
    "10790": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13604,
        13734
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10791": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13604,
        13734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A2F"
    },
    "10794": {
      "branch": 235,
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13604,
        13734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10795": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13634,
        13639
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 166,
      "value": "0x2A77"
    },
    "10798": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13634,
        13639
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10799": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13604,
        13734
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10800": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13695
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 167,
      "value": "0xF"
    },
    "10802": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10804": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x29"
    },
    "10806": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13712,
        13717
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10807": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "10809": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10810": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "LT",
      "path": "0"
    },
    "10811": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A54"
    },
    "10814": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10815": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10820": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10822": {
      "op": "SHL"
    },
    "10823": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10825": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10826": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "10828": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10830": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10831": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "10833": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10835": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10836": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10837": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "ADD",
      "path": "0"
    },
    "10838": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10845": {
      "op": "SHL"
    },
    "10846": {
      "op": "SUB"
    },
    "10847": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "AND",
      "path": "0"
    },
    "10848": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10849": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10850": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10852": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10853": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "ADD",
      "path": "0"
    },
    "10854": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10855": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10856": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10857": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10858": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10860": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "ADD",
      "path": "0"
    },
    "10861": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13696,
        13718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10863": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10864": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10865": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13685,
        13719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10866": {
      "op": "POP"
    },
    "10867": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13543,
        13744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A0D"
    },
    "10870": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13543,
        13744
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10871": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13543,
        13744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10872": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13762,
        13764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "10874": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13756,
        13761
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10875": {
      "branch": 236,
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13756,
        13764
      ],
      "op": "LT",
      "path": "0"
    },
    "10876": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13753,
        14095
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10877": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13753,
        14095
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BF7"
    },
    "10880": {
      "branch": 236,
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13753,
        14095
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10881": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13792,
        13793
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "10883": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13807,
        14041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10884": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13821,
        13826
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10885": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13813,
        13819
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10886": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13813,
        13826
      ],
      "op": "LT",
      "path": "0"
    },
    "10887": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13807,
        14041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B22"
    },
    "10890": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13807,
        14041
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10891": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13886
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 168,
      "value": "0x29"
    },
    "10893": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13887,
        13893
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10894": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "10896": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10897": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "LT",
      "path": "0"
    },
    "10898": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AAB"
    },
    "10901": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10902": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10907": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10909": {
      "op": "SHL"
    },
    "10910": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10912": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10913": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "10915": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10917": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10918": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "10920": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10922": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10923": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10924": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "ADD",
      "path": "0"
    },
    "10925": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10932": {
      "op": "SHL"
    },
    "10933": {
      "op": "SUB"
    },
    "10934": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "AND",
      "path": "0"
    },
    "10935": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x29"
    },
    "10937": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13861,
        13869
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC3"
    },
    "10940": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13861,
        13867
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10941": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13871,
        13894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "10943": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13861,
        13869
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "10946": {
      "fn": "Cafe._updatePlayerScore",
      "jump": "i",
      "offset": [
        13861,
        13869
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10947": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13861,
        13869
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10948": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "10950": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10951": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "LT",
      "path": "0"
    },
    "10952": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE1"
    },
    "10955": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10956": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10961": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10963": {
      "op": "SHL"
    },
    "10964": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10966": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10967": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "10969": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10971": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10972": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "10974": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10976": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10977": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10978": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13870
      ],
      "op": "ADD",
      "path": "0"
    },
    "10979": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13894
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10980": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13894
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10987": {
      "op": "SHL"
    },
    "10988": {
      "op": "SUB"
    },
    "10989": {
      "op": "NOT"
    },
    "10990": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13894
      ],
      "op": "AND",
      "path": "0"
    },
    "10991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10997": {
      "op": "SHL"
    },
    "10998": {
      "op": "SUB"
    },
    "10999": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13894
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11000": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13894
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11001": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13894
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11002": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13894
      ],
      "op": "AND",
      "path": "0"
    },
    "11003": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13894
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11004": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13894
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11005": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13894
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11006": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13894
      ],
      "op": "OR",
      "path": "0"
    },
    "11007": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13894
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11008": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13845,
        13894
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11009": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13915,
        13924
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11010": {
      "branch": 237,
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13915,
        13924
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11011": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13912,
        14027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B18"
    },
    "11014": {
      "branch": 237,
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13912,
        14027
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11015": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13950,
        13958
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 169,
      "value": "0x2B11"
    },
    "11018": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13957,
        13958
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "11020": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13950,
        13956
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11021": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13950,
        13958
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EBA"
    },
    "11024": {
      "fn": "Cafe._updatePlayerScore",
      "jump": "i",
      "offset": [
        13950,
        13958
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11025": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13950,
        13958
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11026": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13943,
        13958
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11027": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13943,
        13958
      ],
      "op": "POP",
      "path": "0"
    },
    "11028": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13912,
        14027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B1D"
    },
    "11031": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13912,
        14027
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11032": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13912,
        14027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11033": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14003,
        14008
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 170,
      "value": "0x2B22"
    },
    "11036": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14003,
        14008
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11037": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13912,
        14027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11038": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13807,
        14041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A83"
    },
    "11041": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13807,
        14041
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11042": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        13807,
        14041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11043": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14077,
        14084
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 171
    },
    "11044": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x29"
    },
    "11046": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14070,
        14075
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11047": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "11049": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11050": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "LT",
      "path": "0"
    },
    "11051": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B44"
    },
    "11054": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11055": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11060": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11062": {
      "op": "SHL"
    },
    "11063": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11065": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11066": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "11068": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11070": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11071": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "11073": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11075": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11076": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11077": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14076
      ],
      "op": "ADD",
      "path": "0"
    },
    "11078": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14084
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11079": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14084
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11086": {
      "op": "SHL"
    },
    "11087": {
      "op": "SUB"
    },
    "11088": {
      "op": "NOT"
    },
    "11089": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14084
      ],
      "op": "AND",
      "path": "0"
    },
    "11090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11096": {
      "op": "SHL"
    },
    "11097": {
      "op": "SUB"
    },
    "11098": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14084
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11099": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14084
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11100": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14084
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11101": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14084
      ],
      "op": "AND",
      "path": "0"
    },
    "11102": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14084
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11103": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14084
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11104": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14084
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11105": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14084
      ],
      "op": "OR",
      "path": "0"
    },
    "11106": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14084
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11107": {
      "fn": "Cafe._updatePlayerScore",
      "offset": [
        14054,
        14084
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11108": {
      "op": "POP"
    },
    "11109": {
      "op": "POP"
    },
    "11110": {
      "op": "POP"
    },
    "11111": {
      "op": "POP"
    },
    "11112": {
      "op": "POP"
    },
    "11113": {
      "op": "POP"
    },
    "11114": {
      "fn": "Cafe._updatePlayerScore",
      "jump": "o",
      "offset": [
        12951,
        14101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11115": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14156,
        14349
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11116": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11118": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11119": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11120": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14289,
        14290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "11122": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11123": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11124": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11125": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11126": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11127": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "ADD",
      "path": "1"
    },
    "11128": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11129": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11130": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11131": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14222,
        14238
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "11133": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14222,
        14238
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11134": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14250,
        14272
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11136": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14250,
        14272
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11137": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11138": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11140": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11141": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11142": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "ADD",
      "path": "1"
    },
    "11143": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11144": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11145": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "11146": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11147": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "CALLDATACOPY",
      "path": "1"
    },
    "11148": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "ADD",
      "path": "1"
    },
    "11149": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11150": {
      "op": "POP"
    },
    "11151": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14275,
        14291
      ],
      "op": "POP",
      "path": "1"
    },
    "11152": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14250,
        14291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11153": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14250,
        14291
      ],
      "op": "POP",
      "path": "1"
    },
    "11154": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14312,
        14319
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 172
    },
    "11155": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14306
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11156": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14307,
        14308
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11158": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11159": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11160": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11161": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "LT",
      "path": "1"
    },
    "11162": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BB3"
    },
    "11165": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11166": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11171": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11173": {
      "op": "SHL"
    },
    "11174": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11176": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11177": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "11179": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11181": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11182": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "11184": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11186": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "REVERT",
      "path": "1"
    },
    "11187": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11188": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11190": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11191": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11192": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "MUL",
      "path": "1"
    },
    "11193": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11194": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11195": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11196": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "ADD",
      "path": "1"
    },
    "11197": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14309
      ],
      "op": "ADD",
      "path": "1"
    },
    "11198": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14301,
        14319
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11199": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14337,
        14342
      ],
      "op": "SWAP3",
      "path": "1",
      "statement": 173
    },
    "11200": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14156,
        14349
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11201": {
      "op": "POP"
    },
    "11202": {
      "op": "POP"
    },
    "11203": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        14156,
        14349
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11204": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12625,
        13366
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11211": {
      "op": "SHL"
    },
    "11212": {
      "op": "SUB"
    },
    "11213": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12844,
        12857
      ],
      "op": "DUP5",
      "path": "1"
    },
    "11214": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12844,
        12857
      ],
      "op": "AND",
      "path": "1"
    },
    "11215": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "11216": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11217": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12840,
        13360
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE5E"
    },
    "11220": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12840,
        13360
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11221": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11223": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11224": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "11229": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11231": {
      "op": "SHL"
    },
    "11232": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11233": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11240": {
      "op": "SHL"
    },
    "11241": {
      "op": "SUB"
    },
    "11242": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12917
      ],
      "op": "DUP6",
      "path": "1"
    },
    "11243": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12917
      ],
      "op": "AND",
      "path": "1"
    },
    "11244": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11245": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12917
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF23A6E61"
    },
    "11250": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11251": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C08"
    },
    "11254": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11255": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12918,
        12926
      ],
      "op": "DUP10",
      "path": "1"
    },
    "11256": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12918,
        12926
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11257": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12928,
        12932
      ],
      "op": "DUP10",
      "path": "1"
    },
    "11258": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12928,
        12932
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11259": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12934,
        12936
      ],
      "op": "DUP9",
      "path": "1"
    },
    "11260": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12934,
        12936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11261": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12938,
        12944
      ],
      "op": "DUP9",
      "path": "1"
    },
    "11262": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12938,
        12944
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11263": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12946,
        12950
      ],
      "op": "DUP9",
      "path": "1"
    },
    "11264": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12946,
        12950
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11265": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11267": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "ADD",
      "path": "1"
    },
    "11268": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B50"
    },
    "11271": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11272": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11273": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11275": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11277": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11278": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11279": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11280": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SUB",
      "path": "1"
    },
    "11281": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11282": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11284": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP8",
      "path": "1"
    },
    "11285": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11286": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "11287": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11288": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11289": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11290": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C22"
    },
    "11293": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11294": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11296": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11297": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "REVERT",
      "path": "1"
    },
    "11298": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11299": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "POP",
      "path": "1"
    },
    "11300": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "GAS",
      "path": "1"
    },
    "11301": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "CALL",
      "path": "1"
    },
    "11302": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11303": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "POP",
      "path": "1"
    },
    "11304": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "POP",
      "path": "1"
    },
    "11305": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "POP",
      "path": "1"
    },
    "11306": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11307": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11308": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C52"
    },
    "11311": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11312": {
      "op": "POP"
    },
    "11313": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11315": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11316": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11317": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "11319": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "11320": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11321": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11322": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "ADD",
      "path": "1"
    },
    "11323": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11325": {
      "op": "NOT"
    },
    "11326": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "AND",
      "path": "1"
    },
    "11327": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11328": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "ADD",
      "path": "1"
    },
    "11329": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11330": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11331": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11332": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C4F"
    },
    "11335": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11336": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11337": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "ADD",
      "path": "1"
    },
    "11338": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11339": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38D0"
    },
    "11342": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11343": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11344": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "11346": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12879,
        12951
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11347": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12875,
        13350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C5E"
    },
    "11350": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12875,
        13350
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11351": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12875,
        13350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20D6"
    },
    "11354": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12875,
        13350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F80"
    },
    "11357": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12875,
        13350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11358": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12875,
        13350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11363": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11365": {
      "op": "SHL"
    },
    "11366": {
      "op": "SUB"
    },
    "11367": {
      "op": "NOT"
    },
    "11368": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13000,
        13059
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11369": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13000,
        13059
      ],
      "op": "AND",
      "path": "1"
    },
    "11370": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "11375": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11377": {
      "op": "SHL"
    },
    "11378": {
      "branch": 260,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13000,
        13059
      ],
      "op": "EQ",
      "path": "1"
    },
    "11379": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12996,
        13152
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D6A"
    },
    "11382": {
      "branch": 260,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12996,
        13152
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11383": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 174,
      "value": "0x40"
    },
    "11385": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11386": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11390": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11392": {
      "op": "SHL"
    },
    "11393": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11394": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11395": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11397": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "ADD",
      "path": "1"
    },
    "11398": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "11401": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11402": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13083,
        13133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3BE9"
    },
    "11405": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13083,
        13133
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11406": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10323,
        11725
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11407": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10391,
        10401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11409": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10415,
        10428
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11410": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10446,
        10620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11411": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10458,
        10460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "11413": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10452,
        10457
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11414": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10452,
        10460
      ],
      "op": "LT",
      "path": "0"
    },
    "11415": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10446,
        10620
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11416": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10446,
        10620
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CDF"
    },
    "11419": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10446,
        10620
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11420": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10503,
        10513
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11421": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10494
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "11423": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10495,
        10500
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11424": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "11426": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11427": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "LT",
      "path": "0"
    },
    "11428": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CBD"
    },
    "11431": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11432": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11437": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11439": {
      "op": "SHL"
    },
    "11440": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11442": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11443": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "11445": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11447": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11448": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "11450": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11452": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11453": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11454": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "ADD",
      "path": "0"
    },
    "11455": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10501
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11456": {
      "branch": 238,
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10478,
        10513
      ],
      "op": "EQ",
      "path": "0"
    },
    "11457": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10475,
        10583
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11458": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10475,
        10583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CCD"
    },
    "11461": {
      "branch": 238,
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10475,
        10583
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11462": {
      "op": "POP"
    },
    "11463": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10541,
        10545
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 175,
      "value": "0x1"
    },
    "11465": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10563,
        10568
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 176,
      "value": "0x2CDF"
    },
    "11468": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10563,
        10568
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11469": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10475,
        10583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11470": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10602,
        10609
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 177,
      "value": "0x2CD8"
    },
    "11473": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10602,
        10607
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11474": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10608,
        10609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "11476": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10602,
        10609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "11479": {
      "fn": "Cafe._updateStarterScore",
      "jump": "i",
      "offset": [
        10602,
        10609
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11480": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10602,
        10609
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11481": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10596,
        10609
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11482": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10596,
        10609
      ],
      "op": "POP",
      "path": "0"
    },
    "11483": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10446,
        10620
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C92"
    },
    "11486": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10446,
        10620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11487": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10446,
        10620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11488": {
      "branch": 239,
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10633,
        10641
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11489": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10630,
        10869
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11490": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10630,
        10869
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DE4"
    },
    "11493": {
      "branch": 239,
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10630,
        10869
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11494": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10656,
        10859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11495": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10668,
        10670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "11497": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10662,
        10667
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11498": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10662,
        10670
      ],
      "op": "LT",
      "path": "0"
    },
    "11499": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10656,
        10859
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11500": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10656,
        10859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DE4"
    },
    "11503": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10656,
        10859
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11504": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10729
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 178,
      "value": "0x13"
    },
    "11506": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10730,
        10737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CFC"
    },
    "11509": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10730,
        10735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11510": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10736,
        10737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "11512": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10730,
        10737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "11515": {
      "fn": "Cafe._updateStarterScore",
      "jump": "i",
      "offset": [
        10730,
        10737
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11516": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10730,
        10737
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11517": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "11519": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11520": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "LT",
      "path": "0"
    },
    "11521": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D1A"
    },
    "11524": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11525": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11530": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11532": {
      "op": "SHL"
    },
    "11533": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11535": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11536": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "11538": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11540": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11541": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "11543": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11545": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11546": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11547": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "ADD",
      "path": "0"
    },
    "11548": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10713,
        10738
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11549": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "11551": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10706,
        10711
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11552": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "11554": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11555": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "LT",
      "path": "0"
    },
    "11556": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3D"
    },
    "11559": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11560": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11565": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11567": {
      "op": "SHL"
    },
    "11568": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11570": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11571": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "11573": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11575": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11576": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "11578": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11580": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11581": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11582": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10712
      ],
      "op": "ADD",
      "path": "0"
    },
    "11583": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10689,
        10738
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11584": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10804
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 179,
      "value": "0x11"
    },
    "11586": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10805,
        10812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D4C"
    },
    "11589": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10805,
        10810
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11590": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10811,
        10812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "11592": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10805,
        10812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "11595": {
      "fn": "Cafe._updateStarterScore",
      "jump": "i",
      "offset": [
        10805,
        10812
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11596": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10805,
        10812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11597": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "11599": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11600": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "LT",
      "path": "0"
    },
    "11601": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6A"
    },
    "11604": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11605": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11610": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11612": {
      "op": "SHL"
    },
    "11613": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11615": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11616": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "11618": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11620": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11621": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "11623": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11625": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11626": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11627": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "11629": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11630": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11631": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11632": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "DIV",
      "path": "0"
    },
    "11633": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "ADD",
      "path": "0"
    },
    "11634": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11635": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11636": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "MOD",
      "path": "0"
    },
    "11637": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11639": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "MUL",
      "path": "0"
    },
    "11640": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11641": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11642": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11643": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "11646": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "EXP",
      "path": "0"
    },
    "11647": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11648": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "DIV",
      "path": "0"
    },
    "11649": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "11654": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10784,
        10813
      ],
      "op": "AND",
      "path": "0"
    },
    "11655": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "11657": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10777,
        10782
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11658": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "11660": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11661": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "LT",
      "path": "0"
    },
    "11662": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA7"
    },
    "11665": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11666": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11671": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11673": {
      "op": "SHL"
    },
    "11674": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11676": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11677": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "11679": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11681": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11682": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "11684": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11686": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11687": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11688": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "11690": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11691": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11692": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11693": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "DIV",
      "path": "0"
    },
    "11694": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "ADD",
      "path": "0"
    },
    "11695": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11696": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11697": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "MOD",
      "path": "0"
    },
    "11698": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11700": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10783
      ],
      "op": "MUL",
      "path": "0"
    },
    "11701": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "11704": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "EXP",
      "path": "0"
    },
    "11705": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11706": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11707": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11708": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "11713": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "MUL",
      "path": "0"
    },
    "11714": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "NOT",
      "path": "0"
    },
    "11715": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "AND",
      "path": "0"
    },
    "11716": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11717": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11718": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "11723": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "AND",
      "path": "0"
    },
    "11724": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "MUL",
      "path": "0"
    },
    "11725": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "OR",
      "path": "0"
    },
    "11726": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11727": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11728": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10756,
        10813
      ],
      "op": "POP",
      "path": "0"
    },
    "11729": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10837,
        10842
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 180
    },
    "11730": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10843,
        10844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "11732": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10837,
        10844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DDD"
    },
    "11735": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10837,
        10844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11736": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10837,
        10844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11737": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10837,
        10844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "11740": {
      "fn": "Cafe._updateStarterScore",
      "jump": "i",
      "offset": [
        10837,
        10844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11741": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10837,
        10844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11742": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10831,
        10844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11743": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10831,
        10844
      ],
      "op": "POP",
      "path": "0"
    },
    "11744": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10656,
        10859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE6"
    },
    "11747": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10656,
        10859
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11748": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10656,
        10859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11749": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10912,
        10932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "11751": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10912,
        10939
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11752": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10885,
        10886
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 181,
      "value": "0x0"
    },
    "11754": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10990,
        11012
      ],
      "op": "DUP5",
      "path": "0"
    },
    "11755": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10990,
        11012
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11756": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10990,
        11012
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11757": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10990,
        11000
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "11759": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10990,
        11012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11761": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10990,
        11012
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11762": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10990,
        11012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11764": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10990,
        11012
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11765": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10990,
        11012
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11766": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10990,
        11026
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11767": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10885,
        10886
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11768": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10885,
        10886
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "11769": {
      "op": "POP"
    },
    "11770": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10912,
        10939
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "11775": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10912,
        10939
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11776": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10912,
        10939
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11777": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10912,
        10939
      ],
      "op": "AND",
      "path": "0"
    },
    "11778": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10912,
        10939
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11779": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10885,
        10886
      ],
      "op": "DUP5",
      "path": "0"
    },
    "11780": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10885,
        10886
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11781": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10972,
        11026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E17"
    },
    "11784": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10972,
        11026
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11787": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "11789": {
      "op": "SHL"
    },
    "11790": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10990,
        11026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11791": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10990,
        11026
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11792": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10990,
        11026
      ],
      "op": "DIV",
      "path": "0"
    },
    "11793": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10990,
        11026
      ],
      "op": "AND",
      "path": "0"
    },
    "11794": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10972,
        10987
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "11795": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10972,
        11026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EBA"
    },
    "11798": {
      "fn": "Cafe._updateStarterScore",
      "jump": "i",
      "offset": [
        10972,
        11026
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11799": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10972,
        11026
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11800": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10949,
        11028
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11801": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10949,
        11028
      ],
      "op": "POP",
      "path": "0"
    },
    "11802": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11038,
        11234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11803": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11053,
        11059
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11804": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11044,
        11059
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "11809": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11044,
        11059
      ],
      "op": "AND",
      "path": "0"
    },
    "11810": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11044,
        11049
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11811": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11044,
        11059
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "11816": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11044,
        11059
      ],
      "op": "AND",
      "path": "0"
    },
    "11817": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11044,
        11059
      ],
      "op": "GT",
      "path": "0"
    },
    "11818": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11038,
        11234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E8C"
    },
    "11821": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11038,
        11234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11822": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11080,
        11087
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 182,
      "value": "0x2E38"
    },
    "11825": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11080,
        11085
      ],
      "op": "DUP5",
      "path": "0"
    },
    "11826": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11086,
        11087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "11828": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11080,
        11087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "11831": {
      "fn": "Cafe._updateStarterScore",
      "jump": "i",
      "offset": [
        11080,
        11087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11832": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11080,
        11087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11833": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11074,
        11087
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "11834": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11074,
        11087
      ],
      "op": "POP",
      "path": "0"
    },
    "11835": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11110,
        11112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "11837": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11104,
        11109
      ],
      "op": "DUP5",
      "path": "0"
    },
    "11838": {
      "branch": 240,
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11104,
        11112
      ],
      "op": "GT",
      "path": "0"
    },
    "11839": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11101,
        11224
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11840": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11101,
        11224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E48"
    },
    "11843": {
      "branch": 240,
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11101,
        11224
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11844": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11131,
        11136
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 183,
      "value": "0x2E8C"
    },
    "11847": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11131,
        11136
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11848": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11101,
        11224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11849": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11202
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 184,
      "value": "0x11"
    },
    "11851": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11203,
        11208
      ],
      "op": "DUP5",
      "path": "0"
    },
    "11852": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "11854": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11855": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "LT",
      "path": "0"
    },
    "11856": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E69"
    },
    "11859": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11860": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11865": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11867": {
      "op": "SHL"
    },
    "11868": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11870": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11871": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "11873": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11875": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11876": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "11878": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11880": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11881": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11882": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "11884": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11885": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11886": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11887": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "DIV",
      "path": "0"
    },
    "11888": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "ADD",
      "path": "0"
    },
    "11889": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11890": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11891": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "MOD",
      "path": "0"
    },
    "11892": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11894": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "MUL",
      "path": "0"
    },
    "11895": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11896": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11897": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11898": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "11901": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "EXP",
      "path": "0"
    },
    "11902": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11903": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "DIV",
      "path": "0"
    },
    "11904": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "11909": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11182,
        11209
      ],
      "op": "AND",
      "path": "0"
    },
    "11910": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11173,
        11209
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11911": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11173,
        11209
      ],
      "op": "POP",
      "path": "0"
    },
    "11912": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11038,
        11234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E1A"
    },
    "11915": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11038,
        11234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11916": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11038,
        11234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11917": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11253,
        11255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "11919": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11247,
        11252
      ],
      "op": "DUP5",
      "path": "0"
    },
    "11920": {
      "branch": 241,
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11247,
        11255
      ],
      "op": "LT",
      "path": "0"
    },
    "11921": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11244,
        11719
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11922": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11244,
        11719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BF7"
    },
    "11925": {
      "branch": 241,
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11244,
        11719
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11926": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11283,
        11284
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "11928": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11298,
        11613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11929": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11312,
        11317
      ],
      "op": "DUP5",
      "path": "0"
    },
    "11930": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11304,
        11310
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11931": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11304,
        11317
      ],
      "op": "LT",
      "path": "0"
    },
    "11932": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11298,
        11613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FA6"
    },
    "11935": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11298,
        11613
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11936": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11381
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 185,
      "value": "0x13"
    },
    "11938": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11382,
        11388
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11939": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "11941": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11942": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "LT",
      "path": "0"
    },
    "11943": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EC0"
    },
    "11946": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11947": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11952": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11954": {
      "op": "SHL"
    },
    "11955": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11957": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11958": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "11960": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11962": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11963": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "11965": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11967": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11968": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11969": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "ADD",
      "path": "0"
    },
    "11970": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11365,
        11389
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11971": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "11973": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11353,
        11361
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ECF"
    },
    "11976": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11353,
        11359
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11977": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11360,
        11361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "11979": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11353,
        11361
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "11982": {
      "fn": "Cafe._updateStarterScore",
      "jump": "i",
      "offset": [
        11353,
        11361
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11983": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11353,
        11361
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11984": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "11986": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11987": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "LT",
      "path": "0"
    },
    "11988": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EED"
    },
    "11991": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11992": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11997": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11999": {
      "op": "SHL"
    },
    "12000": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12002": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12003": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "12005": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12007": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12008": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "12010": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12012": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "REVERT",
      "path": "0"
    },
    "12013": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12014": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11362
      ],
      "op": "ADD",
      "path": "0"
    },
    "12015": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11336,
        11389
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "12016": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11458
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 186,
      "value": "0x11"
    },
    "12018": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11459,
        11465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12019": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "12021": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12022": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "LT",
      "path": "0"
    },
    "12023": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F10"
    },
    "12026": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12027": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12032": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12034": {
      "op": "SHL"
    },
    "12035": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12037": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12038": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "12040": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12042": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12043": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "12045": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12047": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "REVERT",
      "path": "0"
    },
    "12048": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12049": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "12051": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12052": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12053": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12054": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "DIV",
      "path": "0"
    },
    "12055": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "ADD",
      "path": "0"
    },
    "12056": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12057": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12058": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "MOD",
      "path": "0"
    },
    "12059": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12061": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "MUL",
      "path": "0"
    },
    "12062": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12063": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12064": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12065": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "12068": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "EXP",
      "path": "0"
    },
    "12069": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12070": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "DIV",
      "path": "0"
    },
    "12071": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "12076": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11438,
        11466
      ],
      "op": "AND",
      "path": "0"
    },
    "12077": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "12079": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11428,
        11434
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12080": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11435,
        11436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "12082": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11428,
        11436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F3B"
    },
    "12085": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11428,
        11436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12086": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11428,
        11436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12087": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11428,
        11436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E36"
    },
    "12090": {
      "fn": "Cafe._updateStarterScore",
      "jump": "i",
      "offset": [
        11428,
        11436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12091": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11428,
        11436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12092": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "12094": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12095": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "LT",
      "path": "0"
    },
    "12096": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F59"
    },
    "12099": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12100": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12105": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12107": {
      "op": "SHL"
    },
    "12108": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12110": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12111": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "12113": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12115": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12116": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "12118": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12120": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "REVERT",
      "path": "0"
    },
    "12121": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12122": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "12124": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12125": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12126": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12127": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "DIV",
      "path": "0"
    },
    "12128": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "ADD",
      "path": "0"
    },
    "12129": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12130": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12131": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "MOD",
      "path": "0"
    },
    "12132": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12134": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11437
      ],
      "op": "MUL",
      "path": "0"
    },
    "12135": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "12138": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "EXP",
      "path": "0"
    },
    "12139": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12140": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12141": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12142": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "12147": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "MUL",
      "path": "0"
    },
    "12148": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "NOT",
      "path": "0"
    },
    "12149": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "AND",
      "path": "0"
    },
    "12150": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12151": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12152": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "12157": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "AND",
      "path": "0"
    },
    "12158": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "MUL",
      "path": "0"
    },
    "12159": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "OR",
      "path": "0"
    },
    "12160": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12161": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "12162": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11407,
        11466
      ],
      "op": "POP",
      "path": "0"
    },
    "12163": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11487,
        11493
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12164": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11495,
        11496
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12166": {
      "branch": 242,
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11487,
        11496
      ],
      "op": "EQ",
      "path": "0"
    },
    "12167": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11484,
        11599
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F9C"
    },
    "12170": {
      "branch": 242,
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11484,
        11599
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12171": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11522,
        11530
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 187,
      "value": "0x2F95"
    },
    "12174": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11529,
        11530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "12176": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11522,
        11528
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12177": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11522,
        11530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EBA"
    },
    "12180": {
      "fn": "Cafe._updateStarterScore",
      "jump": "i",
      "offset": [
        11522,
        11530
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12181": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11522,
        11530
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12182": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11515,
        11530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12183": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11515,
        11530
      ],
      "op": "POP",
      "path": "0"
    },
    "12184": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11484,
        11599
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FA1"
    },
    "12187": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11484,
        11599
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12188": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11484,
        11599
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12189": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11575,
        11580
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 188,
      "value": "0x2FA6"
    },
    "12192": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11575,
        11580
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12193": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11484,
        11599
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12194": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11298,
        11613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E98"
    },
    "12197": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11298,
        11613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12198": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11298,
        11613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12199": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11651,
        11661
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 189
    },
    "12200": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "12202": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11643,
        11648
      ],
      "op": "DUP7",
      "path": "0"
    },
    "12203": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "12205": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12206": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "LT",
      "path": "0"
    },
    "12207": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FC8"
    },
    "12210": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12211": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12216": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12218": {
      "op": "SHL"
    },
    "12219": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12221": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12222": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "12224": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12226": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12227": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "12229": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12231": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "REVERT",
      "path": "0"
    },
    "12232": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12233": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11649
      ],
      "op": "ADD",
      "path": "0"
    },
    "12234": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11626,
        11661
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "12235": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11703,
        11708
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 190
    },
    "12236": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "12238": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11696,
        11701
      ],
      "op": "DUP7",
      "path": "0"
    },
    "12239": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "12241": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12242": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "LT",
      "path": "0"
    },
    "12243": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FEC"
    },
    "12246": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12247": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12252": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12254": {
      "op": "SHL"
    },
    "12255": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12257": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12258": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "12260": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12262": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12263": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "12265": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12267": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "REVERT",
      "path": "0"
    },
    "12268": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12269": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "12271": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12272": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12273": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12274": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "DIV",
      "path": "0"
    },
    "12275": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "ADD",
      "path": "0"
    },
    "12276": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12277": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12278": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "MOD",
      "path": "0"
    },
    "12279": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12281": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11702
      ],
      "op": "MUL",
      "path": "0"
    },
    "12282": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "12285": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "EXP",
      "path": "0"
    },
    "12286": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12287": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12288": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12289": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "12294": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "MUL",
      "path": "0"
    },
    "12295": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "NOT",
      "path": "0"
    },
    "12296": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "AND",
      "path": "0"
    },
    "12297": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12298": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12299": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "12304": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "AND",
      "path": "0"
    },
    "12305": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "MUL",
      "path": "0"
    },
    "12306": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "OR",
      "path": "0"
    },
    "12307": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12308": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "12309": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11675,
        11708
      ],
      "op": "POP",
      "path": "0"
    },
    "12310": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        11244,
        11719
      ],
      "op": "POP",
      "path": "0"
    },
    "12311": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10323,
        11725
      ],
      "op": "POP",
      "path": "0"
    },
    "12312": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10323,
        11725
      ],
      "op": "POP",
      "path": "0"
    },
    "12313": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10323,
        11725
      ],
      "op": "POP",
      "path": "0"
    },
    "12314": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10323,
        11725
      ],
      "op": "POP",
      "path": "0"
    },
    "12315": {
      "fn": "Cafe._updateStarterScore",
      "offset": [
        10323,
        11725
      ],
      "op": "POP",
      "path": "0"
    },
    "12316": {
      "fn": "Cafe._updateStarterScore",
      "jump": "o",
      "offset": [
        10323,
        11725
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12317": {
      "fn": "EnumerableSet._add",
      "offset": [
        1632,
        2036
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "12318": {
      "fn": "EnumerableSet._add",
      "offset": [
        1695,
        1699
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12320": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 191
    },
    "12321": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12322": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12323": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "12325": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3914
      ],
      "op": "DUP4",
      "path": "9"
    },
    "12326": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3914
      ],
      "op": "ADD",
      "path": "9"
    },
    "12327": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "12329": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12330": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "12332": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12333": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "12334": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "12335": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3064"
    },
    "12338": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "12339": {
      "op": "POP"
    },
    "12340": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 192
    },
    "12341": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "12342": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "12344": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12345": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12346": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "ADD",
      "path": "9"
    },
    "12347": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "9"
    },
    "12348": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "12349": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12351": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "9"
    },
    "12352": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12353": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12354": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "12356": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP1",
      "path": "9"
    },
    "12357": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP3",
      "path": "9"
    },
    "12358": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "12359": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12360": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "12361": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "ADD",
      "path": "9"
    },
    "12362": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "9"
    },
    "12363": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12364": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "12365": {
      "fn": "EnumerableSet._add",
      "offset": [
        1933,
        1951
      ],
      "op": "DUP5",
      "path": "9",
      "statement": 193
    },
    "12366": {
      "fn": "EnumerableSet._add",
      "offset": [
        1933,
        1951
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "12367": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "DUP5",
      "path": "9"
    },
    "12368": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "DUP3",
      "path": "9"
    },
    "12369": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12370": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "DUP3",
      "path": "9"
    },
    "12371": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "DUP7",
      "path": "9"
    },
    "12372": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "ADD",
      "path": "9"
    },
    "12373": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12374": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "12375": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12376": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "12378": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12379": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "12380": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "12381": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12382": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "12383": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "12384": {
      "fn": "EnumerableSet._add",
      "offset": [
        1965,
        1976
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 194,
      "value": "0x8A1"
    },
    "12387": {
      "fn": "EnumerableSet._add",
      "offset": [
        1965,
        1976
      ],
      "op": "JUMP",
      "path": "9"
    },
    "12388": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "12389": {
      "op": "POP"
    },
    "12390": {
      "fn": "EnumerableSet._add",
      "offset": [
        2014,
        2019
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 195,
      "value": "0x0"
    },
    "12392": {
      "fn": "EnumerableSet._add",
      "offset": [
        2007,
        2019
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8A1"
    },
    "12395": {
      "fn": "EnumerableSet._add",
      "offset": [
        2007,
        2019
      ],
      "op": "JUMP",
      "path": "9"
    },
    "12396": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2204,
        3725
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "12397": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2270,
        2274
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12399": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12400": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12401": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12402": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "12404": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2419
      ],
      "op": "DUP4",
      "path": "9"
    },
    "12405": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2419
      ],
      "op": "ADD",
      "path": "9"
    },
    "12406": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "12408": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12409": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "12411": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12412": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "12413": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "12414": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2441,
        2456
      ],
      "op": "DUP1",
      "path": "9"
    },
    "12415": {
      "branch": 265,
      "fn": "EnumerableSet._remove",
      "offset": [
        2441,
        2456
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "12416": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2437,
        3719
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3179"
    },
    "12419": {
      "branch": 265,
      "fn": "EnumerableSet._remove",
      "offset": [
        2437,
        3719
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "12420": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2798,
        2819
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12422": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2822,
        2836
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3090"
    },
    "12425": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2835,
        2836
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "12427": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2822,
        2832
      ],
      "op": "DUP4",
      "path": "9"
    },
    "12428": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2822,
        2836
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3EBA"
    },
    "12431": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        2822,
        2836
      ],
      "op": "JUMP",
      "path": "9"
    },
    "12432": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2822,
        2836
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "12433": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2888
      ],
      "op": "DUP6",
      "path": "9"
    },
    "12434": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2888
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "12435": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2798,
        2836
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12436": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2798,
        2836
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "12437": {
      "op": "POP"
    },
    "12438": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2850,
        2867
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12440": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2850,
        2867
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12441": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2892
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x30A4"
    },
    "12444": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12445": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2891,
        2892
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "12447": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2891,
        2892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12448": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2892
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3EBA"
    },
    "12451": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        2870,
        2892
      ],
      "op": "JUMP",
      "path": "9"
    },
    "12452": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2892
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "12453": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2850,
        2892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12454": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2850,
        2892
      ],
      "op": "POP",
      "path": "9"
    },
    "12455": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3132,
        3149
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12457": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3155
      ],
      "op": "DUP7",
      "path": "9"
    },
    "12458": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3163
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12460": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3163
      ],
      "op": "ADD",
      "path": "9"
    },
    "12461": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3164,
        3173
      ],
      "op": "DUP3",
      "path": "9"
    },
    "12462": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12463": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "12464": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12465": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "LT",
      "path": "9"
    },
    "12466": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x30CB"
    },
    "12469": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "12470": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12475": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12477": {
      "op": "SHL"
    },
    "12478": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12480": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12481": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x32"
    },
    "12483": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "12485": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12486": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "12488": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12490": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "REVERT",
      "path": "9"
    },
    "12491": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "12492": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12493": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12495": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12496": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "12498": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12500": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "12501": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "ADD",
      "path": "9"
    },
    "12502": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "12503": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3132,
        3174
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12504": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3132,
        3174
      ],
      "op": "POP",
      "path": "9"
    },
    "12505": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3295,
        3304
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 196
    },
    "12506": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3269
      ],
      "op": "DUP8",
      "path": "9"
    },
    "12507": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3277
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12509": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3277
      ],
      "op": "ADD",
      "path": "9"
    },
    "12510": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3278,
        3291
      ],
      "op": "DUP5",
      "path": "9"
    },
    "12511": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12512": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "12513": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12514": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "LT",
      "path": "9"
    },
    "12515": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x30FC"
    },
    "12518": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "12519": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12524": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12526": {
      "op": "SHL"
    },
    "12527": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12529": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12530": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x32"
    },
    "12532": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "12534": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12535": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "12537": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12539": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "REVERT",
      "path": "9"
    },
    "12540": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "12541": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12543": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "12544": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "DUP3",
      "path": "9"
    },
    "12545": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12546": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "12548": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "DUP1",
      "path": "9"
    },
    "12549": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "DUP4",
      "path": "9"
    },
    "12550": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "12551": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12552": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "12553": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "ADD",
      "path": "9"
    },
    "12554": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3304
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "12555": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3304
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12556": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3304
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "12557": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3304
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "12558": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 197
    },
    "12559": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12560": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12561": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3382
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "12563": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3382
      ],
      "op": "DUP10",
      "path": "9"
    },
    "12564": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3382
      ],
      "op": "ADD",
      "path": "9"
    },
    "12565": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12566": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "12567": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12568": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "12570": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12571": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "12572": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3406
      ],
      "op": "DUP5",
      "path": "9"
    },
    "12573": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3406
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12574": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3406
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "12575": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "DUP7",
      "path": "9",
      "statement": 198
    },
    "12576": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "12577": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3373
      ],
      "op": "DUP8",
      "path": "9"
    },
    "12578": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3373
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12579": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "DUP1",
      "path": "9"
    },
    "12580": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x313D"
    },
    "12583": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "12584": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12589": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12591": {
      "op": "SHL"
    },
    "12592": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12594": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12595": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x31"
    },
    "12597": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "12599": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12600": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "12602": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12604": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "REVERT",
      "path": "9"
    },
    "12605": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "12606": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "12608": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12609": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SUB",
      "path": "9"
    },
    "12610": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12611": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12612": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12613": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12615": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12616": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "12618": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12620": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "12621": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "ADD",
      "path": "9"
    },
    "12622": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12624": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12625": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "12626": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12627": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3528,
        3545
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "12628": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3623
      ],
      "op": "DUP7",
      "path": "9",
      "statement": 199
    },
    "12629": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3632
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "12631": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3632
      ],
      "op": "ADD",
      "path": "9"
    },
    "12632": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12634": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3633,
        3638
      ],
      "op": "DUP8",
      "path": "9"
    },
    "12635": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12636": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12637": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "12639": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "ADD",
      "path": "9"
    },
    "12640": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12641": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12642": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12643": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "12645": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "ADD",
      "path": "9"
    },
    "12646": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12648": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3639
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "12649": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3613,
        3639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12651": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3613,
        3639
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12652": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3613,
        3639
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "12653": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3661,
        3665
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 200,
      "value": "0x1"
    },
    "12655": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "12656": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "POP",
      "path": "9"
    },
    "12657": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "POP",
      "path": "9"
    },
    "12658": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "POP",
      "path": "9"
    },
    "12659": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "POP",
      "path": "9"
    },
    "12660": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "POP",
      "path": "9"
    },
    "12661": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8A1"
    },
    "12664": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3654,
        3665
      ],
      "op": "JUMP",
      "path": "9"
    },
    "12665": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2437,
        3719
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "12666": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3703,
        3708
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 201,
      "value": "0x0"
    },
    "12668": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3696,
        3708
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "12669": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3696,
        3708
      ],
      "op": "POP",
      "path": "9"
    },
    "12670": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3696,
        3708
      ],
      "op": "POP",
      "path": "9"
    },
    "12671": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3696,
        3708
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8A1"
    },
    "12674": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3696,
        3708
      ],
      "op": "JUMP",
      "path": "9"
    },
    "12675": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "12676": {
      "fn": "EnumerableSet._at",
      "offset": [
        4547,
        4565
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 202
    },
    "12677": {
      "fn": "EnumerableSet._at",
      "offset": [
        4547,
        4565
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "12678": {
      "fn": "EnumerableSet._at",
      "offset": [
        4520,
        4527
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12680": {
      "fn": "EnumerableSet._at",
      "offset": [
        4520,
        4527
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12681": {
      "branch": 266,
      "fn": "EnumerableSet._at",
      "offset": [
        4547,
        4573
      ],
      "op": "DUP3",
      "path": "9"
    },
    "12682": {
      "op": "LT"
    },
    "12683": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x31E1"
    },
    "12686": {
      "branch": 266,
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "12687": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "12689": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "12690": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12694": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12696": {
      "op": "SHL"
    },
    "12697": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12698": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12701": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "12703": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "DUP3",
      "path": "9"
    },
    "12704": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "ADD",
      "path": "9"
    },
    "12705": {
      "op": "MSTORE"
    },
    "12706": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12708": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12710": {
      "op": "DUP3"
    },
    "12711": {
      "op": "ADD"
    },
    "12712": {
      "op": "MSTORE"
    },
    "12713": {
      "op": "PUSH32",
      "value": "0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E"
    },
    "12746": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12748": {
      "op": "DUP3"
    },
    "12749": {
      "op": "ADD"
    },
    "12750": {
      "op": "MSTORE"
    },
    "12751": {
      "op": "PUSH2",
      "value": "0x6473"
    },
    "12754": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "12756": {
      "op": "SHL"
    },
    "12757": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12759": {
      "op": "DUP3"
    },
    "12760": {
      "op": "ADD"
    },
    "12761": {
      "op": "MSTORE"
    },
    "12762": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12764": {
      "op": "ADD"
    },
    "12765": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x873"
    },
    "12768": {
      "op": "JUMP"
    },
    "12769": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "12770": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4632
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 203
    },
    "12771": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4640
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12773": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4640
      ],
      "op": "ADD",
      "path": "9"
    },
    "12774": {
      "fn": "EnumerableSet._at",
      "offset": [
        4641,
        4646
      ],
      "op": "DUP3",
      "path": "9"
    },
    "12775": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12776": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "12777": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12778": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "LT",
      "path": "9"
    },
    "12779": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3204"
    },
    "12782": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "12783": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12788": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12790": {
      "op": "SHL"
    },
    "12791": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12793": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12794": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x32"
    },
    "12796": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "12798": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12799": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "12801": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12803": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "REVERT",
      "path": "9"
    },
    "12804": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "12805": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12806": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12808": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12809": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "12811": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "12813": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "12814": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "ADD",
      "path": "9"
    },
    "12815": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "12816": {
      "fn": "EnumerableSet._at",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12817": {
      "fn": "EnumerableSet._at",
      "offset": [
        4622,
        4647
      ],
      "op": "POP",
      "path": "9"
    },
    "12818": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "12819": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "12820": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "POP",
      "path": "9"
    },
    "12821": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "POP",
      "path": "9"
    },
    "12822": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4453,
        4654
      ],
      "op": "JUMP",
      "path": "9"
    },
    "12823": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10490,
        11450
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12830": {
      "op": "SHL"
    },
    "12831": {
      "op": "SUB"
    },
    "12832": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10610,
        10631
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 204
    },
    "12833": {
      "branch": 261,
      "fn": "ERC1155._burnBatch",
      "offset": [
        10610,
        10631
      ],
      "op": "AND",
      "path": "1"
    },
    "12834": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10602,
        10671
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x323D"
    },
    "12837": {
      "branch": 261,
      "fn": "ERC1155._burnBatch",
      "offset": [
        10602,
        10671
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12838": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10602,
        10671
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12840": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10602,
        10671
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12841": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12845": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12847": {
      "op": "SHL"
    },
    "12848": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10602,
        10671
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12849": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10602,
        10671
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12850": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10602,
        10671
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12852": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10602,
        10671
      ],
      "op": "ADD",
      "path": "1"
    },
    "12853": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10602,
        10671
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "12856": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10602,
        10671
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12857": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10602,
        10671
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D3D"
    },
    "12860": {
      "fn": "ERC1155._burnBatch",
      "jump": "i",
      "offset": [
        10602,
        10671
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12861": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10602,
        10671
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12862": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10703,
        10710
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 205
    },
    "12863": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10703,
        10717
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12864": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10689,
        10692
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12865": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10689,
        10699
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12866": {
      "branch": 262,
      "fn": "ERC1155._burnBatch",
      "offset": [
        10689,
        10717
      ],
      "op": "EQ",
      "path": "1"
    },
    "12867": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10681,
        10762
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x325E"
    },
    "12870": {
      "branch": 262,
      "fn": "ERC1155._burnBatch",
      "offset": [
        10681,
        10762
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12871": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10681,
        10762
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12873": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10681,
        10762
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12880": {
      "op": "SHL"
    },
    "12881": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10681,
        10762
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12882": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10681,
        10762
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12883": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10681,
        10762
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12885": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10681,
        10762
      ],
      "op": "ADD",
      "path": "1"
    },
    "12886": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10681,
        10762
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "12889": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10681,
        10762
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12890": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10681,
        10762
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DCA"
    },
    "12893": {
      "fn": "ERC1155._burnBatch",
      "jump": "i",
      "offset": [
        10681,
        10762
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12894": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10681,
        10762
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12895": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10814,
        10883
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 206,
      "value": "0x40"
    },
    "12897": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10814,
        10883
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12898": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10814,
        10883
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12899": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10814,
        10883
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "12901": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10814,
        10883
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12902": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10814,
        10883
      ],
      "op": "ADD",
      "path": "1"
    },
    "12903": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10814,
        10883
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12904": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10814,
        10883
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12905": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10814,
        10883
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12906": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10773,
        10789
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12908": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10814,
        10883
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12909": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10814,
        10883
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12910": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10814,
        10883
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12911": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10814,
        10883
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12912": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "12913": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12914": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10894,
        11370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12915": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10915,
        10918
      ],
      "op": "DUP4",
      "path": "1"
    },
    "12916": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10915,
        10925
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12917": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10911,
        10912
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12918": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10911,
        10925
      ],
      "op": "LT",
      "path": "1"
    },
    "12919": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10894,
        11370
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "12920": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10894,
        11370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x338B"
    },
    "12923": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10894,
        11370
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12924": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10946,
        10956
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12926": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10962
      ],
      "op": "DUP5",
      "path": "1"
    },
    "12927": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10963,
        10964
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12928": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12929": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12930": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12931": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "LT",
      "path": "1"
    },
    "12932": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x329D"
    },
    "12935": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12936": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12941": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12943": {
      "op": "SHL"
    },
    "12944": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12946": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12947": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "12949": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12951": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12952": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "12954": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12956": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "REVERT",
      "path": "1"
    },
    "12957": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12958": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "12960": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "MUL",
      "path": "1"
    },
    "12961": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "12963": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "ADD",
      "path": "1"
    },
    "12964": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "ADD",
      "path": "1"
    },
    "12965": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10959,
        10965
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12966": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10946,
        10965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12967": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10946,
        10965
      ],
      "op": "POP",
      "path": "1"
    },
    "12968": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10979,
        10993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12970": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11003
      ],
      "op": "DUP5",
      "path": "1"
    },
    "12971": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11004,
        11005
      ],
      "op": "DUP4",
      "path": "1"
    },
    "12972": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12973": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12974": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12975": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "LT",
      "path": "1"
    },
    "12976": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x32C9"
    },
    "12979": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12980": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12985": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12987": {
      "op": "SHL"
    },
    "12988": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12990": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12991": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "12993": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12995": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12996": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "12998": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13000": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "REVERT",
      "path": "1"
    },
    "13001": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13002": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "13004": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13005": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13006": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "MUL",
      "path": "1"
    },
    "13007": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13008": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13009": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13010": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "ADD",
      "path": "1"
    },
    "13011": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13012": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "ADD",
      "path": "1"
    },
    "13013": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13014": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11021,
        11043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13016": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11059
      ],
      "op": "DUP5",
      "path": "1"
    },
    "13017": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11059
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13018": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11059
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13019": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "13021": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11059
      ],
      "op": "DUP4",
      "path": "1"
    },
    "13022": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11059
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13023": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11059
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13025": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11059
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13026": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11059
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13027": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11059
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "13028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13034": {
      "op": "SHL"
    },
    "13035": {
      "op": "SUB"
    },
    "13036": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11068
      ],
      "op": "DUP13",
      "path": "1"
    },
    "13037": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11068
      ],
      "op": "AND",
      "path": "1"
    },
    "13038": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11068
      ],
      "op": "DUP4",
      "path": "1"
    },
    "13039": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11068
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13040": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11068
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13041": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11068
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "13042": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11068
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13043": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11068
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13044": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11068
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13045": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11068
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "13046": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11068
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "13047": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13048": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "13049": {
      "op": "POP"
    },
    "13050": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11068
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13051": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11103,
        11124
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3304"
    },
    "13054": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10996,
        11006
      ],
      "op": "DUP4",
      "path": "1"
    },
    "13055": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11046,
        11068
      ],
      "op": "DUP4",
      "path": "1"
    },
    "13056": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11103,
        11124
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3EBA"
    },
    "13059": {
      "fn": "ERC1155._burnBatch",
      "jump": "i",
      "offset": [
        11103,
        11124
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13060": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11103,
        11124
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13061": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11082,
        11124
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13062": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11082,
        11124
      ],
      "op": "POP",
      "path": "1"
    },
    "13063": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11164,
        11170
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 207
    },
    "13064": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11146,
        11160
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13065": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11146,
        11170
      ],
      "op": "LT",
      "path": "1"
    },
    "13066": {
      "branch": 263,
      "fn": "ERC1155._burnBatch",
      "offset": [
        11146,
        11170
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "13067": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11138,
        11211
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3326"
    },
    "13070": {
      "branch": 263,
      "fn": "ERC1155._burnBatch",
      "offset": [
        11138,
        11211
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13071": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11138,
        11211
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13073": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11138,
        11211
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13074": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13078": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13080": {
      "op": "SHL"
    },
    "13081": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11138,
        11211
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13082": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11138,
        11211
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13083": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11138,
        11211
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "13085": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11138,
        11211
      ],
      "op": "ADD",
      "path": "1"
    },
    "13086": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11138,
        11211
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "13089": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11138,
        11211
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13090": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11138,
        11211
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C31"
    },
    "13093": {
      "fn": "ERC1155._burnBatch",
      "jump": "i",
      "offset": [
        11138,
        11211
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13094": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11138,
        11211
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13095": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11238
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 208,
      "value": "0x0"
    },
    "13097": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11238
      ],
      "op": "DUP5",
      "path": "1"
    },
    "13098": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11238
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13099": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11238
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13100": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11234
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "13102": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11238
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "13104": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11238
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13105": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11238
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13106": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11238
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13107": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11238
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13109": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11238
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13110": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11238
      ],
      "op": "DUP4",
      "path": "1"
    },
    "13111": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11238
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "13112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13118": {
      "op": "SHL"
    },
    "13119": {
      "op": "SUB"
    },
    "13120": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11247
      ],
      "op": "DUP14",
      "path": "1"
    },
    "13121": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11247
      ],
      "op": "AND",
      "path": "1"
    },
    "13122": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11247
      ],
      "op": "DUP5",
      "path": "1"
    },
    "13123": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11247
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13124": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13125": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11247
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13126": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11247
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13127": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13128": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11247
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "13129": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11260
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13130": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11260
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13131": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11225,
        11260
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "13132": {
      "branch": 264,
      "fn": "ERC1155._burnBatch",
      "offset": [
        11278,
        11292
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13133": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11274,
        11360
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3374"
    },
    "13136": {
      "branch": 264,
      "fn": "ERC1155._burnBatch",
      "offset": [
        11274,
        11360
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13143": {
      "op": "SHL"
    },
    "13144": {
      "op": "SUB"
    },
    "13145": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11334
      ],
      "op": "DUP10",
      "path": "1",
      "statement": 209
    },
    "13146": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11334
      ],
      "op": "AND",
      "path": "1"
    },
    "13147": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11325
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13149": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11334
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13150": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11334
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13151": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11334
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13152": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11334
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "13154": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11334
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13155": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11334
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13156": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11334
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13157": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11334
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13159": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11334
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13160": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11334
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "13161": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3372"
    },
    "13164": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13165": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11342,
        11344
      ],
      "op": "DUP6",
      "path": "1"
    },
    "13166": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11341
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2030"
    },
    "13169": {
      "fn": "ERC1155._burnBatch",
      "jump": "i",
      "offset": [
        11312,
        11345
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13170": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13171": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11312,
        11345
      ],
      "op": "POP",
      "path": "1"
    },
    "13172": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11274,
        11360
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13173": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10894,
        11370
      ],
      "op": "POP",
      "path": "1"
    },
    "13174": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10894,
        11370
      ],
      "op": "POP",
      "path": "1"
    },
    "13175": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10894,
        11370
      ],
      "op": "POP",
      "path": "1"
    },
    "13176": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10894,
        11370
      ],
      "op": "POP",
      "path": "1"
    },
    "13177": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10927,
        10930
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 210
    },
    "13178": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10927,
        10930
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13179": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10927,
        10930
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3383"
    },
    "13182": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10927,
        10930
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13183": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10927,
        10930
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F39"
    },
    "13186": {
      "fn": "ERC1155._burnBatch",
      "jump": "i",
      "offset": [
        10927,
        10930
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13187": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10927,
        10930
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13188": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10927,
        10930
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13189": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10927,
        10930
      ],
      "op": "POP",
      "path": "1"
    },
    "13190": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10927,
        10930
      ],
      "op": "POP",
      "path": "1"
    },
    "13191": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10894,
        11370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3272"
    },
    "13194": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10894,
        11370
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13195": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10894,
        11370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13196": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10894,
        11370
      ],
      "op": "POP",
      "path": "1"
    },
    "13197": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11426,
        11427
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 211,
      "value": "0x0"
    },
    "13199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13205": {
      "op": "SHL"
    },
    "13206": {
      "op": "SUB"
    },
    "13207": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "AND",
      "path": "1"
    },
    "13208": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11409,
        11416
      ],
      "op": "DUP5",
      "path": "1"
    },
    "13209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13215": {
      "op": "SHL"
    },
    "13216": {
      "op": "SUB"
    },
    "13217": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "AND",
      "path": "1"
    },
    "13218": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11399,
        11407
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13225": {
      "op": "SHL"
    },
    "13226": {
      "op": "SUB"
    },
    "13227": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "AND",
      "path": "1"
    },
    "13228": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "13261": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11430,
        11433
      ],
      "op": "DUP7",
      "path": "1"
    },
    "13262": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11435,
        11442
      ],
      "op": "DUP7",
      "path": "1"
    },
    "13263": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13265": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13266": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33DC"
    },
    "13269": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "13270": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13271": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13272": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3BA8"
    },
    "13275": {
      "fn": "ERC1155._burnBatch",
      "jump": "i",
      "offset": [
        11385,
        11443
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13276": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13277": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13279": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13280": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13281": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13282": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "SUB",
      "path": "1"
    },
    "13283": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13284": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        11385,
        11443
      ],
      "op": "LOG4",
      "path": "1"
    },
    "13285": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10490,
        11450
      ],
      "op": "POP",
      "path": "1"
    },
    "13286": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10490,
        11450
      ],
      "op": "POP",
      "path": "1"
    },
    "13287": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10490,
        11450
      ],
      "op": "POP",
      "path": "1"
    },
    "13288": {
      "fn": "ERC1155._burnBatch",
      "offset": [
        10490,
        11450
      ],
      "op": "POP",
      "path": "1"
    },
    "13289": {
      "fn": "ERC1155._burnBatch",
      "jump": "o",
      "offset": [
        10490,
        11450
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13290": {
      "op": "JUMPDEST"
    },
    "13291": {
      "op": "DUP3"
    },
    "13292": {
      "op": "DUP1"
    },
    "13293": {
      "op": "SLOAD"
    },
    "13294": {
      "op": "PUSH2",
      "value": "0x33F6"
    },
    "13297": {
      "op": "SWAP1"
    },
    "13298": {
      "op": "PUSH2",
      "value": "0x3ED1"
    },
    "13301": {
      "jump": "i",
      "op": "JUMP"
    },
    "13302": {
      "op": "JUMPDEST"
    },
    "13303": {
      "op": "SWAP1"
    },
    "13304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13306": {
      "op": "MSTORE"
    },
    "13307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13311": {
      "op": "KECCAK256"
    },
    "13312": {
      "op": "SWAP1"
    },
    "13313": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13315": {
      "op": "ADD"
    },
    "13316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13318": {
      "op": "SWAP1"
    },
    "13319": {
      "op": "DIV"
    },
    "13320": {
      "op": "DUP2"
    },
    "13321": {
      "op": "ADD"
    },
    "13322": {
      "op": "SWAP3"
    },
    "13323": {
      "op": "DUP3"
    },
    "13324": {
      "op": "PUSH2",
      "value": "0x3418"
    },
    "13327": {
      "op": "JUMPI"
    },
    "13328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13330": {
      "op": "DUP6"
    },
    "13331": {
      "op": "SSTORE"
    },
    "13332": {
      "op": "PUSH2",
      "value": "0x345E"
    },
    "13335": {
      "op": "JUMP"
    },
    "13336": {
      "op": "JUMPDEST"
    },
    "13337": {
      "op": "DUP3"
    },
    "13338": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13340": {
      "op": "LT"
    },
    "13341": {
      "op": "PUSH2",
      "value": "0x3431"
    },
    "13344": {
      "op": "JUMPI"
    },
    "13345": {
      "op": "DUP1"
    },
    "13346": {
      "op": "MLOAD"
    },
    "13347": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13349": {
      "op": "NOT"
    },
    "13350": {
      "op": "AND"
    },
    "13351": {
      "op": "DUP4"
    },
    "13352": {
      "op": "DUP1"
    },
    "13353": {
      "op": "ADD"
    },
    "13354": {
      "op": "OR"
    },
    "13355": {
      "op": "DUP6"
    },
    "13356": {
      "op": "SSTORE"
    },
    "13357": {
      "op": "PUSH2",
      "value": "0x345E"
    },
    "13360": {
      "op": "JUMP"
    },
    "13361": {
      "op": "JUMPDEST"
    },
    "13362": {
      "op": "DUP3"
    },
    "13363": {
      "op": "DUP1"
    },
    "13364": {
      "op": "ADD"
    },
    "13365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13367": {
      "op": "ADD"
    },
    "13368": {
      "op": "DUP6"
    },
    "13369": {
      "op": "SSTORE"
    },
    "13370": {
      "op": "DUP3"
    },
    "13371": {
      "op": "ISZERO"
    },
    "13372": {
      "op": "PUSH2",
      "value": "0x345E"
    },
    "13375": {
      "op": "JUMPI"
    },
    "13376": {
      "op": "SWAP2"
    },
    "13377": {
      "op": "DUP3"
    },
    "13378": {
      "op": "ADD"
    },
    "13379": {
      "op": "JUMPDEST"
    },
    "13380": {
      "op": "DUP3"
    },
    "13381": {
      "op": "DUP2"
    },
    "13382": {
      "op": "GT"
    },
    "13383": {
      "op": "ISZERO"
    },
    "13384": {
      "op": "PUSH2",
      "value": "0x345E"
    },
    "13387": {
      "op": "JUMPI"
    },
    "13388": {
      "op": "DUP3"
    },
    "13389": {
      "op": "MLOAD"
    },
    "13390": {
      "op": "DUP3"
    },
    "13391": {
      "op": "SSTORE"
    },
    "13392": {
      "op": "SWAP2"
    },
    "13393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13395": {
      "op": "ADD"
    },
    "13396": {
      "op": "SWAP2"
    },
    "13397": {
      "op": "SWAP1"
    },
    "13398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13400": {
      "op": "ADD"
    },
    "13401": {
      "op": "SWAP1"
    },
    "13402": {
      "op": "PUSH2",
      "value": "0x3443"
    },
    "13405": {
      "op": "JUMP"
    },
    "13406": {
      "op": "JUMPDEST"
    },
    "13407": {
      "op": "POP"
    },
    "13408": {
      "op": "PUSH2",
      "value": "0x346A"
    },
    "13411": {
      "op": "SWAP3"
    },
    "13412": {
      "op": "SWAP2"
    },
    "13413": {
      "op": "POP"
    },
    "13414": {
      "op": "PUSH2",
      "value": "0x3514"
    },
    "13417": {
      "jump": "i",
      "op": "JUMP"
    },
    "13418": {
      "op": "JUMPDEST"
    },
    "13419": {
      "op": "POP"
    },
    "13420": {
      "op": "SWAP1"
    },
    "13421": {
      "jump": "o",
      "op": "JUMP"
    },
    "13422": {
      "op": "JUMPDEST"
    },
    "13423": {
      "op": "DUP3"
    },
    "13424": {
      "op": "DUP1"
    },
    "13425": {
      "op": "SLOAD"
    },
    "13426": {
      "op": "DUP3"
    },
    "13427": {
      "op": "DUP3"
    },
    "13428": {
      "op": "SSTORE"
    },
    "13429": {
      "op": "SWAP1"
    },
    "13430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13432": {
      "op": "MSTORE"
    },
    "13433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13437": {
      "op": "KECCAK256"
    },
    "13438": {
      "op": "SWAP1"
    },
    "13439": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "13441": {
      "op": "ADD"
    },
    "13442": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "13444": {
      "op": "SWAP1"
    },
    "13445": {
      "op": "DIV"
    },
    "13446": {
      "op": "DUP2"
    },
    "13447": {
      "op": "ADD"
    },
    "13448": {
      "op": "SWAP3"
    },
    "13449": {
      "op": "DUP3"
    },
    "13450": {
      "op": "ISZERO"
    },
    "13451": {
      "op": "PUSH2",
      "value": "0x345E"
    },
    "13454": {
      "op": "JUMPI"
    },
    "13455": {
      "op": "SWAP2"
    },
    "13456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13458": {
      "op": "MUL"
    },
    "13459": {
      "op": "DUP3"
    },
    "13460": {
      "op": "ADD"
    },
    "13461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13463": {
      "op": "JUMPDEST"
    },
    "13464": {
      "op": "DUP4"
    },
    "13465": {
      "op": "DUP3"
    },
    "13466": {
      "op": "GT"
    },
    "13467": {
      "op": "ISZERO"
    },
    "13468": {
      "op": "PUSH2",
      "value": "0x34DB"
    },
    "13471": {
      "op": "JUMPI"
    },
    "13472": {
      "op": "DUP4"
    },
    "13473": {
      "op": "MLOAD"
    },
    "13474": {
      "op": "DUP4"
    },
    "13475": {
      "op": "DUP3"
    },
    "13476": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13479": {
      "op": "EXP"
    },
    "13480": {
      "op": "DUP2"
    },
    "13481": {
      "op": "SLOAD"
    },
    "13482": {
      "op": "DUP2"
    },
    "13483": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "13488": {
      "op": "MUL"
    },
    "13489": {
      "op": "NOT"
    },
    "13490": {
      "op": "AND"
    },
    "13491": {
      "op": "SWAP1"
    },
    "13492": {
      "op": "DUP4"
    },
    "13493": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "13498": {
      "op": "AND"
    },
    "13499": {
      "op": "MUL"
    },
    "13500": {
      "op": "OR"
    },
    "13501": {
      "op": "SWAP1"
    },
    "13502": {
      "op": "SSTORE"
    },
    "13503": {
      "op": "POP"
    },
    "13504": {
      "op": "SWAP3"
    },
    "13505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13507": {
      "op": "ADD"
    },
    "13508": {
      "op": "SWAP3"
    },
    "13509": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13511": {
      "op": "ADD"
    },
    "13512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13514": {
      "op": "DUP2"
    },
    "13515": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "13517": {
      "op": "ADD"
    },
    "13518": {
      "op": "DIV"
    },
    "13519": {
      "op": "SWAP3"
    },
    "13520": {
      "op": "DUP4"
    },
    "13521": {
      "op": "ADD"
    },
    "13522": {
      "op": "SWAP3"
    },
    "13523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13525": {
      "op": "SUB"
    },
    "13526": {
      "op": "MUL"
    },
    "13527": {
      "op": "PUSH2",
      "value": "0x3497"
    },
    "13530": {
      "op": "JUMP"
    },
    "13531": {
      "op": "JUMPDEST"
    },
    "13532": {
      "op": "DUP1"
    },
    "13533": {
      "op": "ISZERO"
    },
    "13534": {
      "op": "PUSH2",
      "value": "0x350B"
    },
    "13537": {
      "op": "JUMPI"
    },
    "13538": {
      "op": "DUP3"
    },
    "13539": {
      "op": "DUP2"
    },
    "13540": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13543": {
      "op": "EXP"
    },
    "13544": {
      "op": "DUP2"
    },
    "13545": {
      "op": "SLOAD"
    },
    "13546": {
      "op": "SWAP1"
    },
    "13547": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "13552": {
      "op": "MUL"
    },
    "13553": {
      "op": "NOT"
    },
    "13554": {
      "op": "AND"
    },
    "13555": {
      "op": "SWAP1"
    },
    "13556": {
      "op": "SSTORE"
    },
    "13557": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13559": {
      "op": "ADD"
    },
    "13560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13562": {
      "op": "DUP2"
    },
    "13563": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "13565": {
      "op": "ADD"
    },
    "13566": {
      "op": "DIV"
    },
    "13567": {
      "op": "SWAP3"
    },
    "13568": {
      "op": "DUP4"
    },
    "13569": {
      "op": "ADD"
    },
    "13570": {
      "op": "SWAP3"
    },
    "13571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13573": {
      "op": "SUB"
    },
    "13574": {
      "op": "MUL"
    },
    "13575": {
      "op": "PUSH2",
      "value": "0x34DB"
    },
    "13578": {
      "op": "JUMP"
    },
    "13579": {
      "op": "JUMPDEST"
    },
    "13580": {
      "op": "POP"
    },
    "13581": {
      "op": "POP"
    },
    "13582": {
      "op": "PUSH2",
      "value": "0x346A"
    },
    "13585": {
      "op": "SWAP3"
    },
    "13586": {
      "op": "SWAP2"
    },
    "13587": {
      "op": "POP"
    },
    "13588": {
      "op": "JUMPDEST"
    },
    "13589": {
      "op": "JUMPDEST"
    },
    "13590": {
      "op": "DUP1"
    },
    "13591": {
      "op": "DUP3"
    },
    "13592": {
      "op": "GT"
    },
    "13593": {
      "op": "ISZERO"
    },
    "13594": {
      "op": "PUSH2",
      "value": "0x346A"
    },
    "13597": {
      "op": "JUMPI"
    },
    "13598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13600": {
      "op": "DUP2"
    },
    "13601": {
      "op": "SSTORE"
    },
    "13602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13604": {
      "op": "ADD"
    },
    "13605": {
      "op": "PUSH2",
      "value": "0x3515"
    },
    "13608": {
      "op": "JUMP"
    },
    "13609": {
      "op": "JUMPDEST"
    },
    "13610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13612": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13621": {
      "op": "DUP4"
    },
    "13622": {
      "op": "GT"
    },
    "13623": {
      "op": "ISZERO"
    },
    "13624": {
      "op": "PUSH2",
      "value": "0x3543"
    },
    "13627": {
      "op": "JUMPI"
    },
    "13628": {
      "op": "PUSH2",
      "value": "0x3543"
    },
    "13631": {
      "op": "PUSH2",
      "value": "0x3F6A"
    },
    "13634": {
      "jump": "i",
      "op": "JUMP"
    },
    "13635": {
      "op": "JUMPDEST"
    },
    "13636": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13638": {
      "op": "MLOAD"
    },
    "13639": {
      "op": "PUSH2",
      "value": "0x355A"
    },
    "13642": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13644": {
      "op": "DUP6"
    },
    "13645": {
      "op": "ADD"
    },
    "13646": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13648": {
      "op": "NOT"
    },
    "13649": {
      "op": "AND"
    },
    "13650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13652": {
      "op": "ADD"
    },
    "13653": {
      "op": "DUP3"
    },
    "13654": {
      "op": "PUSH2",
      "value": "0x3F0C"
    },
    "13657": {
      "jump": "i",
      "op": "JUMP"
    },
    "13658": {
      "op": "JUMPDEST"
    },
    "13659": {
      "op": "DUP1"
    },
    "13660": {
      "op": "SWAP2"
    },
    "13661": {
      "op": "POP"
    },
    "13662": {
      "op": "DUP4"
    },
    "13663": {
      "op": "DUP2"
    },
    "13664": {
      "op": "MSTORE"
    },
    "13665": {
      "op": "DUP5"
    },
    "13666": {
      "op": "DUP5"
    },
    "13667": {
      "op": "DUP5"
    },
    "13668": {
      "op": "ADD"
    },
    "13669": {
      "op": "GT"
    },
    "13670": {
      "op": "ISZERO"
    },
    "13671": {
      "op": "PUSH2",
      "value": "0x356F"
    },
    "13674": {
      "op": "JUMPI"
    },
    "13675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13677": {
      "op": "DUP1"
    },
    "13678": {
      "op": "REVERT"
    },
    "13679": {
      "op": "JUMPDEST"
    },
    "13680": {
      "op": "DUP4"
    },
    "13681": {
      "op": "DUP4"
    },
    "13682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13684": {
      "op": "DUP4"
    },
    "13685": {
      "op": "ADD"
    },
    "13686": {
      "op": "CALLDATACOPY"
    },
    "13687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13691": {
      "op": "DUP6"
    },
    "13692": {
      "op": "DUP4"
    },
    "13693": {
      "op": "ADD"
    },
    "13694": {
      "op": "ADD"
    },
    "13695": {
      "op": "MSTORE"
    },
    "13696": {
      "op": "POP"
    },
    "13697": {
      "op": "SWAP4"
    },
    "13698": {
      "op": "SWAP3"
    },
    "13699": {
      "op": "POP"
    },
    "13700": {
      "op": "POP"
    },
    "13701": {
      "op": "POP"
    },
    "13702": {
      "jump": "o",
      "op": "JUMP"
    },
    "13703": {
      "op": "JUMPDEST"
    },
    "13704": {
      "op": "DUP1"
    },
    "13705": {
      "op": "CALLDATALOAD"
    },
    "13706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13712": {
      "op": "SHL"
    },
    "13713": {
      "op": "SUB"
    },
    "13714": {
      "op": "DUP2"
    },
    "13715": {
      "op": "AND"
    },
    "13716": {
      "op": "DUP2"
    },
    "13717": {
      "op": "EQ"
    },
    "13718": {
      "op": "PUSH2",
      "value": "0x8F6"
    },
    "13721": {
      "op": "JUMPI"
    },
    "13722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13724": {
      "op": "DUP1"
    },
    "13725": {
      "op": "REVERT"
    },
    "13726": {
      "op": "JUMPDEST"
    },
    "13727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13729": {
      "op": "DUP3"
    },
    "13730": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13732": {
      "op": "DUP4"
    },
    "13733": {
      "op": "ADD"
    },
    "13734": {
      "op": "SLT"
    },
    "13735": {
      "op": "PUSH2",
      "value": "0x35AE"
    },
    "13738": {
      "op": "JUMPI"
    },
    "13739": {
      "op": "DUP1"
    },
    "13740": {
      "op": "DUP2"
    },
    "13741": {
      "op": "REVERT"
    },
    "13742": {
      "op": "JUMPDEST"
    },
    "13743": {
      "op": "DUP2"
    },
    "13744": {
      "op": "CALLDATALOAD"
    },
    "13745": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13747": {
      "op": "PUSH2",
      "value": "0x35BB"
    },
    "13750": {
      "op": "DUP3"
    },
    "13751": {
      "op": "PUSH2",
      "value": "0x3E12"
    },
    "13754": {
      "jump": "i",
      "op": "JUMP"
    },
    "13755": {
      "op": "JUMPDEST"
    },
    "13756": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13758": {
      "op": "MLOAD"
    },
    "13759": {
      "op": "PUSH2",
      "value": "0x35C8"
    },
    "13762": {
      "op": "DUP3"
    },
    "13763": {
      "op": "DUP3"
    },
    "13764": {
      "op": "PUSH2",
      "value": "0x3F0C"
    },
    "13767": {
      "jump": "i",
      "op": "JUMP"
    },
    "13768": {
      "op": "JUMPDEST"
    },
    "13769": {
      "op": "DUP4"
    },
    "13770": {
      "op": "DUP2"
    },
    "13771": {
      "op": "MSTORE"
    },
    "13772": {
      "op": "DUP3"
    },
    "13773": {
      "op": "DUP2"
    },
    "13774": {
      "op": "ADD"
    },
    "13775": {
      "op": "SWAP2"
    },
    "13776": {
      "op": "POP"
    },
    "13777": {
      "op": "DUP6"
    },
    "13778": {
      "op": "DUP4"
    },
    "13779": {
      "op": "ADD"
    },
    "13780": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13782": {
      "op": "DUP6"
    },
    "13783": {
      "op": "SWAP1"
    },
    "13784": {
      "op": "SHL"
    },
    "13785": {
      "op": "DUP8"
    },
    "13786": {
      "op": "ADD"
    },
    "13787": {
      "op": "DUP5"
    },
    "13788": {
      "op": "ADD"
    },
    "13789": {
      "op": "DUP9"
    },
    "13790": {
      "op": "LT"
    },
    "13791": {
      "op": "ISZERO"
    },
    "13792": {
      "op": "PUSH2",
      "value": "0x35E7"
    },
    "13795": {
      "op": "JUMPI"
    },
    "13796": {
      "op": "DUP6"
    },
    "13797": {
      "op": "DUP7"
    },
    "13798": {
      "op": "REVERT"
    },
    "13799": {
      "op": "JUMPDEST"
    },
    "13800": {
      "op": "DUP6"
    },
    "13801": {
      "op": "JUMPDEST"
    },
    "13802": {
      "op": "DUP6"
    },
    "13803": {
      "op": "DUP2"
    },
    "13804": {
      "op": "LT"
    },
    "13805": {
      "op": "ISZERO"
    },
    "13806": {
      "op": "PUSH2",
      "value": "0x3605"
    },
    "13809": {
      "op": "JUMPI"
    },
    "13810": {
      "op": "DUP2"
    },
    "13811": {
      "op": "CALLDATALOAD"
    },
    "13812": {
      "op": "DUP5"
    },
    "13813": {
      "op": "MSTORE"
    },
    "13814": {
      "op": "SWAP3"
    },
    "13815": {
      "op": "DUP5"
    },
    "13816": {
      "op": "ADD"
    },
    "13817": {
      "op": "SWAP3"
    },
    "13818": {
      "op": "SWAP1"
    },
    "13819": {
      "op": "DUP5"
    },
    "13820": {
      "op": "ADD"
    },
    "13821": {
      "op": "SWAP1"
    },
    "13822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13824": {
      "op": "ADD"
    },
    "13825": {
      "op": "PUSH2",
      "value": "0x35E9"
    },
    "13828": {
      "op": "JUMP"
    },
    "13829": {
      "op": "JUMPDEST"
    },
    "13830": {
      "op": "POP"
    },
    "13831": {
      "op": "SWAP1"
    },
    "13832": {
      "op": "SWAP8"
    },
    "13833": {
      "op": "SWAP7"
    },
    "13834": {
      "op": "POP"
    },
    "13835": {
      "op": "POP"
    },
    "13836": {
      "op": "POP"
    },
    "13837": {
      "op": "POP"
    },
    "13838": {
      "op": "POP"
    },
    "13839": {
      "op": "POP"
    },
    "13840": {
      "op": "POP"
    },
    "13841": {
      "jump": "o",
      "op": "JUMP"
    },
    "13842": {
      "op": "JUMPDEST"
    },
    "13843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13845": {
      "op": "DUP3"
    },
    "13846": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13848": {
      "op": "DUP4"
    },
    "13849": {
      "op": "ADD"
    },
    "13850": {
      "op": "SLT"
    },
    "13851": {
      "op": "PUSH2",
      "value": "0x3622"
    },
    "13854": {
      "op": "JUMPI"
    },
    "13855": {
      "op": "DUP1"
    },
    "13856": {
      "op": "DUP2"
    },
    "13857": {
      "op": "REVERT"
    },
    "13858": {
      "op": "JUMPDEST"
    },
    "13859": {
      "op": "PUSH2",
      "value": "0xE88"
    },
    "13862": {
      "op": "DUP4"
    },
    "13863": {
      "op": "DUP4"
    },
    "13864": {
      "op": "CALLDATALOAD"
    },
    "13865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13867": {
      "op": "DUP6"
    },
    "13868": {
      "op": "ADD"
    },
    "13869": {
      "op": "PUSH2",
      "value": "0x3529"
    },
    "13872": {
      "jump": "i",
      "op": "JUMP"
    },
    "13873": {
      "op": "JUMPDEST"
    },
    "13874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13878": {
      "op": "DUP3"
    },
    "13879": {
      "op": "DUP5"
    },
    "13880": {
      "op": "SUB"
    },
    "13881": {
      "op": "SLT"
    },
    "13882": {
      "op": "ISZERO"
    },
    "13883": {
      "op": "PUSH2",
      "value": "0x3642"
    },
    "13886": {
      "op": "JUMPI"
    },
    "13887": {
      "op": "DUP1"
    },
    "13888": {
      "op": "DUP2"
    },
    "13889": {
      "op": "REVERT"
    },
    "13890": {
      "op": "JUMPDEST"
    },
    "13891": {
      "op": "PUSH2",
      "value": "0xE88"
    },
    "13894": {
      "op": "DUP3"
    },
    "13895": {
      "op": "PUSH2",
      "value": "0x3587"
    },
    "13898": {
      "jump": "i",
      "op": "JUMP"
    },
    "13899": {
      "op": "JUMPDEST"
    },
    "13900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13902": {
      "op": "DUP1"
    },
    "13903": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13905": {
      "op": "DUP4"
    },
    "13906": {
      "op": "DUP6"
    },
    "13907": {
      "op": "SUB"
    },
    "13908": {
      "op": "SLT"
    },
    "13909": {
      "op": "ISZERO"
    },
    "13910": {
      "op": "PUSH2",
      "value": "0x365D"
    },
    "13913": {
      "op": "JUMPI"
    },
    "13914": {
      "op": "DUP1"
    },
    "13915": {
      "op": "DUP2"
    },
    "13916": {
      "op": "REVERT"
    },
    "13917": {
      "op": "JUMPDEST"
    },
    "13918": {
      "op": "PUSH2",
      "value": "0x3666"
    },
    "13921": {
      "op": "DUP4"
    },
    "13922": {
      "op": "PUSH2",
      "value": "0x3587"
    },
    "13925": {
      "jump": "i",
      "op": "JUMP"
    },
    "13926": {
      "op": "JUMPDEST"
    },
    "13927": {
      "op": "SWAP2"
    },
    "13928": {
      "op": "POP"
    },
    "13929": {
      "op": "PUSH2",
      "value": "0x3674"
    },
    "13932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13934": {
      "op": "DUP5"
    },
    "13935": {
      "op": "ADD"
    },
    "13936": {
      "op": "PUSH2",
      "value": "0x3587"
    },
    "13939": {
      "jump": "i",
      "op": "JUMP"
    },
    "13940": {
      "op": "JUMPDEST"
    },
    "13941": {
      "op": "SWAP1"
    },
    "13942": {
      "op": "POP"
    },
    "13943": {
      "op": "SWAP3"
    },
    "13944": {
      "op": "POP"
    },
    "13945": {
      "op": "SWAP3"
    },
    "13946": {
      "op": "SWAP1"
    },
    "13947": {
      "op": "POP"
    },
    "13948": {
      "jump": "o",
      "op": "JUMP"
    },
    "13949": {
      "op": "JUMPDEST"
    },
    "13950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13952": {
      "op": "DUP1"
    },
    "13953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13955": {
      "op": "DUP1"
    },
    "13956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13960": {
      "op": "DUP7"
    },
    "13961": {
      "op": "DUP9"
    },
    "13962": {
      "op": "SUB"
    },
    "13963": {
      "op": "SLT"
    },
    "13964": {
      "op": "ISZERO"
    },
    "13965": {
      "op": "PUSH2",
      "value": "0x3694"
    },
    "13968": {
      "op": "JUMPI"
    },
    "13969": {
      "op": "DUP1"
    },
    "13970": {
      "op": "DUP2"
    },
    "13971": {
      "op": "REVERT"
    },
    "13972": {
      "op": "JUMPDEST"
    },
    "13973": {
      "op": "PUSH2",
      "value": "0x369D"
    },
    "13976": {
      "op": "DUP7"
    },
    "13977": {
      "op": "PUSH2",
      "value": "0x3587"
    },
    "13980": {
      "jump": "i",
      "op": "JUMP"
    },
    "13981": {
      "op": "JUMPDEST"
    },
    "13982": {
      "op": "SWAP5"
    },
    "13983": {
      "op": "POP"
    },
    "13984": {
      "op": "PUSH2",
      "value": "0x36AB"
    },
    "13987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13989": {
      "op": "DUP8"
    },
    "13990": {
      "op": "ADD"
    },
    "13991": {
      "op": "PUSH2",
      "value": "0x3587"
    },
    "13994": {
      "jump": "i",
      "op": "JUMP"
    },
    "13995": {
      "op": "JUMPDEST"
    },
    "13996": {
      "op": "SWAP4"
    },
    "13997": {
      "op": "POP"
    },
    "13998": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14000": {
      "op": "DUP7"
    },
    "14001": {
      "op": "ADD"
    },
    "14002": {
      "op": "CALLDATALOAD"
    },
    "14003": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14012": {
      "op": "DUP1"
    },
    "14013": {
      "op": "DUP3"
    },
    "14014": {
      "op": "GT"
    },
    "14015": {
      "op": "ISZERO"
    },
    "14016": {
      "op": "PUSH2",
      "value": "0x36C7"
    },
    "14019": {
      "op": "JUMPI"
    },
    "14020": {
      "op": "DUP3"
    },
    "14021": {
      "op": "DUP4"
    },
    "14022": {
      "op": "REVERT"
    },
    "14023": {
      "op": "JUMPDEST"
    },
    "14024": {
      "op": "PUSH2",
      "value": "0x36D3"
    },
    "14027": {
      "op": "DUP10"
    },
    "14028": {
      "op": "DUP4"
    },
    "14029": {
      "op": "DUP11"
    },
    "14030": {
      "op": "ADD"
    },
    "14031": {
      "op": "PUSH2",
      "value": "0x359E"
    },
    "14034": {
      "jump": "i",
      "op": "JUMP"
    },
    "14035": {
      "op": "JUMPDEST"
    },
    "14036": {
      "op": "SWAP5"
    },
    "14037": {
      "op": "POP"
    },
    "14038": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14040": {
      "op": "DUP9"
    },
    "14041": {
      "op": "ADD"
    },
    "14042": {
      "op": "CALLDATALOAD"
    },
    "14043": {
      "op": "SWAP2"
    },
    "14044": {
      "op": "POP"
    },
    "14045": {
      "op": "DUP1"
    },
    "14046": {
      "op": "DUP3"
    },
    "14047": {
      "op": "GT"
    },
    "14048": {
      "op": "ISZERO"
    },
    "14049": {
      "op": "PUSH2",
      "value": "0x36E8"
    },
    "14052": {
      "op": "JUMPI"
    },
    "14053": {
      "op": "DUP3"
    },
    "14054": {
      "op": "DUP4"
    },
    "14055": {
      "op": "REVERT"
    },
    "14056": {
      "op": "JUMPDEST"
    },
    "14057": {
      "op": "PUSH2",
      "value": "0x36F4"
    },
    "14060": {
      "op": "DUP10"
    },
    "14061": {
      "op": "DUP4"
    },
    "14062": {
      "op": "DUP11"
    },
    "14063": {
      "op": "ADD"
    },
    "14064": {
      "op": "PUSH2",
      "value": "0x359E"
    },
    "14067": {
      "jump": "i",
      "op": "JUMP"
    },
    "14068": {
      "op": "JUMPDEST"
    },
    "14069": {
      "op": "SWAP4"
    },
    "14070": {
      "op": "POP"
    },
    "14071": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14073": {
      "op": "DUP9"
    },
    "14074": {
      "op": "ADD"
    },
    "14075": {
      "op": "CALLDATALOAD"
    },
    "14076": {
      "op": "SWAP2"
    },
    "14077": {
      "op": "POP"
    },
    "14078": {
      "op": "DUP1"
    },
    "14079": {
      "op": "DUP3"
    },
    "14080": {
      "op": "GT"
    },
    "14081": {
      "op": "ISZERO"
    },
    "14082": {
      "op": "PUSH2",
      "value": "0x3709"
    },
    "14085": {
      "op": "JUMPI"
    },
    "14086": {
      "op": "DUP3"
    },
    "14087": {
      "op": "DUP4"
    },
    "14088": {
      "op": "REVERT"
    },
    "14089": {
      "op": "JUMPDEST"
    },
    "14090": {
      "op": "POP"
    },
    "14091": {
      "op": "PUSH2",
      "value": "0x3716"
    },
    "14094": {
      "op": "DUP9"
    },
    "14095": {
      "op": "DUP3"
    },
    "14096": {
      "op": "DUP10"
    },
    "14097": {
      "op": "ADD"
    },
    "14098": {
      "op": "PUSH2",
      "value": "0x3612"
    },
    "14101": {
      "jump": "i",
      "op": "JUMP"
    },
    "14102": {
      "op": "JUMPDEST"
    },
    "14103": {
      "op": "SWAP2"
    },
    "14104": {
      "op": "POP"
    },
    "14105": {
      "op": "POP"
    },
    "14106": {
      "op": "SWAP3"
    },
    "14107": {
      "op": "SWAP6"
    },
    "14108": {
      "op": "POP"
    },
    "14109": {
      "op": "SWAP3"
    },
    "14110": {
      "op": "SWAP6"
    },
    "14111": {
      "op": "SWAP1"
    },
    "14112": {
      "op": "SWAP4"
    },
    "14113": {
      "op": "POP"
    },
    "14114": {
      "jump": "o",
      "op": "JUMP"
    },
    "14115": {
      "op": "JUMPDEST"
    },
    "14116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14118": {
      "op": "DUP1"
    },
    "14119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14121": {
      "op": "DUP1"
    },
    "14122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14126": {
      "op": "DUP7"
    },
    "14127": {
      "op": "DUP9"
    },
    "14128": {
      "op": "SUB"
    },
    "14129": {
      "op": "SLT"
    },
    "14130": {
      "op": "ISZERO"
    },
    "14131": {
      "op": "PUSH2",
      "value": "0x373A"
    },
    "14134": {
      "op": "JUMPI"
    },
    "14135": {
      "op": "DUP1"
    },
    "14136": {
      "op": "DUP2"
    },
    "14137": {
      "op": "REVERT"
    },
    "14138": {
      "op": "JUMPDEST"
    },
    "14139": {
      "op": "PUSH2",
      "value": "0x3743"
    },
    "14142": {
      "op": "DUP7"
    },
    "14143": {
      "op": "PUSH2",
      "value": "0x3587"
    },
    "14146": {
      "jump": "i",
      "op": "JUMP"
    },
    "14147": {
      "op": "JUMPDEST"
    },
    "14148": {
      "op": "SWAP5"
    },
    "14149": {
      "op": "POP"
    },
    "14150": {
      "op": "PUSH2",
      "value": "0x3751"
    },
    "14153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14155": {
      "op": "DUP8"
    },
    "14156": {
      "op": "ADD"
    },
    "14157": {
      "op": "PUSH2",
      "value": "0x3587"
    },
    "14160": {
      "jump": "i",
      "op": "JUMP"
    },
    "14161": {
      "op": "JUMPDEST"
    },
    "14162": {
      "op": "SWAP4"
    },
    "14163": {
      "op": "POP"
    },
    "14164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14166": {
      "op": "DUP7"
    },
    "14167": {
      "op": "ADD"
    },
    "14168": {
      "op": "CALLDATALOAD"
    },
    "14169": {
      "op": "SWAP3"
    },
    "14170": {
      "op": "POP"
    },
    "14171": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14173": {
      "op": "DUP7"
    },
    "14174": {
      "op": "ADD"
    },
    "14175": {
      "op": "CALLDATALOAD"
    },
    "14176": {
      "op": "SWAP2"
    },
    "14177": {
      "op": "POP"
    },
    "14178": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14180": {
      "op": "DUP7"
    },
    "14181": {
      "op": "ADD"
    },
    "14182": {
      "op": "CALLDATALOAD"
    },
    "14183": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14192": {
      "op": "DUP2"
    },
    "14193": {
      "op": "GT"
    },
    "14194": {
      "op": "ISZERO"
    },
    "14195": {
      "op": "PUSH2",
      "value": "0x377A"
    },
    "14198": {
      "op": "JUMPI"
    },
    "14199": {
      "op": "DUP2"
    },
    "14200": {
      "op": "DUP3"
    },
    "14201": {
      "op": "REVERT"
    },
    "14202": {
      "op": "JUMPDEST"
    },
    "14203": {
      "op": "PUSH2",
      "value": "0x3716"
    },
    "14206": {
      "op": "DUP9"
    },
    "14207": {
      "op": "DUP3"
    },
    "14208": {
      "op": "DUP10"
    },
    "14209": {
      "op": "ADD"
    },
    "14210": {
      "op": "PUSH2",
      "value": "0x3612"
    },
    "14213": {
      "jump": "i",
      "op": "JUMP"
    },
    "14214": {
      "op": "JUMPDEST"
    },
    "14215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14217": {
      "op": "DUP1"
    },
    "14218": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14220": {
      "op": "DUP4"
    },
    "14221": {
      "op": "DUP6"
    },
    "14222": {
      "op": "SUB"
    },
    "14223": {
      "op": "SLT"
    },
    "14224": {
      "op": "ISZERO"
    },
    "14225": {
      "op": "PUSH2",
      "value": "0x3798"
    },
    "14228": {
      "op": "JUMPI"
    },
    "14229": {
      "op": "DUP2"
    },
    "14230": {
      "op": "DUP3"
    },
    "14231": {
      "op": "REVERT"
    },
    "14232": {
      "op": "JUMPDEST"
    },
    "14233": {
      "op": "PUSH2",
      "value": "0x37A1"
    },
    "14236": {
      "op": "DUP4"
    },
    "14237": {
      "op": "PUSH2",
      "value": "0x3587"
    },
    "14240": {
      "jump": "i",
      "op": "JUMP"
    },
    "14241": {
      "op": "JUMPDEST"
    },
    "14242": {
      "op": "SWAP2"
    },
    "14243": {
      "op": "POP"
    },
    "14244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14246": {
      "op": "DUP4"
    },
    "14247": {
      "op": "ADD"
    },
    "14248": {
      "op": "CALLDATALOAD"
    },
    "14249": {
      "op": "DUP1"
    },
    "14250": {
      "op": "ISZERO"
    },
    "14251": {
      "op": "ISZERO"
    },
    "14252": {
      "op": "DUP2"
    },
    "14253": {
      "op": "EQ"
    },
    "14254": {
      "op": "PUSH2",
      "value": "0x37B5"
    },
    "14257": {
      "op": "JUMPI"
    },
    "14258": {
      "op": "DUP2"
    },
    "14259": {
      "op": "DUP3"
    },
    "14260": {
      "op": "REVERT"
    },
    "14261": {
      "op": "JUMPDEST"
    },
    "14262": {
      "op": "DUP1"
    },
    "14263": {
      "op": "SWAP2"
    },
    "14264": {
      "op": "POP"
    },
    "14265": {
      "op": "POP"
    },
    "14266": {
      "op": "SWAP3"
    },
    "14267": {
      "op": "POP"
    },
    "14268": {
      "op": "SWAP3"
    },
    "14269": {
      "op": "SWAP1"
    },
    "14270": {
      "op": "POP"
    },
    "14271": {
      "jump": "o",
      "op": "JUMP"
    },
    "14272": {
      "op": "JUMPDEST"
    },
    "14273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14275": {
      "op": "DUP1"
    },
    "14276": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14278": {
      "op": "DUP4"
    },
    "14279": {
      "op": "DUP6"
    },
    "14280": {
      "op": "SUB"
    },
    "14281": {
      "op": "SLT"
    },
    "14282": {
      "op": "ISZERO"
    },
    "14283": {
      "op": "PUSH2",
      "value": "0x37D2"
    },
    "14286": {
      "op": "JUMPI"
    },
    "14287": {
      "op": "DUP1"
    },
    "14288": {
      "op": "DUP2"
    },
    "14289": {
      "op": "REVERT"
    },
    "14290": {
      "op": "JUMPDEST"
    },
    "14291": {
      "op": "PUSH2",
      "value": "0x37DB"
    },
    "14294": {
      "op": "DUP4"
    },
    "14295": {
      "op": "PUSH2",
      "value": "0x3587"
    },
    "14298": {
      "jump": "i",
      "op": "JUMP"
    },
    "14299": {
      "op": "JUMPDEST"
    },
    "14300": {
      "op": "SWAP5"
    },
    "14301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14303": {
      "op": "SWAP4"
    },
    "14304": {
      "op": "SWAP1"
    },
    "14305": {
      "op": "SWAP4"
    },
    "14306": {
      "op": "ADD"
    },
    "14307": {
      "op": "CALLDATALOAD"
    },
    "14308": {
      "op": "SWAP4"
    },
    "14309": {
      "op": "POP"
    },
    "14310": {
      "op": "POP"
    },
    "14311": {
      "op": "POP"
    },
    "14312": {
      "jump": "o",
      "op": "JUMP"
    },
    "14313": {
      "op": "JUMPDEST"
    },
    "14314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14316": {
      "op": "DUP1"
    },
    "14317": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14319": {
      "op": "DUP4"
    },
    "14320": {
      "op": "DUP6"
    },
    "14321": {
      "op": "SUB"
    },
    "14322": {
      "op": "SLT"
    },
    "14323": {
      "op": "ISZERO"
    },
    "14324": {
      "op": "PUSH2",
      "value": "0x37FB"
    },
    "14327": {
      "op": "JUMPI"
    },
    "14328": {
      "op": "DUP2"
    },
    "14329": {
      "op": "DUP3"
    },
    "14330": {
      "op": "REVERT"
    },
    "14331": {
      "op": "JUMPDEST"
    },
    "14332": {
      "op": "DUP3"
    },
    "14333": {
      "op": "CALLDATALOAD"
    },
    "14334": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14343": {
      "op": "DUP1"
    },
    "14344": {
      "op": "DUP3"
    },
    "14345": {
      "op": "GT"
    },
    "14346": {
      "op": "ISZERO"
    },
    "14347": {
      "op": "PUSH2",
      "value": "0x3812"
    },
    "14350": {
      "op": "JUMPI"
    },
    "14351": {
      "op": "DUP4"
    },
    "14352": {
      "op": "DUP5"
    },
    "14353": {
      "op": "REVERT"
    },
    "14354": {
      "op": "JUMPDEST"
    },
    "14355": {
      "op": "DUP2"
    },
    "14356": {
      "op": "DUP6"
    },
    "14357": {
      "op": "ADD"
    },
    "14358": {
      "op": "SWAP2"
    },
    "14359": {
      "op": "POP"
    },
    "14360": {
      "op": "DUP6"
    },
    "14361": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14363": {
      "op": "DUP4"
    },
    "14364": {
      "op": "ADD"
    },
    "14365": {
      "op": "SLT"
    },
    "14366": {
      "op": "PUSH2",
      "value": "0x3825"
    },
    "14369": {
      "op": "JUMPI"
    },
    "14370": {
      "op": "DUP4"
    },
    "14371": {
      "op": "DUP5"
    },
    "14372": {
      "op": "REVERT"
    },
    "14373": {
      "op": "JUMPDEST"
    },
    "14374": {
      "op": "DUP2"
    },
    "14375": {
      "op": "CALLDATALOAD"
    },
    "14376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14378": {
      "op": "PUSH2",
      "value": "0x3832"
    },
    "14381": {
      "op": "DUP3"
    },
    "14382": {
      "op": "PUSH2",
      "value": "0x3E12"
    },
    "14385": {
      "jump": "i",
      "op": "JUMP"
    },
    "14386": {
      "op": "JUMPDEST"
    },
    "14387": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14389": {
      "op": "MLOAD"
    },
    "14390": {
      "op": "PUSH2",
      "value": "0x383F"
    },
    "14393": {
      "op": "DUP3"
    },
    "14394": {
      "op": "DUP3"
    },
    "14395": {
      "op": "PUSH2",
      "value": "0x3F0C"
    },
    "14398": {
      "jump": "i",
      "op": "JUMP"
    },
    "14399": {
      "op": "JUMPDEST"
    },
    "14400": {
      "op": "DUP4"
    },
    "14401": {
      "op": "DUP2"
    },
    "14402": {
      "op": "MSTORE"
    },
    "14403": {
      "op": "DUP3"
    },
    "14404": {
      "op": "DUP2"
    },
    "14405": {
      "op": "ADD"
    },
    "14406": {
      "op": "SWAP2"
    },
    "14407": {
      "op": "POP"
    },
    "14408": {
      "op": "DUP6"
    },
    "14409": {
      "op": "DUP4"
    },
    "14410": {
      "op": "ADD"
    },
    "14411": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14413": {
      "op": "DUP6"
    },
    "14414": {
      "op": "SWAP1"
    },
    "14415": {
      "op": "SHL"
    },
    "14416": {
      "op": "DUP8"
    },
    "14417": {
      "op": "ADD"
    },
    "14418": {
      "op": "DUP5"
    },
    "14419": {
      "op": "ADD"
    },
    "14420": {
      "op": "DUP12"
    },
    "14421": {
      "op": "LT"
    },
    "14422": {
      "op": "ISZERO"
    },
    "14423": {
      "op": "PUSH2",
      "value": "0x385E"
    },
    "14426": {
      "op": "JUMPI"
    },
    "14427": {
      "op": "DUP9"
    },
    "14428": {
      "op": "DUP10"
    },
    "14429": {
      "op": "REVERT"
    },
    "14430": {
      "op": "JUMPDEST"
    },
    "14431": {
      "op": "DUP9"
    },
    "14432": {
      "op": "SWAP7"
    },
    "14433": {
      "op": "POP"
    },
    "14434": {
      "op": "JUMPDEST"
    },
    "14435": {
      "op": "DUP5"
    },
    "14436": {
      "op": "DUP8"
    },
    "14437": {
      "op": "LT"
    },
    "14438": {
      "op": "ISZERO"
    },
    "14439": {
      "op": "PUSH2",
      "value": "0x3887"
    },
    "14442": {
      "op": "JUMPI"
    },
    "14443": {
      "op": "PUSH2",
      "value": "0x3873"
    },
    "14446": {
      "op": "DUP2"
    },
    "14447": {
      "op": "PUSH2",
      "value": "0x3587"
    },
    "14450": {
      "jump": "i",
      "op": "JUMP"
    },
    "14451": {
      "op": "JUMPDEST"
    },
    "14452": {
      "op": "DUP4"
    },
    "14453": {
      "op": "MSTORE"
    },
    "14454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14456": {
      "op": "SWAP7"
    },
    "14457": {
      "op": "SWAP1"
    },
    "14458": {
      "op": "SWAP7"
    },
    "14459": {
      "op": "ADD"
    },
    "14460": {
      "op": "SWAP6"
    },
    "14461": {
      "op": "SWAP2"
    },
    "14462": {
      "op": "DUP4"
    },
    "14463": {
      "op": "ADD"
    },
    "14464": {
      "op": "SWAP2"
    },
    "14465": {
      "op": "DUP4"
    },
    "14466": {
      "op": "ADD"
    },
    "14467": {
      "op": "PUSH2",
      "value": "0x3862"
    },
    "14470": {
      "op": "JUMP"
    },
    "14471": {
      "op": "JUMPDEST"
    },
    "14472": {
      "op": "POP"
    },
    "14473": {
      "op": "SWAP7"
    },
    "14474": {
      "op": "POP"
    },
    "14475": {
      "op": "POP"
    },
    "14476": {
      "op": "DUP7"
    },
    "14477": {
      "op": "ADD"
    },
    "14478": {
      "op": "CALLDATALOAD"
    },
    "14479": {
      "op": "SWAP3"
    },
    "14480": {
      "op": "POP"
    },
    "14481": {
      "op": "POP"
    },
    "14482": {
      "op": "DUP1"
    },
    "14483": {
      "op": "DUP3"
    },
    "14484": {
      "op": "GT"
    },
    "14485": {
      "op": "ISZERO"
    },
    "14486": {
      "op": "PUSH2",
      "value": "0x389D"
    },
    "14489": {
      "op": "JUMPI"
    },
    "14490": {
      "op": "DUP3"
    },
    "14491": {
      "op": "DUP4"
    },
    "14492": {
      "op": "REVERT"
    },
    "14493": {
      "op": "JUMPDEST"
    },
    "14494": {
      "op": "POP"
    },
    "14495": {
      "op": "PUSH2",
      "value": "0x38AA"
    },
    "14498": {
      "op": "DUP6"
    },
    "14499": {
      "op": "DUP3"
    },
    "14500": {
      "op": "DUP7"
    },
    "14501": {
      "op": "ADD"
    },
    "14502": {
      "op": "PUSH2",
      "value": "0x359E"
    },
    "14505": {
      "jump": "i",
      "op": "JUMP"
    },
    "14506": {
      "op": "JUMPDEST"
    },
    "14507": {
      "op": "SWAP2"
    },
    "14508": {
      "op": "POP"
    },
    "14509": {
      "op": "POP"
    },
    "14510": {
      "op": "SWAP3"
    },
    "14511": {
      "op": "POP"
    },
    "14512": {
      "op": "SWAP3"
    },
    "14513": {
      "op": "SWAP1"
    },
    "14514": {
      "op": "POP"
    },
    "14515": {
      "jump": "o",
      "op": "JUMP"
    },
    "14516": {
      "op": "JUMPDEST"
    },
    "14517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14521": {
      "op": "DUP3"
    },
    "14522": {
      "op": "DUP5"
    },
    "14523": {
      "op": "SUB"
    },
    "14524": {
      "op": "SLT"
    },
    "14525": {
      "op": "ISZERO"
    },
    "14526": {
      "op": "PUSH2",
      "value": "0x38C5"
    },
    "14529": {
      "op": "JUMPI"
    },
    "14530": {
      "op": "DUP1"
    },
    "14531": {
      "op": "DUP2"
    },
    "14532": {
      "op": "REVERT"
    },
    "14533": {
      "op": "JUMPDEST"
    },
    "14534": {
      "op": "DUP2"
    },
    "14535": {
      "op": "CALLDATALOAD"
    },
    "14536": {
      "op": "PUSH2",
      "value": "0xE88"
    },
    "14539": {
      "op": "DUP2"
    },
    "14540": {
      "op": "PUSH2",
      "value": "0x4029"
    },
    "14543": {
      "jump": "i",
      "op": "JUMP"
    },
    "14544": {
      "op": "JUMPDEST"
    },
    "14545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14549": {
      "op": "DUP3"
    },
    "14550": {
      "op": "DUP5"
    },
    "14551": {
      "op": "SUB"
    },
    "14552": {
      "op": "SLT"
    },
    "14553": {
      "op": "ISZERO"
    },
    "14554": {
      "op": "PUSH2",
      "value": "0x38E1"
    },
    "14557": {
      "op": "JUMPI"
    },
    "14558": {
      "op": "DUP1"
    },
    "14559": {
      "op": "DUP2"
    },
    "14560": {
      "op": "REVERT"
    },
    "14561": {
      "op": "JUMPDEST"
    },
    "14562": {
      "op": "DUP2"
    },
    "14563": {
      "op": "MLOAD"
    },
    "14564": {
      "op": "PUSH2",
      "value": "0xE88"
    },
    "14567": {
      "op": "DUP2"
    },
    "14568": {
      "op": "PUSH2",
      "value": "0x4029"
    },
    "14571": {
      "jump": "i",
      "op": "JUMP"
    },
    "14572": {
      "op": "JUMPDEST"
    },
    "14573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14575": {
      "op": "DUP1"
    },
    "14576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14578": {
      "op": "DUP1"
    },
    "14579": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14581": {
      "op": "DUP6"
    },
    "14582": {
      "op": "DUP8"
    },
    "14583": {
      "op": "SUB"
    },
    "14584": {
      "op": "SLT"
    },
    "14585": {
      "op": "ISZERO"
    },
    "14586": {
      "op": "PUSH2",
      "value": "0x3901"
    },
    "14589": {
      "op": "JUMPI"
    },
    "14590": {
      "op": "DUP2"
    },
    "14591": {
      "op": "DUP3"
    },
    "14592": {
      "op": "REVERT"
    },
    "14593": {
      "op": "JUMPDEST"
    },
    "14594": {
      "op": "DUP5"
    },
    "14595": {
      "op": "CALLDATALOAD"
    },
    "14596": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14605": {
      "op": "DUP1"
    },
    "14606": {
      "op": "DUP3"
    },
    "14607": {
      "op": "GT"
    },
    "14608": {
      "op": "ISZERO"
    },
    "14609": {
      "op": "PUSH2",
      "value": "0x3918"
    },
    "14612": {
      "op": "JUMPI"
    },
    "14613": {
      "op": "DUP4"
    },
    "14614": {
      "op": "DUP5"
    },
    "14615": {
      "op": "REVERT"
    },
    "14616": {
      "op": "JUMPDEST"
    },
    "14617": {
      "op": "DUP2"
    },
    "14618": {
      "op": "DUP8"
    },
    "14619": {
      "op": "ADD"
    },
    "14620": {
      "op": "SWAP2"
    },
    "14621": {
      "op": "POP"
    },
    "14622": {
      "op": "DUP8"
    },
    "14623": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14625": {
      "op": "DUP4"
    },
    "14626": {
      "op": "ADD"
    },
    "14627": {
      "op": "SLT"
    },
    "14628": {
      "op": "PUSH2",
      "value": "0x392B"
    },
    "14631": {
      "op": "JUMPI"
    },
    "14632": {
      "op": "DUP4"
    },
    "14633": {
      "op": "DUP5"
    },
    "14634": {
      "op": "REVERT"
    },
    "14635": {
      "op": "JUMPDEST"
    },
    "14636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14638": {
      "op": "PUSH2",
      "value": "0x393B"
    },
    "14641": {
      "op": "DUP10"
    },
    "14642": {
      "op": "DUP5"
    },
    "14643": {
      "op": "CALLDATALOAD"
    },
    "14644": {
      "op": "DUP4"
    },
    "14645": {
      "op": "DUP7"
    },
    "14646": {
      "op": "ADD"
    },
    "14647": {
      "op": "PUSH2",
      "value": "0x3529"
    },
    "14650": {
      "jump": "i",
      "op": "JUMP"
    },
    "14651": {
      "op": "JUMPDEST"
    },
    "14652": {
      "op": "SWAP7"
    },
    "14653": {
      "op": "POP"
    },
    "14654": {
      "op": "DUP1"
    },
    "14655": {
      "op": "DUP9"
    },
    "14656": {
      "op": "ADD"
    },
    "14657": {
      "op": "CALLDATALOAD"
    },
    "14658": {
      "op": "SWAP6"
    },
    "14659": {
      "op": "POP"
    },
    "14660": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14662": {
      "op": "DUP9"
    },
    "14663": {
      "op": "ADD"
    },
    "14664": {
      "op": "CALLDATALOAD"
    },
    "14665": {
      "op": "SWAP3"
    },
    "14666": {
      "op": "POP"
    },
    "14667": {
      "op": "DUP2"
    },
    "14668": {
      "op": "DUP4"
    },
    "14669": {
      "op": "GT"
    },
    "14670": {
      "op": "ISZERO"
    },
    "14671": {
      "op": "PUSH2",
      "value": "0x3956"
    },
    "14674": {
      "op": "JUMPI"
    },
    "14675": {
      "op": "DUP5"
    },
    "14676": {
      "op": "DUP6"
    },
    "14677": {
      "op": "REVERT"
    },
    "14678": {
      "op": "JUMPDEST"
    },
    "14679": {
      "op": "DUP3"
    },
    "14680": {
      "op": "DUP9"
    },
    "14681": {
      "op": "ADD"
    },
    "14682": {
      "op": "SWAP3"
    },
    "14683": {
      "op": "POP"
    },
    "14684": {
      "op": "DUP9"
    },
    "14685": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14687": {
      "op": "DUP5"
    },
    "14688": {
      "op": "ADD"
    },
    "14689": {
      "op": "SLT"
    },
    "14690": {
      "op": "PUSH2",
      "value": "0x3969"
    },
    "14693": {
      "op": "JUMPI"
    },
    "14694": {
      "op": "DUP5"
    },
    "14695": {
      "op": "DUP6"
    },
    "14696": {
      "op": "REVERT"
    },
    "14697": {
      "op": "JUMPDEST"
    },
    "14698": {
      "op": "DUP3"
    },
    "14699": {
      "op": "CALLDATALOAD"
    },
    "14700": {
      "op": "PUSH2",
      "value": "0x3974"
    },
    "14703": {
      "op": "DUP2"
    },
    "14704": {
      "op": "PUSH2",
      "value": "0x3E12"
    },
    "14707": {
      "jump": "i",
      "op": "JUMP"
    },
    "14708": {
      "op": "JUMPDEST"
    },
    "14709": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14711": {
      "op": "MLOAD"
    },
    "14712": {
      "op": "PUSH2",
      "value": "0x3981"
    },
    "14715": {
      "op": "DUP3"
    },
    "14716": {
      "op": "DUP3"
    },
    "14717": {
      "op": "PUSH2",
      "value": "0x3F0C"
    },
    "14720": {
      "jump": "i",
      "op": "JUMP"
    },
    "14721": {
      "op": "JUMPDEST"
    },
    "14722": {
      "op": "DUP3"
    },
    "14723": {
      "op": "DUP2"
    },
    "14724": {
      "op": "MSTORE"
    },
    "14725": {
      "op": "DUP4"
    },
    "14726": {
      "op": "DUP2"
    },
    "14727": {
      "op": "ADD"
    },
    "14728": {
      "op": "SWAP2"
    },
    "14729": {
      "op": "POP"
    },
    "14730": {
      "op": "DUP6"
    },
    "14731": {
      "op": "DUP5"
    },
    "14732": {
      "op": "ADD"
    },
    "14733": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14735": {
      "op": "DUP5"
    },
    "14736": {
      "op": "SWAP1"
    },
    "14737": {
      "op": "SHL"
    },
    "14738": {
      "op": "DUP8"
    },
    "14739": {
      "op": "ADD"
    },
    "14740": {
      "op": "DUP6"
    },
    "14741": {
      "op": "ADD"
    },
    "14742": {
      "op": "DUP14"
    },
    "14743": {
      "op": "LT"
    },
    "14744": {
      "op": "ISZERO"
    },
    "14745": {
      "op": "PUSH2",
      "value": "0x39A0"
    },
    "14748": {
      "op": "JUMPI"
    },
    "14749": {
      "op": "DUP9"
    },
    "14750": {
      "op": "DUP10"
    },
    "14751": {
      "op": "REVERT"
    },
    "14752": {
      "op": "JUMPDEST"
    },
    "14753": {
      "op": "DUP9"
    },
    "14754": {
      "op": "SWAP7"
    },
    "14755": {
      "op": "POP"
    },
    "14756": {
      "op": "JUMPDEST"
    },
    "14757": {
      "op": "DUP4"
    },
    "14758": {
      "op": "DUP8"
    },
    "14759": {
      "op": "LT"
    },
    "14760": {
      "op": "ISZERO"
    },
    "14761": {
      "op": "PUSH2",
      "value": "0x39D3"
    },
    "14764": {
      "op": "JUMPI"
    },
    "14765": {
      "op": "DUP1"
    },
    "14766": {
      "op": "CALLDATALOAD"
    },
    "14767": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "14772": {
      "op": "DUP2"
    },
    "14773": {
      "op": "AND"
    },
    "14774": {
      "op": "DUP2"
    },
    "14775": {
      "op": "EQ"
    },
    "14776": {
      "op": "PUSH2",
      "value": "0x39BF"
    },
    "14779": {
      "op": "JUMPI"
    },
    "14780": {
      "op": "DUP10"
    },
    "14781": {
      "op": "DUP11"
    },
    "14782": {
      "op": "REVERT"
    },
    "14783": {
      "op": "JUMPDEST"
    },
    "14784": {
      "op": "DUP4"
    },
    "14785": {
      "op": "MSTORE"
    },
    "14786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14788": {
      "op": "SWAP7"
    },
    "14789": {
      "op": "SWAP1"
    },
    "14790": {
      "op": "SWAP7"
    },
    "14791": {
      "op": "ADD"
    },
    "14792": {
      "op": "SWAP6"
    },
    "14793": {
      "op": "SWAP2"
    },
    "14794": {
      "op": "DUP5"
    },
    "14795": {
      "op": "ADD"
    },
    "14796": {
      "op": "SWAP2"
    },
    "14797": {
      "op": "DUP5"
    },
    "14798": {
      "op": "ADD"
    },
    "14799": {
      "op": "PUSH2",
      "value": "0x39A4"
    },
    "14802": {
      "op": "JUMP"
    },
    "14803": {
      "op": "JUMPDEST"
    },
    "14804": {
      "op": "POP"
    },
    "14805": {
      "op": "SWAP7"
    },
    "14806": {
      "op": "POP"
    },
    "14807": {
      "op": "POP"
    },
    "14808": {
      "op": "POP"
    },
    "14809": {
      "op": "POP"
    },
    "14810": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14812": {
      "op": "DUP8"
    },
    "14813": {
      "op": "ADD"
    },
    "14814": {
      "op": "CALLDATALOAD"
    },
    "14815": {
      "op": "SWAP2"
    },
    "14816": {
      "op": "POP"
    },
    "14817": {
      "op": "DUP1"
    },
    "14818": {
      "op": "DUP3"
    },
    "14819": {
      "op": "GT"
    },
    "14820": {
      "op": "ISZERO"
    },
    "14821": {
      "op": "PUSH2",
      "value": "0x39EC"
    },
    "14824": {
      "op": "JUMPI"
    },
    "14825": {
      "op": "DUP3"
    },
    "14826": {
      "op": "DUP4"
    },
    "14827": {
      "op": "REVERT"
    },
    "14828": {
      "op": "JUMPDEST"
    },
    "14829": {
      "op": "POP"
    },
    "14830": {
      "op": "PUSH2",
      "value": "0x39F9"
    },
    "14833": {
      "op": "DUP8"
    },
    "14834": {
      "op": "DUP3"
    },
    "14835": {
      "op": "DUP9"
    },
    "14836": {
      "op": "ADD"
    },
    "14837": {
      "op": "PUSH2",
      "value": "0x359E"
    },
    "14840": {
      "jump": "i",
      "op": "JUMP"
    },
    "14841": {
      "op": "JUMPDEST"
    },
    "14842": {
      "op": "SWAP2"
    },
    "14843": {
      "op": "POP"
    },
    "14844": {
      "op": "POP"
    },
    "14845": {
      "op": "SWAP3"
    },
    "14846": {
      "op": "SWAP6"
    },
    "14847": {
      "op": "SWAP2"
    },
    "14848": {
      "op": "SWAP5"
    },
    "14849": {
      "op": "POP"
    },
    "14850": {
      "op": "SWAP3"
    },
    "14851": {
      "op": "POP"
    },
    "14852": {
      "jump": "o",
      "op": "JUMP"
    },
    "14853": {
      "op": "JUMPDEST"
    },
    "14854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14858": {
      "op": "DUP3"
    },
    "14859": {
      "op": "DUP5"
    },
    "14860": {
      "op": "SUB"
    },
    "14861": {
      "op": "SLT"
    },
    "14862": {
      "op": "ISZERO"
    },
    "14863": {
      "op": "PUSH2",
      "value": "0x3A16"
    },
    "14866": {
      "op": "JUMPI"
    },
    "14867": {
      "op": "DUP1"
    },
    "14868": {
      "op": "DUP2"
    },
    "14869": {
      "op": "REVERT"
    },
    "14870": {
      "op": "JUMPDEST"
    },
    "14871": {
      "op": "POP"
    },
    "14872": {
      "op": "CALLDATALOAD"
    },
    "14873": {
      "op": "SWAP2"
    },
    "14874": {
      "op": "SWAP1"
    },
    "14875": {
      "op": "POP"
    },
    "14876": {
      "jump": "o",
      "op": "JUMP"
    },
    "14877": {
      "op": "JUMPDEST"
    },
    "14878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14880": {
      "op": "DUP1"
    },
    "14881": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14883": {
      "op": "DUP4"
    },
    "14884": {
      "op": "DUP6"
    },
    "14885": {
      "op": "SUB"
    },
    "14886": {
      "op": "SLT"
    },
    "14887": {
      "op": "ISZERO"
    },
    "14888": {
      "op": "PUSH2",
      "value": "0x3A2F"
    },
    "14891": {
      "op": "JUMPI"
    },
    "14892": {
      "op": "DUP2"
    },
    "14893": {
      "op": "DUP3"
    },
    "14894": {
      "op": "REVERT"
    },
    "14895": {
      "op": "JUMPDEST"
    },
    "14896": {
      "op": "DUP3"
    },
    "14897": {
      "op": "CALLDATALOAD"
    },
    "14898": {
      "op": "SWAP2"
    },
    "14899": {
      "op": "POP"
    },
    "14900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14902": {
      "op": "DUP4"
    },
    "14903": {
      "op": "ADD"
    },
    "14904": {
      "op": "CALLDATALOAD"
    },
    "14905": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14914": {
      "op": "DUP2"
    },
    "14915": {
      "op": "GT"
    },
    "14916": {
      "op": "ISZERO"
    },
    "14917": {
      "op": "PUSH2",
      "value": "0x3A4C"
    },
    "14920": {
      "op": "JUMPI"
    },
    "14921": {
      "op": "DUP2"
    },
    "14922": {
      "op": "DUP3"
    },
    "14923": {
      "op": "REVERT"
    },
    "14924": {
      "op": "JUMPDEST"
    },
    "14925": {
      "op": "PUSH2",
      "value": "0x38AA"
    },
    "14928": {
      "op": "DUP6"
    },
    "14929": {
      "op": "DUP3"
    },
    "14930": {
      "op": "DUP7"
    },
    "14931": {
      "op": "ADD"
    },
    "14932": {
      "op": "PUSH2",
      "value": "0x359E"
    },
    "14935": {
      "jump": "i",
      "op": "JUMP"
    },
    "14936": {
      "op": "JUMPDEST"
    },
    "14937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14939": {
      "op": "DUP1"
    },
    "14940": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14942": {
      "op": "DUP4"
    },
    "14943": {
      "op": "DUP6"
    },
    "14944": {
      "op": "SUB"
    },
    "14945": {
      "op": "SLT"
    },
    "14946": {
      "op": "ISZERO"
    },
    "14947": {
      "op": "PUSH2",
      "value": "0x3A6A"
    },
    "14950": {
      "op": "JUMPI"
    },
    "14951": {
      "op": "DUP2"
    },
    "14952": {
      "op": "DUP3"
    },
    "14953": {
      "op": "REVERT"
    },
    "14954": {
      "op": "JUMPDEST"
    },
    "14955": {
      "op": "POP"
    },
    "14956": {
      "op": "POP"
    },
    "14957": {
      "op": "DUP1"
    },
    "14958": {
      "op": "CALLDATALOAD"
    },
    "14959": {
      "op": "SWAP3"
    },
    "14960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14962": {
      "op": "SWAP1"
    },
    "14963": {
      "op": "SWAP2"
    },
    "14964": {
      "op": "ADD"
    },
    "14965": {
      "op": "CALLDATALOAD"
    },
    "14966": {
      "op": "SWAP2"
    },
    "14967": {
      "op": "POP"
    },
    "14968": {
      "jump": "o",
      "op": "JUMP"
    },
    "14969": {
      "op": "JUMPDEST"
    },
    "14970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14972": {
      "op": "DUP2"
    },
    "14973": {
      "op": "MLOAD"
    },
    "14974": {
      "op": "DUP1"
    },
    "14975": {
      "op": "DUP5"
    },
    "14976": {
      "op": "MSTORE"
    },
    "14977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14979": {
      "op": "DUP1"
    },
    "14980": {
      "op": "DUP6"
    },
    "14981": {
      "op": "ADD"
    },
    "14982": {
      "op": "SWAP5"
    },
    "14983": {
      "op": "POP"
    },
    "14984": {
      "op": "DUP1"
    },
    "14985": {
      "op": "DUP5"
    },
    "14986": {
      "op": "ADD"
    },
    "14987": {
      "op": "DUP4"
    },
    "14988": {
      "op": "JUMPDEST"
    },
    "14989": {
      "op": "DUP4"
    },
    "14990": {
      "op": "DUP2"
    },
    "14991": {
      "op": "LT"
    },
    "14992": {
      "op": "ISZERO"
    },
    "14993": {
      "op": "PUSH2",
      "value": "0x3AA8"
    },
    "14996": {
      "op": "JUMPI"
    },
    "14997": {
      "op": "DUP2"
    },
    "14998": {
      "op": "MLOAD"
    },
    "14999": {
      "op": "DUP8"
    },
    "15000": {
      "op": "MSTORE"
    },
    "15001": {
      "op": "SWAP6"
    },
    "15002": {
      "op": "DUP3"
    },
    "15003": {
      "op": "ADD"
    },
    "15004": {
      "op": "SWAP6"
    },
    "15005": {
      "op": "SWAP1"
    },
    "15006": {
      "op": "DUP3"
    },
    "15007": {
      "op": "ADD"
    },
    "15008": {
      "op": "SWAP1"
    },
    "15009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15011": {
      "op": "ADD"
    },
    "15012": {
      "op": "PUSH2",
      "value": "0x3A8C"
    },
    "15015": {
      "op": "JUMP"
    },
    "15016": {
      "op": "JUMPDEST"
    },
    "15017": {
      "op": "POP"
    },
    "15018": {
      "op": "SWAP5"
    },
    "15019": {
      "op": "SWAP6"
    },
    "15020": {
      "op": "SWAP5"
    },
    "15021": {
      "op": "POP"
    },
    "15022": {
      "op": "POP"
    },
    "15023": {
      "op": "POP"
    },
    "15024": {
      "op": "POP"
    },
    "15025": {
      "op": "POP"
    },
    "15026": {
      "jump": "o",
      "op": "JUMP"
    },
    "15027": {
      "op": "JUMPDEST"
    },
    "15028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15030": {
      "op": "DUP2"
    },
    "15031": {
      "op": "MLOAD"
    },
    "15032": {
      "op": "DUP1"
    },
    "15033": {
      "op": "DUP5"
    },
    "15034": {
      "op": "MSTORE"
    },
    "15035": {
      "op": "DUP2"
    },
    "15036": {
      "op": "JUMPDEST"
    },
    "15037": {
      "op": "DUP2"
    },
    "15038": {
      "op": "DUP2"
    },
    "15039": {
      "op": "LT"
    },
    "15040": {
      "op": "ISZERO"
    },
    "15041": {
      "op": "PUSH2",
      "value": "0x3AD8"
    },
    "15044": {
      "op": "JUMPI"
    },
    "15045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15047": {
      "op": "DUP2"
    },
    "15048": {
      "op": "DUP6"
    },
    "15049": {
      "op": "ADD"
    },
    "15050": {
      "op": "DUP2"
    },
    "15051": {
      "op": "ADD"
    },
    "15052": {
      "op": "MLOAD"
    },
    "15053": {
      "op": "DUP7"
    },
    "15054": {
      "op": "DUP4"
    },
    "15055": {
      "op": "ADD"
    },
    "15056": {
      "op": "DUP3"
    },
    "15057": {
      "op": "ADD"
    },
    "15058": {
      "op": "MSTORE"
    },
    "15059": {
      "op": "ADD"
    },
    "15060": {
      "op": "PUSH2",
      "value": "0x3ABC"
    },
    "15063": {
      "op": "JUMP"
    },
    "15064": {
      "op": "JUMPDEST"
    },
    "15065": {
      "op": "DUP2"
    },
    "15066": {
      "op": "DUP2"
    },
    "15067": {
      "op": "GT"
    },
    "15068": {
      "op": "ISZERO"
    },
    "15069": {
      "op": "PUSH2",
      "value": "0x3AE9"
    },
    "15072": {
      "op": "JUMPI"
    },
    "15073": {
      "op": "DUP3"
    },
    "15074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15076": {
      "op": "DUP4"
    },
    "15077": {
      "op": "DUP8"
    },
    "15078": {
      "op": "ADD"
    },
    "15079": {
      "op": "ADD"
    },
    "15080": {
      "op": "MSTORE"
    },
    "15081": {
      "op": "JUMPDEST"
    },
    "15082": {
      "op": "POP"
    },
    "15083": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15085": {
      "op": "ADD"
    },
    "15086": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15088": {
      "op": "NOT"
    },
    "15089": {
      "op": "AND"
    },
    "15090": {
      "op": "SWAP3"
    },
    "15091": {
      "op": "SWAP1"
    },
    "15092": {
      "op": "SWAP3"
    },
    "15093": {
      "op": "ADD"
    },
    "15094": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15096": {
      "op": "ADD"
    },
    "15097": {
      "op": "SWAP3"
    },
    "15098": {
      "op": "SWAP2"
    },
    "15099": {
      "op": "POP"
    },
    "15100": {
      "op": "POP"
    },
    "15101": {
      "jump": "o",
      "op": "JUMP"
    },
    "15102": {
      "op": "JUMPDEST"
    },
    "15103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15109": {
      "op": "SHL"
    },
    "15110": {
      "op": "SUB"
    },
    "15111": {
      "op": "DUP7"
    },
    "15112": {
      "op": "DUP2"
    },
    "15113": {
      "op": "AND"
    },
    "15114": {
      "op": "DUP3"
    },
    "15115": {
      "op": "MSTORE"
    },
    "15116": {
      "op": "DUP6"
    },
    "15117": {
      "op": "AND"
    },
    "15118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15120": {
      "op": "DUP3"
    },
    "15121": {
      "op": "ADD"
    },
    "15122": {
      "op": "MSTORE"
    },
    "15123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15125": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15127": {
      "op": "DUP3"
    },
    "15128": {
      "op": "ADD"
    },
    "15129": {
      "op": "DUP2"
    },
    "15130": {
      "op": "SWAP1"
    },
    "15131": {
      "op": "MSTORE"
    },
    "15132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15134": {
      "op": "SWAP1"
    },
    "15135": {
      "op": "PUSH2",
      "value": "0x3B2A"
    },
    "15138": {
      "op": "SWAP1"
    },
    "15139": {
      "op": "DUP4"
    },
    "15140": {
      "op": "ADD"
    },
    "15141": {
      "op": "DUP7"
    },
    "15142": {
      "op": "PUSH2",
      "value": "0x3A79"
    },
    "15145": {
      "jump": "i",
      "op": "JUMP"
    },
    "15146": {
      "op": "JUMPDEST"
    },
    "15147": {
      "op": "DUP3"
    },
    "15148": {
      "op": "DUP2"
    },
    "15149": {
      "op": "SUB"
    },
    "15150": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15152": {
      "op": "DUP5"
    },
    "15153": {
      "op": "ADD"
    },
    "15154": {
      "op": "MSTORE"
    },
    "15155": {
      "op": "PUSH2",
      "value": "0x3B3C"
    },
    "15158": {
      "op": "DUP2"
    },
    "15159": {
      "op": "DUP7"
    },
    "15160": {
      "op": "PUSH2",
      "value": "0x3A79"
    },
    "15163": {
      "jump": "i",
      "op": "JUMP"
    },
    "15164": {
      "op": "JUMPDEST"
    },
    "15165": {
      "op": "SWAP1"
    },
    "15166": {
      "op": "POP"
    },
    "15167": {
      "op": "DUP3"
    },
    "15168": {
      "op": "DUP2"
    },
    "15169": {
      "op": "SUB"
    },
    "15170": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15172": {
      "op": "DUP5"
    },
    "15173": {
      "op": "ADD"
    },
    "15174": {
      "op": "MSTORE"
    },
    "15175": {
      "op": "PUSH2",
      "value": "0x1983"
    },
    "15178": {
      "op": "DUP2"
    },
    "15179": {
      "op": "DUP6"
    },
    "15180": {
      "op": "PUSH2",
      "value": "0x3AB3"
    },
    "15183": {
      "jump": "i",
      "op": "JUMP"
    },
    "15184": {
      "op": "JUMPDEST"
    },
    "15185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15191": {
      "op": "SHL"
    },
    "15192": {
      "op": "SUB"
    },
    "15193": {
      "op": "DUP7"
    },
    "15194": {
      "op": "DUP2"
    },
    "15195": {
      "op": "AND"
    },
    "15196": {
      "op": "DUP3"
    },
    "15197": {
      "op": "MSTORE"
    },
    "15198": {
      "op": "DUP6"
    },
    "15199": {
      "op": "AND"
    },
    "15200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15202": {
      "op": "DUP3"
    },
    "15203": {
      "op": "ADD"
    },
    "15204": {
      "op": "MSTORE"
    },
    "15205": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15207": {
      "op": "DUP2"
    },
    "15208": {
      "op": "ADD"
    },
    "15209": {
      "op": "DUP5"
    },
    "15210": {
      "op": "SWAP1"
    },
    "15211": {
      "op": "MSTORE"
    },
    "15212": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15214": {
      "op": "DUP2"
    },
    "15215": {
      "op": "ADD"
    },
    "15216": {
      "op": "DUP4"
    },
    "15217": {
      "op": "SWAP1"
    },
    "15218": {
      "op": "MSTORE"
    },
    "15219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15221": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15223": {
      "op": "DUP3"
    },
    "15224": {
      "op": "ADD"
    },
    "15225": {
      "op": "DUP2"
    },
    "15226": {
      "op": "SWAP1"
    },
    "15227": {
      "op": "MSTORE"
    },
    "15228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15230": {
      "op": "SWAP1"
    },
    "15231": {
      "op": "PUSH2",
      "value": "0x3B8A"
    },
    "15234": {
      "op": "SWAP1"
    },
    "15235": {
      "op": "DUP4"
    },
    "15236": {
      "op": "ADD"
    },
    "15237": {
      "op": "DUP5"
    },
    "15238": {
      "op": "PUSH2",
      "value": "0x3AB3"
    },
    "15241": {
      "jump": "i",
      "op": "JUMP"
    },
    "15242": {
      "op": "JUMPDEST"
    },
    "15243": {
      "op": "SWAP8"
    },
    "15244": {
      "op": "SWAP7"
    },
    "15245": {
      "op": "POP"
    },
    "15246": {
      "op": "POP"
    },
    "15247": {
      "op": "POP"
    },
    "15248": {
      "op": "POP"
    },
    "15249": {
      "op": "POP"
    },
    "15250": {
      "op": "POP"
    },
    "15251": {
      "op": "POP"
    },
    "15252": {
      "jump": "o",
      "op": "JUMP"
    },
    "15253": {
      "op": "JUMPDEST"
    },
    "15254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15258": {
      "op": "DUP3"
    },
    "15259": {
      "op": "MSTORE"
    },
    "15260": {
      "op": "PUSH2",
      "value": "0xE88"
    },
    "15263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15265": {
      "op": "DUP4"
    },
    "15266": {
      "op": "ADD"
    },
    "15267": {
      "op": "DUP5"
    },
    "15268": {
      "op": "PUSH2",
      "value": "0x3A79"
    },
    "15271": {
      "jump": "i",
      "op": "JUMP"
    },
    "15272": {
      "op": "JUMPDEST"
    },
    "15273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15275": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15277": {
      "op": "DUP3"
    },
    "15278": {
      "op": "MSTORE"
    },
    "15279": {
      "op": "PUSH2",
      "value": "0x3BBB"
    },
    "15282": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15284": {
      "op": "DUP4"
    },
    "15285": {
      "op": "ADD"
    },
    "15286": {
      "op": "DUP6"
    },
    "15287": {
      "op": "PUSH2",
      "value": "0x3A79"
    },
    "15290": {
      "jump": "i",
      "op": "JUMP"
    },
    "15291": {
      "op": "JUMPDEST"
    },
    "15292": {
      "op": "DUP3"
    },
    "15293": {
      "op": "DUP2"
    },
    "15294": {
      "op": "SUB"
    },
    "15295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15297": {
      "op": "DUP5"
    },
    "15298": {
      "op": "ADD"
    },
    "15299": {
      "op": "MSTORE"
    },
    "15300": {
      "op": "PUSH2",
      "value": "0x3BCD"
    },
    "15303": {
      "op": "DUP2"
    },
    "15304": {
      "op": "DUP6"
    },
    "15305": {
      "op": "PUSH2",
      "value": "0x3A79"
    },
    "15308": {
      "jump": "i",
      "op": "JUMP"
    },
    "15309": {
      "op": "JUMPDEST"
    },
    "15310": {
      "op": "SWAP6"
    },
    "15311": {
      "op": "SWAP5"
    },
    "15312": {
      "op": "POP"
    },
    "15313": {
      "op": "POP"
    },
    "15314": {
      "op": "POP"
    },
    "15315": {
      "op": "POP"
    },
    "15316": {
      "op": "POP"
    },
    "15317": {
      "jump": "o",
      "op": "JUMP"
    },
    "15318": {
      "op": "JUMPDEST"
    },
    "15319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15323": {
      "op": "DUP3"
    },
    "15324": {
      "op": "MSTORE"
    },
    "15325": {
      "op": "PUSH2",
      "value": "0xE88"
    },
    "15328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15330": {
      "op": "DUP4"
    },
    "15331": {
      "op": "ADD"
    },
    "15332": {
      "op": "DUP5"
    },
    "15333": {
      "op": "PUSH2",
      "value": "0x3AB3"
    },
    "15336": {
      "jump": "i",
      "op": "JUMP"
    },
    "15337": {
      "op": "JUMPDEST"
    },
    "15338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15340": {
      "op": "DUP1"
    },
    "15341": {
      "op": "DUP3"
    },
    "15342": {
      "op": "MSTORE"
    },
    "15343": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "15345": {
      "op": "SWAP1"
    },
    "15346": {
      "op": "DUP3"
    },
    "15347": {
      "op": "ADD"
    },
    "15348": {
      "op": "MSTORE"
    },
    "15349": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "15382": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15384": {
      "op": "DUP3"
    },
    "15385": {
      "op": "ADD"
    },
    "15386": {
      "op": "MSTORE"
    },
    "15387": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "15396": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15398": {
      "op": "SHL"
    },
    "15399": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15401": {
      "op": "DUP3"
    },
    "15402": {
      "op": "ADD"
    },
    "15403": {
      "op": "MSTORE"
    },
    "15404": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15406": {
      "op": "ADD"
    },
    "15407": {
      "op": "SWAP1"
    },
    "15408": {
      "jump": "o",
      "op": "JUMP"
    },
    "15409": {
      "op": "JUMPDEST"
    },
    "15410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15412": {
      "op": "DUP1"
    },
    "15413": {
      "op": "DUP3"
    },
    "15414": {
      "op": "MSTORE"
    },
    "15415": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15417": {
      "op": "SWAP1"
    },
    "15418": {
      "op": "DUP3"
    },
    "15419": {
      "op": "ADD"
    },
    "15420": {
      "op": "MSTORE"
    },
    "15421": {
      "op": "PUSH32",
      "value": "0x455243313135353A206275726E20616D6F756E7420657863656564732062616C"
    },
    "15454": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15456": {
      "op": "DUP3"
    },
    "15457": {
      "op": "ADD"
    },
    "15458": {
      "op": "MSTORE"
    },
    "15459": {
      "op": "PUSH4",
      "value": "0x616E6365"
    },
    "15464": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15466": {
      "op": "SHL"
    },
    "15467": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15469": {
      "op": "DUP3"
    },
    "15470": {
      "op": "ADD"
    },
    "15471": {
      "op": "MSTORE"
    },
    "15472": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15474": {
      "op": "ADD"
    },
    "15475": {
      "op": "SWAP1"
    },
    "15476": {
      "jump": "o",
      "op": "JUMP"
    },
    "15477": {
      "op": "JUMPDEST"
    },
    "15478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15480": {
      "op": "DUP1"
    },
    "15481": {
      "op": "DUP3"
    },
    "15482": {
      "op": "MSTORE"
    },
    "15483": {
      "op": "PUSH1",
      "value": "0x57"
    },
    "15485": {
      "op": "SWAP1"
    },
    "15486": {
      "op": "DUP3"
    },
    "15487": {
      "op": "ADD"
    },
    "15488": {
      "op": "MSTORE"
    },
    "15489": {
      "op": "PUSH32",
      "value": "0x54686973204964206E756D626572206973206E6F74206173736F636961746564"
    },
    "15522": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15524": {
      "op": "DUP3"
    },
    "15525": {
      "op": "ADD"
    },
    "15526": {
      "op": "MSTORE"
    },
    "15527": {
      "op": "PUSH32",
      "value": "0x2077697468206F6E65206F6620796F75722073746172746572732C20706C6561"
    },
    "15560": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15562": {
      "op": "DUP3"
    },
    "15563": {
      "op": "ADD"
    },
    "15564": {
      "op": "MSTORE"
    },
    "15565": {
      "op": "PUSH32",
      "value": "0x736520747279207769746820612076616C69642069642E000000000000000000"
    },
    "15598": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15600": {
      "op": "DUP3"
    },
    "15601": {
      "op": "ADD"
    },
    "15602": {
      "op": "MSTORE"
    },
    "15603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15605": {
      "op": "ADD"
    },
    "15606": {
      "op": "SWAP1"
    },
    "15607": {
      "jump": "o",
      "op": "JUMP"
    },
    "15608": {
      "op": "JUMPDEST"
    },
    "15609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15611": {
      "op": "DUP1"
    },
    "15612": {
      "op": "DUP3"
    },
    "15613": {
      "op": "MSTORE"
    },
    "15614": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "15616": {
      "op": "SWAP1"
    },
    "15617": {
      "op": "DUP3"
    },
    "15618": {
      "op": "ADD"
    },
    "15619": {
      "op": "MSTORE"
    },
    "15620": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "15653": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15655": {
      "op": "DUP3"
    },
    "15656": {
      "op": "ADD"
    },
    "15657": {
      "op": "MSTORE"
    },
    "15658": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "15664": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "15666": {
      "op": "SHL"
    },
    "15667": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15669": {
      "op": "DUP3"
    },
    "15670": {
      "op": "ADD"
    },
    "15671": {
      "op": "MSTORE"
    },
    "15672": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15674": {
      "op": "ADD"
    },
    "15675": {
      "op": "SWAP1"
    },
    "15676": {
      "jump": "o",
      "op": "JUMP"
    },
    "15677": {
      "op": "JUMPDEST"
    },
    "15678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15680": {
      "op": "DUP1"
    },
    "15681": {
      "op": "DUP3"
    },
    "15682": {
      "op": "MSTORE"
    },
    "15683": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "15685": {
      "op": "SWAP1"
    },
    "15686": {
      "op": "DUP3"
    },
    "15687": {
      "op": "ADD"
    },
    "15688": {
      "op": "MSTORE"
    },
    "15689": {
      "op": "PUSH32",
      "value": "0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
    },
    "15722": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15724": {
      "op": "DUP3"
    },
    "15725": {
      "op": "ADD"
    },
    "15726": {
      "op": "MSTORE"
    },
    "15727": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "15731": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "15733": {
      "op": "SHL"
    },
    "15734": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15736": {
      "op": "DUP3"
    },
    "15737": {
      "op": "ADD"
    },
    "15738": {
      "op": "MSTORE"
    },
    "15739": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15741": {
      "op": "ADD"
    },
    "15742": {
      "op": "SWAP1"
    },
    "15743": {
      "jump": "o",
      "op": "JUMP"
    },
    "15744": {
      "op": "JUMPDEST"
    },
    "15745": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15747": {
      "op": "DUP1"
    },
    "15748": {
      "op": "DUP3"
    },
    "15749": {
      "op": "MSTORE"
    },
    "15750": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "15752": {
      "op": "SWAP1"
    },
    "15753": {
      "op": "DUP3"
    },
    "15754": {
      "op": "ADD"
    },
    "15755": {
      "op": "MSTORE"
    },
    "15756": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "15789": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15791": {
      "op": "DUP3"
    },
    "15792": {
      "op": "ADD"
    },
    "15793": {
      "op": "MSTORE"
    },
    "15794": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "15805": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "15807": {
      "op": "SHL"
    },
    "15808": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15810": {
      "op": "DUP3"
    },
    "15811": {
      "op": "ADD"
    },
    "15812": {
      "op": "MSTORE"
    },
    "15813": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15815": {
      "op": "ADD"
    },
    "15816": {
      "op": "SWAP1"
    },
    "15817": {
      "jump": "o",
      "op": "JUMP"
    },
    "15818": {
      "op": "JUMPDEST"
    },
    "15819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15821": {
      "op": "DUP1"
    },
    "15822": {
      "op": "DUP3"
    },
    "15823": {
      "op": "MSTORE"
    },
    "15824": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "15826": {
      "op": "SWAP1"
    },
    "15827": {
      "op": "DUP3"
    },
    "15828": {
      "op": "ADD"
    },
    "15829": {
      "op": "MSTORE"
    },
    "15830": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "15863": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15865": {
      "op": "DUP3"
    },
    "15866": {
      "op": "ADD"
    },
    "15867": {
      "op": "MSTORE"
    },
    "15868": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "15877": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "15879": {
      "op": "SHL"
    },
    "15880": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15882": {
      "op": "DUP3"
    },
    "15883": {
      "op": "ADD"
    },
    "15884": {
      "op": "MSTORE"
    },
    "15885": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15887": {
      "op": "ADD"
    },
    "15888": {
      "op": "SWAP1"
    },
    "15889": {
      "jump": "o",
      "op": "JUMP"
    },
    "15890": {
      "op": "JUMPDEST"
    },
    "15891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15893": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15902": {
      "op": "DUP3"
    },
    "15903": {
      "op": "GT"
    },
    "15904": {
      "op": "ISZERO"
    },
    "15905": {
      "op": "PUSH2",
      "value": "0x3E2C"
    },
    "15908": {
      "op": "JUMPI"
    },
    "15909": {
      "op": "PUSH2",
      "value": "0x3E2C"
    },
    "15912": {
      "op": "PUSH2",
      "value": "0x3F6A"
    },
    "15915": {
      "jump": "i",
      "op": "JUMP"
    },
    "15916": {
      "op": "JUMPDEST"
    },
    "15917": {
      "op": "POP"
    },
    "15918": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15920": {
      "op": "SHL"
    },
    "15921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15923": {
      "op": "ADD"
    },
    "15924": {
      "op": "SWAP1"
    },
    "15925": {
      "jump": "o",
      "op": "JUMP"
    },
    "15926": {
      "op": "JUMPDEST"
    },
    "15927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15929": {
      "op": "DUP3"
    },
    "15930": {
      "op": "NOT"
    },
    "15931": {
      "op": "DUP3"
    },
    "15932": {
      "op": "GT"
    },
    "15933": {
      "op": "ISZERO"
    },
    "15934": {
      "op": "PUSH2",
      "value": "0x3E49"
    },
    "15937": {
      "op": "JUMPI"
    },
    "15938": {
      "op": "PUSH2",
      "value": "0x3E49"
    },
    "15941": {
      "op": "PUSH2",
      "value": "0x3F54"
    },
    "15944": {
      "jump": "i",
      "op": "JUMP"
    },
    "15945": {
      "op": "JUMPDEST"
    },
    "15946": {
      "op": "POP"
    },
    "15947": {
      "op": "ADD"
    },
    "15948": {
      "op": "SWAP1"
    },
    "15949": {
      "jump": "o",
      "op": "JUMP"
    },
    "15950": {
      "op": "JUMPDEST"
    },
    "15951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15953": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "15958": {
      "op": "DUP1"
    },
    "15959": {
      "op": "DUP4"
    },
    "15960": {
      "op": "AND"
    },
    "15961": {
      "op": "DUP2"
    },
    "15962": {
      "op": "DUP6"
    },
    "15963": {
      "op": "AND"
    },
    "15964": {
      "op": "DUP1"
    },
    "15965": {
      "op": "DUP4"
    },
    "15966": {
      "op": "SUB"
    },
    "15967": {
      "op": "DUP3"
    },
    "15968": {
      "op": "GT"
    },
    "15969": {
      "op": "ISZERO"
    },
    "15970": {
      "op": "PUSH2",
      "value": "0x3E6D"
    },
    "15973": {
      "op": "JUMPI"
    },
    "15974": {
      "op": "PUSH2",
      "value": "0x3E6D"
    },
    "15977": {
      "op": "PUSH2",
      "value": "0x3F54"
    },
    "15980": {
      "jump": "i",
      "op": "JUMP"
    },
    "15981": {
      "op": "JUMPDEST"
    },
    "15982": {
      "op": "ADD"
    },
    "15983": {
      "op": "SWAP5"
    },
    "15984": {
      "op": "SWAP4"
    },
    "15985": {
      "op": "POP"
    },
    "15986": {
      "op": "POP"
    },
    "15987": {
      "op": "POP"
    },
    "15988": {
      "op": "POP"
    },
    "15989": {
      "jump": "o",
      "op": "JUMP"
    },
    "15990": {
      "op": "JUMPDEST"
    },
    "15991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15993": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15995": {
      "op": "DUP3"
    },
    "15996": {
      "op": "AND"
    },
    "15997": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15999": {
      "op": "DUP5"
    },
    "16000": {
      "op": "AND"
    },
    "16001": {
      "op": "DUP1"
    },
    "16002": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16004": {
      "op": "SUB"
    },
    "16005": {
      "op": "DUP3"
    },
    "16006": {
      "op": "GT"
    },
    "16007": {
      "op": "ISZERO"
    },
    "16008": {
      "op": "PUSH2",
      "value": "0x3E93"
    },
    "16011": {
      "op": "JUMPI"
    },
    "16012": {
      "op": "PUSH2",
      "value": "0x3E93"
    },
    "16015": {
      "op": "PUSH2",
      "value": "0x3F54"
    },
    "16018": {
      "jump": "i",
      "op": "JUMP"
    },
    "16019": {
      "op": "JUMPDEST"
    },
    "16020": {
      "op": "ADD"
    },
    "16021": {
      "op": "SWAP4"
    },
    "16022": {
      "op": "SWAP3"
    },
    "16023": {
      "op": "POP"
    },
    "16024": {
      "op": "POP"
    },
    "16025": {
      "op": "POP"
    },
    "16026": {
      "jump": "o",
      "op": "JUMP"
    },
    "16027": {
      "op": "JUMPDEST"
    },
    "16028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16030": {
      "op": "DUP2"
    },
    "16031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16033": {
      "op": "NOT"
    },
    "16034": {
      "op": "DIV"
    },
    "16035": {
      "op": "DUP4"
    },
    "16036": {
      "op": "GT"
    },
    "16037": {
      "op": "DUP3"
    },
    "16038": {
      "op": "ISZERO"
    },
    "16039": {
      "op": "ISZERO"
    },
    "16040": {
      "op": "AND"
    },
    "16041": {
      "op": "ISZERO"
    },
    "16042": {
      "op": "PUSH2",
      "value": "0x3EB5"
    },
    "16045": {
      "op": "JUMPI"
    },
    "16046": {
      "op": "PUSH2",
      "value": "0x3EB5"
    },
    "16049": {
      "op": "PUSH2",
      "value": "0x3F54"
    },
    "16052": {
      "jump": "i",
      "op": "JUMP"
    },
    "16053": {
      "op": "JUMPDEST"
    },
    "16054": {
      "op": "POP"
    },
    "16055": {
      "op": "MUL"
    },
    "16056": {
      "op": "SWAP1"
    },
    "16057": {
      "jump": "o",
      "op": "JUMP"
    },
    "16058": {
      "op": "JUMPDEST"
    },
    "16059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16061": {
      "op": "DUP3"
    },
    "16062": {
      "op": "DUP3"
    },
    "16063": {
      "op": "LT"
    },
    "16064": {
      "op": "ISZERO"
    },
    "16065": {
      "op": "PUSH2",
      "value": "0x3ECC"
    },
    "16068": {
      "op": "JUMPI"
    },
    "16069": {
      "op": "PUSH2",
      "value": "0x3ECC"
    },
    "16072": {
      "op": "PUSH2",
      "value": "0x3F54"
    },
    "16075": {
      "jump": "i",
      "op": "JUMP"
    },
    "16076": {
      "op": "JUMPDEST"
    },
    "16077": {
      "op": "POP"
    },
    "16078": {
      "op": "SUB"
    },
    "16079": {
      "op": "SWAP1"
    },
    "16080": {
      "jump": "o",
      "op": "JUMP"
    },
    "16081": {
      "op": "JUMPDEST"
    },
    "16082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16084": {
      "op": "DUP2"
    },
    "16085": {
      "op": "DUP2"
    },
    "16086": {
      "op": "SHR"
    },
    "16087": {
      "op": "SWAP1"
    },
    "16088": {
      "op": "DUP3"
    },
    "16089": {
      "op": "AND"
    },
    "16090": {
      "op": "DUP1"
    },
    "16091": {
      "op": "PUSH2",
      "value": "0x3EE5"
    },
    "16094": {
      "op": "JUMPI"
    },
    "16095": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "16097": {
      "op": "DUP3"
    },
    "16098": {
      "op": "AND"
    },
    "16099": {
      "op": "SWAP2"
    },
    "16100": {
      "op": "POP"
    },
    "16101": {
      "op": "JUMPDEST"
    },
    "16102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16104": {
      "op": "DUP3"
    },
    "16105": {
      "op": "LT"
    },
    "16106": {
      "op": "DUP2"
    },
    "16107": {
      "op": "EQ"
    },
    "16108": {
      "op": "ISZERO"
    },
    "16109": {
      "op": "PUSH2",
      "value": "0x3F06"
    },
    "16112": {
      "op": "JUMPI"
    },
    "16113": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16118": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16120": {
      "op": "SHL"
    },
    "16121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16123": {
      "op": "MSTORE"
    },
    "16124": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "16126": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16128": {
      "op": "MSTORE"
    },
    "16129": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16133": {
      "op": "REVERT"
    },
    "16134": {
      "op": "JUMPDEST"
    },
    "16135": {
      "op": "POP"
    },
    "16136": {
      "op": "SWAP2"
    },
    "16137": {
      "op": "SWAP1"
    },
    "16138": {
      "op": "POP"
    },
    "16139": {
      "jump": "o",
      "op": "JUMP"
    },
    "16140": {
      "op": "JUMPDEST"
    },
    "16141": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16143": {
      "op": "DUP3"
    },
    "16144": {
      "op": "ADD"
    },
    "16145": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16147": {
      "op": "NOT"
    },
    "16148": {
      "op": "AND"
    },
    "16149": {
      "op": "DUP2"
    },
    "16150": {
      "op": "ADD"
    },
    "16151": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "16160": {
      "op": "DUP2"
    },
    "16161": {
      "op": "GT"
    },
    "16162": {
      "op": "DUP3"
    },
    "16163": {
      "op": "DUP3"
    },
    "16164": {
      "op": "LT"
    },
    "16165": {
      "op": "OR"
    },
    "16166": {
      "op": "ISZERO"
    },
    "16167": {
      "op": "PUSH2",
      "value": "0x3F32"
    },
    "16170": {
      "op": "JUMPI"
    },
    "16171": {
      "op": "PUSH2",
      "value": "0x3F32"
    },
    "16174": {
      "op": "PUSH2",
      "value": "0x3F6A"
    },
    "16177": {
      "jump": "i",
      "op": "JUMP"
    },
    "16178": {
      "op": "JUMPDEST"
    },
    "16179": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16181": {
      "op": "MSTORE"
    },
    "16182": {
      "op": "POP"
    },
    "16183": {
      "op": "POP"
    },
    "16184": {
      "jump": "o",
      "op": "JUMP"
    },
    "16185": {
      "op": "JUMPDEST"
    },
    "16186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16190": {
      "op": "NOT"
    },
    "16191": {
      "op": "DUP3"
    },
    "16192": {
      "op": "EQ"
    },
    "16193": {
      "op": "ISZERO"
    },
    "16194": {
      "op": "PUSH2",
      "value": "0x3F4D"
    },
    "16197": {
      "op": "JUMPI"
    },
    "16198": {
      "op": "PUSH2",
      "value": "0x3F4D"
    },
    "16201": {
      "op": "PUSH2",
      "value": "0x3F54"
    },
    "16204": {
      "jump": "i",
      "op": "JUMP"
    },
    "16205": {
      "op": "JUMPDEST"
    },
    "16206": {
      "op": "POP"
    },
    "16207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16209": {
      "op": "ADD"
    },
    "16210": {
      "op": "SWAP1"
    },
    "16211": {
      "jump": "o",
      "op": "JUMP"
    },
    "16212": {
      "op": "JUMPDEST"
    },
    "16213": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16218": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16220": {
      "op": "SHL"
    },
    "16221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16223": {
      "op": "MSTORE"
    },
    "16224": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "16226": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16228": {
      "op": "MSTORE"
    },
    "16229": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16233": {
      "op": "REVERT"
    },
    "16234": {
      "op": "JUMPDEST"
    },
    "16235": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16240": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16242": {
      "op": "SHL"
    },
    "16243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16245": {
      "op": "MSTORE"
    },
    "16246": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "16248": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16250": {
      "op": "MSTORE"
    },
    "16251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16255": {
      "op": "REVERT"
    },
    "16256": {
      "op": "JUMPDEST"
    },
    "16257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16259": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16261": {
      "op": "RETURNDATASIZE"
    },
    "16262": {
      "op": "GT"
    },
    "16263": {
      "op": "ISZERO"
    },
    "16264": {
      "op": "PUSH2",
      "value": "0xA9D"
    },
    "16267": {
      "op": "JUMPI"
    },
    "16268": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16270": {
      "op": "DUP2"
    },
    "16271": {
      "op": "DUP3"
    },
    "16272": {
      "op": "RETURNDATACOPY"
    },
    "16273": {
      "op": "MLOAD"
    },
    "16274": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16276": {
      "op": "SHR"
    },
    "16277": {
      "op": "SWAP1"
    },
    "16278": {
      "jump": "o",
      "op": "JUMP"
    },
    "16279": {
      "op": "JUMPDEST"
    },
    "16280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16282": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16284": {
      "op": "RETURNDATASIZE"
    },
    "16285": {
      "op": "LT"
    },
    "16286": {
      "op": "ISZERO"
    },
    "16287": {
      "op": "PUSH2",
      "value": "0x3FA7"
    },
    "16290": {
      "op": "JUMPI"
    },
    "16291": {
      "op": "PUSH2",
      "value": "0xA9D"
    },
    "16294": {
      "op": "JUMP"
    },
    "16295": {
      "op": "JUMPDEST"
    },
    "16296": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16298": {
      "op": "MLOAD"
    },
    "16299": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16301": {
      "op": "NOT"
    },
    "16302": {
      "op": "RETURNDATASIZE"
    },
    "16303": {
      "op": "DUP2"
    },
    "16304": {
      "op": "ADD"
    },
    "16305": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16307": {
      "op": "DUP4"
    },
    "16308": {
      "op": "RETURNDATACOPY"
    },
    "16309": {
      "op": "DUP2"
    },
    "16310": {
      "op": "MLOAD"
    },
    "16311": {
      "op": "RETURNDATASIZE"
    },
    "16312": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "16321": {
      "op": "DUP2"
    },
    "16322": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16324": {
      "op": "DUP5"
    },
    "16325": {
      "op": "ADD"
    },
    "16326": {
      "op": "GT"
    },
    "16327": {
      "op": "DUP2"
    },
    "16328": {
      "op": "DUP5"
    },
    "16329": {
      "op": "GT"
    },
    "16330": {
      "op": "OR"
    },
    "16331": {
      "op": "ISZERO"
    },
    "16332": {
      "op": "PUSH2",
      "value": "0x3FD9"
    },
    "16335": {
      "op": "JUMPI"
    },
    "16336": {
      "op": "POP"
    },
    "16337": {
      "op": "POP"
    },
    "16338": {
      "op": "POP"
    },
    "16339": {
      "op": "POP"
    },
    "16340": {
      "op": "POP"
    },
    "16341": {
      "op": "PUSH2",
      "value": "0xA9D"
    },
    "16344": {
      "op": "JUMP"
    },
    "16345": {
      "op": "JUMPDEST"
    },
    "16346": {
      "op": "DUP3"
    },
    "16347": {
      "op": "DUP6"
    },
    "16348": {
      "op": "ADD"
    },
    "16349": {
      "op": "SWAP2"
    },
    "16350": {
      "op": "POP"
    },
    "16351": {
      "op": "DUP2"
    },
    "16352": {
      "op": "MLOAD"
    },
    "16353": {
      "op": "DUP2"
    },
    "16354": {
      "op": "DUP2"
    },
    "16355": {
      "op": "GT"
    },
    "16356": {
      "op": "ISZERO"
    },
    "16357": {
      "op": "PUSH2",
      "value": "0x3FF3"
    },
    "16360": {
      "op": "JUMPI"
    },
    "16361": {
      "op": "POP"
    },
    "16362": {
      "op": "POP"
    },
    "16363": {
      "op": "POP"
    },
    "16364": {
      "op": "POP"
    },
    "16365": {
      "op": "POP"
    },
    "16366": {
      "op": "POP"
    },
    "16367": {
      "op": "PUSH2",
      "value": "0xA9D"
    },
    "16370": {
      "op": "JUMP"
    },
    "16371": {
      "op": "JUMPDEST"
    },
    "16372": {
      "op": "DUP5"
    },
    "16373": {
      "op": "RETURNDATASIZE"
    },
    "16374": {
      "op": "DUP8"
    },
    "16375": {
      "op": "ADD"
    },
    "16376": {
      "op": "ADD"
    },
    "16377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16379": {
      "op": "DUP3"
    },
    "16380": {
      "op": "DUP6"
    },
    "16381": {
      "op": "ADD"
    },
    "16382": {
      "op": "ADD"
    },
    "16383": {
      "op": "GT"
    },
    "16384": {
      "op": "ISZERO"
    },
    "16385": {
      "op": "PUSH2",
      "value": "0x400F"
    },
    "16388": {
      "op": "JUMPI"
    },
    "16389": {
      "op": "POP"
    },
    "16390": {
      "op": "POP"
    },
    "16391": {
      "op": "POP"
    },
    "16392": {
      "op": "POP"
    },
    "16393": {
      "op": "POP"
    },
    "16394": {
      "op": "POP"
    },
    "16395": {
      "op": "PUSH2",
      "value": "0xA9D"
    },
    "16398": {
      "op": "JUMP"
    },
    "16399": {
      "op": "JUMPDEST"
    },
    "16400": {
      "op": "PUSH2",
      "value": "0x401E"
    },
    "16403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16405": {
      "op": "DUP3"
    },
    "16406": {
      "op": "DUP7"
    },
    "16407": {
      "op": "ADD"
    },
    "16408": {
      "op": "ADD"
    },
    "16409": {
      "op": "DUP8"
    },
    "16410": {
      "op": "PUSH2",
      "value": "0x3F0C"
    },
    "16413": {
      "jump": "i",
      "op": "JUMP"
    },
    "16414": {
      "op": "JUMPDEST"
    },
    "16415": {
      "op": "POP"
    },
    "16416": {
      "op": "SWAP1"
    },
    "16417": {
      "op": "SWAP5"
    },
    "16418": {
      "op": "POP"
    },
    "16419": {
      "op": "POP"
    },
    "16420": {
      "op": "POP"
    },
    "16421": {
      "op": "POP"
    },
    "16422": {
      "op": "POP"
    },
    "16423": {
      "op": "SWAP1"
    },
    "16424": {
      "jump": "o",
      "op": "JUMP"
    },
    "16425": {
      "op": "JUMPDEST"
    },
    "16426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16430": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16432": {
      "op": "SHL"
    },
    "16433": {
      "op": "SUB"
    },
    "16434": {
      "op": "NOT"
    },
    "16435": {
      "op": "DUP2"
    },
    "16436": {
      "op": "AND"
    },
    "16437": {
      "op": "DUP2"
    },
    "16438": {
      "op": "EQ"
    },
    "16439": {
      "op": "PUSH2",
      "value": "0x403F"
    },
    "16442": {
      "op": "JUMPI"
    },
    "16443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16445": {
      "op": "DUP1"
    },
    "16446": {
      "op": "REVERT"
    },
    "16447": {
      "op": "JUMPDEST"
    },
    "16448": {
      "op": "POP"
    },
    "16449": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "49835c68fc3a06561df6f27fe951c9cc2c148690",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\";\nimport \"./openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\";\n  \n\ncontract Cafe is ERC1155 {\n\n    using EnumerableSet for EnumerableSet.UintSet;\n    \n    \n    constructor (string memory uri_, uint32 _timescale, uint256 _createCost, uint256 _feedCost, uint256 _grindReward) public ERC1155(uri_) {\n        _setURI(uri_);\n        timescale = _timescale;\n        devAddress=msg.sender;\n        createCost = _createCost;\n        feedCost = _feedCost;\n        grindReward = _grindReward;\n    }\n    /** @dev These are the constructor parameters.  Create/feed Costs are the flour required to create and feed starters.  \n    Timescale represents the timescale at which starters die, feed reset time, and  grindFlour cooldown\n    grindReward is the reward for grinding flour\n     */\n    uint256 public createCost;\n    uint256 public feedCost;\n    uint32 public timescale;\n    uint256 public grindReward;\n\n\n    /** @dev Sourdough Struct represents the living sourdough starters\n    _timeOfDeath is the Unix timestamp at which the starter 'dies' and becomes unavailable for use in baking\n    _childCount describes the number of times the starter has been split\n    _creationTime shows when the starter was born! \n    _creator is the person who made the starter\n     */\n\n    struct Sourdough{\n        uint32 _timeOfDeath;\n        uint8 _childCount;\n        uint32 _creationTime;\n        address _creator;\n        bool _beingAutoFed;\n        uint32 _splitCooldown;\n        }\n\n/** @dev Recipe struct represents baked items.  \n_name is the name..must be unique\n_flourRequired is burned when baking the recipe\n_ages is an array of the ages of the required starter ingredients*/\n    struct Recipe{\n        string _name;\n        uint256 _flourRequired;\n        uint32[] _ages;\n        address _creator;\n        uint256 _timesBaked;\n        uint256 _numberEaten;\n        uint32 _score;\n        \n    }\n/** @dev flourId denotes the id of the fungible FLOUR token\ndividerIndex separates fully-non-fungible starter ingredients and semi-fungible baked goods\nflourId is the index of the fungible flour asset\ngrindCooldown determine whether or not an address can grind flour\n */\n    address public devAddress = address(this);\n    uint256 flourId = 0;\n    uint256 dividerIndex = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n    mapping (uint256 => Sourdough) Sourdoughs;\n    mapping(address => uint32) grindCooldown;\n\n    mapping(uint256 => Recipe) BakedGoods;\n    mapping(address =>  EnumerableSet.UintSet) private _ownerRecipes;\n    mapping(address => uint256) totalScore;\n    mapping(address => bool) isAutoFeeding;\n\n/** @dev highscores here */\n    uint32[11] public starterHighScoreAges;\n    uint256[11] public starterHighScore;\n    uint256[11] public recipeHighScore;\n    address[11] public playerHighScore;\n\n   \n   \n   \n/** @dev total stats\n */ \n    uint256 public flourSupply = 0;\n    uint256 public startersCreated = 0;\n    uint256 public itemsBaked = 0;\n    uint256 public recipesPublished = 0;\n\n/** @dev Credits the user FLOUR every 24 hours if submitted\n */\n    function grindFlour() public {\n       \n        require(grindCooldown[msg.sender]<block.timestamp,\"You did this already today!\");\n        _mint(msg.sender,flourId, grindReward, \"\");\n        flourSupply += grindReward;\n        grindCooldown[msg.sender] = uint32(block.timestamp + timescale);\n    }\n\n/** @dev Internally used to get rid of flour tokens */\n    function _burnFlour(address account, uint256 amount) internal {\n        require(balanceOf(msg.sender,flourId)>=amount);\n        _burn(account,flourId,amount);\n        flourSupply -= amount;\n    }\n\n/** @dev Makes a new nonfungible starter with age attributes by burning 50 FLOUR */\n    function createStarter() public returns (bool) {\n        _burnFlour(msg.sender,  createCost);  \n        uint256 tokenId = startersCreated +1; \n        _mint(msg.sender, 0+tokenId, 1,\"\");\n        Sourdough memory sourdough = Sourdough(uint32(block.timestamp + timescale),0,uint32(block.timestamp),msg.sender,false,uint32(block.timestamp));\n        \n        startersCreated+=1;\n        Sourdoughs[tokenId] = sourdough;\n        return true;\n    \n    }\n/** @dev Burns 50 FLOUR and resets the time of death for your token*/\n    function feedStarter(uint256 tokenId) public returns (bool) {\n        require(balanceOf(msg.sender,tokenId) == 1 , \"This Id number is not associated with one of your starters, please try with a valid id.\");\n        require(Sourdoughs[tokenId]._timeOfDeath >= block.timestamp, \"Your starter is dead!  You should have fed it sooner :( .\");\n        _burnFlour(msg.sender, feedCost);\n        Sourdoughs[tokenId]._timeOfDeath = uint32(block.timestamp + timescale);\n        if(Sourdoughs[tokenId]._beingAutoFed){\n            Sourdoughs[tokenId]._beingAutoFed==false;\n        }\n        _updateStarterScore(tokenId);\n\n        return true;\n    }\n\n/** @dev Feeds and duplicates your starter, returning another with identical age - costs 100 FLOUR */\n    function splitStarter(uint256 tokenId) public returns (bool) { \n        require(balanceOf(msg.sender,tokenId)==1, \"This Id number is not associated with one of your starters, please try with a valid id.\");\n        require(Sourdoughs[tokenId]._splitCooldown <= block.timestamp,\"You have split the starter already today! Wait til' tomorrow\");\n        feedStarter(tokenId);\n        feedStarter(tokenId);\n        createStarter();\n        Sourdoughs[startersCreated]._creationTime = Sourdoughs[tokenId]._creationTime;\n        Sourdoughs[startersCreated]._splitCooldown = uint32(block.timestamp + 1 days);\n        Sourdoughs[tokenId]._childCount+=1;\n        Sourdoughs[tokenId]._splitCooldown =uint32(block.timestamp + 1 days);\n        return true;\n\n    }\n/** @dev Internal. Takes a recipe struct and a batch of ingredients by id number.  Burns the ingredients and FLOUR required, then mints a semi-fungible item to the owner\nwith the Id of the recipe */\n    function _bakeRecipe(Recipe memory recipe, uint256[] memory starterBatch) internal returns (bool) {\n        require(balanceOf(msg.sender, flourId)>= recipe._flourRequired,\"You don't have enough FLOUR to bake that!!\");\n        uint length = recipe._ages.length;\n        uint[] memory amounts = new uint[](length);\n        require(recipe._ages.length == starterBatch.length,\"You haven't added the right number of starters to the batch!\");\n        for(uint i=0;i<recipe._ages.length;i++){\n            uint32 starterAge = uint32(block.timestamp-Sourdoughs[starterBatch[i]]._creationTime);\n            require(starterAge > recipe._ages[i], \"Your starters are not old enough, please use the starters required by this recipe\");  \n            require(Sourdoughs[starterBatch[i]]._timeOfDeath >= block.timestamp, \"Your starters are not all alive, you must use a living ingredient!!\");\n            require(balanceOf(msg.sender,starterBatch[i])==1, \"This Id number is not associated with one of your starters, please try with a valid id.\");\n            amounts[i] = 1;\n        }\n        _burnBatch(msg.sender, starterBatch, amounts); \n        _burnFlour(msg.sender,recipe._flourRequired);\n        return true;\n    }\n/** @dev Bakes and publishes a recipe that does not yet exist */\n    function publishNewRecipe(string memory name, uint256 flourRequired, uint32[] memory ages, uint256[] memory starterBatch) public returns (uint256) {\n        require(ages.length <=10, \"You can only have up to 10 ingredients!\");\n        Recipe memory recipe = Recipe(name,flourRequired, ages,msg.sender,0,0,0);\n        _bakeRecipe(recipe,starterBatch);\n\n        uint32[] memory ages = recipe._ages;\n        uint32 total;\n        for(uint i=0;i<ages.length;i++){\n            total+=ages[i];\n        }\n        recipe._score = total;\n\n        recipe._timesBaked+=1;\n        itemsBaked+=1;\n        recipesPublished+=1;\n        uint256 recipeId = dividerIndex + recipesPublished;\n        BakedGoods[recipesPublished] = recipe;\n        _ownerRecipes[msg.sender].add(recipesPublished);\n        _updateRecipeScore(recipesPublished);\n        _mint(msg.sender,recipeId,1,\"\");\n        return recipeId;\n\n\n    }\n/** @dev Takes the id of an existing recipe and a batch of ingredients.  Burns the batch and the required flour, mints an item with the recipe Id */\n    function bakeExistingRecipe(uint256 recipeId, uint256[] memory starterBatch) public returns (bool) {\n        Recipe memory recipe = BakedGoods[recipeId];\n        _bakeRecipe(recipe,starterBatch);\n\n        BakedGoods[recipeId]._timesBaked+=1;\n        \n        itemsBaked+=1;\n        _updateRecipeScore(recipeId);\n        _mint(msg.sender,recipeId+dividerIndex,1,\"\");\n        return true;\n    }\n/** @dev Burns an item, credits the player with a score equivalent to the total age of all ingredients */\n    function eatBakedGood(uint256 recipeId, uint256 amount) public returns (bool){\n        require(balanceOf(msg.sender,dividerIndex + recipeId)>=amount, \"You don't have that many of those to eat!\");\n        \n        uint32 total = BakedGoods[recipeId]._score;\n       \n        uint256 index = recipeId + dividerIndex;\n        _burn(msg.sender,index,amount);\n        BakedGoods[recipeId]._numberEaten+=1;\n        totalScore[msg.sender]+= uint256(total)*amount;\n        _updatePlayerScore(msg.sender);\n\n        \n    }\n\n\n\n    function autoFeed(uint feedingTimes,uint256 starterId) public returns (bool) {\n        require(balanceOf(msg.sender,starterId)==1, \"This Id number is not associated with one of your starters, please try with a valid id.\");\n        uint256 cost = feedingTimes*feedCost;\n        uint256 devFee = feedingTimes*feedCost;\n        _burnFlour(msg.sender, cost);\n        safeTransferFrom(msg.sender,devAddress,flourId,devFee,\"\");\n        isAutoFeeding[msg.sender]=true;\n        Sourdoughs[starterId]._timeOfDeath =  uint32(block.timestamp + feedingTimes* timescale);\n        Sourdoughs[starterId]._beingAutoFed = true;\n        return true;\n    }\n\n\n    function stopAutoFeed(uint256 starterId) public returns(bool) {\n        require(Sourdoughs[starterId]._beingAutoFed ==true);\n        Sourdoughs[starterId]._timeOfDeath = uint32(block.timestamp + timescale);\n        Sourdoughs[starterId]._beingAutoFed = false;\n    }\n    \n\n    \n\n    function _updateStarterScore(uint256 _starterId) internal {\n        uint index = 0;\n        bool isOnList = false;\n        while(index<10){\n            if(starterHighScore[index]==_starterId){\n                isOnList=true;\n                break;\n            }\n            index=index+1;\n        }\n\n        if(isOnList){\n            while(index<10){\n                starterHighScore[index]=starterHighScore[index+1];\n                starterHighScoreAges[index]=starterHighScoreAges[index+1];\n                index=index+1;\n            }\n        }\n        index =0;\n        uint32 toBeat = starterHighScoreAges[index];\n        uint32 score = uint32( block.timestamp - Sourdoughs[_starterId]._creationTime );\n        while(score <= toBeat){\n            index=index+1;\n            if(index>10){\n                break;\n            }else{\n                toBeat = starterHighScoreAges[index];\n            }\n        }\n\n        if(index<10){\n            uint index2 =9;\n            while(index2>=index){\n                starterHighScore[index2+1] = starterHighScore[index2];\n                starterHighScoreAges[index2+1]=starterHighScoreAges[index2];\n                if(index2!=0){\n                index2=index2-1;}\n                else{\n                    break;\n                }\n            }\n            starterHighScore[index]= _starterId;\n            starterHighScoreAges[index]=score;\n        }\n    }\n    \n\n\n\n\n\n\n    function _updateRecipeScore(uint256 _recipeId) internal {\n        uint index = 0;\n        bool isOnList = false;\n        while(index<10){\n            if(recipeHighScore[index]==_recipeId){\n                isOnList=true;\n                break;\n            }\n            index=index+1;\n        }\n\n        if(isOnList){\n            while(index<10){\n                recipeHighScore[index]=recipeHighScore[index+1];\n                index=index+1;\n            }\n        }\n\n        index=0;\n        uint256 score = BakedGoods[_recipeId]._timesBaked;\n        uint256 toBeat = BakedGoods[recipeHighScore[index]]._timesBaked;\n        while(score <= toBeat){\n            index=index+1;\n            if(index>10){\n                break;\n            }else{\n                toBeat = BakedGoods[recipeHighScore[index]]._timesBaked;\n            }\n        }\n\n        if(index<10){\n            uint index2 = 9;\n            while(index2>=index){\n                recipeHighScore[index2+1]=recipeHighScore[index2];\n                if(index2!=0){\n                index2=index2-1;}\n                else{\n                    break;\n                }\n            }\n            recipeHighScore[index]=_recipeId;\n        }\n   }\n    \n\n    function _updatePlayerScore(address _player) internal {\n        uint index = 0;\n        bool isOnList = false;\n        while(index<10){\n            if(playerHighScore[index]==_player){\n                isOnList=true;\n                break;\n            }\n            index=index+1;\n        }\n        if(isOnList){\n            while(index<10){\n                playerHighScore[index]=playerHighScore[index+1];\n                index=index+1;\n            }\n        }\n        index=0;\n        uint256 score = totalScore[_player];\n        uint256 toBeat = totalScore[playerHighScore[index]];\n        while(score<=toBeat){\n            index=index+1;\n            if(index>10){\n                break;\n            }else{\n                toBeat = totalScore[playerHighScore[index]];\n            }\n        }\n        if(index<10){\n            uint index2 =9;\n            while(index2>=index){\n                playerHighScore[index2+1]=playerHighScore[index2];\n                if(index2!=0){\n                index2=index2-1;}\n                else{\n                    break;\n                }\n            }\n            playerHighScore[index]=_player;\n        }\n    }\n\n\n\n\n\n\n\n/**@dev Helper functions for the Sourdough Struct */\n    function getTimeOfDeath(uint256 starterId) public view returns(uint32){\n        return Sourdoughs[starterId]._timeOfDeath;\n    }\n    function getChildCount(uint256 starterId) public view returns(uint8){\n        return Sourdoughs[starterId]._childCount;\n    }\n    function getCreationTime(uint256 starterId) public view returns(uint32){\n        return Sourdoughs[starterId]._creationTime;\n    }\n    function getCreatorAddress(uint256 starterId) public view returns(address){\n        return Sourdoughs[starterId]._creator;\n    }\n    function getIsAutoFed(uint256 starterId) public view returns(bool){\n        return Sourdoughs[starterId]._beingAutoFed;\n    }\n\n\n/** @dev Helper functions for Recipe Struct */\n    function getRecipeName(uint256 recipeId) public view returns(string memory){\n        return BakedGoods[recipeId]._name;\n    }\n\n    function getRecipeScore(uint256 recipeId) public view returns(uint32){\n        return BakedGoods[recipeId]._score;\n    }\n    function getIngredientCount(uint256 recipeId) public view returns(uint256){\n        return BakedGoods[recipeId]._ages.length;\n    }\n     function getIngredientByIndex(uint256 recipeId, uint index) public view returns(uint32){\n        return BakedGoods[recipeId]._ages[index];\n    }\n     function getRecipeCreator(uint256 recipeId) public view returns(address){\n        return BakedGoods[recipeId]._creator;\n    }\n     function getFlourRequired(uint256 recipeId) public view returns(uint256){\n        return BakedGoods[recipeId]._flourRequired;\n    }\n     function getTimesBaked(uint256 recipeId) public view returns(uint256){\n        return BakedGoods[recipeId]._timesBaked;\n    }\n     function getNumberEaten(uint256 recipeId) public view returns(uint256){\n        return BakedGoods[recipeId]._numberEaten;\n    }\n\n\n/** @dev Player stats and timers */\n    function getGrindReset(address player) public view returns(uint32){\n        return grindCooldown[player];\n    }\n    function getPlayerScore(address player) public view returns(uint256){\n        return totalScore[player];\n    }\n    function isPlayerAutoFeeding(address player) public view returns(bool){\n        return isAutoFeeding[player];\n    }\n\n      function recipeOfOwnerByIndex(address owner, uint256 index) public view returns (uint256) {\n        return _ownerRecipes[owner].at(index);\n    }\n    function getOwnerUniqueRecipes(address owner) public view returns (uint256) {\n        return _ownerRecipes[owner].length();\n    }\n}\n    \n",
  "sourceMap": "177:16445:0:-:0;;;2267:41;;;-1:-1:-1;;;;;;2267:41:0;2303:4;2267:41;;;;2314:19;;;;-1:-1:-1;;;2339:100:0;;2973:30;;;;3009:34;;;;3049:29;;;;3084:35;;270:328;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;399:4;1248:13:1;399:4:0;1248:7:1;:13::i;:::-;-1:-1:-1;415:13:0::1;423:4:::0;415:7:::1;:13::i;:::-;438:9;:22:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;438:22:0;;::::1;::::0;;;::::1;::::0;;;470:10:::1;:21:::0;;-1:-1:-1;;;;;;470:21:0::1;481:10;470:21;::::0;;501:10:::1;:24:::0;;;;535:8:::1;:20:::0;565:11:::1;:26:::0;-1:-1:-1;177:16445:0;;7188:86:1;7254:13;;;;:4;;:13;;;;;:::i;:::-;;7188:86;:::o;177:16445:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;177:16445:0;;;-1:-1:-1;177:16445:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:167:10;92:13;;145:10;134:22;;124:33;;114:2;;171:1;168;161:12;114:2;73:108;;;:::o;186:1407::-;;;;;;386:3;374:9;365:7;361:23;357:33;354:2;;;408:6;400;393:22;354:2;440:16;;-1:-1:-1;;;;;505:14:10;;;502:2;;;537:6;529;522:22;502:2;580:6;569:9;565:22;555:32;;625:7;618:4;614:2;610:13;606:27;596:2;;652:6;644;637:22;596:2;686;680:9;708:2;704;701:10;698:2;;;714:18;;:::i;:::-;789:2;783:9;757:2;843:13;;-1:-1:-1;;839:22:10;;;863:2;835:31;831:40;819:53;;;887:18;;;907:22;;;884:46;881:2;;;933:18;;:::i;:::-;973:10;969:2;962:22;1008:2;1000:6;993:18;1030:4;1020:14;;1071:7;1066:2;1061;1057;1053:11;1049:20;1046:33;1043:2;;;1097:6;1089;1082:22;1043:2;1124:6;1115:15;;1139:129;1153:2;1150:1;1147:9;1139:129;;;1241:10;;;1237:19;;1231:26;1210:14;;;1206:23;;1199:59;1164:10;;;;1139:129;;;1286:2;1283:1;1280:9;1277:2;;;1345:6;1340:2;1335;1327:6;1323:15;1319:24;1312:40;1277:2;1381:6;-1:-1:-1;1406:48:10;;-1:-1:-1;;1435:18:10;;;1406:48;:::i;:::-;1494:2;1479:18;;1473:25;1538:2;1523:18;;1517:25;1582:3;1567:19;;;1561:26;344:1249;;1396:58;;-1:-1:-1;1473:25:10;1517;1561:26;-1:-1:-1;344:1249:10;-1:-1:-1;;;;;344:1249:10:o;1598:380::-;1677:1;1673:12;;;;1720;;;1741:2;;1795:4;1787:6;1783:17;1773:27;;1741:2;1848;1840:6;1837:14;1817:18;1814:38;1811:2;;;1894:10;1889:3;1885:20;1882:1;1875:31;1929:4;1926:1;1919:15;1957:4;1954:1;1947:15;1811:2;;1653:325;;;:::o;1983:127::-;2044:10;2039:3;2035:20;2032:1;2025:31;2075:4;2072:1;2065:15;2099:4;2096:1;2089:15;2015:95;177:16445:0;;;;;;",
  "sourcePath": "contracts/Cafe.sol",
  "type": "contract"
}